id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResources.h:308,Modifiability,config,config,308,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResources //; // //; // Abstract base class for PROOF resources. //; // The class contains common method declarations for derived classes //; // such as TProofResourcesStatic which reads and interprets static //; // config files, and returns master, submaster and worker information //; // using TProofNodeInfo objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResources.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResources.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:222,Integrability,interface,interface,222,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResourcesStatic //; // //; // Implementation of PROOF static resources. //; // The purpose of this class is to provide a standard interface to //; // static config files. It interprets Proof config files (proof.conf) //; // and sorts the contents into TProofNodeInfo objects. Master info will //; // be placed in fMaster (of type TProofNodeInfo). Submaster info will //; // be put in fSubmasterList (a TList of TProofNodeInfo objects), while //; // workers (and condorworkers) will be placed in fWorkerList (a TList //; // of TProofNodeInfo objects). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResourcesStatic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:249,Modifiability,config,config,249,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResourcesStatic //; // //; // Implementation of PROOF static resources. //; // The purpose of this class is to provide a standard interface to //; // static config files. It interprets Proof config files (proof.conf) //; // and sorts the contents into TProofNodeInfo objects. Master info will //; // be placed in fMaster (of type TProofNodeInfo). Submaster info will //; // be put in fSubmasterList (a TList of TProofNodeInfo objects), while //; // workers (and condorworkers) will be placed in fWorkerList (a TList //; // of TProofNodeInfo objects). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResourcesStatic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:283,Modifiability,config,config,283,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResourcesStatic //; // //; // Implementation of PROOF static resources. //; // The purpose of this class is to provide a standard interface to //; // static config files. It interprets Proof config files (proof.conf) //; // and sorts the contents into TProofNodeInfo objects. Master info will //; // be placed in fMaster (of type TProofNodeInfo). Submaster info will //; // be put in fSubmasterList (a TList of TProofNodeInfo objects), while //; // workers (and condorworkers) will be placed in fWorkerList (a TList //; // of TProofNodeInfo objects). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResourcesStatic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:12,Modifiability,config,config,12,"// kTRUE if config file has master info",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResourcesStatic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:3,Modifiability,Config,Config,3,"// Config file name",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResourcesStatic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:32,Modifiability,config,config,32,"// Class to handle PROOF static config",MatchSource.CODE_COMMENT,proof/proof/inc/TProofResourcesStatic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:211,Integrability,depend,depending,211,"//////////////////////////////////////////////////////////////////////////; // //; // TProofServ //; // //; // TProofServ is the PROOF server. It can act either as the master //; // server or as a slave server, depending on its startup arguments. It //; // receives and handles message coming from the client or from the //; // master server. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:278,Integrability,message,message,278,"//////////////////////////////////////////////////////////////////////////; // //; // TProofServ //; // //; // TProofServ is the PROOF server. It can act either as the master //; // server or as a slave server, depending on its startup arguments. It //; // receives and handles message coming from the client or from the //; // master server. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:40,Security,authenticat,authentication,40,"// Hook to external function setting up authentication related stuff; // for old versions.; // For backward compatibility",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:32,Integrability,message,message,32,"// Socket where to redirect the message",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:29,Integrability,message,messages,29,"// Prefix to be prepended to messages",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:37,Integrability,message,messages,37,"// Default prefix to be prepended to messages",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:41,Availability,avail,available,41,"// Return code of the command execution (available only; // after closing the pipe)",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServ.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h:339,Integrability,message,messages,339,"//////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServLite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h:308,Performance,optimiz,optimizing,308,"//////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServLite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h:32,Integrability,Interface,Interface,32,"//PROOF-Lite Server Application Interface",MatchSource.CODE_COMMENT,proof/proof/inc/TProofServLite.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofSuperMaster.h:335,Integrability,message,messages,335,"//////////////////////////////////////////////////////////////////////////; // //; // TProofSuperMaster //; // //; // This class controls a Parallel ROOT Facility, PROOF, cluster. //; // It fires the slave servers, it keeps track of how many slaves are //; // running, it keeps track of the slaves running status, it broadcasts //; // messages to all slaves, it collects results, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TProofSuperMaster.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofSuperMaster.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TQueryResultManager.h:31,Integrability,depend,dependent,31,"//directory containing session dependent files",MatchSource.CODE_COMMENT,proof/proof/inc/TQueryResultManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TQueryResultManager.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TQueryResultManager.h:2,Testability,log,log,2,"//log file",MatchSource.CODE_COMMENT,proof/proof/inc/TQueryResultManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TQueryResultManager.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:231,Performance,perform,performance,231,"//////////////////////////////////////////////////////////////////////////; // //; // TSlave //; // //; // This class describes a PROOF slave server. //; // It contains information like the slaves host name, ordinal number, //; // performance index, socket, etc. Objects of this class can only be //; // created via TProof member functions. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TSlave.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:61,Security,authenticat,authentication,61,"// Special type for the hook to external function setting up authentication; // related stuff for old versions. For backward compatibility.",MatchSource.CODE_COMMENT,proof/proof/inc/TSlave.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:86,Modifiability,plugin,plugin,86,"// Special type for the hook to the TSlave constructor, needed to avoid; // using the plugin manager",MatchSource.CODE_COMMENT,proof/proof/inc/TSlave.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:66,Safety,avoid,avoid,66,"// Special type for the hook to the TSlave constructor, needed to avoid; // using the plugin manager",MatchSource.CODE_COMMENT,proof/proof/inc/TSlave.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:15,Performance,perform,performance,15,"//relative CPU performance index",MatchSource.CODE_COMMENT,proof/proof/inc/TSlave.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:10,Integrability,protocol,protocol,10,"//slave's protocol level",MatchSource.CODE_COMMENT,proof/proof/inc/TSlave.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:135,Performance,load,load,135,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualPacketizer //; // //; // Packetizer is a load balancing object created for each query. //; // It generates packets to be processed on PROOF worker servers. //; // A packet is an event range (begin entry and number of entries) or //; // object range (first object and number of objects) in a TTree //; // (entries) or a directory (objects) in a file. //; // Packets are generated taking into account the performance of the //; // remote machine, the time it took to process a previous packet on //; // the remote machine, the locality of the database files, etc. //; // //; // TVirtualPacketizer includes common parts of PROOF packetizers. //; // Look in subclasses for details. //; // The default packetizer is TPacketizerAdaptive. //; // To use an alternative one, for instance - the TPacketizer, call: //; // proof->SetParameter(""PROOF_Packetizer"", ""TPacketizer""); //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:497,Performance,perform,performance,497,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualPacketizer //; // //; // Packetizer is a load balancing object created for each query. //; // It generates packets to be processed on PROOF worker servers. //; // A packet is an event range (begin entry and number of entries) or //; // object range (first object and number of objects) in a TTree //; // (entries) or a directory (objects) in a file. //; // Packets are generated taking into account the performance of the //; // remote machine, the time it took to process a previous packet on //; // the remote machine, the locality of the database files, etc. //; // //; // TVirtualPacketizer includes common parts of PROOF packetizers. //; // Look in subclasses for details. //; // The default packetizer is TPacketizerAdaptive. //; // To use an alternative one, for instance - the TPacketizer, call: //; // proof->SetParameter(""PROOF_Packetizer"", ""TPacketizer""); //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:11,Deployability,configurat,configuration,11,"// General configuration parameters",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:11,Modifiability,config,configuration,11,"// General configuration parameters",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:11,Deployability,configurat,configuration,11,"// List of configuration parameters",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:11,Modifiability,config,configuration,11,"// List of configuration parameters",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:12,Deployability,update,updates,12,"// progress updates timer",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:16,Deployability,update,updates,16,"// time between updates",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:3,Availability,error,error,3,"// error on accidental usage",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualProofPlayer.h:129,Integrability,interface,interface,129,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualProofPlayer //; // //; // Abstract interface for the PROOF player. //; // See the concrete implementations under 'proofplayer' for details. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/inc/TVirtualProofPlayer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualProofPlayer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:530,Integrability,Interface,Interface,530,"// @(#)root/proof:$Id$; // Author: Maarten Ballintijn 06/12/03; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TCondor //; // //; // Interface to the Condor system. TCondor provides a (partial) API for //; // querying and controlling the Condor system, including experimental //; // extensions like COD (computing on demand) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:100,Integrability,interface,interface,100,"////////////////////////////////////////////////////////////////////////////////; /// Create Condor interface object. Uses Condor apps since there is no; /// API yet.",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:101,Integrability,interface,interface,101,"////////////////////////////////////////////////////////////////////////////////; /// Cleanup Condor interface.",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:6,Performance,perform,performance,6,"//set performance index to 100 by default",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:187,Availability,failure,failure,187,"////////////////////////////////////////////////////////////////////////////////; /// Get the names of the virtual machines in the pool.; /// Return a TList of TObjString or 0 in case of failure",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:156,Performance,perform,performance,156,"////////////////////////////////////////////////////////////////////////////////; /// Claim n virtual machines; /// This function figures out the image and performance index before returning; /// the list of condor slaves",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:178,Performance,perform,performance,178,"////////////////////////////////////////////////////////////////////////////////; /// Claim virtual machine with name vmname; /// This function does not figure out the image and performance index before; /// returning the condor slave",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:86,Usability,Resume,Resume,86,"////////////////////////////////////////////////////////////////////////////////; /// Resume worker",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release worker",MatchSource.CODE_COMMENT,proof/proof/src/TCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:12,Testability,log,logon,12,"// Get user logon name",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:13,Modifiability,sandbox,sandbox,13,"// If not in sandbox, construct the base URI using session defaults; // (group, user) (syntax: /group/user/dsname[#[subdir/]objname])",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:13,Testability,sandbox,sandbox,13,"// If not in sandbox, construct the base URI using session defaults; // (group, user) (syntax: /group/user/dsname[#[subdir/]objname])",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:8,Modifiability,config,config,8,"// Read config file",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:3,Usability,Clear,Clear,3,"// Clear used space",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:147,Availability,Avail,Available,147,"////////////////////////////////////////////////////////////////////////////////; /// Parse the opts string and set the init bits accordingly; /// Available options:; /// Cq: set kCheckQuota; /// Ar: set kAllowRegister; /// Av: set kAllowVerify; /// Ti: set kTrustInfo; /// Sb: set kIsSandbox; /// Ca: set kUseCache or kDoNotUseCache; /// The opts string may also contain additional unrelated info: in such a case; /// the field delimited by the prefix ""opt:"" is analyzed, e.g. if opts is; /// ""/tmp/dataset opt:Cq:-Ar: root://lxb6046.cern.ch"" only the substring; /// ""Cq:-Ar:"" will be parsed .",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:9,Integrability,depend,dependencies,9,"// Check dependencies",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:423,Availability,avail,available,423,"////////////////////////////////////////////////////////////////////////////////; /// Read group config file 'cf'.; /// If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; ///; /// expects the following directives:; /// Group definition:; /// group `<groupname>` `<user>`+; /// disk quota; /// property `<groupname>` diskquota `<quota in GB>`; /// average filesize (to be used when the file size is not available); /// averagefilesize `<average size>`{G,g,M,m,K,k}",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:97,Modifiability,config,config,97,"////////////////////////////////////////////////////////////////////////////////; /// Read group config file 'cf'.; /// If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; ///; /// expects the following directives:; /// Group definition:; /// group `<groupname>` `<user>`+; /// disk quota; /// property `<groupname>` diskquota `<quota in GB>`; /// average filesize (to be used when the file size is not available); /// averagefilesize `<average size>`{G,g,M,m,K,k}",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:3,Security,Validat,Validate,3,"// Validate input",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:12,Modifiability,config,config,12,"// Open the config file",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:11,Integrability,depend,depends,11,"// Parsing depends on the key",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:500,Availability,Avail,Available,500,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns all datasets for the `<group>` and `<user>` specified by `<uri>`.; /// If `<user>` is 0, it returns all datasets for the given `<group>`.; /// If `<group>` is 0, it returns all datasets.; /// The returned TMap contains:; /// `<group>` --> `<map of users>` --> `<map of datasets>` --> `<dataset>` (TFileCollection); ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kShowDefault a default selection is shown that include the ones from; /// the current user, the ones from the group and the common ones; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:731,Deployability,update,update,731,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns all datasets for the `<group>` and `<user>` specified by `<uri>`.; /// If `<user>` is 0, it returns all datasets for the given `<group>`.; /// If `<group>` is 0, it returns all datasets.; /// The returned TMap contains:; /// `<group>` --> `<map of users>` --> `<map of datasets>` --> `<dataset>` (TFileCollection); ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kShowDefault a default selection is shown that include the ones from; /// the current user, the ones from the group and the common ones; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:1150,Availability,failure,failure,1150,"////////////////////////////////////////////////////////////////////////////////; /// Scans the dataset indicated by 'uri' following the 'opts' directives; ///; /// The 'opts' string contains up to 4 directive fields separated by ':'; ///; /// 'selection' field :; /// A, allfiles: process all files; /// D, staged: process only staged (on Disk) files (if 'allfiles:' is not specified; /// the default is to process only files marked as non-staged); /// 'pre-action field':; /// O, open: open the files marked as staged when processing only files; /// marked as non-staged; /// T, touch: open and touch the files marked as staged when processing; /// only files marked as non-staged; /// I, nostagedcheck: do not check the actual stage status on selected files; ///; /// 'process' field:; /// N, noaction: do nothing on the selected files; /// P, fullproc: open the selected files and extract the meta information; /// L, locateonly: only locate the selected files; /// S, stageonly: issue a stage request for the selected files not yet staged; ///; /// 'auxiliary' field; /// V, verbose: notify the actions; ///; /// Returns 0 on success, -1 if any failure occurs.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:189,Availability,failure,failure,189,"////////////////////////////////////////////////////////////////////////////////; /// Scans the dataset indicated by `<uri>` and returns the number of missing files.; /// Returns -1 if any failure occurs.; /// For more details, see documentation of; /// ScanDataSet(TFileCollection *dataset, const char *option)",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:107,Energy Efficiency,monitor,monitoring,107,"////////////////////////////////////////////////////////////////////////////////; ///; /// Log info to the monitoring server",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:91,Testability,Log,Log,91,"////////////////////////////////////////////////////////////////////////////////; ///; /// Log info to the monitoring server",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:86,Deployability,update,updates,86,"////////////////////////////////////////////////////////////////////////////////; /// updates the used space maps",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:177,Availability,failure,failure,177,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings, if needed.; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:231,Availability,error,error,231,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/dataset.list` file the name of the last updated; /// or created or modified dataset; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:154,Deployability,update,updated,154,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/dataset.list` file the name of the last updated; /// or created or modified dataset; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:2,Security,checksum,checksum,2,/*checksum*/,MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:92,Performance,cache,cached,92,"////////////////////////////////////////////////////////////////////////////////; /// Clear cached information matching uri",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear cached information matching uri",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:91,Performance,cache,cached,91,"////////////////////////////////////////////////////////////////////////////////; /// Show cached information matching uri",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:1069,Deployability,update,update,1069,"////////////////////////////////////////////////////////////////////////////////; /// Prints formatted information about the dataset 'uri'.; /// The type and format of output is driven by 'opt':; ///; /// 1. opt = ""server:srv1[,srv2[,srv3[,...]]]""; /// Print info about the subsets of 'uri' on servers srv1, srv2, ...; /// 2. opt = ""servers[:exclude:srv1[,srv2[,srv3[,...]]]]""; /// Print info about the subsets of 'uri' on all servers, except; /// the ones in the exclude list srv1, srv2, ...; /// 3. opt = `<any>`; /// Print info about all datasets matching 'uri'; ///; /// If 'opt' contains 'full:' the list of files in the datasets are also printed.; /// In case 3. this is enabled only if 'uri' matches a single dataset.; ///; /// In case 3, if 'opt' contains; /// 'full:' the list of files in the datasets are also printed.; /// 'forcescan:' the dataset are open to get the information; otherwise the; /// pre-processed information is used.; /// 'noheader:' the labelling header is not printed; usefull when to chain; /// several printouts; /// 'noupdate:' do not update the cache (which may be slow on very remote; /// servers); /// 'refresh:' refresh the information (requires appropriate credentials;; /// typically it can be done only for owned datasets)",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:1080,Performance,cache,cache,1080,"////////////////////////////////////////////////////////////////////////////////; /// Prints formatted information about the dataset 'uri'.; /// The type and format of output is driven by 'opt':; ///; /// 1. opt = ""server:srv1[,srv2[,srv3[,...]]]""; /// Print info about the subsets of 'uri' on servers srv1, srv2, ...; /// 2. opt = ""servers[:exclude:srv1[,srv2[,srv3[,...]]]]""; /// Print info about the subsets of 'uri' on all servers, except; /// the ones in the exclude list srv1, srv2, ...; /// 3. opt = `<any>`; /// Print info about all datasets matching 'uri'; ///; /// If 'opt' contains 'full:' the list of files in the datasets are also printed.; /// In case 3. this is enabled only if 'uri' matches a single dataset.; ///; /// In case 3, if 'opt' contains; /// 'full:' the list of files in the datasets are also printed.; /// 'forcescan:' the dataset are open to get the information; otherwise the; /// pre-processed information is used.; /// 'noheader:' the labelling header is not printed; usefull when to chain; /// several printouts; /// 'noupdate:' do not update the cache (which may be slow on very remote; /// servers); /// 'refresh:' refresh the information (requires appropriate credentials;; /// typically it can be done only for owned datasets)",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:282,Deployability,update,updated,282,"////////////////////////////////////////////////////////////////////////////////; /// Go through the files in the specified dataset, selecting files according to; /// 'fopt' and doing on these files the actions described by 'sopt'.; /// If required, the information in 'dataset' is updated.; ///; /// The int fopt controls which files have to be processed (or added to the list; /// if ropt is 1 - see below); 'fopt' is defined in term of csopt and fsopt:; /// fopt = sign(fsopt) * csopt * 100 + fsopt; /// where 'fsopt' controls the actual selection; /// -1 all files in the dataset; /// 0 process only files marked as 'non-staged'; /// >=1 as 0 but files that are marked 'staged' are open; /// >=2 as 1 but files that are marked 'staged' are touched; /// 10 process only files marked as 'staged'; files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get lis",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:2272,Deployability,update,update,2272," files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get list of files to process and process them; /// 1 get the list of files to be scanned and return it in flist; /// 2 process the files in flist (according to sopt); /// When defined flist is under the responsability the caller.; ///; /// If avgsz > 0 it is used for the final update of the dataset global counters.; ///; /// If 'mss' is defined use it to initialize the stager (instead of the Url in the; /// TFileInfo objects); ///; /// If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; /// all files marked as 'staged' are still open or touched); ///; /// Return code; /// 1 dataset was not changed; /// 2 dataset was changed; ///; /// The number of touched, opened and disappeared files are returned in the respective; /// variables, if these are defined.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:2765,Modifiability,variab,variables,2765," files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get list of files to process and process them; /// 1 get the list of files to be scanned and return it in flist; /// 2 process the files in flist (according to sopt); /// When defined flist is under the responsability the caller.; ///; /// If avgsz > 0 it is used for the final update of the dataset global counters.; ///; /// If 'mss' is defined use it to initialize the stager (instead of the Url in the; /// TFileInfo objects); ///; /// If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; /// all files marked as 'staged' are still open or touched); ///; /// Return code; /// 1 dataset was not changed; /// 2 dataset was changed; ///; /// The number of touched, opened and disappeared files are returned in the respective; /// variables, if these are defined.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:1955,Performance,perform,performed,1955," files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get list of files to process and process them; /// 1 get the list of files to be scanned and return it in flist; /// 2 process the files in flist (according to sopt); /// When defined flist is under the responsability the caller.; ///; /// If avgsz > 0 it is used for the final update of the dataset global counters.; ///; /// If 'mss' is defined use it to initialize the stager (instead of the Url in the; /// TFileInfo objects); ///; /// If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; /// all files marked as 'staged' are still open or touched); ///; /// Return code; /// 1 dataset was not changed; /// 2 dataset was changed; ///; /// The number of touched, opened and disappeared files are returned in the respective; /// variables, if these are defined.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:17,Energy Efficiency,monitor,monitoring,17,"// For real time monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:17,Energy Efficiency,monitor,monitoring,17,"// For real time monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:17,Energy Efficiency,monitor,monitoring,17,"// For real time monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:26,Availability,avail,available,26,"// Check if file is still available, if touch is set actually read from the file",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:12,Security,access,access,12,"// Actually access the file",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:25,Availability,failure,failure,25,"// Go to next in case of failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:110,Security,validat,validate,110,"////////////////////////////////////////////////////////////////////////////////; /// Locate, stage, or fully validate file ""fileInfo"".",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:13,Security,validat,validation,13,"// Full file validation",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:7,Safety,timeout,timeout,7,"// Get timeout settings (default none)",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:48,Performance,load,loading,48,"// Disable warnings when reading a tree without loading the corresponding library",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:36,Deployability,update,update,36,"// Loop over all entries and create/update corresponding metadata.; // TODO If we cannot read some of the trees, is the file corrupted as well?",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update scan counters",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Security,Checksum,Checksum,3,"// Checksum",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:13,Modifiability,sandbox,sandbox,13,"// If not in sandbox, construct the base URI using session defaults; // (group, user) (syntax: /group/user/dsname[#[subdir/]objname])",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:13,Testability,sandbox,sandbox,13,"// If not in sandbox, construct the base URI using session defaults; // (group, user) (syntax: /group/user/dsname[#[subdir/]objname])",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:27,Performance,cache,cache,27,"// Default validity of the cache",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:17,Deployability,update,updates,17,"// File to check updates and its locking path",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:18,Performance,cache,cache,18,"// Init the local cache directory if the repository is remote",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:101,Performance,cache,cache,101,"////////////////////////////////////////////////////////////////////////////////; /// Init the local cache if required",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:40,Performance,cache,cache,40,"// Make sure that the non-default local cache directory exists and is writable",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:28,Performance,cache,cache,28,"// Make sure that the local cache dir exists and is writable",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:309,Availability,avail,available,309,"////////////////////////////////////////////////////////////////////////////////; /// Parse the input string and set the init bits accordingly; /// Format is; /// dir:`<datasetdir>` [mss:`<mss-url>`] [opt:`<base-options>`]; /// The `<datasetdir>` is mandatory.; /// See TDataSetManager::ParseInitOpts for the available; /// base options.; /// The base options are already initialized by the base constructor",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:257,Performance,cache,cache,257,"////////////////////////////////////////////////////////////////////////////////; /// Returns path of the indicated dataset. The extension is '.root' for all files; /// except for 'dsName==ls' which have extension '.txt'.; /// If 'local' is kTRUE the local cache path is returned instead in the form; /// `<cachedir>`/`<group>`.`<user>`.`<dsName>`.`<ext>`.; /// NB: contains a static TString for result, so copy result before using twice.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:307,Performance,cache,cachedir,307,"////////////////////////////////////////////////////////////////////////////////; /// Returns path of the indicated dataset. The extension is '.root' for all files; /// except for 'dsName==ls' which have extension '.txt'.; /// If 'local' is kTRUE the local cache path is returned instead in the form; /// `<cachedir>`/`<group>`.`<user>`.`<dsName>`.`<ext>`.; /// NB: contains a static TString for result, so copy result before using twice.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:325,Availability,error,error,325,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/kDataSet_DataSetList` file the name of the updated; /// or created or modified dataset. For still existing datasets, fill the; /// modification date in seconds anf the checksum.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:157,Deployability,update,updated,157,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/kDataSet_DataSetList` file the name of the updated; /// or created or modified dataset. For still existing datasets, fill the; /// modification date in seconds anf the checksum.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:282,Security,checksum,checksum,282,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/kDataSet_DataSetList` file the name of the updated; /// or created or modified dataset. For still existing datasets, fill the; /// modification date in seconds anf the checksum.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Deployability,Update,Update,3,"// Update / create list for the owner",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Performance,Load,Load,3,"// Load the info in form of TMacro",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Deployability,Update,Update,3,"// Update the information",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Deployability,Update,Update,3,"// Update the information",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:343,Availability,error,error,343,"////////////////////////////////////////////////////////////////////////////////; /// Create or recreate the dataset lists for 'uri'.; /// The list are saved in text form in 'uri'/ls.txt for fast browsing and in; /// 'uri'/ls.root in form of TMacro for optimized and portable transfer.; /// Return 0 on success, 1 if the file was empty, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:267,Modifiability,portab,portable,267,"////////////////////////////////////////////////////////////////////////////////; /// Create or recreate the dataset lists for 'uri'.; /// The list are saved in text form in 'uri'/ls.txt for fast browsing and in; /// 'uri'/ls.root in form of TMacro for optimized and portable transfer.; /// Return 0 on success, 1 if the file was empty, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:253,Performance,optimiz,optimized,253,"////////////////////////////////////////////////////////////////////////////////; /// Create or recreate the dataset lists for 'uri'.; /// The list are saved in text form in 'uri'/ls.txt for fast browsing and in; /// 'uri'/ls.root in form of TMacro for optimized and portable transfer.; /// Return 0 on success, 1 if the file was empty, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:337,Availability,Avail,Available,337,"////////////////////////////////////////////////////////////////////////////////; /// Adds the dataset in the folder of group, user to the list in target.; /// If dsName is defined, only the information about the specified dataset; /// is processed.; ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; /// kList get a list of dataset names; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:427,Deployability,update,update,427,"////////////////////////////////////////////////////////////////////////////////; /// Adds the dataset in the folder of group, user to the list in target.; /// If dsName is defined, only the information about the specified dataset; /// is processed.; ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; /// kList get a list of dataset names; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:10,Integrability,depend,depends,10,"// Action depends on option",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Deployability,Update,Update,3,"// Update quotas",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:18,Availability,avail,available,18,"// Just a list of available datasets",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:401,Availability,avail,available,401,"////////////////////////////////////////////////////////////////////////////////; /// General purpose call to go through the existing datasets.; /// If `<user>` is 0 or ""*"", act on all datasets for the given `<group>`.; /// If `<group>` is 0 or ""*"", act on all datasets.; /// If `<dsName>` is defined, only the information about the specified dataset; /// is processed.; /// Action depends on option; available options:; ///; /// kExport Return a TMap object containing all the information about; /// datasets in the form:; /// { `<group>`, `<map of users>` }; /// |; /// { `<map of datasets>`, `<dataset>`}; /// (`<dataset>` are TFileCollection objects); /// kShowDefault as kExport with in addition a default selection including; /// the datasets from the current user, the ones from the group; /// and the common ones; ///; /// kPrint print the dataset content; no output is returned; /// kList get a list of available dataset names; /// kForceScan Re-open files while processing kPrint (do not use the; /// pre-processed information); /// kNoHeaderPrint Labelling header is not printed; /// kQuotaUpdate update {group, user} quotas; no output is returned; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:912,Availability,avail,available,912,"////////////////////////////////////////////////////////////////////////////////; /// General purpose call to go through the existing datasets.; /// If `<user>` is 0 or ""*"", act on all datasets for the given `<group>`.; /// If `<group>` is 0 or ""*"", act on all datasets.; /// If `<dsName>` is defined, only the information about the specified dataset; /// is processed.; /// Action depends on option; available options:; ///; /// kExport Return a TMap object containing all the information about; /// datasets in the form:; /// { `<group>`, `<map of users>` }; /// |; /// { `<map of datasets>`, `<dataset>`}; /// (`<dataset>` are TFileCollection objects); /// kShowDefault as kExport with in addition a default selection including; /// the datasets from the current user, the ones from the group; /// and the common ones; ///; /// kPrint print the dataset content; no output is returned; /// kList get a list of available dataset names; /// kForceScan Re-open files while processing kPrint (do not use the; /// pre-processed information); /// kNoHeaderPrint Labelling header is not printed; /// kQuotaUpdate update {group, user} quotas; no output is returned; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:1108,Deployability,update,update,1108,"////////////////////////////////////////////////////////////////////////////////; /// General purpose call to go through the existing datasets.; /// If `<user>` is 0 or ""*"", act on all datasets for the given `<group>`.; /// If `<group>` is 0 or ""*"", act on all datasets.; /// If `<dsName>` is defined, only the information about the specified dataset; /// is processed.; /// Action depends on option; available options:; ///; /// kExport Return a TMap object containing all the information about; /// datasets in the form:; /// { `<group>`, `<map of users>` }; /// |; /// { `<map of datasets>`, `<dataset>`}; /// (`<dataset>` are TFileCollection objects); /// kShowDefault as kExport with in addition a default selection including; /// the datasets from the current user, the ones from the group; /// and the common ones; ///; /// kPrint print the dataset content; no output is returned; /// kList get a list of available dataset names; /// kForceScan Re-open files while processing kPrint (do not use the; /// pre-processed information); /// kNoHeaderPrint Labelling header is not printed; /// kQuotaUpdate update {group, user} quotas; no output is returned; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:382,Integrability,depend,depends,382,"////////////////////////////////////////////////////////////////////////////////; /// General purpose call to go through the existing datasets.; /// If `<user>` is 0 or ""*"", act on all datasets for the given `<group>`.; /// If `<group>` is 0 or ""*"", act on all datasets.; /// If `<dsName>` is defined, only the information about the specified dataset; /// is processed.; /// Action depends on option; available options:; ///; /// kExport Return a TMap object containing all the information about; /// datasets in the form:; /// { `<group>`, `<map of users>` }; /// |; /// { `<map of datasets>`, `<dataset>`}; /// (`<dataset>` are TFileCollection objects); /// kShowDefault as kExport with in addition a default selection including; /// the datasets from the current user, the ones from the group; /// and the common ones; ///; /// kPrint print the dataset content; no output is returned; /// kList get a list of available dataset names; /// kForceScan Re-open files while processing kPrint (do not use the; /// pre-processed information); /// kNoHeaderPrint Labelling header is not printed; /// kQuotaUpdate update {group, user} quotas; no output is returned; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:36,Performance,cache,cache,36,"// Loop needed, either on the local cache or on the real thing",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:21,Performance,cache,cache,21,"// Loop on the local cache",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Usability,Simpl,Simple,3,"// Simple line",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:287,Availability,failure,failure,287,"////////////////////////////////////////////////////////////////////////////////; /// Check for the 'ls.txt' for 'group' and 'user' and fill the path for the; /// ls file in 'out'.; /// If 'dsname' is defined, open the file and extract the relevant line.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:167,Security,checksum,checksum,167,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns the dataset `<dsName>` of user `<user>` in group `<group>`.; /// If checksum is non-zero, it will contain the pointer to a TMD5 sum object; /// with the checksum of the file, has to be deleted by the user.; /// If option has the bi kReadShort set, the shortobject is read, that does not; /// contain the list of files. This is much faster.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:252,Security,checksum,checksum,252,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns the dataset `<dsName>` of user `<user>` in group `<group>`.; /// If checksum is non-zero, it will contain the pointer to a TMD5 sum object; /// with the checksum of the file, has to be deleted by the user.; /// If option has the bi kReadShort set, the shortobject is read, that does not; /// contain the list of files. This is much faster.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:31,Performance,cache,cache,31,"// Check is the file is in the cache",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:7,Security,checksum,checksum,7,"// Get checksum",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:269,Availability,failure,failure,269,"////////////////////////////////////////////////////////////////////////////////; /// Check if the local cache information for group, user, dsName is up-to-date; /// If not, make the relevant updates; /// Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:192,Deployability,update,updates,192,"////////////////////////////////////////////////////////////////////////////////; /// Check if the local cache information for group, user, dsName is up-to-date; /// If not, make the relevant updates; /// Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:105,Performance,cache,cache,105,"////////////////////////////////////////////////////////////////////////////////; /// Check if the local cache information for group, user, dsName is up-to-date; /// If not, make the relevant updates; /// Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:29,Deployability,update,update,29,"// Check first if the global update info is uptodate",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:39,Deployability,update,updates,39,"// Touch or create the file to control updates",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Deployability,Update,Update,3,"// Update macro info",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:39,Deployability,update,updates,39,"// Touch or create the file to control updates",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:30,Security,checksum,checksum,30,"// Calculate and save the new checksum",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:92,Performance,cache,cached,92,"////////////////////////////////////////////////////////////////////////////////; /// Clear cached information matching uri",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear cached information matching uri",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:91,Performance,cache,cached,91,"////////////////////////////////////////////////////////////////////////////////; /// Show cached information matching uri",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:590,Availability,error,error,590,"////////////////////////////////////////////////////////////////////////////////; ///; /// Writes indicated dataset.; /// If option has the bit kFileMustExist set, the file must still exist,; /// otherwise the new dataset is not written (returns 3 in this case).; /// If checksum is non-zero the files current checksum is checked against it,; /// if it does not match the file is not written (the function returns 2 in this; /// case, if the file has disappeared it is also not written (i.e. checksum; /// implies the bit kFileMustExist set in option).; /// Returns != 0 for success, 0 for error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:271,Security,checksum,checksum,271,"////////////////////////////////////////////////////////////////////////////////; ///; /// Writes indicated dataset.; /// If option has the bit kFileMustExist set, the file must still exist,; /// otherwise the new dataset is not written (returns 3 in this case).; /// If checksum is non-zero the files current checksum is checked against it,; /// if it does not match the file is not written (the function returns 2 in this; /// case, if the file has disappeared it is also not written (i.e. checksum; /// implies the bit kFileMustExist set in option).; /// Returns != 0 for success, 0 for error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:310,Security,checksum,checksum,310,"////////////////////////////////////////////////////////////////////////////////; ///; /// Writes indicated dataset.; /// If option has the bit kFileMustExist set, the file must still exist,; /// otherwise the new dataset is not written (returns 3 in this case).; /// If checksum is non-zero the files current checksum is checked against it,; /// if it does not match the file is not written (the function returns 2 in this; /// case, if the file has disappeared it is also not written (i.e. checksum; /// implies the bit kFileMustExist set in option).; /// Returns != 0 for success, 0 for error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:492,Security,checksum,checksum,492,"////////////////////////////////////////////////////////////////////////////////; ///; /// Writes indicated dataset.; /// If option has the bit kFileMustExist set, the file must still exist,; /// otherwise the new dataset is not written (returns 3 in this case).; /// If checksum is non-zero the files current checksum is checked against it,; /// if it does not match the file is not written (the function returns 2 in this; /// case, if the file has disappeared it is also not written (i.e. checksum; /// implies the bit kFileMustExist set in option).; /// Returns != 0 for success, 0 for error",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:43,Availability,recover,recover,43,"// write first in "".<file>"" then rename to recover from crash during writing",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:43,Safety,recover,recover,43,"// write first in "".<file>"" then rename to recover from crash during writing",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:22,Deployability,update,updated,22,"// The repository was updated",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:268,Availability,error,error,268,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the checksum of the indicated dataset at 'path' and save it to the; /// appropriate file 'md5path'. The MD5 string is returned in 'md5sum'.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:100,Security,checksum,checksum,100,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the checksum of the indicated dataset at 'path' and save it to the; /// appropriate file 'md5path'. The MD5 string is returned in 'md5sum'.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:14,Security,checksum,checksum,14,"// Remove the checksum file",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:22,Deployability,update,updated,22,"// The repository was updated",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:790,Availability,failure,failure,790,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings and verification, if required.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:530,Modifiability,config,configured,530,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings and verification, if required.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:732,Modifiability,config,configured,732,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings and verification, if required.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:9,Deployability,update,update,9,"// If in update mode, retrieve the existing dataset, if any",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Usability,Clear,Clear,3,"// Clear dataSet and add contents of uniqueFileList needed otherwise; // THashList deletes the objects even when nodelete is set",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Deployability,Update,Update,3,"// Update accumulated information",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:189,Availability,failure,failure,189,"////////////////////////////////////////////////////////////////////////////////; /// Scans the dataset indicated by `<uri>` and returns the number of missing files.; /// Returns -1 if any failure occurs, >= 0 on success.; /// For more details, see documentation of; /// ScanDataSet(TFileCollection *dataset, const char *option)",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:500,Availability,Avail,Available,500,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns all datasets for the `<group>` and `<user>` specified by `<uri>`.; /// If `<user>` is 0, it returns all datasets for the given `<group>`.; /// If `<group>` is 0, it returns all datasets.; /// The returned TMap contains:; /// `<group>` --> `<map of users>` --> `<map of datasets>` --> `<dataset>` (TFileCollection); ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kShowDefault a default selection is shown that include the ones from; /// the current user, the ones from the group and the common ones; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:731,Deployability,update,update,731,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns all datasets for the `<group>` and `<user>` specified by `<uri>`.; /// If `<user>` is 0, it returns all datasets for the given `<group>`.; /// If `<group>` is 0, it returns all datasets.; /// The returned TMap contains:; /// `<group>` --> `<map of users>` --> `<map of datasets>` --> `<dataset>` (TFileCollection); ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kShowDefault a default selection is shown that include the ones from; /// the current user, the ones from the group and the common ones; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:86,Deployability,update,updates,86,"////////////////////////////////////////////////////////////////////////////////; /// updates the used space maps",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Usability,Clear,Clear,3,"// Clear used space entries",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:137,Availability,error,error,137,"////////////////////////////////////////////////////////////////////////////////; /// Gets last dataset modification time. Returns -1 on error, or number of; /// seconds since epoch on success",MatchSource.CODE_COMMENT,proof/proof/src/TDataSetManagerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate by opening the file.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:3,Availability,Error,Error,3,"// Error should be reported by GetEntries()",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate by checking against another element.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:641,Modifiability,extend,extended,641,"// NOTE: Since this function validates against another TDSetElement,; // if the other TDSetElement (elem) did not use -1 to request all; // entries, this TDSetElement may get less than all entries if it; // requests all (with -1). For the application it was developed for; // (TProofSuperMaster::ValidateDSet) it works, since the design was; // to send the elements to their mass storage domain and let them; // look at the file and send the info back to the supermaster. The; // ability to set fValid was also required to be only exist in; // TDSetElement through certain function and not be set externally.; // TDSetElement may need to be extended for more general applications.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:29,Security,validat,validates,29,"// NOTE: Since this function validates against another TDSetElement,; // if the other TDSetElement (elem) did not use -1 to request all; // entries, this TDSetElement may get less than all entries if it; // requests all (with -1). For the application it was developed for; // (TProofSuperMaster::ValidateDSet) it works, since the design was; // to send the elements to their mass storage domain and let them; // look at the file and send the info back to the supermaster. The; // ability to set fValid was also required to be only exist in; // TDSetElement through certain function and not be set externally.; // TDSetElement may need to be extended for more general applications.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:296,Security,Validat,ValidateDSet,296,"// NOTE: Since this function validates against another TDSetElement,; // if the other TDSetElement (elem) did not use -1 to request all; // entries, this TDSetElement may get less than all entries if it; // requests all (with -1). For the application it was developed for; // (TProofSuperMaster::ValidateDSet) it works, since the design was; // to send the elements to their mass storage domain and let them; // look at the file and send the info back to the supermaster. The; // ability to set fValid was also required to be only exist in; // TDSetElement through certain function and not be set externally.; // TDSetElement may need to be extended for more general applications.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:245,Availability,down,down,245,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of entries in tree or objects in file.; /// If not yet defined and 'openfile' is TRUE, get the number from the file; /// (may considerably slow down the application).; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:295,Availability,error,error,295,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of entries in tree or objects in file.; /// If not yet defined and 'openfile' is TRUE, get the number from the file; /// (may considerably slow down the application).; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:41,Availability,error,errors,41,"// Get the locality (disable warnings or errors in connection attempts)",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:159,Performance,perform,performed,159,"// Record end-point Url and mark as looked-up; be careful to change; // nothing in the file name, otherwise some cross-checks may fail.; // The lookup is only performed if not yet done",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:3,Availability,Error,Error,3,"// Error always reported?",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:3,Integrability,Depend,Depending,3,"// Depending on the type of backend, it might not make any sense to lookup",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:13,Modifiability,plugin,plugin,13,"// Check the plugin the first time",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:10,Integrability,depend,depends,10,"// Action depends on the type",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:470,Integrability,interface,interface,470,"/** \class TDSet; \ingroup proofkernel. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");; ...; treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");; ...; objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. */; ////////////////////////////////////////////////////////////////////////////////; /// Default ctor.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:313,Testability,log,logical,313,"/** \class TDSet; \ingroup proofkernel. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");; ...; treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");; ...; objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. */; ////////////////////////////////////////////////////////////////////////////////; /// Default ctor.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:347,Integrability,depend,depends,347,"////////////////////////////////////////////////////////////////////////////////; /// Create a named TDSet object. The ""type"" defines the class of which objects; /// will be processed (default 'TTree'). The optional ""objname"" argument; /// specifies the name of the objects of the specified class.; /// If the ""objname"" is not given the behaviour depends on the 'type':; /// for 'TTree' the first TTree is analyzed; for other types, all objects of; /// the class found in the specified directory are processed.; /// The ""dir"" argument specifies in which directory the objects are; /// to be found, the top level directory (""/"") is the default.; /// Directories can be specified using wildcards, e.g. ""*"" or ""/*""; /// means to look in all top level directories, ""/dir/*"" in all; /// directories under ""/dir"", and ""/*/*"" to look in all directories; /// two levels deep.; /// For backward compatibility the type can also be passed via 'name',; /// in which case 'type' is ignored.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:291,Integrability,depend,dependence,291,"////////////////////////////////////////////////////////////////////////////////; /// Create a named TDSet object from existing TChain 'chain'.; /// If 'withfriends' is kTRUE add also friends.; /// This constructor substituted the static methods TChain::MakeTDSet; /// removing any residual dependence of 'tree' on 'proof'.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:273,Availability,error,error,273,"////////////////////////////////////////////////////////////////////////////////; /// Process TDSet on currently active PROOF session.; /// The last argument 'enl' specifies an entry- or event-list to be used as; /// event selection.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:273,Availability,error,error,273,"////////////////////////////////////////////////////////////////////////////////; /// Process TDSet on currently active PROOF session.; /// The last argument 'enl' specifies an entry- or event-list to be used as; /// event selection.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear input object list.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:408,Availability,avail,availableOnly,408,"////////////////////////////////////////////////////////////////////////////////; /// Add files passed as list of TFileInfo, TUrl or TObjString objects .; /// If TFileInfo, the first entry and the number of entries are also filled.; /// The argument 'meta' can be used to specify one of the subsets in the; /// file as described in the metadata of TFileInfo. By default the first one; /// is taken.; /// If 'availableOnly' is true only files available ('staged' and non corrupted); /// are taken: those not satisfying this requirement are added to 'badlist', if; /// the latter is defined. By default availableOnly is false.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:442,Availability,avail,available,442,"////////////////////////////////////////////////////////////////////////////////; /// Add files passed as list of TFileInfo, TUrl or TObjString objects .; /// If TFileInfo, the first entry and the number of entries are also filled.; /// The argument 'meta' can be used to specify one of the subsets in the; /// file as described in the metadata of TFileInfo. By default the first one; /// is taken.; /// If 'availableOnly' is true only files available ('staged' and non corrupted); /// are taken: those not satisfying this requirement are added to 'badlist', if; /// the latter is defined. By default availableOnly is false.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:601,Availability,avail,availableOnly,601,"////////////////////////////////////////////////////////////////////////////////; /// Add files passed as list of TFileInfo, TUrl or TObjString objects .; /// If TFileInfo, the first entry and the number of entries are also filled.; /// The argument 'meta' can be used to specify one of the subsets in the; /// file as described in the metadata of TFileInfo. By default the first one; /// is taken.; /// If 'availableOnly' is true only files available ('staged' and non corrupted); /// are taken: those not satisfying this requirement are added to 'badlist', if; /// the latter is defined. By default availableOnly is false.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:22,Usability,usab,usable,22,"// Return list of non-usable files",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:137,Availability,error,error,137,"// If more than one metadata info require the specification of the objpath;; // the order in which they appear is not guaranteed and the error may be; // very difficult to find.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:106,Security,access,access,106,"////////////////////////////////////////////////////////////////////////////////; /// Reset or initialize access to the elements.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:167,Availability,error,error,167,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of entries in tree or objects in file. Returns -1 in; /// case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:41,Availability,error,errors,41,"// Get the locality (disable warnings or errors in connection attempts)",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:3,Availability,Error,Error,3,"// Error always reported?",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries.; /// Returns -1 in case of error or number of selected events in case of success.; /// This function accepts a TCut objects as argument.; /// Use the operator+ to concatenate cuts.; /// Example:; /// dset.Draw(""x"",cut1+cut2+cut3);",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries.; /// Returns -1 in case of error or number of selected events in case of success.; /// For more see TTree::Draw().",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate the TDSet by opening files.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:128,Safety,avoid,avoid,128,"////////////////////////////////////////////////////////////////////////////////; /// Flag all the elements as looked-up, so to avoid opening the files; /// if the functionality is not supported",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate the TDSet against another TDSet.; /// Only validates elements in common from input TDSet.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:138,Security,validat,validates,138,"////////////////////////////////////////////////////////////////////////////////; /// Validate the TDSet against another TDSet.; /// Only validates elements in common from input TDSet.",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:10,Integrability,depend,depends,10,"// Action depends on the type",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:10,Integrability,depend,depend,10,"// Action depend on type of list",MatchSource.CODE_COMMENT,proof/proof/src/TDSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSetProxy.cxx:9,Testability,log,log,9,"// Check log file length (before processing the next packet, so we have the; // chance to keep the latest logs)",MatchSource.CODE_COMMENT,proof/proof/src/TDSetProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSetProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSetProxy.cxx:106,Testability,log,logs,106,"// Check log file length (before processing the next packet, so we have the; // chance to keep the latest logs)",MatchSource.CODE_COMMENT,proof/proof/src/TDSetProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSetProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx:191,Availability,error,error,191,"////////////////////////////////////////////////////////////////////////////////; /// Locks the directory. Waits if lock is hold by an other process.; /// Returns 0 on success, -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TLockPath.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx:157,Availability,error,error,157,"////////////////////////////////////////////////////////////////////////////////; /// Unlock the directory. Returns 0 in case of success,; /// -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TLockPath.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:86,Integrability,Wrap,Wrapper,86,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper to notofuer / logger",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:108,Testability,log,logger,108,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper to notofuer / logger",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:131,Availability,error,error,131,"////////////////////////////////////////////////////////////////////////////////; /// Method to build a package.; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:6,Availability,down,down,6,"// Go down to the package directory",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:203,Integrability,message,messages,203,"// To build the package we execute PROOF-INF/BUILD.sh via a pipe; // so that we can send back the log in (almost) real-time to the; // (impatient) client. Note that this operation will block, so; // the messages from builds on the workers will reach the client; // shortly after the master ones.",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:98,Testability,log,log,98,"// To build the package we execute PROOF-INF/BUILD.sh via a pipe; // so that we can send back the log in (almost) real-time to the; // (impatient) client. Note that this operation will block, so; // the messages from builds on the workers will reach the client; // shortly after the master ones.",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Method to load a package taking an option const char *; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:96,Performance,load,load,96,"////////////////////////////////////////////////////////////////////////////////; /// Method to load a package taking an option const char *; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:151,Availability,error,error,151,"////////////////////////////////////////////////////////////////////////////////; /// Method to load a package taking an option list; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:96,Performance,load,load,96,"////////////////////////////////////////////////////////////////////////////////; /// Method to load a package taking an option list; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:14,Performance,load,loaded,14,"// If already loaded don't do it again",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:3,Performance,Load,Load,3,"// Load from there",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:9,Integrability,depend,dependencies,9,"// Check dependencies",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:19,Availability,failure,failure,19,"// Package loading failure",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:11,Performance,load,loading,11,"// Package loading failure",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:72,Performance,load,load,72,"// We need to change the name of the function to avoid problems when we load more packages",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:49,Safety,avoid,avoid,49,"// We need to change the name of the function to avoid problems when we load more packages",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:3,Performance,Load,Load,3,"// Load the macro",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:22,Performance,load,loaded,22,"// Macro could not be loaded",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:132,Availability,error,error,132,"////////////////////////////////////////////////////////////////////////////////; /// Method to unload a package.; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:166,Availability,error,error,166,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the path of the dir for package 'pack'.; /// Return -1 in case of error (not found), 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:171,Availability,error,error,171,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the path of the PAR file for package 'pack'.; /// Return -1 in case of error (not found), 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:104,Availability,down,download,104,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the download dir; create if not existing; /// Return -1 in case of error (not found; not created), 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:167,Availability,error,error,167,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the download dir; create if not existing; /// Return -1 in case of error (not found; not created), 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:91,Availability,avail,available,91,"////////////////////////////////////////////////////////////////////////////////; /// Show available packages; ///",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:141,Availability,error,error,141,"////////////////////////////////////////////////////////////////////////////////; /// Clean dir for package 'pack'; /// Return -1 in case of error, 0 otherwise; ///",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:157,Usability,clear,cleared,157,"////////////////////////////////////////////////////////////////////////////////; /// Remove package 'pack'; /// If 'pack' is null or empty all packages are cleared; ///",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:3,Usability,Clear,Clear,3,"// Clear all packages",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:98,Availability,avail,available,98,"////////////////////////////////////////////////////////////////////////////////; /// Get list of available packages; /// Returns a pointer to a TList object, transferring ownership to the caller",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:94,Security,checksum,checksum,94,"////////////////////////////////////////////////////////////////////////////////; /// Get MD5 checksum of the PAR file corresponding to given package; /// Returns a pointer to a TMD5 object, transferring ownership to the caller",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:95,Security,checksum,checksum,95,"////////////////////////////////////////////////////////////////////////////////; /// Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file.; /// Returns a pointer to a TMD5 object, transferring ownership to the caller",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:95,Security,checksum,checksum,95,"////////////////////////////////////////////////////////////////////////////////; /// Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file.; /// Returns a pointer to a TMD5 object, transferring ownership to the caller",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:61,Availability,failure,failure,61,"// par file did not unpack itself in the expected directory, failure",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install package from par (unpack the file in the directory); par can be an; /// URL for remote retrieval. If rmold is kTRUE an existing version of the package; /// is removed if existing.; /// Returns 0 on success, <0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:23,Availability,down,download,23,"// Check if we need to download: get the remote checksum; // Retrieve the checksum of the file, if available; // Dowload checksum file, if available",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:99,Availability,avail,available,99,"// Check if we need to download: get the remote checksum; // Retrieve the checksum of the file, if available; // Dowload checksum file, if available",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:139,Availability,avail,available,139,"// Check if we need to download: get the remote checksum; // Retrieve the checksum of the file, if available; // Dowload checksum file, if available",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:48,Security,checksum,checksum,48,"// Check if we need to download: get the remote checksum; // Retrieve the checksum of the file, if available; // Dowload checksum file, if available",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:74,Security,checksum,checksum,74,"// Check if we need to download: get the remote checksum; // Retrieve the checksum of the file, if available; // Dowload checksum file, if available",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:121,Security,checksum,checksum,121,"// Check if we need to download: get the remote checksum; // Retrieve the checksum of the file, if available; // Dowload checksum file, if available",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:42,Availability,down,downloaded,42,"// psrc is either the original par or the downloaded path",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:3,Deployability,Install,Install,3,"// Install if required",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:180,Availability,avail,available,180,"////////////////////////////////////////////////////////////////////////////////; /// Get the full path to PAR, looking also in the global dirs.; /// Returns -1 if not found, 0 if available in global dirs, 1 if it can be; /// uploaded from the local package dir.; /// For the cases >= 0, par is filled with the path of the PAR file",MatchSource.CODE_COMMENT,proof/proof/src/TPackMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1059,Integrability,protocol,protocol,1059,"// @(#)root/proof:$Id: a2a50e759072c37ccbc65ecbcce735a76de86e95 $; // Author: Fons Rademakers 13/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup proof PROOF. Classes defining the Parallel ROOT Facility, PROOF, a framework for parallel analysis of ROOT TTrees. \deprecated; We keep PROOF for those who still need it for legacy use cases.; PROOF is not developed anymore and receiving only limited support.; %ROOT has since a few years moved to RDataFrame and related products as multi-core/multi-processing engines. */; /**; \defgroup proofkernel PROOF kernel Libraries; \ingroup proof. The PROOF kernel libraries (libProof, libProofPlayer, libProofDraw) contain the classes defining; the kernel of the PROOF facility, i.e. the protocol and the utilities to steer data processing; and handling of results. */; /** \class TProof; \ingroup proofkernel. This class controls a Parallel ROOT Facility, PROOF, cluster.; It fires the worker servers, it keeps track of how many workers are; running, it keeps track of the workers running status, it broadcasts; messages to all workers, it collects results, etc. */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1384,Integrability,message,messages,1384,"// @(#)root/proof:$Id: a2a50e759072c37ccbc65ecbcce735a76de86e95 $; // Author: Fons Rademakers 13/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup proof PROOF. Classes defining the Parallel ROOT Facility, PROOF, a framework for parallel analysis of ROOT TTrees. \deprecated; We keep PROOF for those who still need it for legacy use cases.; PROOF is not developed anymore and receiving only limited support.; %ROOT has since a few years moved to RDataFrame and related products as multi-core/multi-processing engines. */; /**; \defgroup proofkernel PROOF kernel Libraries; \ingroup proof. The PROOF kernel libraries (libProof, libProofPlayer, libProofDraw) contain the classes defining; the kernel of the PROOF facility, i.e. the protocol and the utilities to steer data processing; and handling of results. */; /** \class TProof; \ingroup proofkernel. This class controls a Parallel ROOT Facility, PROOF, cluster.; It fires the worker servers, it keeps track of how many workers are; running, it keeps track of the workers running status, it broadcasts; messages to all workers, it collects results, etc. */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Testability,Log,Log,3,"// Log viewer handler",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:25,Safety,abort,abort,25,"// Cannot ask the user : abort any remote processing",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Safety,abort,abort,11,"// Stop or abort any remote processing",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:26,Integrability,message,messages,26,"//----- Input handler for messages from TProofServ -----------------------------; ////////////////////////////////////////////////////////////////////////////////; /// Constructor",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Performance,cache,cache,11,"// level 2 cache size in KB",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:183,Integrability,protocol,protocol,183,"////////////////////////////////////////////////////////////////////////////////; /// This a private API function.; /// It checks whether the connection string contains a PoD cluster protocol.; /// If it does, then the connection string will be changed to reflect; /// a real PROOF connection string for a PROOF cluster managed by PoD.; /// PoD: http://pod.gsi.de .; /// Return -1 if the PoD request failed; return 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:7,Integrability,protocol,protocol,7,"// PoD protocol string",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:7,Testability,test,test,7,"// URL test; // TODO: The URL test is to support remote PoD servers (not managed by pod-remote)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:30,Testability,test,test,30,"// URL test; // TODO: The URL test is to support remote PoD servers (not managed by pod-remote)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:489,Deployability,configurat,configurations,489,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:376,Modifiability,config,config,376,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:489,Modifiability,config,configurations,489,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:573,Modifiability,config,config,573,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:723,Modifiability,config,config,723,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:660,Testability,Log,Loglevel,660,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:676,Testability,log,log,676,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Integrability,Protocol,Protocol,3,"// Protocol and Host",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:12,Testability,log,logon,12,"// Get user logon name",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:264,Usability,simpl,simply,264,"////////////////////////////////////////////////////////////////////////////////; /// Protected constructor to be used by classes deriving from TProof; /// (they have to call Init themselves and override StartSlaves; /// appropriately).; ///; /// This constructor simply closes any previous gProof and sets gProof; /// to this instance.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:51,Modifiability,variab,variables,51,"// Check if the user defined a list of environment variables to send over:; // include them into the dedicated list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:31,Testability,log,logs,31,"// remove file with redirected logs",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:434,Availability,error,error,434,"////////////////////////////////////////////////////////////////////////////////; /// Start the PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). For a description; /// of the arguments see the TProof ctor. Returns the number of started; /// master or slave servers, returns 0 in case of error, in which case; /// fValid remains false.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:62,Integrability,message,message,62,"// The group; the client receives it in the kPROOF_SESSIONTAG message",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Safety,Timeout,Timeout,3,"// Timeout for some collect actions",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:21,Integrability,message,messages,21,"// Client logging of messages from the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Testability,log,logging,10,"// Client logging of messages from the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:29,Performance,perform,performance,29,"// sort slaves by descending performance index",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Performance,optimiz,optimized,10,"// Enable optimized sending of streamer infos to use embedded backward/forward; // compatibility support between different ROOT versions and different versions of; // users classes",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:15,Energy Efficiency,monitor,monitor,15,"// De-activate monitor (will be activated in Collect)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:12,Testability,log,log,12,"// redirect log",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:320,Availability,failure,failure,320,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:94,Modifiability,sandbox,sandbox,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:120,Modifiability,Sandbox,Sandbox,120,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:94,Testability,sandbox,sandbox,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:120,Testability,Sandbox,Sandbox,120,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:233,Testability,assert,assert,233,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Testability,Assert,Assert,3,"// Assert the path, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:90,Modifiability,config,config,90,"////////////////////////////////////////////////////////////////////////////////; /// The config file field may contain special instructions which need to be; /// parsed at the beginning, e.g. for debug runs with valgrind.; /// Several options can be given separated by a ','",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:20,Modifiability,variab,variables,20,"// Set the relevant variables",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:34,Testability,log,log,34,"// Register the additional worker log in the session file; // (for the master this is done automatically)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:25,Safety,timeout,timeouts,25,"// Increase the relevant timeouts",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:109,Modifiability,variab,variables,109,"// IgProf profiling on master and worker. PROOF does not set the; // environment for you: proper environment variables (like PATH and; // LD_LIBRARY_PATH) should be set externally",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:469,Availability,avail,available,469,"// Enable CPU pinning. Takes as argument the list of processor IDs; // that will be used in order. Processor IDs are numbered from 0,; // use likwid to see how they are organized. A possible parameter; // format would be:; //; // cpupin=3+4+0+9+10+22+7; //; // Only the specified processor IDs will be used in a round-robin; // fashion, dealing with the fact that you can request more workers; // than the number of processor IDs you have specified.; //; // To use all available processors in their order:; //; // cpupin=*",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:102,Energy Efficiency,schedul,schedule,102,"////////////////////////////////////////////////////////////////////////////////; /// Set manager and schedule its destruction after this for clean; /// operations.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:25,Security,password,password,25,"// Add group info in the password firdl, if any",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:36,Security,password,password,36,"// Set also the user, otherwise the password is not exported",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:42,Energy Efficiency,monitor,monitor,42,"// Add to global list (we will add to the monitor list after; // finalizing the server startup)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Energy Efficiency,Monitor,Monitor,3,"// Monitor good slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:190,Performance,load,load,190,"// Now set new state on the added workers (on all workers for simplicity); // use fEnabledPackages, fLoadedMacros,; // gSystem->GetDynamicPath() and gSystem->GetIncludePath(); // no need to load packages that are only loaded and not enabled (dyn mode)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:218,Performance,load,loaded,218,"// Now set new state on the added workers (on all workers for simplicity); // use fEnabledPackages, fLoadedMacros,; // gSystem->GetDynamicPath() and gSystem->GetIncludePath(); // no need to load packages that are only loaded and not enabled (dyn mode)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:62,Usability,simpl,simplicity,62,"// Now set new state on the added workers (on all workers for simplicity); // use fEnabledPackages, fLoadedMacros,; // gSystem->GetDynamicPath() and gSystem->GetIncludePath(); // no need to load packages that are only loaded and not enabled (dyn mode)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update list of current workers",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update merger counters (new workers are not yet active)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,Performance,load,loaded,103,"////////////////////////////////////////////////////////////////////////////////; /// Set up packages, loaded macros, include and lib paths ...",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:49,Safety,avoid,avoid,49,"// Upload and Enable methods are intelligent and avoid; // re-uploading or re-enabling of a package to a node that has it.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Performance,Load,Loaded,3,"// Loaded macros",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,Availability,down,down,103,"////////////////////////////////////////////////////////////////////////////////; /// Used for shuting down the workres after a query is finished.; /// Sends each of the workers from the workerList, a kPROOF_STOP message.; /// If the workerList == 0, shutdown all the workers.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:213,Integrability,message,message,213,"////////////////////////////////////////////////////////////////////////////////; /// Used for shuting down the workres after a query is finished.; /// Sends each of the workers from the workerList, a kPROOF_STOP message.; /// If the workerList == 0, shutdown all the workers.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:17,Safety,avoid,avoided,17,"// This could be avoided if CopyFromCache was used in SendFile",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:8,Availability,down,down,8,"// Shut down the worker assumig that it is not processing",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:8,Availability,down,down,8,"// Shut down the worker assumig that it is not processing",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:8,Availability,down,down,8,"// Shut down the worker assumig that it is not processing",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update also the master counter",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:40,Modifiability,config,config,40,"// If this is a master server, find the config file and start slave; // servers as specified in the config file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:100,Modifiability,config,config,100,"// If this is a master server, find the config file and start slave; // servers as specified in the config file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:9,Integrability,protocol,protocol,9,"// check protocol compatibility; // protocol 1 is not supported anymore",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:36,Integrability,protocol,protocol,36,"// check protocol compatibility; // protocol 1 is not supported anymore",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:51,Availability,failure,failure,51,"// Notify only if verbosity is on: most likely the failure has already been notified",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:99,Integrability,message,message,99,"// must set fParallel to 1 for slaves since they do not; // report their fParallel with a LOG_DONE message",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:130,Modifiability,config,config,130,"////////////////////////////////////////////////////////////////////////////////; /// Return number of slaves as described in the config file.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:146,Modifiability,config,config,146,"////////////////////////////////////////////////////////////////////////////////; /// Return number of bad slaves. This are slaves that we in the config; /// file, but refused to startup or that died during the PROOF session.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:185,Availability,avail,available,185,"////////////////////////////////////////////////////////////////////////////////; /// Get statistics about CPU time, real time and bytes read.; /// If verbose, print the resuls (always available via GetCpuTime(), GetRealTime(); /// and GetBytesRead()",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,Modifiability,sandbox,sandbox,159,"////////////////////////////////////////////////////////////////////////////////; /// Get max number of queries whose full results are kept in the; /// remote sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,Testability,sandbox,sandbox,159,"////////////////////////////////////////////////////////////////////////////////; /// Get max number of queries whose full results are kept in the; /// remote sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:311,Availability,avail,available,311,"////////////////////////////////////////////////////////////////////////////////; /// Ask the master for the list of queries.; /// Options:; /// ""A"" show information about all the queries known to the; /// server, i.e. even those processed by other sessions; /// ""L"" show only information about queries locally available; /// i.e. already retrieved. If ""L"" is specified, ""A"" is; /// ignored.; /// ""F"" show all details available about queries; /// ""H"" print help menu; /// Default """"",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:418,Availability,avail,available,418,"////////////////////////////////////////////////////////////////////////////////; /// Ask the master for the list of queries.; /// Options:; /// ""A"" show information about all the queries known to the; /// server, i.e. even those processed by other sessions; /// ""L"" show only information about queries locally available; /// i.e. already retrieved. If ""L"" is specified, ""A"" is; /// ignored.; /// ""F"" show all details available about queries; /// ""H"" print help menu; /// Default """"",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Availability,avail,available,11,"// Queries available locally",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:209,Availability,error,error,209,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of slaves active in parallel mode. Returns 0 in case; /// there are no active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:127,Availability,error,error,127,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of TSlaveInfo's. In case of error return 0.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:153,Energy Efficiency,monitor,monitored,153,"////////////////////////////////////////////////////////////////////////////////; /// Activate (on == TRUE) or deactivate (on == FALSE) all sockets; /// monitored by 'mon'.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:253,Availability,error,error,253,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast the group priority to all workers in the specified list. Returns; /// the number of workers the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:192,Integrability,message,message,192,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast the group priority to all workers in the specified list. Returns; /// the number of workers the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:253,Availability,error,error,253,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast the group priority to all workers in the specified list. Returns; /// the number of workers the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:192,Integrability,message,message,192,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast the group priority to all workers in the specified list. Returns; /// the number of workers the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:242,Availability,error,error,242,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a message to all slaves in the specified list. Returns; /// the number of slaves the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:98,Integrability,message,message,98,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a message to all slaves in the specified list. Returns; /// the number of slaves the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:181,Integrability,message,message,181,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a message to all slaves in the specified list. Returns; /// the number of slaves the message was successfully sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:288,Availability,error,error,288,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a message to all slaves in the specified list (either; /// all slaves or only the active slaves). Returns the number of slaves; /// the message was successfully sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:98,Integrability,message,message,98,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a message to all slaves in the specified list (either; /// all slaves or only the active slaves). Returns the number of slaves; /// the message was successfully sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:232,Integrability,message,message,232,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a message to all slaves in the specified list (either; /// all slaves or only the active slaves). Returns the number of slaves; /// the message was successfully sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:286,Availability,error,error,286,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a character string buffer to all slaves in the specified; /// list. Use kind to set the TMessage what field. Returns the number of; /// slaves the message was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:243,Integrability,message,message,243,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a character string buffer to all slaves in the specified; /// list. Use kind to set the TMessage what field. Returns the number of; /// slaves the message was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:337,Availability,error,error,337,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a character string buffer to all slaves in the specified; /// list (either all slaves or only the active slaves). Use kind to; /// set the TMessage what field. Returns the number of slaves the message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:289,Integrability,message,message,289,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a character string buffer to all slaves in the specified; /// list (either all slaves or only the active slaves). Use kind to; /// set the TMessage what field. Returns the number of slaves the message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:270,Availability,error,error,270,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast an object to all slaves in the specified list. Use kind to; /// set the TMEssage what field. Returns the number of slaves the message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:222,Integrability,message,message,222,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast an object to all slaves in the specified list. Use kind to; /// set the TMEssage what field. Returns the number of slaves the message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:270,Availability,error,error,270,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast an object to all slaves in the specified list. Use kind to; /// set the TMEssage what field. Returns the number of slaves the message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:222,Integrability,message,message,222,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast an object to all slaves in the specified list. Use kind to; /// set the TMEssage what field. Returns the number of slaves the message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:251,Availability,error,error,251,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a raw buffer of specified length to all slaves in the; /// specified list. Returns the number of slaves the buffer was sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:251,Availability,error,error,251,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast a raw buffer of specified length to all slaves in the; /// specified list. Returns the number of slaves the buffer was sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:225,Availability,error,error,225,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast file to all workers in the specified list. Returns the number of workers; /// the buffer was sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:225,Availability,error,error,225,"////////////////////////////////////////////////////////////////////////////////; /// Broadcast file to all workers in the specified list. Returns the number of workers; /// the buffer was sent to.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release the used monitor to be used, making sure to delete newly created; /// monitors.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,Energy Efficiency,monitor,monitor,103,"////////////////////////////////////////////////////////////////////////////////; /// Release the used monitor to be used, making sure to delete newly created; /// monitors.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:164,Energy Efficiency,monitor,monitors,164,"////////////////////////////////////////////////////////////////////////////////; /// Release the used monitor to be used, making sure to delete newly created; /// monitors.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:321,Integrability,message,message,321,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from slave sl. Returns the number of slaves that; /// responded (=1).; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:182,Safety,timeout,timeout,182,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from slave sl. Returns the number of slaves that; /// responded (=1).; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:209,Safety,timeout,timeout,209,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from slave sl. Returns the number of slaves that; /// responded (=1).; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:226,Safety,timeout,timeout,226,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from slave sl. Returns the number of slaves that; /// responded (=1).; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:325,Integrability,message,message,325,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:186,Safety,timeout,timeout,186,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:213,Safety,timeout,timeout,213,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:230,Safety,timeout,timeout,230,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:325,Integrability,message,message,325,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:186,Safety,timeout,timeout,186,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:213,Safety,timeout,timeout,213,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:230,Safety,timeout,timeout,230,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of slaves; /// that responded.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:150,Integrability,message,messages,150,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of messages; /// received. Can be 0 if there are no active slaves.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.; /// Collect also stops its execution from time to time to check for new; /// workers in Dynamic Startup mode.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:361,Integrability,message,message,361,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of messages; /// received. Can be 0 if there are no active slaves.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.; /// Collect also stops its execution from time to time to check for new; /// workers in Dynamic Startup mode.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:222,Safety,timeout,timeout,222,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of messages; /// received. Can be 0 if there are no active slaves.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.; /// Collect also stops its execution from time to time to check for new; /// workers in Dynamic Startup mode.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:249,Safety,timeout,timeout,249,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of messages; /// received. Can be 0 if there are no active slaves.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.; /// Collect also stops its execution from time to time to check for new; /// workers in Dynamic Startup mode.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:266,Safety,timeout,timeout,266,"////////////////////////////////////////////////////////////////////////////////; /// Collect responses from the slave servers. Returns the number of messages; /// received. Can be 0 if there are no active slaves.; /// If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; /// which means wait forever).; /// If defined (>= 0) endtype is the message that stops this collection.; /// Collect also stops its execution from time to time to check for new; /// workers in Dynamic Startup mode.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:39,Integrability,message,messages,39,"// Reset the status flag and clear the messages in the list, if any",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:29,Usability,clear,clear,29,"// Reset the status flag and clear the messages in the list, if any",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:45,Energy Efficiency,monitor,monitoring,45,"// Used by external code to know what we are monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Integrability,message,messages,11,"// We want messages on the main window during synchronous collection,; // but we save the present status to restore it at the end",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Safety,Timeout,Timeout,3,"// Timeout counter",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:38,Energy Efficiency,monitor,monitor,38,"// This end message was for the saved monitor; // Deactivate it if we are done with it",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:12,Integrability,message,message,12,"// This end message was for the saved monitor; // Deactivate it if we are done with it",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:25,Availability,error,error,25,"// Update counter (if no error occured)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update counter (if no error occured)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:48,Safety,abort,aborted,48,"// If not timed-out, exit if not stopped or not aborted; // (player exits status is finished in such a case); otherwise,; // we still need to collect the partial output info",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:16,Safety,timeout,timeout,16,"// Decrease the timeout counter if requested",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:21,Performance,concurren,concurrent,21,"// Maximum number of concurrent sendings",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:24,Energy Efficiency,monitor,monitors,24,"// end loop over active monitors; // If timed-out, deactivate the remaining sockets",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:38,Safety,timeout,timeout,38,"// Notify the name of those which did timeout",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:15,Energy Efficiency,monitor,monitor,15,"// Restore the monitor",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:221,Availability,error,errors,221,"////////////////////////////////////////////////////////////////////////////////; /// Asks the PROOF Serv for new workers in Dynamic Startup mode and activates; /// them. Returns the number of new workers found, or <0 on errors.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:23,Deployability,update,updates,23,"// Requests for worker updates",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:106,Availability,avail,available,106,"////////////////////////////////////////////////////////////////////////////////; /// Collect and analyze available input from socket s.; /// Returns 0 on success, -1 if any failure occurs.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:174,Availability,failure,failure,174,"////////////////////////////////////////////////////////////////////////////////; /// Collect and analyze available input from socket s.; /// Returns 0 on success, -1 if any failure occurs.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:33,Energy Efficiency,monitor,monitor,33,"// This message was for the base monitor in recursive case",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:8,Integrability,message,message,8,"// This message was for the base monitor in recursive case",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:204,Availability,failure,failure,204,"////////////////////////////////////////////////////////////////////////////////; /// Analyze the received message.; /// Returns 0 on success (1 if this the last message from this socket), -1 if; /// any failure occurs.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:107,Integrability,message,message,107,"////////////////////////////////////////////////////////////////////////////////; /// Analyze the received message.; /// Returns 0 on success (1 if this the last message from this socket), -1 if; /// any failure occurs.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:162,Integrability,message,message,162,"////////////////////////////////////////////////////////////////////////////////; /// Analyze the received message.; /// Returns 0 on success (1 if this the last message from this socket), -1 if; /// any failure occurs.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:7,Integrability,message,message,7,"// The message type",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Integrability,message,message,11,"// Add the message to the list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Integrability,message,message,11,"// Add the message to the list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:40,Availability,failure,failure,40,"// Form old servers this meant success (failure was signaled with the; // dangerous kPROOF_FATAL)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:7,Usability,clear,clear,7,"// And clear the output list, as we start merging a new set of results",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:81,Availability,avail,available,81,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:109,Energy Efficiency,monitor,monitoring,109,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update the merger progress info",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:6,Safety,avoid,avoid,6,"// To avoid accidental cleanups from anywhere else; // remove objects from gDirectory and clone the list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:17,Integrability,message,message,17,"// Just send the message one level up",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:17,Integrability,message,message,17,"// Just send the message one level up",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:23,Modifiability,variab,variable,23,"// For Proof-Lite this variable is the number of workers and is set; // by the player",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:116,Deployability,update,update,116,"// The signal is used on masters by XrdProofdProtocol to catch; // the start of processing; on clients it allows to update the; // progress dialog",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:23,Modifiability,variab,variable,23,"// For Proof-Lite this variable is the number of workers and is set by the player",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:8,Integrability,message,message,8,"// This message is sent from a worker that finished processing.; // We determine whether it was asked to finish by the; // packetizer or stopped during processing a packet; // (by TProof::RemoveWorkers() or by an external signal).; // In the later case call packetizer->MarkBad.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:15,Availability,ping,ping,15,"// do nothing (ping is already acknowledged)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:54,Testability,log,logs,54,"// Notify locally taking care of redirection, windows logs, ...",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:7,Integrability,message,message,7,"// The message is logged for debugging purposes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:18,Testability,log,logged,18,"// The message is logged for debugging purposes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:16,Integrability,message,message,16,"// And send the message one level up",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:96,Integrability,message,message,96,"////////////////////////////////////////////////////////////////////////////////; /// Process a message of type kPROOF_SUBMERGER",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Integrability,Message,Message,3,"// Message sub-type",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update merger counters (new workers are not yet active)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:92,Deployability,update,update,92,"////////////////////////////////////////////////////////////////////////////////; /// Final update of the progress dialog",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Safety,abort,abort,10,"// Handle abort ...",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:9,Deployability,update,update,9,"// Final update of the dialog box",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:41,Usability,simpl,simply,41,"// Number of pure workers, which are not simply divisible by mergers",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:188,Energy Efficiency,monitor,monitor,188,"////////////////////////////////////////////////////////////////////////////////; /// Add a bad slave server to the bad slave list and remove it from; /// the active list and from the two monitor objects. Assume that the work; /// done by this worker was lost and ask packerizer to reassign it.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Integrability,Message,Message,3,"// Message for notification",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:81,Availability,avail,available,81,"// we add it to the list of terminated slave infos instead, so that it; // stays available in the .workers persistent file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update the mergers count, if needed",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update session workers files",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:189,Energy Efficiency,monitor,monitor,189,"////////////////////////////////////////////////////////////////////////////////; /// Add slave with socket s to the bad slave list and remove if from; /// the active list and from the two monitor objects.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:13,Integrability,message,message,13,"// Send stop message",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Availability,Ping,Ping,86,"////////////////////////////////////////////////////////////////////////////////; /// Ping PROOF. Returns 1 if master server responded.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Availability,Ping,Ping,86,"////////////////////////////////////////////////////////////////////////////////; /// Ping PROOF slaves. Returns the number of slaves that responded.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Availability,Ping,Ping,86,"////////////////////////////////////////////////////////////////////////////////; /// Ping PROOF slaves. Returns the number of slaves that responded.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1759,Availability,error,error,1759,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt information about output handling settings.; /// The understood keywords are:; /// of=`<file>`, outfile=`<file>` output file location; /// ds=`<dsname>`, dataset=`<dsname>` dataset name ('of' and 'ds' are; /// mutually exclusive,execution stops; /// if both are found); /// sft[=`<opt>`], savetofile[=`<opt>`] control saving to file; ///; /// For 'mvf', the `<opt>` integer has the following meaning:; /// `<opt>` = `<how>`*10 + `<force>`; /// `<force>` = 0 save to file if memory threshold is reached; /// (the memory threshold is set by the cluster; /// admin); in case an output file is defined, the; /// files are merged at the end;; /// 1 save results to file.; /// `<how>` = 0 save at the end of the query; /// 1 save results after each packet (to reduce the; /// loss in case of crash).; ///; /// Setting 'ds' automatically sets 'mvf=1'; it is still possible to set 'mvf=11'; /// to save results after each packet.; ///; /// The separator from the next option is either a ' ' or a ';'; ///; /// All recognized settings are removed from the input string opt.; /// If action == 0, set up the output file accordingly, if action == 1 clean related; /// output file settings.; /// If the final target file is local then 'target' is set to the final local path; /// when action == 0 and used to retrieve the file with TFile::Cp when action == 1.; ///; /// Output file settings are in the form; ///; /// `<previous_option>`of=name `<next_option>`; /// `<previous_option>`outfile=name,...;`<next_option>`; ///; /// The separator from the next option is either a ' ' or a ';'; /// Called interanally by TProof::Process.; ///; /// Returns 0 on success, -1 on error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:857,Energy Efficiency,reduce,reduce,857,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt information about output handling settings.; /// The understood keywords are:; /// of=`<file>`, outfile=`<file>` output file location; /// ds=`<dsname>`, dataset=`<dsname>` dataset name ('of' and 'ds' are; /// mutually exclusive,execution stops; /// if both are found); /// sft[=`<opt>`], savetofile[=`<opt>`] control saving to file; ///; /// For 'mvf', the `<opt>` integer has the following meaning:; /// `<opt>` = `<how>`*10 + `<force>`; /// `<force>` = 0 save to file if memory threshold is reached; /// (the memory threshold is set by the cluster; /// admin); in case an output file is defined, the; /// files are merged at the end;; /// 1 save results to file.; /// `<how>` = 0 save at the end of the query; /// 1 save results after each packet (to reduce the; /// loss in case of crash).; ///; /// Setting 'ds' automatically sets 'mvf=1'; it is still possible to set 'mvf=11'; /// to save results after each packet.; ///; /// The separator from the next option is either a ' ' or a ';'; ///; /// All recognized settings are removed from the input string opt.; /// If action == 0, set up the output file accordingly, if action == 1 clean related; /// output file settings.; /// If the final target file is local then 'target' is set to the final local path; /// when action == 0 and used to retrieve the file with TFile::Cp when action == 1.; ///; /// Output file settings are in the form; ///; /// `<previous_option>`of=name `<next_option>`; /// `<previous_option>`outfile=name,...;`<next_option>`; ///; /// The separator from the next option is either a ' ' or a ';'; /// Called interanally by TProof::Process.; ///; /// Returns 0 on success, -1 on error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:336,Availability,avail,available,336,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:137,Usability,feedback,feedback,137,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:161,Usability,Feedback,Feedback,161,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:237,Usability,feedback,feedback,237,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:293,Usability,feedback,feedback,293,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:376,Usability,Feedback,Feedback,376,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:502,Usability,feedback,feedback,502,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:591,Usability,feedback,feedback,591,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:312,Availability,error,error,312,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector (.C) file or; /// Tselector object; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Usability,feedback,feedback,10,"// Enable feedback, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Performance,queue,queued,11,"// Already queued or processing queries: switch to asynchronous mode",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update the query content",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Usability,feedback,feedback,11,"// Disable feedback, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:12,Performance,perform,performance,12,"// Save the performance info, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:395,Availability,error,error,395,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TFileCollection) using the specified selector (.C) file; /// or TSelector object.; /// The default tree is analyzed (i.e. the first one found). To specify another; /// tree, the default tree can be changed using TFileCollection::SetDefaultMetaData .; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:6,Safety,avoid,avoid,6,"// To avoid problems in future; // Cleanup",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:2961,Availability,error,error,2961,"// event selection.; /// It is also possible (starting w/ version 5.27/02) to run on multiple datasets; /// at once in a more flexible way that the one provided by wildcarding. There; /// are three possibilities:; /// 1) specifying the dataset names separated by the OR operator '|', e.g.; /// dsetname = ""<dset1>|<dset2>|<dset3>|...""; /// in this case the datasets are a seen as a global unique dataset; /// 2) specifying the dataset names separated by a ',' or a ' ', e.g.; /// dsetname = ""<dset1>,<dset2> <dset3>,...""; /// in this case the datasets are processed one after the other and the; /// selector is notified when switching dataset via a bit in the current; /// processed element.; /// 3) giving the path of a textfile where the dataset names are specified; /// on one or multiple lines; the lines found are joined as in 1), unless; /// the filepath is followed by a ',' (i.e. p->Process(""datasets.txt,"",...); /// with the dataset names listed in 'datasets.txt') in which case they are; /// treated as in 2); the file is open in raw mode with TFile::Open and; /// therefore it cane be remote, e.g. on a Web server.; /// Each `<dsetj>` has the format specified above for the single dataset processing,; /// included wildcarding (the name of the tree and subdirectory must be same for; /// all the datasets).; /// In the case of multiple datasets, 'elist' is treated a global entry list.; /// It is possible to specify per-dataset entry lists using the syntax; /// ""mydset[#adir/[T]]?enl=entrylist""; /// or; /// ""mydset[#adir/[T]]<<entrylist""; /// Here 'entrylist' is a tag identifying, in the order :; /// i. a named entry-list in the input list or in the input data list; /// ii. a named entry-list in memory (in gDirectory); /// iii. the path of a file containing the entry-list to be used; /// In the case ii) and iii) the entry-list object(s) is(are) added to the input; /// data list.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1148,Modifiability,flexible,flexible,1148,"'dsetname'.; /// The syntax for dsetname is name[#[dir/]objname], e.g.; /// ""mydset"" analysis of the first tree in the top dir of the dataset; /// named ""mydset""; /// ""mydset#T"" analysis tree ""T"" in the top dir of the dataset; /// named ""mydset""; /// ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset; /// named ""mydset""; /// ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the; /// dataset named ""mydset""; /// The component 'name' in its more general form contains also the group and; /// user name following ""/<group>/<user>/<dsname>"". Each of these components; /// can contain one or more wildcards '*', in which case all the datasets matching; /// the expression are added together as a global dataset (wildcard support has; /// been added in version 5.27/02).; /// The last argument 'elist' specifies an entry- or event-list to be used as; /// event selection.; /// It is also possible (starting w/ version 5.27/02) to run on multiple datasets; /// at once in a more flexible way that the one provided by wildcarding. There; /// are three possibilities:; /// 1) specifying the dataset names separated by the OR operator '|', e.g.; /// dsetname = ""<dset1>|<dset2>|<dset3>|...""; /// in this case the datasets are a seen as a global unique dataset; /// 2) specifying the dataset names separated by a ',' or a ' ', e.g.; /// dsetname = ""<dset1>,<dset2> <dset3>,...""; /// in this case the datasets are processed one after the other and the; /// selector is notified when switching dataset via a bit in the current; /// processed element.; /// 3) giving the path of a textfile where the dataset names are specified; /// on one or multiple lines; the lines found are joined as in 1), unless; /// the filepath is followed by a ',' (i.e. p->Process(""datasets.txt,"",...); /// with the dataset names listed in 'datasets.txt') in which case they are; /// treated as in 2); the file is open in raw mode with TFile::Open and; /// therefore it cane be remote, e.g. on a Web serv",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:16,Availability,failure,failure,16,"// We fail if a failure occured",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:41,Availability,avail,available,41,"// Add to the input list (input data not available on master where; // this info will be processed)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:41,Availability,avail,available,41,"// Add to the input list (input data not available on master where; // this info will be processed)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:269,Availability,error,error,269,"////////////////////////////////////////////////////////////////////////////////; /// Generic (non-data based) selector processing: the Process() method of the; /// specified selector (.C) or TSelector object is called 'n' times.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:285,Availability,error,error,285,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector object.; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:366,Availability,error,error,366,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TFileCollection) using the specified selector object; /// The default tree is analyzed (i.e. the first one found). To specify another; /// tree, the default tree can be changed using TFileCollection::SetDefaultMetaData .; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:244,Availability,error,error,244,"////////////////////////////////////////////////////////////////////////////////; /// Generic (non-data based) selector processing: the Process() method of the; /// specified selector is called 'n' times.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:325,Availability,error,error,325,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the qry-th query in fQueries.; /// If force, force retrieval if the query is found in the local list; /// but has already been finalized (default kFALSE).; /// If query < 0, finalize current query.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:319,Availability,error,error,319,"////////////////////////////////////////////////////////////////////////////////; /// Finalize query with reference ref.; /// If force, force retrieval if the query is found in the local list; /// but has already been finalized (default kFALSE).; /// If ref = 0, finalize current query.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update query status",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:269,Availability,error,error,269,"////////////////////////////////////////////////////////////////////////////////; /// Execute the specified drawing action on a data set (TDSet).; /// Event- or Entry-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// Returns -1 in case of error or number of selected events otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:758,Availability,error,error,758,"////////////////////////////////////////////////////////////////////////////////; /// Execute the specified drawing action on a data set which is stored on the; /// master with name 'dsetname'.; /// The syntax for dsetname is name[#[dir/]objname], e.g.; /// ""mydset"" analysis of the first tree in the top dir of the dataset; /// named ""mydset""; /// ""mydset#T"" analysis tree ""T"" in the top dir of the dataset; /// named ""mydset""; /// ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset; /// named ""mydset""; /// ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the; /// dataset named ""mydset""; /// The last argument 'enl' specifies an entry- or event-list to be used as; /// event selection.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,Integrability,message,message,103,"////////////////////////////////////////////////////////////////////////////////; /// Send STOPPROCESS message to master and workers.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:74,Safety,abort,aborting,74,"// Stop any blocking 'Collect' request; on masters we do this only if; // aborting; when stopping, we still need to receive the results",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:33,Safety,abort,abort,33,"// Ask slave to progate the stop/abort request",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:99,Integrability,message,message,99,"////////////////////////////////////////////////////////////////////////////////; /// Send GOASYNC message to the master.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:98,Testability,log,log,98,"////////////////////////////////////////////////////////////////////////////////; /// Receive the log file of the slave with socket s.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Integrability,message,messages,10,"// Append messages to active logging unit",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:29,Testability,log,logging,29,"// Append messages to active logging unit",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:19,Testability,log,logs,19,"// If idle restore logs to main session window",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Integrability,message,messages,10,"// Append messages to active logging unit",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:29,Testability,log,logging,29,"// Append messages to active logging unit",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:37,Testability,log,log,37,"// Write to output unit (stdout or a log file)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:15,Integrability,message,message,15,"// Publish the message to the separate window (if the latter is missing; // the message will just get lost)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:80,Integrability,message,message,80,"// Publish the message to the separate window (if the latter is missing; // the message will just get lost)",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:19,Testability,log,logs,19,"// If idle restore logs to main session window",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:92,Integrability,message,message,92,"////////////////////////////////////////////////////////////////////////////////; /// Log a message into the appropriate window by emitting a signal.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Testability,Log,Log,86,"////////////////////////////////////////////////////////////////////////////////; /// Log a message into the appropriate window by emitting a signal.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:153,Integrability,message,messages,153,"// Re-position at the beginning of the file, if requested.; // This is used by the dialog when it re-opens the log window to; // provide all the session messages",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:111,Testability,log,log,111,"// Re-position at the beginning of the file, if requested.; // This is used by the dialog when it re-opens the log window to; // provide all the session messages",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:235,Availability,error,error,235,"////////////////////////////////////////////////////////////////////////////////; /// Send to all active slaves servers the current slave group size; /// and their unique id. Returns number of active slaves.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:401,Availability,error,error,401,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// If plusMaster is kTRUE then exeucte on slaves and master too.; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster. Returns -1 in case of error, >=0 in case of; /// succes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:334,Availability,error,error,334,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster. Returns -1 in case of error, >=0 in case of; /// succes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:50,Availability,avail,available,50,"// check for macro file and make sure the file is available on all slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:485,Availability,error,error,485,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on node of ordinal 'ord' (use ""0"" for master).; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster.; /// If logtomacro is TRUE the text result of the action is saved in the fMacroLog; /// TMacro, accessible via TMacro::GetMacroLog();; /// Returns -1 in case of error, >=0 in case of succes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:420,Security,access,accessible,420,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on node of ordinal 'ord' (use ""0"" for master).; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster.; /// If logtomacro is TRUE the text result of the action is saved in the fMacroLog; /// TMacro, accessible via TMacro::GetMacroLog();; /// Returns -1 in case of error, >=0 in case of succes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:332,Testability,log,logtomacro,332,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on node of ordinal 'ord' (use ""0"" for master).; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster.; /// If logtomacro is TRUE the text result of the action is saved in the fMacroLog; /// TMacro, accessible via TMacro::GetMacroLog();; /// Returns -1 in case of error, >=0 in case of succes.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Testability,log,log-to-macro-saving,10,"// Honour log-to-macro-saving settings",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:548,Availability,error,error,548,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// Command can be any legal command line command, however commands; /// like "".x file.C"" or "".L file.C"" will not cause the file.C to be; /// transfered to the PROOF cluster. In that case use TProof::Exec().; /// Returns the status send by the remote server as part of the; /// kPROOF_LOGDONE message. Typically this is the return code of the; /// command on the remote side. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:443,Integrability,message,message,443,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// Command can be any legal command line command, however commands; /// like "".x file.C"" or "".L file.C"" will not cause the file.C to be; /// transfered to the PROOF cluster. In that case use TProof::Exec().; /// Returns the status send by the remote server as part of the; /// kPROOF_LOGDONE message. Typically this is the return code of the; /// command on the remote side. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:111,Modifiability,variab,variable,111,"////////////////////////////////////////////////////////////////////////////////; /// Get value of environment variable 'env' on node 'ord'",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:129,Modifiability,variab,variable,129,"////////////////////////////////////////////////////////////////////////////////; /// Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:35,Testability,log,logs,35,"// Exectute the command saving the logs to macro",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:128,Modifiability,variab,variable,128,"////////////////////////////////////////////////////////////////////////////////; /// Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:35,Testability,log,logs,35,"// Exectute the command saving the logs to macro",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:128,Modifiability,variab,variable,128,"////////////////////////////////////////////////////////////////////////////////; /// Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:35,Testability,log,logs,35,"// Exectute the command saving the logs to macro",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:289,Availability,error,error,289,"////////////////////////////////////////////////////////////////////////////////; /// Transfer the current state of the master to the active slave servers.; /// The current state includes: the current working directory, etc.; /// Returns the number of active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:289,Availability,error,error,289,"////////////////////////////////////////////////////////////////////////////////; /// Transfer the current state of the master to the active slave servers.; /// The current state includes: the current working directory, etc.; /// Returns the number of active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:282,Availability,error,error,282,"////////////////////////////////////////////////////////////////////////////////; /// Transfer the initial (i.e. current) state of the master to all; /// slave servers. Currently the initial state includes: log level.; /// Returns the number of active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:207,Testability,log,log,207,"////////////////////////////////////////////////////////////////////////////////; /// Transfer the initial (i.e. current) state of the master to all; /// slave servers. Currently the initial state includes: log level.; /// Returns the number of active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:593,Modifiability,sandbox,sandbox,593,"////////////////////////////////////////////////////////////////////////////////; /// Check if a file needs to be send to the slave. Use the following; /// algorithm:; /// - check if file appears in file map; /// - if yes, get file's modtime and check against time in map,; /// if modtime not same get md5 and compare against md5 in map,; /// if not same return kTRUE.; /// - if no, get file's md5 and modtime and store in file map, ask; /// slave if file exists with specific md5, if yes return kFALSE,; /// if no return kTRUE.; /// The options 'cpopt' define if to copy things from cache to sandbox and what.; /// To retrieve from the cache the binaries associated with the file TProof::kCpBin; /// must be set in cpopt; the default is copy everything.; /// Returns kTRUE in case file needs to be send, returns kFALSE in case; /// file is already on remote node.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:584,Performance,cache,cache,584,"////////////////////////////////////////////////////////////////////////////////; /// Check if a file needs to be send to the slave. Use the following; /// algorithm:; /// - check if file appears in file map; /// - if yes, get file's modtime and check against time in map,; /// if modtime not same get md5 and compare against md5 in map,; /// if not same return kTRUE.; /// - if no, get file's md5 and modtime and store in file map, ask; /// slave if file exists with specific md5, if yes return kFALSE,; /// if no return kTRUE.; /// The options 'cpopt' define if to copy things from cache to sandbox and what.; /// To retrieve from the cache the binaries associated with the file TProof::kCpBin; /// must be set in cpopt; the default is copy everything.; /// Returns kTRUE in case file needs to be send, returns kFALSE in case; /// file is already on remote node.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:637,Performance,cache,cache,637,"////////////////////////////////////////////////////////////////////////////////; /// Check if a file needs to be send to the slave. Use the following; /// algorithm:; /// - check if file appears in file map; /// - if yes, get file's modtime and check against time in map,; /// if modtime not same get md5 and compare against md5 in map,; /// if not same return kTRUE.; /// - if no, get file's md5 and modtime and store in file map, ask; /// slave if file exists with specific md5, if yes return kFALSE,; /// if no return kTRUE.; /// The options 'cpopt' define if to copy things from cache to sandbox and what.; /// To retrieve from the cache the binaries associated with the file TProof::kCpBin; /// must be set in cpopt; the default is copy everything.; /// Returns kTRUE in case file needs to be send, returns kFALSE in case; /// file is already on remote node.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:593,Testability,sandbox,sandbox,593,"////////////////////////////////////////////////////////////////////////////////; /// Check if a file needs to be send to the slave. Use the following; /// algorithm:; /// - check if file appears in file map; /// - if yes, get file's modtime and check against time in map,; /// if modtime not same get md5 and compare against md5 in map,; /// if not same return kTRUE.; /// - if no, get file's md5 and modtime and store in file map, ask; /// slave if file exists with specific md5, if yes return kFALSE,; /// if no return kTRUE.; /// The options 'cpopt' define if to copy things from cache to sandbox and what.; /// To retrieve from the cache the binaries associated with the file TProof::kCpBin; /// must be set in cpopt; the default is copy everything.; /// Returns kTRUE in case file needs to be send, returns kFALSE in case; /// file is already on remote node.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:279,Modifiability,sandbox,sandbox,279,"// When on the master, the master and/or slaves may share; // their file systems and cache. Therefore always make a; // check for the file. If the file already exists with the; // expected md5 the kPROOF_CHECKFILE command will cause the; // file to be copied from cache to slave sandbox.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:85,Performance,cache,cache,85,"// When on the master, the master and/or slaves may share; // their file systems and cache. Therefore always make a; // check for the file. If the file already exists with the; // expected md5 the kPROOF_CHECKFILE command will cause the; // file to be copied from cache to slave sandbox.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:264,Performance,cache,cache,264,"// When on the master, the master and/or slaves may share; // their file systems and cache. Therefore always make a; // check for the file. If the file already exists with the; // expected md5 the kPROOF_CHECKFILE command will cause the; // file to be copied from cache to slave sandbox.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:279,Testability,sandbox,sandbox,279,"// When on the master, the master and/or slaves may share; // their file systems and cache. Therefore always make a; // check for the file. If the file already exists with the; // expected md5 the kPROOF_CHECKFILE command will cause the; // file to be copied from cache to slave sandbox.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:264,Availability,error,error,264,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:552,Availability,mask,mask,552,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:813,Availability,down,downloaded,813,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:458,Modifiability,sandbox,sandbox,458,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:397,Performance,cache,cache,397,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:437,Performance,cache,cache,437,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:487,Performance,cache,cache,487,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:526,Performance,cache,cache,526,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:868,Performance,cache,cache,868,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1129,Performance,cache,cache,1129,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1222,Performance,cache,cache,1222,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:458,Testability,sandbox,sandbox,458,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:13,Availability,failure,failure,13,"// We return failure is at least one unique worker failed",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:223,Availability,error,error,223,"////////////////////////////////////////////////////////////////////////////////; /// Sends an object to master and workers and expect them to send back a; /// message with the output of its TObject::Print(). Returns -1 on error, the; /// number of workers that received the objects on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:160,Integrability,message,message,160,"////////////////////////////////////////////////////////////////////////////////; /// Sends an object to master and workers and expect them to send back a; /// message with the output of its TObject::Print(). Returns -1 on error, the; /// number of workers that received the objects on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:142,Availability,echo,echo,142,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:225,Availability,Echo,Echo,225,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:277,Availability,error,error,277,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:180,Integrability,message,message,180,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:329,Integrability,message,message,329,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:190,Availability,error,error,190,"////////////////////////////////////////////////////////////////////////////////; /// Send object to master or slave servers. Returns number of slaves object; /// was sent to, -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:196,Availability,error,error,196,"////////////////////////////////////////////////////////////////////////////////; /// Send print command to master server. Returns number of slaves message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:148,Integrability,message,message,148,"////////////////////////////////////////////////////////////////////////////////; /// Send print command to master server. Returns number of slaves message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:97,Testability,log,logging,97,"////////////////////////////////////////////////////////////////////////////////; /// Set server logging level.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:299,Energy Efficiency,monitor,monitoring,299,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:165,Integrability,message,messages,165,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:335,Integrability,depend,depending,335,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:417,Performance,load,load,417,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:114,Testability,log,logging,114,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:161,Testability,log,log,161,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:362,Testability,log,log,362,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:210,Availability,avail,available,210,"////////////////////////////////////////////////////////////////////////////////; /// Tell PROOF how many slaves to use in parallel. If random is TRUE a random; /// selection is done (if nodes is less than the available nodes).; /// Returns the number of parallel slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:294,Availability,error,error,294,"////////////////////////////////////////////////////////////////////////////////; /// Tell PROOF how many slaves to use in parallel. If random is TRUE a random; /// selection is done (if nodes is less than the available nodes).; /// Returns the number of parallel slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:199,Availability,error,error,199,"////////////////////////////////////////////////////////////////////////////////; /// Tell PROOF how many slaves to use in parallel. Returns the number of; /// parallel slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:315,Availability,error,error,315,"////////////////////////////////////////////////////////////////////////////////; /// Add nWorkersToAdd workers to current list of workers. This function is; /// works on the master only, and only when an analysis is ongoing. A message; /// is sent back to the client when we go ""more"" parallel.; /// Returns -1 on error, number of total (not added!) workers on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:228,Integrability,message,message,228,"////////////////////////////////////////////////////////////////////////////////; /// Add nWorkersToAdd workers to current list of workers. This function is; /// works on the master only, and only when an analysis is ongoing. A message; /// is sent back to the client when we go ""more"" parallel.; /// Returns -1 on error, number of total (not added!) workers on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:81,Testability,log,log,81,"// Notify the client that we've got more workers, and print info on; // Master's log as well",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:358,Availability,avail,available,358,"////////////////////////////////////////////////////////////////////////////////; /// Go in parallel mode with at most ""nodes"" slaves. Since the fSlaves; /// list is sorted by slave performace the active list will contain first; /// the most performant nodes. Returns the number of active slaves.; /// If random is TRUE, and nodes is less than the number of available workers,; /// a random selection is done.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:437,Availability,error,error,437,"////////////////////////////////////////////////////////////////////////////////; /// Go in parallel mode with at most ""nodes"" slaves. Since the fSlaves; /// list is sorted by slave performace the active list will contain first; /// the most performant nodes. Returns the number of active slaves.; /// If random is TRUE, and nodes is less than the number of available workers,; /// a random selection is done.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:182,Performance,perform,performace,182,"////////////////////////////////////////////////////////////////////////////////; /// Go in parallel mode with at most ""nodes"" slaves. Since the fSlaves; /// list is sorted by slave performace the active list will contain first; /// the most performant nodes. Returns the number of active slaves.; /// If random is TRUE, and nodes is less than the number of available workers,; /// a random selection is done.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:242,Performance,perform,performant,242,"////////////////////////////////////////////////////////////////////////////////; /// Go in parallel mode with at most ""nodes"" slaves. Since the fSlaves; /// list is sorted by slave performace the active list will contain first; /// the most performant nodes. Returns the number of active slaves.; /// If random is TRUE, and nodes is less than the number of available workers,; /// a random selection is done.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:55,Integrability,depend,depends,55,"// Prepare the list of candidates first.; // Algorithm depends on random option.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:13,Availability,avail,available,13,"// The first available",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:129,Modifiability,sandbox,sandbox,129,"////////////////////////////////////////////////////////////////////////////////; /// List contents of the data directory in the sandbox.; /// This is the place where files produced by the client queries are kept",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:129,Testability,sandbox,sandbox,129,"////////////////////////////////////////////////////////////////////////////////; /// List contents of the data directory in the sandbox.; /// This is the place where files produced by the client queries are kept",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Usability,Progress bar,Progress bar,86,"////////////////////////////////////////////////////////////////////////////////; /// Progress bar for clear data",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,Usability,clear,clear,103,"////////////////////////////////////////////////////////////////////////////////; /// Progress bar for clear data",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:108,Performance,cache,cache,108,"////////////////////////////////////////////////////////////////////////////////; /// List contents of file cache. If all is true show all caches also on; /// slaves. If everything is ok all caches are to be the same.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:139,Performance,cache,caches,139,"////////////////////////////////////////////////////////////////////////////////; /// List contents of file cache. If all is true show all caches also on; /// slaves. If everything is ok all caches are to be the same.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:191,Performance,cache,caches,191,"////////////////////////////////////////////////////////////////////////////////; /// List contents of file cache. If all is true show all caches also on; /// slaves. If everything is ok all caches are to be the same.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:112,Performance,cache,caches,112,"////////////////////////////////////////////////////////////////////////////////; /// Remove file from all file caches. If file is 0 or """" or ""*"", remove all; /// the files",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Usability,clear,clear,3,"// clear file map so files get send again to remote nodes",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:328,Availability,avail,available,328,"////////////////////////////////////////////////////////////////////////////////; /// List contents of package directory. If all is true show all package; /// directories also on slaves. If everything is ok all package directories; /// should be the same. If redir is kTRUE the result is redirected to the log; /// file (option available for internal actions).",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:306,Testability,log,log,306,"////////////////////////////////////////////////////////////////////////////////; /// List contents of package directory. If all is true show all package; /// directories also on slaves. If everything is ok all package directories; /// should be the same. If redir is kTRUE the result is redirected to the log; /// file (option available for internal actions).",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Testability,log,logging,10,"// Active logging unit",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Testability,log,logging,11,"// Restore logging option",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Remove all packages.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:165,Availability,error,error,165,"////////////////////////////////////////////////////////////////////////////////; /// Remove a specific package.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:165,Availability,error,error,165,"////////////////////////////////////////////////////////////////////////////////; /// Remove a specific package.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Remove all packages.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:542,Availability,error,error,542,"////////////////////////////////////////////////////////////////////////////////; /// Build specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists on all unique nodes. If opt is kBuildOnSlavesNoWait; /// then submit build command to slaves, but don't wait; /// for results. If opt is kCollectBuildResults then collect result; /// from slaves. To be used on the master.; /// If opt = kBuildAll (default) then submit and wait for results; /// (to be used on the client).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:542,Availability,error,error,542,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:203,Performance,load,load,203,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:254,Performance,load,load,254,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:310,Performance,load,loadopts,310,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:479,Performance,load,loadopts,479,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:164,Availability,error,error,164,"////////////////////////////////////////////////////////////////////////////////; /// Unload specified package.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Unload all packages.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:462,Availability,error,error,462,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.; /// Provided for backward compatibility.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:651,Availability,failure,failure,651,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:952,Availability,error,error,952,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:569,Modifiability,plugin,plugin,569,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:393,Performance,load,loading,393,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:411,Performance,load,loadopts,411,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:672,Performance,load,loading,672,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:536,Availability,error,error,536,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify a list of objects to be passed to the SETUP; /// functions via 'loadopts'; the objects must be streamable.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:441,Performance,load,loadopts,441,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify a list of objects to be passed to the SETUP; /// functions via 'loadopts'; the objects must be streamable.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Availability,Down,Download,86,"////////////////////////////////////////////////////////////////////////////////; /// Download a PROOF archive (PAR file) from the master package repository.; /// The PAR file is downloaded in the current directory or in the directory; /// specified by 'dstdir'. If a package with the same name already exists; /// at destination, a check on the MD5 sum is done and the user warned or; /// prompted for action, depending is the file is equal or different.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:179,Availability,down,downloaded,179,"////////////////////////////////////////////////////////////////////////////////; /// Download a PROOF archive (PAR file) from the master package repository.; /// The PAR file is downloaded in the current directory or in the directory; /// specified by 'dstdir'. If a package with the same name already exists; /// at destination, a check on the MD5 sum is done and the user warned or; /// prompted for action, depending is the file is equal or different.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:508,Availability,error,error,508,"////////////////////////////////////////////////////////////////////////////////; /// Download a PROOF archive (PAR file) from the master package repository.; /// The PAR file is downloaded in the current directory or in the directory; /// specified by 'dstdir'. If a package with the same name already exists; /// at destination, a check on the MD5 sum is done and the user warned or; /// prompted for action, depending is the file is equal or different.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:411,Integrability,depend,depending,411,"////////////////////////////////////////////////////////////////////////////////; /// Download a PROOF archive (PAR file) from the master package repository.; /// The PAR file is downloaded in the current directory or in the directory; /// specified by 'dstdir'. If a package with the same name already exists; /// at destination, a check on the MD5 sum is done and the user warned or; /// prompted for action, depending is the file is equal or different.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1163,Availability,down,download,1163,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1230,Availability,down,downloaded,1230,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1326,Availability,error,error,1326,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:964,Integrability,protocol,protocol,964,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:622,Modifiability,variab,variables,622,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,install,install,3,"// install package and unlock dir",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Availability,error,error,3,"// error -> package should have been found",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:979,Availability,error,error,979,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:218,Deployability,update,updated,218,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:268,Deployability,update,updated,268,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:491,Performance,load,load,491,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:564,Performance,load,loading,564,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:644,Performance,load,loaded,644,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:558,Safety,avoid,avoid,558,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:26,Availability,avail,available,26,"// These files need to be available everywhere, cache and sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:58,Modifiability,sandbox,sandbox,58,"// These files need to be available everywhere, cache and sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:48,Performance,cache,cache,48,"// These files need to be available everywhere, cache and sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:58,Testability,sandbox,sandbox,58,"// These files need to be available everywhere, cache and sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:29,Integrability,message,message,29,"// Add the base names to the message broadcasted",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:53,Performance,load,loading,53,"// The files are now on the workers: now we send the loading request",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Performance,Load,Load,3,"// Load locally, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:27,Performance,load,load,27,"// By first forwarding the load command to the master and workers; // and only then loading locally we load/build in parallel",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:84,Performance,load,loading,84,"// By first forwarding the load command to the master and workers; // and only then loading locally we load/build in parallel",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,Performance,load,load,103,"// By first forwarding the load command to the master and workers; // and only then loading locally we load/build in parallel",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update the macro path",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:52,Performance,load,loaded,52,"// if wrks is specified the macro should already be loaded on the master.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:67,Performance,load,loading,67,"// On master; // The files are now on the workers: now we send the loading request first; // to the unique workers, so that the eventual compilation occurs only once.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:18,Performance,tune,tuned,18,"// We then send a tuned loading request to the other workers",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:24,Performance,load,loading,24,"// We then send a tuned loading request to the other workers",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:52,Performance,load,loaded,52,"// if wrks is specified the macro should already be loaded on the master.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:140,Availability,avail,available,140,"////////////////////////////////////////////////////////////////////////////////; /// Get from the master the list of names of the packages available.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:94,Usability,progress bar,progress bar,94,"////////////////////////////////////////////////////////////////////////////////; /// Print a progress bar on stderr. Used in batch mode.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Usability,Simpl,Simple,3,"// Simple progress bar",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Usability,progress bar,progress bar,10,"// Simple progress bar",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Usability,Simpl,Simple,3,"// Simple progress bar",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Usability,progress bar,progress bar,10,"// Simple progress bar",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Usability,Simpl,Simple,3,"// Simple progress bar",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,Usability,progress bar,progress bar,10,"// Simple progress bar",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:154,Energy Efficiency,monitor,monitor,154,"////////////////////////////////////////////////////////////////////////////////; /// Get list of feedback objects. Connect a slot to this signal; /// to monitor the feedback object.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:98,Usability,feedback,feedback,98,"////////////////////////////////////////////////////////////////////////////////; /// Get list of feedback objects. Connect a slot to this signal; /// to monitor the feedback object.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:166,Usability,feedback,feedback,166,"////////////////////////////////////////////////////////////////////////////////; /// Get list of feedback objects. Connect a slot to this signal; /// to monitor the feedback object.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:99,Integrability,message,message,99,"////////////////////////////////////////////////////////////////////////////////; /// Send startup message.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,Availability,avail,availability,93,"////////////////////////////////////////////////////////////////////////////////; /// Notify availability of a query result.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate a TDSet.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:18,Security,validat,validated,18,"// set dset to be validated in Collect()",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:250,Performance,optimiz,optimized,250,"////////////////////////////////////////////////////////////////////////////////; /// Add data objects that might be needed during the processing of; /// the selector (see Process()). This object can be very large, so they; /// are distributed in an optimized way using a dedicated file.; /// If push is TRUE the input data are sent over even if no apparent change; /// occured to the list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:149,Usability,clear,clear,149,"////////////////////////////////////////////////////////////////////////////////; /// Remove obj form the input data list; if obj is null (default), clear the; /// input data info.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:12,Deployability,update,update,12,"// Flag for update, if anything changed",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear input object list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:14,Usability,feedback,feedback,14,"// the system feedback list is always in the input list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:100,Usability,feedback,feedback,100,"////////////////////////////////////////////////////////////////////////////////; /// Add object to feedback list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:105,Usability,feedback,feedback,105,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from feedback list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear feedback list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:92,Usability,feedback,feedback,92,"////////////////////////////////////////////////////////////////////////////////; /// Clear feedback list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:100,Usability,feedback,feedback,100,"////////////////////////////////////////////////////////////////////////////////; /// Show items in feedback list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,Usability,feedback,feedback,93,"////////////////////////////////////////////////////////////////////////////////; /// Return feedback list.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:158,Integrability,depend,dependency,158,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:141,Safety,avoid,avoids,141,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:121,Security,access,accessed,121,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:91,Usability,feedback,feedback,91,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:95,Usability,feedback,feedback,95,"////////////////////////////////////////////////////////////////////////////////; /// Set draw feedback option.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:98,Usability,feedback,feedback,98,"////////////////////////////////////////////////////////////////////////////////; /// Delete draw feedback object.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:559,Availability,Error,Error,559,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:768,Availability,Error,Error,768,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:934,Availability,Error,Error,934,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:281,Energy Efficiency,monitor,monitor,281,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:968,Integrability,message,message,968,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:161,Integrability,message,messages,161,"////////////////////////////////////////////////////////////////////////////////; /// Ask for remote logs in the range [start, end]. If start == -1 all the; /// messages not yet received are sent back.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:101,Testability,log,logs,101,"////////////////////////////////////////////////////////////////////////////////; /// Ask for remote logs in the range [start, end]. If start == -1 all the; /// messages not yet received are sent back.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:109,Testability,log,log,109,"////////////////////////////////////////////////////////////////////////////////; /// Fill a TMacro with the log lines since the last reading (fLogFileR); /// Return (TMacro *)0 if no line was logged.; /// The returned TMacro must be deleted by the caller.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:193,Testability,log,logged,193,"////////////////////////////////////////////////////////////////////////////////; /// Fill a TMacro with the log lines since the last reading (fLogFileR); /// Return (TMacro *)0 if no line was logged.; /// The returned TMacro must be deleted by the caller.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:22,Testability,log,log,22,"// Perhaps nothing to log",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:94,Testability,log,log,94,"////////////////////////////////////////////////////////////////////////////////; /// Display log of query pq into the log window frame",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:119,Testability,log,log,119,"////////////////////////////////////////////////////////////////////////////////; /// Display log of query pq into the log window frame",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:133,Testability,log,log,133,"////////////////////////////////////////////////////////////////////////////////; /// Display on screen the content of the temporary log file for query; /// in reference",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:166,Integrability,message,messages,166,"////////////////////////////////////////////////////////////////////////////////; /// Display on screen the content of the temporary log file.; /// If qry == -2 show messages from the last (current) query.; /// If qry == -1 all the messages not yet displayed are shown (default).; /// If qry == 0, all the messages in the file are shown.; /// If qry > 0, only the messages related to query 'qry' are shown.; /// For qry != -1 the original file offset is restored at the end",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:232,Integrability,message,messages,232,"////////////////////////////////////////////////////////////////////////////////; /// Display on screen the content of the temporary log file.; /// If qry == -2 show messages from the last (current) query.; /// If qry == -1 all the messages not yet displayed are shown (default).; /// If qry == 0, all the messages in the file are shown.; /// If qry > 0, only the messages related to query 'qry' are shown.; /// For qry != -1 the original file offset is restored at the end",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:306,Integrability,message,messages,306,"////////////////////////////////////////////////////////////////////////////////; /// Display on screen the content of the temporary log file.; /// If qry == -2 show messages from the last (current) query.; /// If qry == -1 all the messages not yet displayed are shown (default).; /// If qry == 0, all the messages in the file are shown.; /// If qry > 0, only the messages related to query 'qry' are shown.; /// For qry != -1 the original file offset is restored at the end",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:364,Integrability,message,messages,364,"////////////////////////////////////////////////////////////////////////////////; /// Display on screen the content of the temporary log file.; /// If qry == -2 show messages from the last (current) query.; /// If qry == -1 all the messages not yet displayed are shown (default).; /// If qry == 0, all the messages in the file are shown.; /// If qry > 0, only the messages related to query 'qry' are shown.; /// For qry != -1 the original file offset is restored at the end",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:133,Testability,log,log,133,"////////////////////////////////////////////////////////////////////////////////; /// Display on screen the content of the temporary log file.; /// If qry == -2 show messages from the last (current) query.; /// If qry == -1 all the messages not yet displayed are shown (default).; /// If qry == 0, all the messages in the file are shown.; /// If qry > 0, only the messages related to query 'qry' are shown.; /// For qry != -1 the original file offset is restored at the end",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:22,Testability,log,log,22,"// Number of bytes to log",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update wanted bytes",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Testability,Log,Log,3,"// Log to window",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Safety,Avoid,Avoid,3,"// Avoid screwing up the prompt",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:18,Integrability,message,messages,18,"// Avoid spurious messages: deactivate new inputs ...",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Safety,Avoid,Avoid,3,"// Avoid spurious messages: deactivate new inputs ...",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Deployability,Update,Update,3,"// Update info in the table of our manager, if any",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:227,Availability,recover,recovered,227,"////////////////////////////////////////////////////////////////////////////////; /// Set an alias for this session. If reconnection is supported, the alias; /// will be communicated to the remote coordinator so that it can be recovered; /// when reconnecting",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:227,Safety,recover,recovered,227,"////////////////////////////////////////////////////////////////////////////////; /// Set an alias for this session. If reconnection is supported, the alias; /// will be communicated to the remote coordinator so that it can be recovered; /// when reconnecting",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:438,Availability,mask,mask,438,"////////////////////////////////////////////////////////////////////////////////; /// *** This function is deprecated and will disappear in future versions ***; /// *** It is just a wrapper around TFile::Cp.; /// *** Please use TProofMgr::UploadFiles.; ///; /// Upload a set of files and save the list of files by name dataSetName.; /// The 'files' argument is a list of TFileInfo objects describing the files; /// as first url.; /// The mask 'opt' is a combination of EUploadOpt:; /// kAppend (0x1) if set true files will be appended to; /// the dataset existing by given name; /// kOverwriteDataSet (0x2) if dataset with given name exited it; /// would be overwritten; /// kNoOverwriteDataSet (0x4) do not overwirte if the dataset exists; /// kOverwriteAllFiles (0x8) overwrite all files that may exist; /// kOverwriteNoFiles (0x10) overwrite none; /// kAskUser (0x0) ask user before overwriteng dataset/files; /// The default value is kAskUser.; /// The user will be asked to confirm overwriting dataset or files unless; /// specified opt provides the answer!; /// If kOverwriteNoFiles is set, then a pointer to TList must be passed as; /// skippedFiles argument. The function will add to this list TFileInfo; /// objects describing all files that existed on the cluster and were; /// not uploaded.; ///; /// Communication Summary; /// Client Master; /// |------------>DataSetName----------->|; /// |<-------kMESS_OK/kMESS_NOTOK<-------| (Name OK/file exist); /// (*)|-------> call RegisterDataSet ------->|; /// (*) - optional",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:182,Integrability,wrap,wrapper,182,"////////////////////////////////////////////////////////////////////////////////; /// *** This function is deprecated and will disappear in future versions ***; /// *** It is just a wrapper around TFile::Cp.; /// *** Please use TProofMgr::UploadFiles.; ///; /// Upload a set of files and save the list of files by name dataSetName.; /// The 'files' argument is a list of TFileInfo objects describing the files; /// as first url.; /// The mask 'opt' is a combination of EUploadOpt:; /// kAppend (0x1) if set true files will be appended to; /// the dataset existing by given name; /// kOverwriteDataSet (0x2) if dataset with given name exited it; /// would be overwritten; /// kNoOverwriteDataSet (0x4) do not overwirte if the dataset exists; /// kOverwriteAllFiles (0x8) overwrite all files that may exist; /// kOverwriteNoFiles (0x10) overwrite none; /// kAskUser (0x0) ask user before overwriteng dataset/files; /// The default value is kAskUser.; /// The user will be asked to confirm overwriting dataset or files unless; /// specified opt provides the answer!; /// If kOverwriteNoFiles is set, then a pointer to TList must be passed as; /// skippedFiles argument. The function will add to this list TFileInfo; /// objects describing all files that existed on the cluster and were; /// not uploaded.; ///; /// Communication Summary; /// Client Master; /// |------------>DataSetName----------->|; /// |<-------kMESS_OK/kMESS_NOTOK<-------| (Name OK/file exist); /// (*)|-------> call RegisterDataSet ------->|; /// (*) - optional",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:341,Availability,mask,mask,341,"////////////////////////////////////////////////////////////////////////////////; /// *** This function is deprecated and will disappear in future versions ***; /// *** It is just a wrapper around TFile::Cp.; /// *** Please use TProofMgr::UploadFiles.; ///; /// Upload a set of files and save the list of files by name dataSetName.; /// The mask 'opt' is a combination of EUploadOpt:; /// kAppend (0x1) if set true files will be appended to; /// the dataset existing by given name; /// kOverwriteDataSet (0x2) if dataset with given name exited it; /// would be overwritten; /// kNoOverwriteDataSet (0x4) do not overwirte if the dataset exists; /// kOverwriteAllFiles (0x8) overwrite all files that may exist; /// kOverwriteNoFiles (0x10) overwrite none; /// kAskUser (0x0) ask user before overwriteng dataset/files; /// The default value is kAskUser.; /// The user will be asked to confirm overwriting dataset or files unless; /// specified opt provides the answer!; /// If kOverwriteNoFiles is set, then a pointer to TList must be passed as; /// skippedFiles argument. The function will add to this list TFileInfo; /// objects describing all files that existed on the cluster and were; /// not uploaded.; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:182,Integrability,wrap,wrapper,182,"////////////////////////////////////////////////////////////////////////////////; /// *** This function is deprecated and will disappear in future versions ***; /// *** It is just a wrapper around TFile::Cp.; /// *** Please use TProofMgr::UploadFiles.; ///; /// Upload a set of files and save the list of files by name dataSetName.; /// The mask 'opt' is a combination of EUploadOpt:; /// kAppend (0x1) if set true files will be appended to; /// the dataset existing by given name; /// kOverwriteDataSet (0x2) if dataset with given name exited it; /// would be overwritten; /// kNoOverwriteDataSet (0x4) do not overwirte if the dataset exists; /// kOverwriteAllFiles (0x8) overwrite all files that may exist; /// kOverwriteNoFiles (0x10) overwrite none; /// kAskUser (0x0) ask user before overwriteng dataset/files; /// The default value is kAskUser.; /// The user will be asked to confirm overwriting dataset or files unless; /// specified opt provides the answer!; /// If kOverwriteNoFiles is set, then a pointer to TList must be passed as; /// skippedFiles argument. The function will add to this list TFileInfo; /// objects describing all files that existed on the cluster and were; /// not uploaded.; ///",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:182,Integrability,wrap,wrapper,182,"////////////////////////////////////////////////////////////////////////////////; /// *** This function is deprecated and will disappear in future versions ***; /// *** It is just a wrapper around TFile::Cp.; /// *** Please use TProofMgr::UploadFiles.; ///; /// Upload files listed in ""file"" to PROOF cluster.; /// Where file = name of file containing list of files and; /// dataset = dataset name and opt is a combination of EUploadOpt bits.; /// Each file description (line) can include wildcards.; /// Check TFileInfo compatibility",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:555,Modifiability,config,configured,555,"////////////////////////////////////////////////////////////////////////////////; /// Register the 'dataSet' on the cluster under the current; /// user, group and the given 'dataSetName'.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// If 'opts' contains 'S' validation would be run serially (meaningful only if; /// validation is required).; /// Returns kTRUE on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:757,Modifiability,config,configured,757,"////////////////////////////////////////////////////////////////////////////////; /// Register the 'dataSet' on the cluster under the current; /// user, group and the given 'dataSetName'.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// If 'opts' contains 'S' validation would be run serially (meaningful only if; /// validation is required).; /// Returns kTRUE on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:810,Security,validat,validation,810,"////////////////////////////////////////////////////////////////////////////////; /// Register the 'dataSet' on the cluster under the current; /// user, group and the given 'dataSetName'.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// If 'opts' contains 'S' validation would be run serially (meaningful only if; /// validation is required).; /// Returns kTRUE on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:868,Security,validat,validation,868,"////////////////////////////////////////////////////////////////////////////////; /// Register the 'dataSet' on the cluster under the current; /// user, group and the given 'dataSetName'.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// If 'opts' contains 'S' validation would be run serially (meaningful only if; /// validation is required).; /// Returns kTRUE on success.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:395,Availability,avail,available,395,"////////////////////////////////////////////////////////////////////////////////; /// Lists all datasets that match given uri.; /// The 'optStr' can contain a comma-separated list of servers for which the; /// information is wanted. If ':lite:' (case insensitive) is specified in 'optStr'; /// only the global information in the TFileCollection is retrieved; useful to only; /// get the list of available datasets.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:119,Performance,cache,cache,119,"////////////////////////////////////////////////////////////////////////////////; /// Clear the content of the dataset cache, if any (matching 'dataset', if defined).",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the content of the dataset cache, if any (matching 'dataset', if defined).",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:121,Performance,cache,cache,121,"////////////////////////////////////////////////////////////////////////////////; /// Display the content of the dataset cache, if any (matching 'dataset', if defined).",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:162,Availability,failure,failure,162,"////////////////////////////////////////////////////////////////////////////////; /// Cancels a dataset staging request. Returns kTRUE on success, kFALSE on; /// failure. Dataset not found equals to a failure.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:201,Availability,failure,failure,201,"////////////////////////////////////////////////////////////////////////////////; /// Cancels a dataset staging request. Returns kTRUE on success, kFALSE on; /// failure. Dataset not found equals to a failure.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:135,Availability,avail,available,135,"////////////////////////////////////////////////////////////////////////////////; /// Verify if all files in the specified dataset are available.; /// Print a list and return the number of missing files.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:231,Availability,error,error,231,"////////////////////////////////////////////////////////////////////////////////; /// Verify if all files in the specified dataset are available.; /// Print a list and return the number of missing files.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:104,Energy Efficiency,monitor,monitor,104,"////////////////////////////////////////////////////////////////////////////////; /// If in active in a monitor set ready state",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:31,Availability,down,down,31,"// Whether to forward one step down",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:14,Security,hash,hash,14,"// Create the hash list of ordinal numbers",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Security,hash,hash,11,"// Cleanup hash list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:32,Availability,down,down,32,"// Forward the request one step down, if needed",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Usability,Clear,Clear,3,"// Clear the current active list",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:597,Modifiability,config,config,597,"////////////////////////////////////////////////////////////////////////////////; /// Start a PROOF session on a specific cluster. If cluster is 0 (the; /// default) then the PROOF Session Viewer GUI pops up and 0 is returned.; /// If cluster is ""lite://"" we start a PROOF-lite session.; /// If cluster is """" (empty string) then we connect to the cluster specified; /// by 'Proof.LocalDefault', defaulting to ""lite://"".; /// If cluster is ""pod://"" (case insensitive), then we connect to a PROOF cluster; /// managed by PROOF on Demand (PoD, http://pod.gsi.de ).; /// Via conffile a specific PROOF config file in the confir directory can be specified.; /// Use loglevel to set the default loging level for debugging.; /// The appropriate instance of TProofMgr is created, if not; /// yet existing. The instantiated TProof object is returned.; /// Use TProof::cd() to switch between PROOF sessions.; /// For more info on PROOF see the TProof ctor.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:660,Testability,log,loglevel,660,"////////////////////////////////////////////////////////////////////////////////; /// Start a PROOF session on a specific cluster. If cluster is 0 (the; /// default) then the PROOF Session Viewer GUI pops up and 0 is returned.; /// If cluster is ""lite://"" we start a PROOF-lite session.; /// If cluster is """" (empty string) then we connect to the cluster specified; /// by 'Proof.LocalDefault', defaulting to ""lite://"".; /// If cluster is ""pod://"" (case insensitive), then we connect to a PROOF cluster; /// managed by PROOF on Demand (PoD, http://pod.gsi.de ).; /// Via conffile a specific PROOF config file in the confir directory can be specified.; /// Use loglevel to set the default loging level for debugging.; /// The appropriate instance of TProofMgr is created, if not; /// yet existing. The instantiated TProof object is returned.; /// Use TProof::cd() to switch between PROOF sessions.; /// For more info on PROOF see the TProof ctor.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:688,Testability,log,loging,688,"////////////////////////////////////////////////////////////////////////////////; /// Start a PROOF session on a specific cluster. If cluster is 0 (the; /// default) then the PROOF Session Viewer GUI pops up and 0 is returned.; /// If cluster is ""lite://"" we start a PROOF-lite session.; /// If cluster is """" (empty string) then we connect to the cluster specified; /// by 'Proof.LocalDefault', defaulting to ""lite://"".; /// If cluster is ""pod://"" (case insensitive), then we connect to a PROOF cluster; /// managed by PROOF on Demand (PoD, http://pod.gsi.de ).; /// Via conffile a specific PROOF config file in the confir directory can be specified.; /// Use loglevel to set the default loging level for debugging.; /// The appropriate instance of TProofMgr is created, if not; /// yet existing. The instantiated TProof object is returned.; /// Use TProof::cd() to switch between PROOF sessions.; /// For more info on PROOF see the TProof ctor.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:26,Integrability,depend,dependents,26,"// Make sure libProof and dependents are loaded and TProof can be created,; // dependents are loaded via the information in the [system].rootmap file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:79,Integrability,depend,dependents,79,"// Make sure libProof and dependents are loaded and TProof can be created,; // dependents are loaded via the information in the [system].rootmap file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:41,Performance,load,loaded,41,"// Make sure libProof and dependents are loaded and TProof can be created,; // dependents are loaded via the information in the [system].rootmap file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:94,Performance,load,loaded,94,"// Make sure libProof and dependents are loaded and TProof can be created,; // dependents are loaded via the information in the [system].rootmap file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:20,Modifiability,variab,variables,20,"// Set the relevant variables",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:151,Availability,failure,failure,151,"////////////////////////////////////////////////////////////////////////////////; /// Get instance of the effective manager for 'url'; /// Return 0 on failure.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Integrability,Wrap,Wrapper,86,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper around TProofMgr::Reset(...).",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:102,Modifiability,variab,variables,102,"////////////////////////////////////////////////////////////////////////////////; /// Get environemnt variables.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,Modifiability,variab,variable,93,"////////////////////////////////////////////////////////////////////////////////; /// Add an variable to the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:129,Modifiability,variab,variables,129,"////////////////////////////////////////////////////////////////////////////////; /// Add an variable to the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:96,Modifiability,variab,variable,96,"////////////////////////////////////////////////////////////////////////////////; /// Remove an variable from the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:134,Modifiability,variab,variables,134,"////////////////////////////////////////////////////////////////////////////////; /// Remove an variable from the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:116,Modifiability,variab,variables,116,"////////////////////////////////////////////////////////////////////////////////; /// Clear the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:57,Testability,log,log,57,"// Do we need to register an additional line for another log?",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:61,Testability,log,log,61,"// Used to eliminate datetime and PID from workdir to obtain log file name",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:81,Testability,log,logfiles,81,"// Eventually loop over the list of gracefully terminated workers: we'll get; // logfiles from those workers as well. They'll be shown with a special; // status of ""2""",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Get the value from the specified parameter from the specified collection.; /// Returns -1 in case of error (i.e. list is 0, parameter does not exist; /// or value type does not match), 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Get the value from the specified parameter from the specified collection.; /// Returns -1 in case of error (i.e. list is 0, parameter does not exist; /// or value type does not match), 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Get the value from the specified parameter from the specified collection.; /// Returns -1 in case of error (i.e. list is 0, parameter does not exist; /// or value type does not match), 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Get the value from the specified parameter from the specified collection.; /// Returns -1 in case of error (i.e. list is 0, parameter does not exist; /// or value type does not match), 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Get the value from the specified parameter from the specified collection.; /// Returns -1 in case of error (i.e. list is 0, parameter does not exist; /// or value type does not match), 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:285,Availability,error,error,285,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that dataset is in the form to be processed. This may mean; /// retrieving the relevant info from the dataset manager or from the; /// attached input list.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:16,Integrability,message,message,16,"// The received message included an empty dataset, with only the name; // defined: assume that a dataset, stored on the PROOF master by that; // name, should be processed.",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,Modifiability,variab,variable,93,"//; // At this point the dataset(s) to be processed, if any, are found in the; // ""datasets"" variable; //",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Testability,Log,Logic,3,"// Logic for the subdir/obj names: try first to see if the dataset name contains; // some info; if not check the settings in the TDSet object itself; if still empty; // check the default tree name / path in the TFileCollection object; if still empty; // use the default as the flow will determine",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:132,Modifiability,sandbox,sandbox,132,"////////////////////////////////////////////////////////////////////////////////; /// Save input data file from 'cachedir' into the sandbox or create a the file; /// with input data objects",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:113,Performance,cache,cachedir,113,"////////////////////////////////////////////////////////////////////////////////; /// Save input data file from 'cachedir' into the sandbox or create a the file; /// with input data objects",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:132,Testability,sandbox,sandbox,132,"////////////////////////////////////////////////////////////////////////////////; /// Save input data file from 'cachedir' into the sandbox or create a the file; /// with input data objects",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,Performance,cache,cache,11,"// If from cache, just move the cache file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:32,Performance,cache,cache,32,"// If from cache, just move the cache file",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:22,Availability,avail,available,22,"// PROOF session must available",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:124,Modifiability,plugin,plugin,124,"////////////////////////////////////////////////////////////////////////////////; /// Start the log viewer window usign the plugin manager",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:96,Testability,log,log,96,"////////////////////////////////////////////////////////////////////////////////; /// Start the log viewer window usign the plugin manager",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:15,Modifiability,plug-in,plug-in,15,"// Execute the plug-in",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:115,Performance,perform,performance,115,"////////////////////////////////////////////////////////////////////////////////; /// Enable/Disable saving of the performance tree",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:238,Availability,error,error,238,"////////////////////////////////////////////////////////////////////////////////; /// Save performance information from TPerfStats to file 'pf'.; /// If 'ref' is defined, do it for query 'ref'.; /// Return 0 on sucecss, -1 in case of any error",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:91,Performance,perform,performance,91,"////////////////////////////////////////////////////////////////////////////////; /// Save performance information from TPerfStats to file 'pf'.; /// If 'ref' is defined, do it for query 'ref'.; /// Return 0 on sucecss, -1 in case of any error",MatchSource.CODE_COMMENT,proof/proof/src/TProof.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:150,Availability,error,error,150,"////////////////////////////////////////////////////////////////////////////////; /// Forwards the execution to the TDSet.; /// Returns -1 in case of error or number of selected events in case of success.; /// See TDSet::Browse().",MatchSource.CODE_COMMENT,proof/proof/src/TProofChain.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:150,Availability,error,error,150,"////////////////////////////////////////////////////////////////////////////////; /// Forwards the execution to the TDSet.; /// Returns -1 in case of error or number of selected events in case of success.; /// See TDSet::Browse().",MatchSource.CODE_COMMENT,proof/proof/src/TProofChain.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:162,Availability,error,error,162,"////////////////////////////////////////////////////////////////////////////////; /// Forwards the execution to the TDSet.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; /// See TDSet::Process().",MatchSource.CODE_COMMENT,proof/proof/src/TProofChain.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:120,Availability,error,error,120,"////////////////////////////////////////////////////////////////////////////////; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProofChain.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:86,Deployability,Release,Releases,86,"////////////////////////////////////////////////////////////////////////////////; /// Releases PROOF. Disconnect the ""progress"" signal.",MatchSource.CODE_COMMENT,proof/proof/src/TProofChain.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:743,Integrability,message,messages,743,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 13/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TProof //; // //; // This class controls a Parallel ROOT Facility, PROOF, cluster. //; // It fires the slave servers, it keeps track of how many slaves are //; // running, it keeps track of the slaves running status, it broadcasts //; // messages to all slaves, it collects results, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:28,Modifiability,config,config,28,"// startup all slaves if no config file given",MatchSource.CODE_COMMENT,proof/proof/src/TProofCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:9,Modifiability,config,config,9,"// parse config file",MatchSource.CODE_COMMENT,proof/proof/src/TProofCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:3,Deployability,Update,Update,3,"// Update the global file name (with path)",MatchSource.CODE_COMMENT,proof/proof/src/TProofCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:19,Modifiability,config,config,19,"// end else (parse config file)",MatchSource.CODE_COMMENT,proof/proof/src/TProofCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:97,Usability,resume,resume,97,"////////////////////////////////////////////////////////////////////////////////; /// Suspend or resume PROOF via Condor.",MatchSource.CODE_COMMENT,proof/proof/src/TProofCondor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofDebug.cxx:544,Testability,log,logging,544,"// @(#)root/proof:$Id$; // Author: Maarten Ballintijn 19/6/2002; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TProofDebug //; // //; // Detailed logging / debug scheme. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofDebug.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofDebug.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:527,Deployability,configurat,configurations,527,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:414,Modifiability,config,config,414,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:527,Modifiability,config,configurations,527,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:611,Modifiability,config,config,611,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:761,Modifiability,config,config,761,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:698,Testability,Log,Loglevel,698,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:714,Testability,log,log,714,"// Unitialized max number of workers; ////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Integrability,Protocol,Protocol,3,"// Protocol and Host",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:12,Testability,log,logon,12,"// Get user logon name",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:114,Availability,avail,available,114,"// Determine the number of workers giving priority to users request.; // Otherwise use the system information, if available, or just start; // the minimal number, i.e. 2 .",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:434,Availability,error,error,434,"////////////////////////////////////////////////////////////////////////////////; /// Start the PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). For a description; /// of the arguments see the TProof ctor. Returns the number of started; /// master or slave servers, returns 0 in case of error, in which case; /// fValid remains false.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:7,Modifiability,sandbox,sandbox,7,"// The sandbox for this session",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:7,Testability,sandbox,sandbox,7,"// The sandbox for this session",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Safety,Timeout,Timeout,3,"// Timeout for some collect actions",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:21,Integrability,message,messages,21,"// Client logging of messages from the workers",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:10,Testability,log,logging,10,"// Client logging of messages from the workers",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:30,Performance,perform,performance,30,"// Sort workers by descending performance index",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:89,Availability,avail,available,89,"// Control how to start the workers; copy-on-write (fork) is *very*; // experimental and available on Unix only.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:15,Energy Efficiency,monitor,monitor,15,"// De-activate monitor (will be activated in Collect)",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:215,Availability,avail,available,215,"////////////////////////////////////////////////////////////////////////////////; /// Static method to determine the number of workers giving priority to users request.; /// Otherwise use the system information, if available, or just start; /// the minimal number, i.e. 2 .",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:12,Energy Efficiency,monitor,monitor,12,"// Create a monitor and add the socket to it",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:95,Integrability,message,message,95,"// Set fParallel to 1 for workers since they do not; // report their fParallel with a LOG_DONE message",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Energy Efficiency,Monitor,Monitor,3,"// Monitor good workers",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:15,Energy Efficiency,monitor,monitor,15,"// Cleanup the monitor and the server socket",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Deployability,Update,Update,3,"// Update group view",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:114,Integrability,message,message,114,"////////////////////////////////////////////////////////////////////////////////; /// Notify setting-up operation message",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:27,Integrability,depend,depends,27,"// The session working dir depends on the role",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Testability,Log,Log,3,"// Log / Debug level",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Performance,Cache,Cache,3,"// Cache dir",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:10,Integrability,Protocol,Protocol,10,"// Client Protocol",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Testability,Log,Log,3,"// Log file in the log dir",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:19,Testability,log,log,19,"// Log file in the log dir",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:122,Testability,log,logfilewrk,122,"////////////////////////////////////////////////////////////////////////////////; /// Resolve some keywords in 's'; /// `<logfilewrk>`, `<user>`, `<rootsys>`, `<cpupin>`",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Testability,Log,Log,3,"// Log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:97,Modifiability,sandbox,sandbox,97,"////////////////////////////////////////////////////////////////////////////////; /// Create the sandbox for this session",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:97,Testability,sandbox,sandbox,97,"////////////////////////////////////////////////////////////////////////////////; /// Create the sandbox for this session",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:17,Modifiability,sandbox,sandbox,17,"// Make sure the sandbox area exist and is writable",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:17,Testability,sandbox,sandbox,17,"// Make sure the sandbox area exist and is writable",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Performance,Cache,Cache,3,"// Cache Dir",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:46,Modifiability,sandbox,sandbox,46,"// Subpath for this session in the fSandbox (<sandbox>/path-to-working-dir)",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:46,Testability,sandbox,sandbox,46,"// Subpath for this session in the fSandbox (<sandbox>/path-to-working-dir)",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:11,Modifiability,sandbox,sandbox,11,"// USe the sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:11,Testability,sandbox,sandbox,11,"// USe the sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:34,Testability,log,log,34,"// Record current position in the log file at start",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:22,Testability,log,logs,22,"// Add some header to logs",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:21,Performance,load,loaded,21,"// Build the list of loaded PAR packages",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:269,Availability,error,error,269,"////////////////////////////////////////////////////////////////////////////////; /// Execute the specified drawing action on a data set (TDSet).; /// Event- or Entry-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// Returns -1 in case of error or number of selected events otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:21,Modifiability,variab,variables,21,"// Fill the internal variables",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:288,Availability,error,error,288,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector (.C) file.; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:10,Usability,feedback,feedback,10,"// Enable feedback, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:37,Availability,avail,available,37,"// Make sure the unique query tag is available as TNamed object in the; // input list so that it can be used in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:127,Energy Efficiency,monitor,monitoring,127,"// Make sure the unique query tag is available as TNamed object in the; // input list so that it can be used in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Deployability,Update,Update,3,"// Update the query content",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:11,Usability,feedback,feedback,11,"// Disable feedback, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:76,Safety,avoid,avoid,76,"// Save the data set into the TQueryResult (should be done after Process to avoid; // improper deletion during collection)",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:10,Safety,abort,aborted,10,"// Remove aborted queries from the list",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:12,Performance,perform,performance,12,"// Save the performance info, if required",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:182,Availability,failure,failure,182,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the dataset manager from directives or from defaults; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:32,Modifiability,plug-in,plug-in,32,"// Dataset manager instance via plug-in",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:7,Modifiability,plugin,plugin,7,"// Get plugin manager to load the appropriate TDataSetManager",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:25,Performance,load,load,25,"// Get plugin manager to load the appropriate TDataSetManager",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:26,Modifiability,sandbox,sandbox,26,"// Use the default in the sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:26,Testability,sandbox,sandbox,26,"// Use the default in the sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:108,Performance,cache,cache,108,"////////////////////////////////////////////////////////////////////////////////; /// List contents of file cache. If all is true show all caches also on; /// slaves. If everything is ok all caches are to be the same.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:139,Performance,cache,caches,139,"////////////////////////////////////////////////////////////////////////////////; /// List contents of file cache. If all is true show all caches also on; /// slaves. If everything is ok all caches are to be the same.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:191,Performance,cache,caches,191,"////////////////////////////////////////////////////////////////////////////////; /// List contents of file cache. If all is true show all caches also on; /// slaves. If everything is ok all caches are to be the same.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:113,Performance,cache,caches,113,"////////////////////////////////////////////////////////////////////////////////; /// Remove files from all file caches.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:374,Availability,error,error,374,"////////////////////////////////////////////////////////////////////////////////; /// Copy the specified macro in the cache directory. The macro file is; /// uploaded if new or updated. If existing, the corresponding header; /// basename(macro).h or .hh, is also uploaded. For the other arguments; /// see TProof::Load().; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:177,Deployability,update,updated,177,"////////////////////////////////////////////////////////////////////////////////; /// Copy the specified macro in the cache directory. The macro file is; /// uploaded if new or updated. If existing, the corresponding header; /// basename(macro).h or .hh, is also uploaded. For the other arguments; /// see TProof::Load().; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:118,Performance,cache,cache,118,"////////////////////////////////////////////////////////////////////////////////; /// Copy the specified macro in the cache directory. The macro file is; /// uploaded if new or updated. If existing, the corresponding header; /// basename(macro).h or .hh, is also uploaded. For the other arguments; /// see TProof::Load().; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:314,Performance,Load,Load,314,"////////////////////////////////////////////////////////////////////////////////; /// Copy the specified macro in the cache directory. The macro file is; /// uploaded if new or updated. If existing, the corresponding header; /// basename(macro).h or .hh, is also uploaded. For the other arguments; /// see TProof::Load().; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:550,Availability,mask,mask,550,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:748,Availability,error,error,748,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:152,Performance,cache,cache,152,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:496,Performance,load,load,496,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:623,Performance,cache,cache,623,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:716,Performance,cache,cache,716,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Deployability,Update,Update,3,"// Update the macro path",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:39,Performance,cache,cache,39,"// Check these files with those in the cache (if any)",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:29,Performance,cache,cache,29,"// Loop over binaries in the cache and copy them locally if newer then the local; // versions or there is no local version",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:28,Performance,optimiz,optimized,28,"// Now init the selector in optimized way",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:27,Performance,cache,cache,27,"// Save information in the cache now for later usage",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Availability,Error,Error,3,"// Error, can't save dataset",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:162,Availability,failure,failure,162,"////////////////////////////////////////////////////////////////////////////////; /// Cancels a dataset staging request. Returns kTRUE on success, kFALSE on; /// failure. Dataset not found equals to a failure. PROOF-Lite; /// re-implementation of the equivalent function in TProofServ.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:201,Availability,failure,failure,201,"////////////////////////////////////////////////////////////////////////////////; /// Cancels a dataset staging request. Returns kTRUE on success, kFALSE on; /// failure. Dataset not found equals to a failure. PROOF-Lite; /// re-implementation of the equivalent function in TProofServ.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:27,Availability,error,error,27,"// No such dataset (not an error)",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:135,Availability,avail,available,135,"////////////////////////////////////////////////////////////////////////////////; /// Verify if all files in the specified dataset are available.; /// Print a list and return the number of missing files.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:119,Performance,cache,cache,119,"////////////////////////////////////////////////////////////////////////////////; /// Clear the content of the dataset cache, if any (matching 'dataset', if defined).",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the content of the dataset cache, if any (matching 'dataset', if defined).",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:121,Performance,cache,cache,121,"////////////////////////////////////////////////////////////////////////////////; /// Display the content of the dataset cache, if any (matching 'dataset', if defined).",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:128,Availability,avail,available,128,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the input data objects are available to the workers in a; /// dedicated file in the cache; the objects are taken from the dedicated list; /// and / or the specified file.; /// If the fInputData is empty the specified file is sent over.; /// If there is no specified file, a file named ""inputdata.root"" is created locally; /// with the content of fInputData and sent over to the master.; /// If both fInputData and the specified file are not empty, a copy of the file; /// is made locally and augmented with the content of fInputData.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:185,Performance,cache,cache,185,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the input data objects are available to the workers in a; /// dedicated file in the cache; the objects are taken from the dedicated list; /// and / or the specified file.; /// If the fInputData is empty the specified file is sent over.; /// If there is no specified file, a file named ""inputdata.root"" is created locally; /// with the content of fInputData and sent over to the master.; /// If both fInputData and the specified file are not empty, a copy of the file; /// is made locally and augmented with the content of fInputData.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:26,Performance,cache,cache,26,"// Make sure it is in the cache, if not empty",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:10,Availability,failure,failure,10,"// Notify failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:129,Modifiability,sandbox,sandbox,129,"////////////////////////////////////////////////////////////////////////////////; /// List contents of the data directory in the sandbox.; /// This is the place where files produced by the client queries are kept",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:129,Testability,sandbox,sandbox,129,"////////////////////////////////////////////////////////////////////////////////; /// List contents of the data directory in the sandbox.; /// This is the place where files produced by the client queries are kept",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:348,Availability,error,errors,348,"////////////////////////////////////////////////////////////////////////////////; /// Simulate dynamic addition, for test purposes.; /// Here we decide how many workers to add, we create them and set the; /// environment.; /// This call is called regularly by Collect if the opton is enabled.; /// Returns the number of new workers added, or <0 on errors.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:117,Testability,test,test,117,"////////////////////////////////////////////////////////////////////////////////; /// Simulate dynamic addition, for test purposes.; /// Here we decide how many workers to add, we create them and set the; /// environment.; /// This call is called regularly by Collect if the opton is enabled.; /// Returns the number of new workers added, or <0 on errors.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:12,Energy Efficiency,monitor,monitor,12,"// Create a monitor and add the socket to it",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:95,Integrability,message,message,95,"// Set fParallel to 1 for workers since they do not; // report their fParallel with a LOG_DONE message",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Energy Efficiency,Monitor,Monitor,3,"// Monitor good workers",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:15,Energy Efficiency,monitor,monitor,15,"// Cleanup the monitor and the server socket",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:3,Deployability,Update,Update,3,"// Update group view; // SendGroupView();; // By default go into parallel mode; // SetParallel(-1, 0);",MatchSource.CODE_COMMENT,proof/proof/src/TProofLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:492,Testability,log,log,492,"// @(#)root/proof:$Id$; // Author: G. Ganis 31/08/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofLog; \ingroup proofkernel. Implementation of the PROOF session log handler. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:698,Availability,error,error,698,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the content of the log file associated with worker 'ord'.; /// If 'ord' is ""*"" (default), all the workers are retrieved. If 'all'; /// is true, the whole files are retrieved; else a max of; /// fgMaxTransferSize (about 1000 lines) per file is read, starting from; /// the end (i.e. the last ~1000 lines).; /// The received buffer is added to the file fname, if the latter is defined.; /// If opt == TProofLog::kGrep only the lines containing 'pattern' are; /// retrieved (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:114,Testability,log,log,114,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the content of the log file associated with worker 'ord'.; /// If 'ord' is ""*"" (default), all the workers are retrieved. If 'all'; /// is true, the whole files are retrieved; else a max of; /// fgMaxTransferSize (about 1000 lines) per file is read, starting from; /// the end (i.e. the last ~1000 lines).; /// The received buffer is added to the file fname, if the latter is defined.; /// If opt == TProofLog::kGrep only the lines containing 'pattern' are; /// retrieved (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:3,Security,Validat,Validate,3,"// Validate inputs",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:11,Testability,log,log,11,"// Send to log box:",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:186,Testability,log,log,186,"////////////////////////////////////////////////////////////////////////////////; /// Save the content associated with worker 'ord' to finel 'fname'.; /// If 'ord' is ""*"" (default), the log from all the workers is saved.; /// If 'opt' is ""a"" the file is open in append mode; otherwise the file; /// is truncated.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:581,Availability,error,error,581,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the content of the associated file. The approximate number; /// of lines to be retrieved is given by 'lines', with the convention that; /// 0 means 'all', a positive number means the first 'lines' and a negative; /// number means the last '-lines'. Default is -1000.; /// If opt == TProofLog::kGrep only the lines containing 'pattern' are; /// retrieved (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:21,Testability,log,log,21,"// File is an IgProf log. Override all patterns and preprocess it",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:433,Availability,error,error,433,"////////////////////////////////////////////////////////////////////////////////; /// Display the current content starting from line 'from' to line 'to'; /// inclusive.; /// A negative value for 'from' indicates lines counted from the end; /// (tail action); 'to' is ignored in such a case.; /// TProofLog::Prt is called to display: the location (screen, file, box); /// is defined there.; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:252,Availability,error,error,252,"////////////////////////////////////////////////////////////////////////////////; /// Search lines containing 'txt', starting from line 'from'. Return; /// their blanck-separated list into 'res'.; /// Return the number of lines found, or -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofLog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:605,Energy Efficiency,monitor,monitor,605,"// @(#)root/proof:$Id$; // Author: G. Ganis, Nov 2005; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofMgr; \ingroup proofkernel. The PROOF manager interacts with the PROOF server coordinator to; create or destroy a PROOF session, attach to or detach from; existing one, and to monitor any client activity on the cluster.; At most one manager instance per server is allowed. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:29,Availability,ping,pinging,29,"// Auxilliary structures for pinging; // The client request",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:3,Safety,AVoid,AVoid,3,"// AVoid problems with empty URLs",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:15,Integrability,protocol,protocol,15,"// Correct URL protocol",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:107,Security,access,accessible,107,"////////////////////////////////////////////////////////////////////////////////; /// Get list of sessions accessible to this manager.",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:437,Availability,error,error,437,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:93,Integrability,message,message,93,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:188,Integrability,message,message,188,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:236,Integrability,message,message,236,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:310,Integrability,message,message,310,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:345,Integrability,message,message,345,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:91,Availability,avail,available,91,"////////////////////////////////////////////////////////////////////////////////; /// Show available workers",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:15,Deployability,update,updated,15,"// Retrieve an updated list",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:15,Deployability,update,updated,15,"// Retrieve an updated list",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:6,Safety,avoid,avoid,6,"// To avoid ambiguities in case of removal of some elements",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:15,Integrability,protocol,protocol,15,"// Correct URL protocol",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:3,Deployability,Update,Update,3,"// Update the list with new entries",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:158,Modifiability,plugin,plugin,158,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning the appropriate TProofMgr object using; /// the plugin manager.",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:37,Integrability,depend,depend,37,"// Resolve url; if empty the actions depend of the default",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:3,Safety,Avoid,Avoid,3,"// Avoid multiple calls to GetUrl",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:3,Deployability,Update,Update,3,"// Update trystd flag",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:54,Integrability,interface,interface,54,"// If the first attempt failed, we instantiate an old interface",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:155,Modifiability,plugin,plugin,155,"////////////////////////////////////////////////////////////////////////////////; /// Get the constructor hook fro TXProofMgr.; /// We do this without the plugin manager because it blocks the; /// CINT mutex breaking the parallel startup.",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:3,Performance,Load,Load,3,"// Load the appropriate library ...",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:30,Modifiability,eXtend,eXtended,30,"// Check if the server is the eXtended proofd",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:20,Security,access,accessible,20,"// The file must be accessible",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:6,Safety,avoid,avoid,6,"// To avoid ambiguities in case of removal of some elements",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:90,Testability,log,logs,90,"////////////////////////////////////////////////////////////////////////////////; /// Get logs or log tails from last session associated with this manager; /// instance.; /// The arguments allow to specify a session different from the last one:; /// isess specifies a position relative to the last one, i.e. 1; /// for the next to last session; the absolute value is taken; /// so -1 and 1 are equivalent.; /// stag specifies the unique tag of the wanted session; /// The special value stag = ""NR"" allows to just initialize the TProofLog; /// object w/o retrieving the files; this may be useful when the number; /// of workers is large and only a subset of logs is required.; /// If 'stag' is specified 'isess' is ignored (unless stag = ""NR"").; /// If 'pattern' is specified only the lines containing it are retrieved; /// (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Returns a TProofLog object (to be deleted by the caller) on success,; /// 0 if something wrong happened.",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:98,Testability,log,log,98,"////////////////////////////////////////////////////////////////////////////////; /// Get logs or log tails from last session associated with this manager; /// instance.; /// The arguments allow to specify a session different from the last one:; /// isess specifies a position relative to the last one, i.e. 1; /// for the next to last session; the absolute value is taken; /// so -1 and 1 are equivalent.; /// stag specifies the unique tag of the wanted session; /// The special value stag = ""NR"" allows to just initialize the TProofLog; /// object w/o retrieving the files; this may be useful when the number; /// of workers is large and only a subset of logs is required.; /// If 'stag' is specified 'isess' is ignored (unless stag = ""NR"").; /// If 'pattern' is specified only the lines containing it are retrieved; /// (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Returns a TProofLog object (to be deleted by the caller) on success,; /// 0 if something wrong happened.",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:657,Testability,log,logs,657,"////////////////////////////////////////////////////////////////////////////////; /// Get logs or log tails from last session associated with this manager; /// instance.; /// The arguments allow to specify a session different from the last one:; /// isess specifies a position relative to the last one, i.e. 1; /// for the next to last session; the absolute value is taken; /// so -1 and 1 are equivalent.; /// stag specifies the unique tag of the wanted session; /// The special value stag = ""NR"" allows to just initialize the TProofLog; /// object w/o retrieving the files; this may be useful when the number; /// of workers is large and only a subset of logs is required.; /// If 'stag' is specified 'isess' is ignored (unless stag = ""NR"").; /// If 'pattern' is specified only the lines containing it are retrieved; /// (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Returns a TProofLog object (to be deleted by the caller) on success,; /// 0 if something wrong happened.",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:19,Availability,avail,available,19,"// Get the list of available dirs",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:206,Availability,failure,failure,206,"////////////////////////////////////////////////////////////////////////////////; /// Read 'len' bytes from offset 'ofs' of the local file 'fin'.; /// Returns a TObjString with the content or 0, in case of failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:3,Deployability,Update,Update,3,"// Update counters",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:189,Availability,failure,failure,189,"////////////////////////////////////////////////////////////////////////////////; /// Read lines containing 'pattern' in 'file'.; /// Returns a TObjString with the content or 0, in case of failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofMgrLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofNodeInfo.cxx:3,Performance,Perform,Performance,3,"// Performance",MatchSource.CODE_COMMENT,proof/proof/src/TProofNodeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofNodeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofNodeInfo.cxx:3,Modifiability,Config,Config,3,"// Config file (master or submaster; for backward compatibility)",MatchSource.CODE_COMMENT,proof/proof/src/TProofNodeInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofNodeInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:148,Availability,failure,failure,148,"////////////////////////////////////////////////////////////////////////////////; /// Adopt a file already open.; /// Return 0 if OK, -1 in case of failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofOutputFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:93,Availability,error,error,93,"////////////////////////////////////////////////////////////////////////////////; /// Notify error message",MatchSource.CODE_COMMENT,proof/proof/src/TProofOutputFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:99,Integrability,message,message,99,"////////////////////////////////////////////////////////////////////////////////; /// Notify error message",MatchSource.CODE_COMMENT,proof/proof/src/TProofOutputFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:213,Availability,error,error,213,"////////////////////////////////////////////////////////////////////////////////; /// Assert directory path 'dirpath', with the ownership of the last already; /// existing subpath.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofOutputFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:86,Testability,Assert,Assert,86,"////////////////////////////////////////////////////////////////////////////////; /// Assert directory path 'dirpath', with the ownership of the last already; /// existing subpath.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofOutputFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputList.cxx:564,Modifiability,variab,variables,564,"// @(#)root/proofplayer:$Id$; // Author: G. Ganis 04/08/2010; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofOutputList; \ingroup proofkernel. Derivation of TList with an overload of ls() and Print() allowing to filter; out some of the variables. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofOutputList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputList.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofProgressStatus.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update time stamp either with the passed value (if > 0) or with; /// the current time",MatchSource.CODE_COMMENT,proof/proof/src/TProofProgressStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofProgressStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx:484,Energy Efficiency,adapt,adapted,484,"// @(#)root/proof:$Id$; // Author: G Ganis Sep 2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofQueryResult; \ingroup proofkernel. TQueryResult version adapted to PROOF neeeds. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofQueryResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx:484,Modifiability,adapt,adapted,484,"// @(#)root/proof:$Id$; // Author: G Ganis Sep 2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofQueryResult; \ingroup proofkernel. TQueryResult version adapted to PROOF neeeds. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofQueryResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx:17,Testability,log,log,17,"// Add header to log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofQueryResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:524,Integrability,interface,interface,524,"// @(#)root/proof:$Id$; // Author: Paul Nilsson 7/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofResourcesStatic; \ingroup proofkernel. The purpose of this class is to provide a standard interface to; static config files. It interprets Proof config files (proof.conf); and sorts the contents into TProofNodeInfo objects. Master info will; be placed in fMaster (of type TProofNodeInfo). Submaster info will; be put in fSubmasterList (a TList of TProofNodeInfo objects), while; workers (and condorworkers) will be placed in fWorkerList (a TList; of TProofNodeInfo objects). */",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:545,Modifiability,config,config,545,"// @(#)root/proof:$Id$; // Author: Paul Nilsson 7/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofResourcesStatic; \ingroup proofkernel. The purpose of this class is to provide a standard interface to; static config files. It interprets Proof config files (proof.conf); and sorts the contents into TProofNodeInfo objects. Master info will; be placed in fMaster (of type TProofNodeInfo). Submaster info will; be put in fSubmasterList (a TList of TProofNodeInfo objects), while; workers (and condorworkers) will be placed in fWorkerList (a TList; of TProofNodeInfo objects). */",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:579,Modifiability,config,config,579,"// @(#)root/proof:$Id$; // Author: Paul Nilsson 7/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofResourcesStatic; \ingroup proofkernel. The purpose of this class is to provide a standard interface to; static config files. It interprets Proof config files (proof.conf); and sorts the contents into TProofNodeInfo objects. Master info will; be placed in fMaster (of type TProofNodeInfo). Submaster info will; be put in fSubmasterList (a TList of TProofNodeInfo objects), while; workers (and condorworkers) will be placed in fWorkerList (a TList; of TProofNodeInfo objects). */",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:189,Modifiability,config,config,189,"////////////////////////////////////////////////////////////////////////////////; /// This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); /// for a quick scan of the config file to retrieve the work directory.",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:139,Modifiability,config,config,139,"////////////////////////////////////////////////////////////////////////////////; /// Using this ctor will retrieve all information in the config file; /// and store it in fMaster, fSubmasterList and fWorkerList,; /// condorworkers will be stored in the fWorkerList.",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:27,Modifiability,config,config,27,"// Open and read the PROOF config file",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:23,Modifiability,config,config,23,"// Set to kTRUE if the config file contains master info; // Create workers",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:19,Modifiability,config,config,19,"// Assume that the config file will be ok",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:161,Modifiability,config,config,161,"////////////////////////////////////////////////////////////////////////////////; /// Get the master node. Only return the master info if it was set; /// in the config file.",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:101,Modifiability,config,config,101,"////////////////////////////////////////////////////////////////////////////////; /// Read the PROOF config file and fill the master and worker list.",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:12,Modifiability,config,config,12,"// Open the config file",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:11,Modifiability,config,config,11,"// Did the config file contain appropriate master information?",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:3,Availability,Error,Error,3,"// Error: could not open file",MatchSource.CODE_COMMENT,proof/proof/src/TProofResourcesStatic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:560,Integrability,depend,depending,560,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 16/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServ; \ingroup proofkernel. Class providing the PROOF server. It can act either as the master; server or as a slave server, depending on its startup arguments. It; receives and handles message coming from the client or from the; master server. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:621,Integrability,message,message,621,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 16/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServ; \ingroup proofkernel. Class providing the PROOF server. It can act either as the master; server or as a slave server, depending on its startup arguments. It; receives and handles message coming from the client or from the; master server. */",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:17,Testability,log,log,17,"// File where to log: default stderr",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Integrat,Integrate,3,"// Integrate with crash reporter.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Integrat,Integrate,3,"// Integrate with crash reporter.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:8,Integrability,message,message,8,"// Last message and entry before exceptions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Testability,Log,Logger,9,"// Async Logger",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:26,Integrability,message,messages,26,"//----- Input handler for messages from parent or master -----------------------; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:37,Integrability,message,messages,37,"// Default prefix to be prepended to messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:41,Availability,avail,available,41,"// Return code of the command execution (available only; // after closing the pipe); ////////////////////////////////////////////////////////////////////////////////; /// Execute 'cmd' in a pipe and handle output messages from the related file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:213,Integrability,message,messages,213,"// Return code of the command execution (available only; // after closing the pipe); ////////////////////////////////////////////////////////////////////////////////; /// Execute 'cmd' in a pipe and handle output messages from the related file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:93,Availability,avail,available,93,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message from the open file 'f'",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:103,Integrability,message,message,103,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message from the open file 'f'",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:93,Availability,avail,available,93,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message in the open file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:103,Integrability,message,message,103,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message in the open file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:93,Availability,avail,available,93,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message in the open file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:103,Integrability,message,message,103,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message in the open file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:10,Testability,log,log,10,"// Create log string",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:12,Integrability,message,message,12,"// Send the message one level up",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:200,Testability,log,log,200,"////////////////////////////////////////////////////////////////////////////////; /// Static method to get the return code from the execution of a command via; /// the pipe. This is always 0 when the log handler is not used with a pipe",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:43,Modifiability,variab,variable,43,"// Backward compaitibility: until 5.32 the variable was called ProofServ.ShutdonwTimeout",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:180,Safety,abort,aborted,180,"////////////////////////////////////////////////////////////////////////////////; /// Handle expiration of the shutdown timer. In the case of low activity the; /// process will be aborted.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:52,Safety,abort,abort,52,"// At this point we lost our controller: we need to abort to avoid; // hidden timeouts or loops",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:61,Safety,avoid,avoid,61,"// At this point we lost our controller: we need to abort to avoid; // hidden timeouts or loops",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:78,Safety,timeout,timeouts,78,"// At this point we lost our controller: we need to abort to avoid; // hidden timeouts or loops",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:62,Modifiability,plugin,plugin,62,"// Hook to the constructor. This is needed to avoid using the plugin manager; // which may create problems in multi-threaded environments.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:110,Performance,multi-thread,multi-threaded,110,"// Hook to the constructor. This is needed to avoid using the plugin manager; // which may create problems in multi-threaded environments.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:46,Safety,avoid,avoid,46,"// Hook to the constructor. This is needed to avoid using the plugin manager; // which may create problems in multi-threaded environments.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:197,Modifiability,inherit,inheritance,197,"////////////////////////////////////////////////////////////////////////////////; /// Main constructor. Create an application environment. The TProofServ; /// environment provides an eventloop via inheritance of TApplication.; /// Actual server creation work is done in CreateServer() to allow; /// overloading.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:6,Testability,test,test,6,"// If test and tty, we are done",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Modifiability,variab,variable,7,"// Old variable for backward compatibility",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Testability,Test,Test,3,"// Test instance",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Testability,Log,Log,3,"// Log control flags",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:44,Availability,error,error,44,"// Abort on higher than kSysError's and set error handler",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Safety,Abort,Abort,3,"// Abort on higher than kSysError's and set error handler",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Integrability,message,message,7,"// Max message size",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Message,Message,3,"// Message compression",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Testability,log,log,7,"// Max log file size",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:10,Performance,optimiz,optimized,10,"// Enable optimized sending of streamer infos to use embedded backward/forward; // compatibility support between different ROOT versions and different versions of; // users classes",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:230,Availability,error,error,230,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the server setup. If master, create the TProof instance to talk; /// to the worker or submaster nodes.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Availability,failure,failure,9,"// Setup failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:67,Testability,log,logs,67,"// If for some reason we failed setting a redirection file for the logs; // we cannot continue",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:8,Integrability,message,message,8,"// Send message of the day to the client",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:41,Availability,avail,available,41,"// Everybody expects std::iostream to be available, so load it...",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:55,Performance,load,load,55,"// Everybody expects std::iostream to be available, so load it...",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:101,Performance,load,loaded,101,"// for std::string std::iostream.; // The following libs are also useful to have, make sure they are loaded...; //gROOT->LoadClass(""TMinuit"", ""Minuit"");; //gROOT->LoadClass(""TPostScript"", ""Postscript"");; // Load user functions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:121,Performance,Load,LoadClass,121,"// for std::string std::iostream.; // The following libs are also useful to have, make sure they are loaded...; //gROOT->LoadClass(""TMinuit"", ""Minuit"");; //gROOT->LoadClass(""TPostScript"", ""Postscript"");; // Load user functions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:163,Performance,Load,LoadClass,163,"// for std::string std::iostream.; // The following libs are also useful to have, make sure they are loaded...; //gROOT->LoadClass(""TMinuit"", ""Minuit"");; //gROOT->LoadClass(""TPostScript"", ""Postscript"");; // Load user functions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:207,Performance,Load,Load,207,"// for std::string std::iostream.; // The following libs are also useful to have, make sure they are loaded...; //gROOT->LoadClass(""TMinuit"", ""Minuit"");; //gROOT->LoadClass(""TPostScript"", ""Postscript"");; // Load user functions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:11,Testability,log,logon,11,"// Execute logon macro",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Install,Install,3,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:25,Integrability,message,message,25,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Modifiability,plugin,plugin,7,"// Get plugin manager to load appropriate TProof from",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:25,Performance,load,load,25,"// Get plugin manager to load appropriate TProof from",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:12,Modifiability,plugin,plugin,12,"// load the plugin",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Performance,load,load,3,"// load the plugin",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:113,Integrability,message,message,113,"// Check if schema evolution is effective: clients running versions <=17 do not; // support that: send a warning message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:92,Integrability,message,message,92,"////////////////////////////////////////////////////////////////////////////////; /// Print message of the day (in the file pointed by the env PROOFMOTD; /// or from fConfDir/etc/proof/motd). The motd is not shown more than; /// once a day. If the file pointed by env PROOFNOPROOF exists (or the; /// file fConfDir/etc/proof/noproof exists), show its contents and close; /// the connection.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:37,Integrability,message,message,37,"// If we are disabled just print the message and close the connection",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:112,Deployability,install,installation,112,"// The env variable PROOFNOPROOF allows to put the file in an alternative; // location not overwritten by a new installation",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:11,Modifiability,variab,variable,11,"// The env variable PROOFNOPROOF allows to put the file in an alternative; // location not overwritten by a new installation",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:109,Deployability,install,installation,109,"// The env variable PROOFMOTD allows to put the file in an alternative; // location not overwritten by a new installation",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:11,Modifiability,variab,variable,11,"// The env variable PROOFMOTD allows to put the file in an alternative; // location not overwritten by a new installation",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:14,Integrability,message,message,14,"// Add to the message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:13,Performance,cache,cache,13,"// Send tree cache information",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:97,Security,validat,validation,97,"// Sent over the number of entries in the file, used by packetizer do not relying; // on initial validation. Also, -1 means that the file could not be open, which is; // used to flag files as missing",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:27,Integrability,message,message,27,"// if a kPROOF_STOPPROCESS message is returned to kPROOF_GETPACKET; // GetNextPacket() will return 0 and the TPacketizer and hence; // TEventIter will be stopped",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:6,Testability,test,test,6,"// If test and tty",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:12,Safety,timeout,timeout,12,"// The idle timeout guard: stops the timer and restarts when we return from here",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Testability,log,log,9,"// Check log file length (before the action, so we have the chance to keep the; // latest logs)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:90,Testability,log,logs,90,"// Check log file length (before the action, so we have the chance to keep the; // latest logs)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Integrability,message,message,7,"// Get message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:70,Integrability,message,message,70,"// Pending: do something more intelligent here; // but at least get a message in the log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:85,Testability,log,log,85,"// Pending: do something more intelligent here; // but at least get a message in the log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:15,Integrability,message,message,15,"// Process the message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:14,Performance,queue,queue,14,"// Add to the queue",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:14,Performance,queue,queue,14,"// Add to the queue",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:20,Testability,log,log,20,"// Save info in the log file too",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:49,Safety,detect,detected,49,"// Terminate also if a high memory footprint was detected before the related; // exception was thrwon",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:20,Testability,log,log,20,"// Save info in the log file too",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:194,Integrability,message,messages,194,"////////////////////////////////////////////////////////////////////////////////; /// Process input coming from the client or from the master server.; /// If 'all' is kFALSE, process only those messages that can be handled; /// during query processing.; /// Returns -1 if the message could not be processed, <-1 if something went; /// wrong. Returns 1 if the action may have changed the parallel state.; /// Returns 2 if the message has to be enqueued.; /// Returns 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:276,Integrability,message,message,276,"////////////////////////////////////////////////////////////////////////////////; /// Process input coming from the client or from the master server.; /// If 'all' is kFALSE, process only those messages that can be handled; /// during query processing.; /// Returns -1 if the message could not be processed, <-1 if something went; /// wrong. Returns 1 if the action may have changed the parallel state.; /// Returns 2 if the message has to be enqueued.; /// Returns 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:425,Integrability,message,message,425,"////////////////////////////////////////////////////////////////////////////////; /// Process input coming from the client or from the master server.; /// If 'all' is kFALSE, process only those messages that can be handled; /// during query processing.; /// Returns -1 if the message could not be processed, <-1 if something went; /// wrong. Returns 1 if the action may have changed the parallel state.; /// Returns 2 if the message has to be enqueued.; /// Returns 0 otherwise",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:41,Availability,avail,available,41,"// Make sure that the relevant files are available",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:15,Availability,ping,ping,15,"// do nothing (ping is already acknowledged)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:8,Integrability,message,message,8,"// this message makes only sense when the query is being processed,; // however the message can also be received if the user pressed; // ctrl-c, so ignore it!",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:84,Integrability,message,message,84,"// this message makes only sense when the query is being processed,; // however the message can also be received if the user pressed; // ctrl-c, so ignore it!",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:113,Integrability,message,messages,113,"// The log file is send either in HandleProcess or HandleSubmergers.; // The reason is that the order of various messages depend on the; // processing mode (sync/async) and/or merging mode",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:122,Integrability,depend,depend,122,"// The log file is send either in HandleProcess or HandleSubmergers.; // The reason is that the order of various messages depend on the; // processing mode (sync/async) and/or merging mode",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Testability,log,log,7,"// The log file is send either in HandleProcess or HandleSubmergers.; // The reason is that the order of various messages depend on the; // processing mode (sync/async) and/or merging mode",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:14,Availability,error,error,14,"// in case of error messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:20,Integrability,message,messages,20,"// in case of error messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:18,Availability,error,error,18,"// Avoid sending (error) messages at next action",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:25,Integrability,message,messages,25,"// Avoid sending (error) messages at next action",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Safety,Avoid,Avoid,3,"// Avoid sending (error) messages at next action",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:20,Performance,cache,cache,20,"// Take it from the cache",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Performance,cache,cache,16,"// copy file to cache if not a PAR file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Availability,error,error,16,"// There was an error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:8,Integrability,message,message,8,"// This message resumes the session; should not come during processing.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Usability,resume,resumes,16,"// This message resumes the session; should not come during processing.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Availability,Echo,Echo,3,"// Echo request: an object has been sent along. If the object is a; // string, it is simply echoed back to the client from the master; // and each worker. Elsewhere, the output of TObject::Print() is; // sent. Received object is disposed after usage.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:92,Availability,echo,echoed,92,"// Echo request: an object has been sent along. If the object is a; // string, it is simply echoed back to the client from the master; // and each worker. Elsewhere, the output of TObject::Print() is; // sent. Received object is disposed after usage.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:85,Usability,simpl,simply,85,"// Echo request: an object has been sent along. If the object is a; // string, it is simply echoed back to the client from the master; // and each worker. Elsewhere, the output of TObject::Print() is; // sent. Received object is disposed after usage.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:18,Availability,echo,echo,18,"// It's a string: echo it",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:34,Integrability,message,message,34,"// Read file back and send it via message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:8,Integrability,message,message,8,"// Send message and dispose object",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:42,Integrability,message,message,42,"// Read output objec(s) from the received message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:29,Integrability,message,messages,29,"// Real-time notification of messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:273,Performance,queue,queue,273,"// EWOULDBLOCK; //; // The OOB data has not yet arrived: flush the input stream; //; // In some systems (Solaris) regular recv() does not return upon; // receipt of the oob byte, which makes the below call to recv(); // block indefinitely if there are no other data in the queue.; // FIONREAD ioctl can be used to check if there are actually any; // data to be flushed. If not, wait for a while for the oob byte; // to arrive and try to read it again.; //",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:107,Integrability,message,messages,107,"// Send the OOB byte back so that the client knows where; // to stop flushing its input stream of obsolete messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:116,Availability,alive,alive,116,"////////////////////////////////////////////////////////////////////////////////; /// Called when the client is not alive anymore (i.e. when kKeepAlive; /// has failed).",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:29,Integrability,message,messages,29,"// Real-time notification of messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:57,Availability,ping,ping,57,"// Check if we are here because client is closed. Try to ping client,; // if that works it we are here because some slave died",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:107,Testability,log,log,107,"////////////////////////////////////////////////////////////////////////////////; /// Redirect stdout to a log file. This log file will be flushed to the; /// client or master after each command.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:122,Testability,log,log,122,"////////////////////////////////////////////////////////////////////////////////; /// Redirect stdout to a log file. This log file will be flushed to the; /// client or master after each command.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Usability,Clear,Clear,3,"// Clear interpreter environment.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:295,Availability,error,error,295,"////////////////////////////////////////////////////////////////////////////////; /// Receive a file, either sent by a client or a master server.; /// If bin is true it is a binary file, other wise it is an ASCII; /// file and we need to check for Windows \\r tokens. Returns -1 in; /// case of error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:91,Testability,log,log,91,"////////////////////////////////////////////////////////////////////////////////; /// Send log file to master.; /// If start > -1 send only bytes in the range from start to end,; /// if end <= start send everything from start.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:58,Testability,log,log,58,"// Determine the number of bytes left to be read from the log file.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:53,Safety,avoid,avoid,53,"// On workers we do not send the logs to masters (to avoid duplication of; // text) unless asked explicitly, e.g. after an Exec(...) request.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:33,Testability,log,logs,33,"// On workers we do not send the logs to masters (to avoid duplication of; // text) unless asked explicitly, e.g. after an Exec(...) request.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Update,Update,3,"// Update counters",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:163,Availability,failure,failure,163,"////////////////////////////////////////////////////////////////////////////////; /// Print the ProofServ logo on standard output.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:106,Testability,log,logo,106,"////////////////////////////////////////////////////////////////////////////////; /// Print the ProofServ logo on standard output.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:12,Integrability,protocol,protocol,12,"// exchange protocol level between client and master and between; // master and slave",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:25,Security,authenticat,authentication,25,"// If old version, setup authentication related stuff",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Modifiability,config,config,9,"// parse config file to find working directory",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:35,Energy Efficiency,reduce,reduce,35,"// Send packets off immediately to reduce latency",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:42,Performance,latency,latency,42,"// Send packets off immediately to reduce latency",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:44,Availability,alive,alive,44,"// Check every two hours if client is still alive",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Common part (between TProofServ and TXProofServ) of the setup phase.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:14,Security,access,access,14,"// deny write access for group and world",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:24,Performance,cache,cache,24,"// Check and make sure ""cache"" directory exists",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:22,Performance,cache,cache,22,"// Make also sure the cache path is in the macro path",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Integrability,message,message,16,"// Notification message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:32,Modifiability,plug-in,plug-in,32,"// Dataset manager instance via plug-in",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:7,Modifiability,plugin,plugin,7,"// Get plugin manager to load the appropriate TDataSetManager",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:25,Performance,load,load,25,"// Get plugin manager to load the appropriate TDataSetManager",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:26,Modifiability,sandbox,sandbox,26,"// Use the default in the sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:26,Testability,sandbox,sandbox,26,"// Use the default in the sandbox",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:37,Modifiability,sandbox,sandbox,37,"// Set High-Water-Mark or max on the sandbox size",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:37,Testability,sandbox,sandbox,37,"// Set High-Water-Mark or max on the sandbox size",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:49,Availability,avail,available,49,"// Set the syslog entity (all the information is available now)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Testability,Log,Log,3,"// Log the beginning of this session",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:27,Safety,avoid,avoid,27,"// Remove input handler to avoid spurious signals in socket; // selection for closing activities executed upon exit()",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:92,Security,authenticat,authentication,92,"////////////////////////////////////////////////////////////////////////////////; /// Setup authentication related stuff for old versions.; /// Provided for backward compatibility.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Performance,Load,Load,3,"// Load libraries needed for (server) authentication ...",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:38,Security,authenticat,authentication,38,"// Load libraries needed for (server) authentication ...",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:34,Testability,log,log,34,"// Record current position in the log file at start",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:22,Testability,log,logs,22,"// Add some header to logs",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:21,Performance,load,loaded,21,"// Build the list of loaded PAR packages",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Update,Update,3,"// Update query status",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Update,Update,3,"// Update temporary files too",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:262,Availability,error,error,262,"////////////////////////////////////////////////////////////////////////////////; /// Get a map {server-name, list-of-files} for collection 'fc' to be used in; /// TPacketizerFile. Returns a pointer to the map (ownership of the caller).; /// Or (TMap *)0 and an error message in emsg.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:268,Integrability,message,message,268,"////////////////////////////////////////////////////////////////////////////////; /// Get a map {server-name, list-of-files} for collection 'fc' to be used in; /// TPacketizerFile. Returns a pointer to the map (ownership of the caller).; /// Or (TMap *)0 and an error message in emsg.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Safety,Sanity check,Sanity checks,3,"// Sanity checks",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:107,Safety,avoid,avoid,107,"// Create instance of query results; we set ownership of the input list; // to the TQueryResult object, to avoid too many instantiations",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Usability,Clear,Clear,3,"// Clear the list",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:47,Energy Efficiency,schedul,scheduler,47,"// Call get Workers; // if we are not idle the scheduler will just enqueue the query and; // send a resume message later.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:107,Integrability,message,message,107,"// Call get Workers; // if we are not idle the scheduler will just enqueue the query and; // send a resume message later.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:100,Usability,resume,resume,100,"// Call get Workers; // if we are not idle the scheduler will just enqueue the query and; // send a resume message later.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Safety,avoid,avoid,3,"// avoid processing async queries sent during processing in dyn mode",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:72,Energy Efficiency,monitor,monitor,72,"// kPROOF_SETIDLE sets the client to idle; in asynchronous mode clients monitor; // TProof::IsIdle for to check the readiness of a query, so we need to send this; // before to be sure thatn everything about a query is received by the client",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:81,Testability,log,log,81,"// In synchronous mode TProof::Collect is terminated by the reception of the; // log file and subsequent submissions are controlled by TProof::IsIdle(), so; // this must be last one to be sent",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:27,Availability,avail,available,27,"// Make the ordinal number available in the selector",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Performance,latency,latency,9,"// Reset latency stopwatch",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:125,Integrability,Message,Messages,125,"// Send objects in bunches of max fMsgSizeHWM bytes to optimize transfer; // Objects are merged one-by-one by the client; // Messages for objects",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:55,Performance,optimiz,optimize,55,"// Send objects in bunches of max fMsgSizeHWM bytes to optimize transfer; // Objects are merged one-by-one by the client; // Messages for objects",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Message,Message,3,"// Message for the client",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Integrability,message,message,16,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:48,Integrability,message,messages,48,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:13,Integrability,message,message,13,"// Reset the message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Integrability,message,message,16,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:48,Integrability,message,messages,48,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:64,Integrability,Message,Messages,64,"// Send objects one-by-one to optimize transfer and merging; // Messages for objects",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:30,Performance,optimiz,optimize,30,"// Send objects one-by-one to optimize transfer and merging; // Messages for objects",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Message,Message,3,"// Message for the client",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Integrability,message,message,16,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:48,Integrability,message,messages,48,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Message,Message,3,"// Message for the client",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:118,Performance,queue,queue,118,"////////////////////////////////////////////////////////////////////////////////; /// process the next query from the queue of submitted jobs.; /// to be called on the top master only.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:81,Availability,avail,available,81,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:109,Energy Efficiency,monitor,monitoring,109,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,message,message,3,"// message sent from worker to the master",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:10,Safety,abort,aborted,10,"// Remove aborted queries from the list",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:44,Safety,avoid,avoid,44,"// Add tag to the list of processed tags to avoid double processing; // (there may be more objects with the same name, created by each worker)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:10,Availability,failure,failure,10,"// Notify failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Message,Message,3,"// Message for the client",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Integrability,message,message,9,"// Parse message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,install,install,3,"// install package:; // compare md5's, untar, store md5 in PROOF-INF, remove par file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:319,Deployability,release,released,319,"// Note: Originally an fPackageLock->Unlock() call was made; // after the if-else statement below. With multilevel masters,; // submasters still check to make sure the package exists with; // the correct md5 checksum and need to do a read lock there.; // As yet locking is not that sophisicated so the lock must; // be released below before the call to fProof->UploadPackage().",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:208,Security,checksum,checksum,208,"// Note: Originally an fPackageLock->Unlock() call was made; // after the if-else statement below. With multilevel masters,; // submasters still check to make sure the package exists with; // the correct md5 checksum and need to do a read lock there.; // As yet locking is not that sophisicated so the lock must; // be released below before the call to fProof->UploadPackage().",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:30,Availability,error,error,30,"// delete par file in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:13,Deployability,install,install,13,"// If remote install it from there",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:17,Performance,cache,cache,17,"// check file in cache directory",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:102,Performance,cache,cache,102,"////////////////////////////////////////////////////////////////////////////////; /// Handle here all cache and package requests.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,Integrability,message,message,16,"// Notification message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:24,Availability,avail,available,24,"// Make sure package is available on all slaves, even new ones",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Performance,Load,Load,3,"// Load the package",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:27,Performance,load,load,27,"// By first forwarding the load command to the unique workers; // and only then loading locally we load/build in parallel",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:80,Performance,load,loading,80,"// By first forwarding the load command to the unique workers; // and only then loading locally we load/build in parallel",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:99,Performance,load,load,99,"// By first forwarding the load command to the unique workers; // and only then loading locally we load/build in parallel",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Performance,Load,Load,3,"// Load the macro",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Release,Release,3,"// Release atomicity",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:66,Performance,load,load,66,"// Now we collect the result from the unique workers and send the load request; // to the other workers (no compilation)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Usability,resume,resume,3,/* resume */,MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:13,Modifiability,config,config,13,"// Parse the config file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Deployability,Update,Update,3,"// Update the global file name (with path)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:33,Availability,avail,available,33,"// Set image if not yet done and available",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:115,Testability,log,log,115,"////////////////////////////////////////////////////////////////////////////////; /// Set the file stream where to log (default stderr).; /// If ferr == 0 the default is restored.; /// Returns current setting.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:96,Availability,error,error,96,"////////////////////////////////////////////////////////////////////////////////; /// The PROOF error handler function. It prints the message on fgErrorHandlerFile and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:134,Integrability,message,message,134,"////////////////////////////////////////////////////////////////////////////////; /// The PROOF error handler function. It prints the message on fgErrorHandlerFile and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:176,Safety,abort,abort,176,"////////////////////////////////////////////////////////////////////////////////; /// The PROOF error handler function. It prints the message on fgErrorHandlerFile and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:192,Safety,abort,aborts,192,"////////////////////////////////////////////////////////////////////////////////; /// The PROOF error handler function. It prints the message on fgErrorHandlerFile and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:22,Availability,error,errors,22,"// Always communicate errors via SendLogFile",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:207,Energy Efficiency,schedul,scheduler,207,"////////////////////////////////////////////////////////////////////////////////; /// Get the processing priority for the group the user belongs too. This; /// priority is a number (0 - 100) determined by a scheduler (third; /// party process) based on some basic priority the group has, e.g.; /// we might want to give users in a specific group (e.g. promptana); /// a higher priority than users in other groups, and on the analysis; /// of historical logging data (i.e. usage of CPU by the group in a; /// previous time slot, as recorded in TPerfStats::WriteQueryLog()).; ///; /// Currently the group priority is obtained by a query in a SQL DB; /// table proofpriority, which has the format:; /// CREATE TABLE proofpriority (; /// id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,; /// group VARCHAR(32) NOT NULL,; /// priority INT; ///)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:453,Testability,log,logging,453,"////////////////////////////////////////////////////////////////////////////////; /// Get the processing priority for the group the user belongs too. This; /// priority is a number (0 - 100) determined by a scheduler (third; /// party process) based on some basic priority the group has, e.g.; /// we might want to give users in a specific group (e.g. promptana); /// a higher priority than users in other groups, and on the analysis; /// of historical logging data (i.e. usage of CPU by the group in a; /// previous time slot, as recorded in TPerfStats::WriteQueryLog()).; ///; /// Currently the group priority is obtained by a query in a SQL DB; /// table proofpriority, which has the format:; /// CREATE TABLE proofpriority (; /// id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,; /// group VARCHAR(32) NOT NULL,; /// priority INT; ///)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:106,Integrability,message,message,106,"////////////////////////////////////////////////////////////////////////////////; /// Send an asychronous message to the master / client .; /// Masters will forward up the message to the client.; /// The client prints 'msg' of stderr and adds a '\\n'/'\\r' depending on; /// 'lf' being kTRUE (default) or kFALSE.; /// Returns the return value from TSocket::Send(TMessage &) .",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:172,Integrability,message,message,172,"////////////////////////////////////////////////////////////////////////////////; /// Send an asychronous message to the master / client .; /// Masters will forward up the message to the client.; /// The client prints 'msg' of stderr and adds a '\\n'/'\\r' depending on; /// 'lf' being kTRUE (default) or kFALSE.; /// Returns the return value from TSocket::Send(TMessage &) .",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:257,Integrability,depend,depending,257,"////////////////////////////////////////////////////////////////////////////////; /// Send an asychronous message to the master / client .; /// Masters will forward up the message to the client.; /// The client prints 'msg' of stderr and adds a '\\n'/'\\r' depending on; /// 'lf' being kTRUE (default) or kFALSE.; /// Returns the return value from TSocket::Send(TMessage &) .",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:187,Integrability,message,messages,187,"////////////////////////////////////////////////////////////////////////////////; /// Reposition the read pointer in the log file to the very end.; /// This allows to ""hide"" useful debug messages during normal operations; /// while preserving the possibility to have them in case of problems.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:121,Testability,log,log,121,"////////////////////////////////////////////////////////////////////////////////; /// Reposition the read pointer in the log file to the very end.; /// This allows to ""hide"" useful debug messages during normal operations; /// while preserving the possibility to have them in case of problems.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:99,Testability,log,log,99,"////////////////////////////////////////////////////////////////////////////////; /// Truncate the log file to the 80% of the required max size if this; /// is set.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:122,Availability,recover,recover,122,"////////////////////////////////////////////////////////////////////////////////; /// Exception handler: we do not try to recover here, just exit.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:122,Safety,recover,recover,122,"////////////////////////////////////////////////////////////////////////////////; /// Exception handler: we do not try to recover here, just exit.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:21,Integrability,Message,Message,21,"// from ParseUri; // Message type",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Availability,Error,Error,3,"// Error, can't save dataset",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:18,Availability,failure,failure,18,"// success (-1 == failure)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:27,Availability,error,error,27,"// No such dataset: not an error, but don't send message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:49,Integrability,message,message,49,"// No such dataset: not an error, but don't send message",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Availability,failure,failure,3,"// failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:210,Deployability,Integrat,Integrate,210,"// TODO: verify in parallel:; // - dataset = GetDataSet(uri); // - TList flist; TDataSetManager::ScanDataSet(dataset, ..., &flist); // - fPlayer->Process( ... flist ...) // needs to be developed; // - dataset->Integrate(flist) (perhaps automatic; flist object owned by dataset); // - RegisterDataSet(uri, dataset, ""OT"")",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:210,Integrability,Integrat,Integrate,210,"// TODO: verify in parallel:; // - dataset = GetDataSet(uri); // - TList flist; TDataSetManager::ScanDataSet(dataset, ..., &flist); // - fPlayer->Process( ... flist ...) // needs to be developed; // - dataset->Integrate(flist) (perhaps automatic; flist object owned by dataset); // - RegisterDataSet(uri, dataset, ""OT"")",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:8,Performance,cache,cache,8,"// Show cache content",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:9,Performance,cache,cache,9,"// Clear cache content",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Usability,Clear,Clear,3,"// Clear cache content",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:95,Integrability,message,message,95,"////////////////////////////////////////////////////////////////////////////////; /// Handle a message of type kPROOF_SUBMERGER",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrability,Message,Message,3,"// Message type",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:285,Availability,failure,failure,285,"////////////////////////////////////////////////////////////////////////////////; /// Fork a child.; /// If successful, return 0 in the child process and the child pid in the parent; /// process. The child pid is registered for reaping.; /// Return <0 in the parent process in case of failure.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:198,Performance,queue,queued,198,"////////////////////////////////////////////////////////////////////////////////; /// Return the status of this session:; /// 0 idle; /// 1 running; /// 2 being terminated (currently unused); /// 3 queued; /// 4 idle timed-out (not set in here but in TIdleTOTimer::Notify); /// This is typically run in the reader thread, so access needs to be protected",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:325,Security,access,access,325,"////////////////////////////////////////////////////////////////////////////////; /// Return the status of this session:; /// 0 idle; /// 1 running; /// 2 being terminated (currently unused); /// 3 queued; /// 4 idle timed-out (not set in here but in TIdleTOTimer::Notify); /// This is typically run in the reader thread, so access needs to be protected",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the session status in the relevant file. The status is taken from; /// GetSessionStatus() unless xst >= 0, in which case xst is used.; /// Return 0 on success, -errno if the file could not be opened.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:94,Integrability,message,message,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the message to be sent back in case of exceptions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:191,Availability,error,error,191,"////////////////////////////////////////////////////////////////////////////////; /// Locks the directory. Waits if lock is hold by an other process.; /// Returns 0 on success, -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:157,Availability,error,error,157,"////////////////////////////////////////////////////////////////////////////////; /// Unlock the directory. Returns 0 in case of success,; /// -1 in case of error.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServ.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:653,Integrability,message,messages,653,"// @(#)root/proofx:$Id$; // Author: Gerardo Ganis 12/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServLite; \ingroup proofkernel. Version of the PROOF worker server for local running. The client starts; directly the desired number of these workers; the master and daemons are; eliminated, optimizing the number of messages exchanged and created / destroyed. */; //////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:1040,Integrability,message,messages,1040,"// @(#)root/proofx:$Id$; // Author: Gerardo Ganis 12/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServLite; \ingroup proofkernel. Version of the PROOF worker server for local running. The client starts; directly the desired number of these workers; the master and daemons are; eliminated, optimizing the number of messages exchanged and created / destroyed. */; //////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:628,Performance,optimiz,optimizing,628,"// @(#)root/proofx:$Id$; // Author: Gerardo Ganis 12/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServLite; \ingroup proofkernel. Version of the PROOF worker server for local running. The client starts; directly the desired number of these workers; the master and daemons are; eliminated, optimizing the number of messages exchanged and created / destroyed. */; //////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:1009,Performance,optimiz,optimizing,1009,"// @(#)root/proofx:$Id$; // Author: Gerardo Ganis 12/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServLite; \ingroup proofkernel. Version of the PROOF worker server for local running. The client starts; directly the desired number of these workers; the master and daemons are; eliminated, optimizing the number of messages exchanged and created / destroyed. */; //////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:26,Integrability,message,messages,26,"//----- Input handler for messages from parent or master -----------------------; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:62,Modifiability,plugin,plugin,62,"// Hook to the constructor. This is needed to avoid using the plugin manager; // which may create problems in multi-threaded environments.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:110,Performance,multi-thread,multi-threaded,110,"// Hook to the constructor. This is needed to avoid using the plugin manager; // which may create problems in multi-threaded environments.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:46,Safety,avoid,avoid,46,"// Hook to the constructor. This is needed to avoid using the plugin manager; // which may create problems in multi-threaded environments.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:227,Availability,error,error,227,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the server setup. If master, create the TProof instance to talk; /// the worker or submaster nodes.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:27,Testability,log,log,27,"// Get file descriptor for log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Deployability,Install,Install,3,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:25,Integrability,message,message,25,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:9,Availability,failure,failure,9,"// Setup failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:67,Testability,log,logs,67,"// If for some reason we failed setting a redirection file for the logs; // we cannot continue",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:41,Availability,avail,available,41,"// Everybody expects std::iostream to be available, so load it...",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:55,Performance,load,load,55,"// Everybody expects std::iostream to be available, so load it...",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:38,Performance,Load,Load,38,"// for std::string std::iostream.; // Load user functions",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:11,Testability,log,logon,11,"// Execute logon macro",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:18,Integrability,message,messages,18,"// Avoid spurious messages at first action",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Safety,Avoid,Avoid,3,"// Avoid spurious messages at first action",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:116,Availability,alive,alive,116,"////////////////////////////////////////////////////////////////////////////////; /// Called when the client is not alive anymore; terminate the session.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:116,Availability,alive,alive,116,"////////////////////////////////////////////////////////////////////////////////; /// Called when the client is not alive anymore; terminate the session.",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:163,Availability,error,error,163,"////////////////////////////////////////////////////////////////////////////////; /// Print the ProofServ logo on standard output.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:106,Testability,log,logo,106,"////////////////////////////////////////////////////////////////////////////////; /// Print the ProofServ logo on standard output.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:14,Integrability,protocol,protocol,14,"// Get client protocol",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:20,Modifiability,sandbox,sandbox,20,"// Get Session dir (sandbox)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:20,Testability,sandbox,sandbox,20,"// Get Session dir (sandbox)",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:31,Testability,log,log,31,"// Link the session tag to the log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:44,Availability,alive,alive,44,"// Check every two hours if client is still alive",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:48,Availability,failure,failure,48,"// Install SigPipe handler to handle kKeepAlive failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Deployability,Install,Install,3,"// Install SigPipe handler to handle kKeepAlive failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Deployability,Install,Install,3,"// Install Termination handler",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Deployability,Install,Install,3,"// Install seg violation handler",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Safety,Avoid,Avoid,3,"// Avoid doubling the exit operations",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:39,Safety,avoid,avoid,39,"// Remove input and signal handlers to avoid spurious ""signals""; // for closing activities executed upon exit()",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the server setup afetr forking.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:21,Testability,log,log,21,"// Close the current log file",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:67,Testability,log,logs,67,"// If for some reason we failed setting a redirection file for the logs; // we cannot continue",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Deployability,Install,Install,3,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:25,Integrability,message,message,25,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:9,Availability,failure,failure,9,"// Setup failure",MatchSource.CODE_COMMENT,proof/proof/src/TProofServLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:276,Integrability,message,message,276,"// If this is a supermaster server, find the config file and start; // submaster servers as specified in the config file.; // There is a difference in startup between a slave and a submaster; // in which the submaster will issue a kPROOF_LOGFILE and; // then a kPROOF_LOGDONE message (which must be collected); // while slaves do not.",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:45,Modifiability,config,config,45,"// If this is a supermaster server, find the config file and start; // submaster servers as specified in the config file.; // There is a difference in startup between a slave and a submaster; // in which the submaster will issue a kPROOF_LOGFILE and; // then a kPROOF_LOGDONE message (which must be collected); // while slaves do not.",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:109,Modifiability,config,config,109,"// If this is a supermaster server, find the config file and start; // submaster servers as specified in the config file.; // There is a difference in startup between a slave and a submaster; // in which the submaster will issue a kPROOF_LOGFILE and; // then a kPROOF_LOGDONE message (which must be collected); // while slaves do not.",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:25,Security,password,password,25,"// Add group info in the password firdl, if any",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:36,Security,password,password,36,"// Set also the user, otherwise the password is not exported",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:42,Energy Efficiency,monitor,monitor,42,"// Add to global list (we will add to the monitor list after; // finalizing the server startup)",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:3,Energy Efficiency,Monitor,Monitor,3,"// Monitor good slaves",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:9,Integrability,protocol,protocol,9,"// check protocol compatability; // protocol 1 is not supported anymore",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:36,Integrability,protocol,protocol,36,"// check protocol compatability; // protocol 1 is not supported anymore",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:40,Integrability,message,messages,40,"//Get kPROOF_LOGFILE and kPROOF_LOGDONE messages",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:288,Availability,error,error,288,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector (.C) file.; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate a TDSet.",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:18,Security,validat,validated,18,"// set dset to be validated in Collect()",MatchSource.CODE_COMMENT,proof/proof/src/TProofSuperMaster.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:98,Testability,log,log,98,"////////////////////////////////////////////////////////////////////////////////; /// Add part of log file concerning TQueryResult pq to its macro; /// container.",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:198,Performance,load,loaded,198,"////////////////////////////////////////////////////////////////////////////////; /// Scan the queries directory for the results of previous queries.; /// The headers of the query results found are loaded in fPreviousQueries.; /// The full query result can be retrieved via TProof::Retrieve.",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:3,Deployability,Update,Update,3,"// Update dir counters",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:10,Availability,failure,failure,10,"// Notify failure",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:38,Testability,log,logs,38,"// Some notification (useful in large logs)",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:13,Modifiability,variab,variables,13,"// Fill some variables; in the CPU time we do not include anymore the time; // used on the master for preparing and merging, because we want to measure; // the efficiency or farction of time useful for work doen by workers",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx:12,Testability,log,logs,12,"// Save the logs into the query result instance",MatchSource.CODE_COMMENT,proof/proof/src/TQueryResultManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TQueryResultManager.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSelVerifyDataSet.cxx:133,Energy Efficiency,monitor,monitoring,133,"// Check which files have been staged, this can be replaced by a bulk command,; // once it exists in the xrdclient; // For real time monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TSelVerifyDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSelVerifyDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:569,Performance,perform,performance,569,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 14/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSlave; \ingroup proofkernel. Class describing a PROOF worker server. It contains information like the; workers host name, ordinal number, performance index, socket, etc.; Objects of this class can only be created via TProof member functions. */",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:133,Performance,perform,perform,133,"// Open authenticated connection to remote PROOF slave server.; // If a connection was already open (fSocket != 0), re-use it; // to perform authentication (optimization needed to avoid a double; // opening in case this is called by TXSlave).",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:157,Performance,optimiz,optimization,157,"// Open authenticated connection to remote PROOF slave server.; // If a connection was already open (fSocket != 0), re-use it; // to perform authentication (optimization needed to avoid a double; // opening in case this is called by TXSlave).",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:180,Safety,avoid,avoid,180,"// Open authenticated connection to remote PROOF slave server.; // If a connection was already open (fSocket != 0), re-use it; // to perform authentication (optimization needed to avoid a double; // opening in case this is called by TXSlave).",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:8,Security,authenticat,authenticated,8,"// Open authenticated connection to remote PROOF slave server.; // If a connection was already open (fSocket != 0), re-use it; // to perform authentication (optimization needed to avoid a double; // opening in case this is called by TXSlave).",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:141,Security,authenticat,authentication,141,"// Open authenticated connection to remote PROOF slave server.; // If a connection was already open (fSocket != 0), re-use it; // to perform authentication (optimization needed to avoid a double; // opening in case this is called by TXSlave).",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:20,Integrability,message,message,20,"// get back startup message of proofserv (we are now talking with; // the real proofserver and not anymore with the proofd front-end)",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:12,Integrability,protocol,protocol,12,"// exchange protocol level between client and master and between; // master and slave",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:3,Integrability,protocol,protocols,3,"// protocols less than 4 are incompatible",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:3,Integrability,protocol,protocol,3,"// protocol of last slave on master",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:13,Security,authenticat,authentication,13,"//; // Setup authentication related stuff for ald versions",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:25,Modifiability,config,config,25,"//; // Send ordinal (and config) info to slave (or master)",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:160,Safety,avoid,avoid,160,"////////////////////////////////////////////////////////////////////////////////; /// Init a PROOF slave object using the connection opened via s. Used to; /// avoid double opening when an attempt via TXSlave found a remote proofd.",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:78,Integrability,protocol,protocol,78,"// deactivate used sec context if talking to proofd daemon running; // an old protocol (sec context disactivated remotely)",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:109,Performance,perform,performance,109,"////////////////////////////////////////////////////////////////////////////////; /// Used to sort slaves by performance index.",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:92,Security,authenticat,authentication,92,"////////////////////////////////////////////////////////////////////////////////; /// Setup authentication related stuff for old versions.; /// Provided for backward compatibility.",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:3,Performance,Load,Load,3,"// Load libraries needed for (server) authentication ...",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:38,Security,authenticat,authentication,38,"// Load libraries needed for (server) authentication ...",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:26,Modifiability,plugin,plugin,26,"// We do this without the plugin manager because it blocks the CINT mutex; // breaking the parallel startup",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:3,Performance,Load,Load,3,"// Load the library containing TXSlave ...",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:3,Performance,Load,Load,3,"// Load the right class",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:86,Availability,Ping,Ping,86,"////////////////////////////////////////////////////////////////////////////////; /// Ping the remote master or slave servers.; /// Returns 0 if ok, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:163,Availability,error,error,163,"////////////////////////////////////////////////////////////////////////////////; /// Ping the remote master or slave servers.; /// Returns 0 if ok, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:174,Availability,error,error,174,"////////////////////////////////////////////////////////////////////////////////; /// Send interrupt OOB byte to master or slave servers.; /// Returns 0 if ok, -1 in case of error",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:29,Integrability,message,message,29,"// Send one byte out-of-band message to server",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:273,Performance,queue,queue,273,"// EWOULDBLOCK; //; // The OOB data has not yet arrived: flush the input stream; //; // In some systems (Solaris) regular recv() does not return upon; // receipt of the oob byte, which makes the below call to recv(); // block indefinitely if there are no other data in the queue.; // FIONREAD ioctl can be used to check if there are actually any; // data to be flushed. If not, wait for a while for the oob byte; // to arrive and try to read it again.; //",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:7,Testability,log,log,7,"// Get log file from master or slave after a hard interrupt",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:7,Testability,log,log,7,"// Get log file from master or slave after a soft interrupt",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:14,Integrability,message,message,14,"// Unexpected message, just receive log file",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:36,Testability,log,log,36,"// Unexpected message, just receive log file",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:96,Safety,abort,abort,96,"////////////////////////////////////////////////////////////////////////////////; /// Sent stop/abort request to PROOF server.",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:91,Integrability,message,message,91,"////////////////////////////////////////////////////////////////////////////////; /// Send message to intermediate coordinator. Only meaningful when there is one,; /// i.e. in XPD framework",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:227,Availability,recover,recovered,227,"////////////////////////////////////////////////////////////////////////////////; /// Set an alias for this session. If reconnection is supported, the alias; /// will be communicated to the remote coordinator so that it can be recovered; /// when reconnecting",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:227,Safety,recover,recovered,227,"////////////////////////////////////////////////////////////////////////////////; /// Set an alias for this session. If reconnection is supported, the alias; /// will be communicated to the remote coordinator so that it can be recovered; /// when reconnecting",MatchSource.CODE_COMMENT,proof/proof/src/TSlave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:89,Availability,error,error,89,"//______________________________________________________________________________; //---- error handling ----------------------------------------------------------; //---- Needed to avoid blocking on the CINT mutex in printouts -----------------; ////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,proof/proof/src/TSlaveLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:345,Availability,Error,ErrorHandler,345,"//______________________________________________________________________________; //---- error handling ----------------------------------------------------------; //---- Needed to avoid blocking on the CINT mutex in printouts -----------------; ////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,proof/proof/src/TSlaveLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:332,Integrability,Interface,Interface,332,"//______________________________________________________________________________; //---- error handling ----------------------------------------------------------; //---- Needed to avoid blocking on the CINT mutex in printouts -----------------; ////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,proof/proof/src/TSlaveLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:181,Safety,avoid,avoid,181,"//______________________________________________________________________________; //---- error handling ----------------------------------------------------------; //---- Needed to avoid blocking on the CINT mutex in printouts -----------------; ////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,proof/proof/src/TSlaveLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:20,Integrability,message,message,20,"// Get back startup message of proofserv (we are now talking with; // the real proofserver and not anymore with the proofd front-end)",MatchSource.CODE_COMMENT,proof/proof/src/TSlaveLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:501,Performance,load,load,501,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 9/7/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPacketizer; \ingroup proofkernel. The packetizer is a load balancing object created for each query.; It generates packets to be processed on PROOF worker servers.; A packet is an event range (begin entry and number of entries) or; object range (first object and number of objects) in a TTree; (entries) or a directory (objects) in a file.; Packets are generated taking into account the performance of the; remote machine, the time it took to process a previous packet on; the remote machine, the locality of the database files, etc. TVirtualPacketizer includes common parts of PROOF packetizers.; Look in subclasses for details.; The default packetizer is TPacketizerAdaptive (TPacketizer for Proof-Lite).; To use an alternative one, for instance - the TPacketizer, call:; proof->SetParameter(""PROOF_Packetizer"", ""TPacketizer"");. */",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:833,Performance,perform,performance,833,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 9/7/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPacketizer; \ingroup proofkernel. The packetizer is a load balancing object created for each query.; It generates packets to be processed on PROOF worker servers.; A packet is an event range (begin entry and number of entries) or; object range (first object and number of objects) in a TTree; (entries) or a directory (objects) in a file.; Packets are generated taking into account the performance of the; remote machine, the time it took to process a previous packet on; the remote machine, the locality of the database files, etc. TVirtualPacketizer includes common parts of PROOF packetizers.; Look in subclasses for details.; The default packetizer is TPacketizerAdaptive (TPacketizer for Proof-Lite).; To use an alternative one, for instance - the TPacketizer, call:; proof->SetParameter(""PROOF_Packetizer"", ""TPacketizer"");. */",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:11,Deployability,configurat,configuration,11,"// General configuration parameters",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:11,Modifiability,config,configuration,11,"// General configuration parameters",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:99,Deployability,update,update,99,"// Create the list to save them in the query result (each derived packetizer is; // responsible to update this coherently)",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:15,Energy Efficiency,monitor,monitoring,15,"// Performance monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:3,Performance,Perform,Performance,3,"// Performance monitoring",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:30,Performance,perform,performance,30,"// Init circularity ntple for performance calculations",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:172,Safety,detect,detected,172,"// Init progress timer, if requested; // The timer is destroyed (and therefore stopped) by the relevant TPacketizer implementation; // in GetNextPacket when end of work is detected.",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:3,Availability,Error,Error,3,"// Error always reported?",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:2,Safety,abort,abort,2,/*abort*/,MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:100,Integrability,message,message,100,"////////////////////////////////////////////////////////////////////////////////; /// Send progress message to client.",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:16,Deployability,update,updates,16,"// Time between updates",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:3,Deployability,Update,Update,3,"// Update proc time",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:28,Performance,cache,cache,28,"// Get the last to spot the cache readings",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:3,Integrability,Message,Message,3,"// Message to be sent over",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:12,Integrability,message,message,12,"// Fill the message now",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:12,Integrability,message,message,12,"// Fill the message now",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:8,Integrability,message,message,8,"// send message to client;",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:3,Testability,Log,Log,3,"// Log locally",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:209,Availability,failure,failure,209,"////////////////////////////////////////////////////////////////////////////////; /// Adds new workers. Must be implemented by each real packetizer properly.; /// Returns the number of workers added, or -1 on failure.",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualProofPlayer.cxx:482,Integrability,interface,interface,482,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 15/03/07; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualProofPlayer; \ingroup proofkernel. Abstract interface for the PROOF player.; See the concrete implementations under 'proofplayer' for details. */",MatchSource.CODE_COMMENT,proof/proof/src/TVirtualProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:137,Testability,benchmark,benchmarks,137,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBench //; // //; // Steering class for PROOF benchmarks //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:3,Deployability,Release,Release,3,"// Release cache for data reads between runs",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:11,Performance,cache,cache,11,"// Release cache for data reads between runs",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:31,Testability,benchmark,benchmarks,31,"// Selector to be used for CPU benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:27,Performance,load,loaded,27,"// List of par files to be loaded for CPU benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:42,Testability,benchmark,benchmarks,42,"// List of par files to be loaded for CPU benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:32,Testability,benchmark,benchmarks,32,"// Selector to be used for data benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:27,Performance,load,loaded,27,"// List of par files to be loaded for data benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:43,Testability,benchmark,benchmarks,43,"// List of par files to be loaded for data benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:45,Testability,benchmark,benchmarks,45,"// Selector to be used for generate data for benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:27,Performance,load,loaded,27,"// List of par files to be loaded to generate data for benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:55,Testability,benchmark,benchmarks,55,"// List of par files to be loaded to generate data for benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:43,Testability,test,test,43,"// Strings describing the cluster for this test (saved in the output file)",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:3,Usability,Simpl,Simple,3,"// Simple 1st degree polynomial",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:3,Usability,Simpl,Simple,3,"// Simple 2nd degree polynomial",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h:28,Testability,benchmark,benchmarks,28,"// Steering class for PROOF benchmarks",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBench.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBench.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRun.h:145,Testability,benchmark,benchmark,145,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRun //; // //; // Abstract base class for PROOF benchmark run. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRun.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRun.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRun.h:22,Performance,load,loaded,22,"// List of PARs to be loaded",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRun.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRun.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRun.h:32,Testability,benchmark,benchmark,32,"//Abstract base class for PROOF benchmark run",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRun.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRun.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:138,Testability,benchmark,benchmark,138,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRunCPU //; // //; // CPU-intensive PROOF benchmark test generates events and fill 1, 2, //; //or 3-D histograms. No I/O activity is involved. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:148,Testability,test,test,148,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRunCPU //; // //; // CPU-intensive PROOF benchmark test generates events and fill 1, 2, //; //or 3-D histograms. No I/O activity is involved. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:13,Performance,perform,performed,13,"//test to be performed every fStep workers",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:2,Testability,test,test,2,"//test to be performed every fStep workers",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:10,Performance,perform,performance,10,"//list of performance plots",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:13,Performance,perform,performance,13,"//canvas for performance plots",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:22,Testability,benchmark,benchmark,22,"//CPU-intensive PROOF benchmark",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunCPU.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:352,Performance,Perform,Performance,352,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRunDataRead //; // //; // I/O-intensive PROOF benchmark test reads in event files distributed //; // on the cluster. Number of events processed per second and size of //; // events processed per second are plotted against number of active //; // workers. Performance rate for unit packets and performance rate //; // for query are plotted. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:390,Performance,perform,performance,390,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRunDataRead //; // //; // I/O-intensive PROOF benchmark test reads in event files distributed //; // on the cluster. Number of events processed per second and size of //; // events processed per second are plotted against number of active //; // workers. Performance rate for unit packets and performance rate //; // for query are plotted. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:143,Testability,benchmark,benchmark,143,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRunDataRead //; // //; // I/O-intensive PROOF benchmark test reads in event files distributed //; // on the cluster. Number of events processed per second and size of //; // events processed per second are plotted against number of active //; // workers. Performance rate for unit packets and performance rate //; // for query are plotted. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:153,Testability,test,test,153,"//////////////////////////////////////////////////////////////////////////; // //; // TProofBenchRunDataRead //; // //; // I/O-intensive PROOF benchmark test reads in event files distributed //; // on the cluster. Number of events processed per second and size of //; // events processed per second are plotted against number of active //; // workers. Performance rate for unit packets and performance rate //; // for query are plotted. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:13,Performance,perform,performed,13,"//test to be performed every fStep workers",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:2,Testability,test,test,2,"//test to be performed every fStep workers",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:3,Deployability,Release,Release,3,"// Release cache for data reads between runs",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:11,Performance,cache,cache,11,"// Release cache for data reads between runs",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:10,Performance,perform,performance,10,"//list of performance plots",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:13,Performance,perform,performance,13,"//canvas for performance profile histograms",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h:21,Testability,benchmark,benchmark,21,"//IO-intensive PROOF benchmark",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchRunDataRead.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunDataRead.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchTypes.h:3,Deployability,Release,Release,3,"// Release memory cache for the given file",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchTypes.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchTypes.h:18,Performance,cache,cache,18,"// Release memory cache for the given file",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchTypes.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchTypes.h:16,Performance,cache,cache,16,"// Check memory cache for the given files",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofBenchTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchTypes.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:147,Performance,perform,performance,147,"//////////////////////////////////////////////////////////////////////////; // //; // TProofPerfAnalysis //; // //; // Set of tools to analyse the performance tree //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:12,Performance,perform,performance,12,"// The open performance file",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:19,Performance,perform,performance,19,"// The name of the performance tree",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:7,Performance,perform,performance,7,"// The performance tree",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:17,Performance,latency,latency,17,"// Max retrieval latency per packet",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:10,Performance,latency,latency,10,"// Packet latency distribution vs time",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h:31,Performance,perform,performance,31,"// Set of tools to analyse the performance tree",MatchSource.CODE_COMMENT,proof/proofbench/inc/TProofPerfAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofPerfAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:308,Performance,cache,cache,308,"//////////////////////////////////////////////////////////////////////////; // //; // TSelEvent //; // //; // PROOF selector for I/O benchmark test. //; // For I/O benchmark, event files are read in and histograms are filled.//; // For memory clean-up, dedicated files large enough to clean up memory //; // cache on the machine are read in. Or memory clean-up can be //; // accompolished by system call on Linux machine inside SlaveBegin(..) //; // which should be much faster the reading in large files. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:133,Testability,benchmark,benchmark,133,"//////////////////////////////////////////////////////////////////////////; // //; // TSelEvent //; // //; // PROOF selector for I/O benchmark test. //; // For I/O benchmark, event files are read in and histograms are filled.//; // For memory clean-up, dedicated files large enough to clean up memory //; // cache on the machine are read in. Or memory clean-up can be //; // accompolished by system call on Linux machine inside SlaveBegin(..) //; // which should be much faster the reading in large files. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:143,Testability,test,test,143,"//////////////////////////////////////////////////////////////////////////; // //; // TSelEvent //; // //; // PROOF selector for I/O benchmark test. //; // For I/O benchmark, event files are read in and histograms are filled.//; // For memory clean-up, dedicated files large enough to clean up memory //; // cache on the machine are read in. Or memory clean-up can be //; // accompolished by system call on Linux machine inside SlaveBegin(..) //; // which should be much faster the reading in large files. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:164,Testability,benchmark,benchmark,164,"//////////////////////////////////////////////////////////////////////////; // //; // TSelEvent //; // //; // PROOF selector for I/O benchmark test. //; // For I/O benchmark, event files are read in and histograms are filled.//; // For memory clean-up, dedicated files large enough to clean up memory //; // cache on the machine are read in. Or memory clean-up can be //; // accompolished by system call on Linux machine inside SlaveBegin(..) //; // which should be much faster the reading in large files. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:35,Testability,benchmark,benchmark,35,"//PROOF selector for I/O-intensive benchmark test",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:45,Testability,test,test,45,"//PROOF selector for I/O-intensive benchmark test",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:240,Integrability,rout,routine,240,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses of the tree; // will be set. It is normaly not necessary to make changes to the; // generated code, but the routine can be extended by the user if needed.; // Init() will be called many times when running with PROOF.; // Set branch addresses",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:255,Modifiability,extend,extended,255,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses of the tree; // will be set. It is normaly not necessary to make changes to the; // generated code, but the routine can be extended by the user if needed.; // Init() will be called many times when running with PROOF.; // Set branch addresses",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:308,Integrability,rout,routine,308,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. Typically here the branch pointers; // will be retrieved. It is normaly not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed.",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h:323,Modifiability,extend,extended,323,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. Typically here the branch pointers; // will be retrieved. It is normaly not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed.",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEvent.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEvent.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h:240,Integrability,rout,routine,240,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses of the tree; // will be set. It is normaly not necessary to make changes to the; // generated code, but the routine can be extended by the user if needed.; // Init() will be called many times when running with PROOF.",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEventGen.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h:255,Modifiability,extend,extended,255,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses of the tree; // will be set. It is normaly not necessary to make changes to the; // generated code, but the routine can be extended by the user if needed.; // Init() will be called many times when running with PROOF.",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEventGen.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h:308,Integrability,rout,routine,308,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. Typically here the branch pointers; // will be retrieved. It is normaly not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed.",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEventGen.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h:323,Modifiability,extend,extended,323,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. Typically here the branch pointers; // will be retrieved. It is normaly not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed.",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelEventGen.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelEventGen.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHandleDataSet.h:148,Deployability,release,release,148,"//////////////////////////////////////////////////////////////////////////; // //; // TSelHandleDataSet //; // //; // PROOF selector for file cache release. //; // List of files to be cleaned for each node is provided by client. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelHandleDataSet.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHandleDataSet.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHandleDataSet.h:142,Performance,cache,cache,142,"//////////////////////////////////////////////////////////////////////////; // //; // TSelHandleDataSet //; // //; // PROOF selector for file cache release. //; // List of files to be cleaned for each node is provided by client. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelHandleDataSet.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHandleDataSet.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h:135,Testability,benchmark,benchmark,135,"//////////////////////////////////////////////////////////////////////////; // //; // TSelHist //; // PROOF selector for CPU-intensive benchmark test. //; // Events are generated and 1-D, 2-D, and/or 3-D histograms are filled. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelHist.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h:145,Testability,test,test,145,"//////////////////////////////////////////////////////////////////////////; // //; // TSelHist //; // PROOF selector for CPU-intensive benchmark test. //; // Events are generated and 1-D, 2-D, and/or 3-D histograms are filled. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelHist.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h:35,Testability,benchmark,benchmark,35,"//PROOF selector for CPU-intensive benchmark test",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelHist.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h:45,Testability,test,test,45,"//PROOF selector for CPU-intensive benchmark test",MatchSource.CODE_COMMENT,proof/proofbench/inc/TSelHist.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHist.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:450,Testability,benchmark,benchmark,450,"// @(#)root/proof:$Id$; // Author: G.Ganis, S.Ryu Feb 2011; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup proofbench PROOF benchmark utilities; \ingroup proof. Set of utilities to benchmark a PROOF facility. */; /** \class TProofBench; \ingroup proofbench. Steering class for PROOF benchmarks. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:507,Testability,benchmark,benchmark,507,"// @(#)root/proof:$Id$; // Author: G.Ganis, S.Ryu Feb 2011; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup proofbench PROOF benchmark utilities; \ingroup proof. Set of utilities to benchmark a PROOF facility. */; /** \class TProofBench; \ingroup proofbench. Steering class for PROOF benchmarks. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:609,Testability,benchmark,benchmarks,609,"// @(#)root/proof:$Id$; // Author: G.Ganis, S.Ryu Feb 2011; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup proofbench PROOF benchmark utilities; \ingroup proof. Set of utilities to benchmark a PROOF facility. */; /** \class TProofBench; \ingroup proofbench. Steering class for PROOF benchmarks. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Usability,Simpl,Simple,86,"////////////////////////////////////////////////////////////////////////////////; /// Simple polynomial 1st degree",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Usability,Simpl,Simple,86,"////////////////////////////////////////////////////////////////////////////////; /// Simple polynomial 2nd degree",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:115,Performance,load,load,115,"////////////////////////////////////////////////////////////////////////////////; /// Constructor: check PROOF and load selectors PAR",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; /// Set the otuput file; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; /// Set the output file; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:138,Availability,error,error,138,"////////////////////////////////////////////////////////////////////////////////; /// Perform the CPU run; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform the CPU run; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:183,Availability,error,error,183,"////////////////////////////////////////////////////////////////////////////////; /// Perform the CPU run scanning over the number of workers per node; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform the CPU run scanning over the number of workers per node; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:22,Performance,perform,performance,22,"// Notify the cluster performance parameters",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:3,Safety,Sanity check,Sanity checks,3,"// Sanity checks",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:3,Safety,Sanity check,Sanity checks,3,"// Sanity checks",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:3,Testability,Test,Test,3,"// Test description string, if any",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:90,Performance,perform,performance,90,"////////////////////////////////////////////////////////////////////////////////; /// Get performance specs. Check file 'path', or files in directory 'path'; /// (default current directory).; /// The degree of the polynomial used for the fit is 'degfit' (default 1).",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:154,Availability,error,error,154,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset'; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset'; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:96,Testability,test,test,96,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset'; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:205,Availability,error,error,205,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset' scanning over the number of workers; /// per node.; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset' scanning over the number of workers; /// per node.; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:96,Testability,test,test,96,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset' scanning over the number of workers; /// per node.; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:22,Performance,perform,performance,22,"// Notify the cluster performance parameters",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:22,Performance,perform,performance,22,"// Notify the cluster performance parameters",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:158,Availability,error,error,158,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:101,Performance,cache,cache,101,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:212,Availability,error,error,212,"////////////////////////////////////////////////////////////////////////////////; /// Physically remove the dataset 'dset', i.e. remove the dataset and the files; /// it describes; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:898,Availability,error,error,898,"////////////////////////////////////////////////////////////////////////////////; /// Create the largest dataset for the run.; /// Defaults for; /// dataset name, filename root; /// are; /// ""BenchDataSet"", ""event""; /// respectively.; /// These can be changed via dset and fnroot, respectively.; /// The string 'fnroot' defines the location of the files, interpreted as an URL.; /// Examples:; /// fnroot files; /// 'event' `<datadir>`/event_`<ord>`_`<#>`.root; /// '/mss/event' /mss/event_`<ord>`_`<#>`.root; /// 'root://srv//mss/event?remote=1'; /// root://srv//mss/event_`<ord>`_`<#>`?remote=1.root; /// Default selector is TSelEventGen. Use SetDataGenSel and SetDataGenPar to change it; /// and to pass the list of PARs defining the alternative selector.; /// The argument 'nevt' controls the number of events per file (-1 for the default,; /// which is 30000).; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:3,Performance,Load,Load,3,"// Load the selector, if needed",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:3,Performance,Load,Load,3,"// Load the parfile",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:3,Performance,Load,Load,3,"// Load additional PAR files, if any or required by the alternative selector",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:7,Deployability,update,updated,7,"// Get updated information",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:226,Availability,error,error,226,"////////////////////////////////////////////////////////////////////////////////; /// Copy the files of dataset 'dset' to 'destdir' and create a new dataset named 'dsetdst'; /// decribing them.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:164,Performance,cache,cache,164,"////////////////////////////////////////////////////////////////////////////////; /// Set the PROOF instance to be used for dataset operations, like releasing; /// cache ...; /// Use SetProofDS(0) to reset and using the default PROOF",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBench.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:158,Availability,error,error,158,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:101,Performance,cache,cache,101,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:13,Performance,cache,cache,13,"// Clear the cache",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:3,Usability,Clear,Clear,3,"// Clear the cache",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:212,Availability,error,error,212,"////////////////////////////////////////////////////////////////////////////////; /// Physically remove the dataset 'dset', i.e. remove the dataset and the files; /// it describes; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:172,Availability,error,error,172,"////////////////////////////////////////////////////////////////////////////////; /// Copy the files of dataset 'dset' to another directory; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:212,Availability,error,error,212,"////////////////////////////////////////////////////////////////////////////////; /// Physically remove the dataset 'dset', i.e. remove the dataset and the files; /// it describes; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:3,Performance,Load,Load,3,"// Load the selector, if needed",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:3,Performance,Load,Load,3,"// Load the parfile",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRun.cxx:494,Testability,benchmark,benchmark,494,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRun; \ingroup proofbench. Abstract base class for PROOF benchmark runs. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRun.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRun.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRun.cxx:115,Performance,load,load,115,"////////////////////////////////////////////////////////////////////////////////; /// Constructor: check PROOF and load selectors PAR",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRun.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRun.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:487,Testability,benchmark,benchmark,487,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRunCPU; \ingroup proofbench. CPU-intensive PROOF benchmark test generates events and fill 1, 2, or 3-D histograms.; No I/O activity is involved. . */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:497,Testability,test,test,497,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRunCPU; \ingroup proofbench. CPU-intensive PROOF benchmark test generates events and fill 1, 2, or 3-D histograms.; No I/O activity is involved. . */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:90,Testability,benchmark,benchmark,90,"////////////////////////////////////////////////////////////////////////////////; /// Run benchmark; /// Input parameters; /// nevents: Number of events to run per file. When it is -1, use data member fNEvents.; /// start: Start scan with 'start' workers. When it is -1, use data member fStart.; /// When 0, the same number of workers are activated on all nodes.; /// stop: Stop scan at 'stop' workers. When it is -1 , use data member fStop.; /// step: Scan every 'step' workers. When it is -1, use data member fStep.; /// ntries: Number of repetitions. When it is -1, use data member fNTries.; /// debug: debug switch. When it is -1, use data member fDebug.; /// draw: draw switch. When it is -1, use data member fDraw.; /// Returns; /// Nothing",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:3,Performance,Load,Load,3,"// Load the selector, if needed",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:3,Performance,Load,Load,3,"// Load the parfile",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:3,Performance,Perform,Performance,3,"// Performance measures from TQueryResult",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:7,Performance,perform,performance,7,"//save performance profiles to file",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:8,Performance,perform,performance,8,"// Fill performance profiles using tree 't'(PROOF_PerfStats).; // Input parameters; // t: Proof output tree (PROOF_PerfStat) containing performance statistics.; // profile: Profile to be filled up with information from tree 't'.; // nactive: Number of active workers processed the query.; // Return; // Nothing; // find perfstat profile",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:136,Performance,perform,performance,136,"// Fill performance profiles using tree 't'(PROOF_PerfStats).; // Input parameters; // t: Proof output tree (PROOF_PerfStat) containing performance statistics.; // profile: Profile to be filled up with information from tree 't'.; // nactive: Number of active workers processed the query.; // Return; // Nothing; // find perfstat profile",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx:91,Performance,Perform,Performance,91,"////////////////////////////////////////////////////////////////////////////////; /// Draw Performance plots",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunCPU.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunCPU.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:683,Performance,Perform,Performance,683,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRunDataRead; \ingroup proofbench. I/O-intensive PROOF benchmark test reads in event files distributed; on the cluster. Number of events processed per second and size of; events processed per second are plotted against number of active; workers. Performance rate for unit packets and performance rate; for query are plotted. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:721,Performance,perform,performance,721,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRunDataRead; \ingroup proofbench. I/O-intensive PROOF benchmark test reads in event files distributed; on the cluster. Number of events processed per second and size of; events processed per second are plotted against number of active; workers. Performance rate for unit packets and performance rate; for query are plotted. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:492,Testability,benchmark,benchmark,492,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRunDataRead; \ingroup proofbench. I/O-intensive PROOF benchmark test reads in event files distributed; on the cluster. Number of events processed per second and size of; events processed per second are plotted against number of active; workers. Performance rate for unit packets and performance rate; for query are plotted. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:502,Testability,test,test,502,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofBenchRunDataRead; \ingroup proofbench. I/O-intensive PROOF benchmark test reads in event files distributed; on the cluster. Number of events processed per second and size of; events processed per second are plotted against number of active; workers. Performance rate for unit packets and performance rate; for query are plotted. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:90,Testability,benchmark,benchmark,90,"////////////////////////////////////////////////////////////////////////////////; /// Run benchmark; /// Input parameters; /// dset: Dataset on which to run; /// start: Start scan with 'start' workers.; /// stop: Stop scan at 'stop workers.; /// step: Scan every 'step' workers.; /// ntries: Number of tries. When it is -1, data member fNTries is used.; /// debug: debug switch.; /// Int_t: Ignored; /// Returns; /// Nothing",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:3,Performance,Load,Load,3,"// Load the selector, if needed",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:3,Performance,Load,Load,3,"// Load the parfile",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:3,Performance,Perform,Performance,3,"// Performance measures from TQueryResult",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:7,Performance,perform,performance,7,"//save performance profiles to file",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:3,Deployability,Update,Update,3,"// Update counters",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:8,Performance,perform,performance,8,"// Fill performance profiles using tree 't'(PROOF_PerfStats).; // Input parameters; // t: Proof output tree (PROOF_PerfStat) containing performance; // statistics.; // nactive: Number of active workers processed the query.; // Return; // Nothing; // extract timing information",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:136,Performance,perform,performance,136,"// Fill performance profiles using tree 't'(PROOF_PerfStats).; // Input parameters; // t: Proof output tree (PROOF_PerfStat) containing performance; // statistics.; // nactive: Number of active workers processed the query.; // Return; // Nothing; // extract timing information",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx:32,Performance,cache,cache,32,"// For Mac Os X only: do not OS cache the files read",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofBenchRunDataRead.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchRunDataRead.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx:3,Deployability,Update,Update,3,"// Update counters and created active nodes map",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofNodes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx:105,Integrability,protocol,protocol,105,"// The TProof::ActivateWorker/TProof::DeactivateWorker functions were fixed /; // improved starting with protocol version 33",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofNodes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx:55,Integrability,protocol,protocol,55,"// This resets the lists to avoid the problem fixed in protocol 33",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofNodes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx:28,Safety,avoid,avoid,28,"// This resets the lists to avoid the problem fixed in protocol 33",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofNodes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofNodes.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:492,Performance,perform,performance,492,"// @(#)root/proofx:$Id$; // Author: G.Ganis Nov 2011; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofPerfAnalysis; \ingroup proofbench. Set of tools to analyse the performance tree. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:7,Performance,latency,latency,7,"// Tot latency",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:10,Performance,latency,latency,10,"// Packet latency vs time",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:3,Performance,Load,Load,3,"// Load the performance tree",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:12,Performance,perform,performance,12,"// Load the performance tree",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load tree fTreeName from directory 'dir'. If not found, look for the; /// first TTree in the directory (and sub-directories) with the name containing; /// fTreeName.; /// The tree pointer is saved in fTree.",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:8,Performance,tune,tune,8,"// Fine-tune stat printing",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:54,Deployability,update,update,54,"// Preparation is done in SetSaveResult, here we just update",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:111,Security,validat,validate,111,"////////////////////////////////////////////////////////////////////////////////; /// Set save result mode and validate 'file' according to 'mode'.; /// Return 0 on success, -1 if any problem with the file is encountered; /// (save result mode is not enabled in such a case).; /// If 'file' is null saving is disabled.",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx:24,Security,validat,validate,24,"// New or changed file: validate",MatchSource.CODE_COMMENT,proof/proofbench/src/TProofPerfAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofPerfAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:645,Performance,cache,cache,645,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelEvent; \ingroup proofbench. Selector for PROOF I/O benchmark test.; For the I/O benchmark, event files are read in and histograms are filled.; For memory clean-up, dedicated files large enough to clean up memory ; cache on the machine are read in. Or memory clean-up can be ; accompolished by system call on Linux machine inside SlaveBegin(..) ; which should be much faster the reading in large files. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:482,Testability,benchmark,benchmark,482,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelEvent; \ingroup proofbench. Selector for PROOF I/O benchmark test.; For the I/O benchmark, event files are read in and histograms are filled.; For memory clean-up, dedicated files large enough to clean up memory ; cache on the machine are read in. Or memory clean-up can be ; accompolished by system call on Linux machine inside SlaveBegin(..) ; which should be much faster the reading in large files. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:492,Testability,test,test,492,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelEvent; \ingroup proofbench. Selector for PROOF I/O benchmark test.; For the I/O benchmark, event files are read in and histograms are filled.; For memory clean-up, dedicated files large enough to clean up memory ; cache on the machine are read in. Or memory clean-up can be ; accompolished by system call on Linux machine inside SlaveBegin(..) ; which should be much faster the reading in large files. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:511,Testability,benchmark,benchmark,511,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelEvent; \ingroup proofbench. Selector for PROOF I/O benchmark test.; For the I/O benchmark, event files are read in and histograms are filled.; For memory clean-up, dedicated files large enough to clean up memory ; cache on the machine are read in. Or memory clean-up can be ; accompolished by system call on Linux machine inside SlaveBegin(..) ; which should be much faster the reading in large files. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:526,Availability,avail,available,526,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:279,Performance,load,loaded,279,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:512,Performance,load,loaded,512,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:653,Usability,simpl,simple,653,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:17,Testability,test,test,17,"// Determine the test type",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:36,Availability,avail,available,36,"// Directory is not writable or not available, use default directory",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:525,Availability,error,error,525,"////////////////////////////////////////////////////////////////////////////////; ///Generate files for IO-bound run; ///Input parameters; /// filename: The name of the file to be generated; /// sizenevents: Either the number of events to generate when; /// filetype==kPBFileBenchmark; /// or the size of the file to generate when; /// filetype==kPBFileCleanup; ///Returns; /// Either Number of entries in the file when; /// filetype==kPBFileBenchmark; /// or bytes written when filetype==kPBFileCleanup; ///return 0 in case error",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:526,Availability,avail,available,526,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:279,Performance,load,loaded,279,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:512,Performance,load,loaded,512,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:653,Usability,simpl,simple,653,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:26,Security,access,access,26,"// Set the Url for remote access",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelEventGen.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:497,Deployability,release,release,497,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelHandleDataSet; \ingroup proofbench. PROOF selector for file cache release.; List of files to be cleaned for each node is provided by client. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:491,Performance,cache,cache,491,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelHandleDataSet; \ingroup proofbench. PROOF selector for file cache release.; List of files to be cleaned for each node is provided by client. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:86,Deployability,Release,Release,86,"////////////////////////////////////////////////////////////////////////////////; /// Release the memory cache associated with file 'fn'.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:105,Performance,cache,cache,105,"////////////////////////////////////////////////////////////////////////////////; /// Release the memory cache associated with file 'fn'.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:103,Performance,cache,cache,103,"////////////////////////////////////////////////////////////////////////////////; /// Check the memory cache associated with file 'fn'.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:526,Availability,avail,available,526,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:279,Performance,load,loaded,279,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:512,Performance,load,loaded,512,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:653,Usability,simpl,simple,653,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:3,Deployability,Release,Release,3,"// Release the file cache",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:20,Performance,cache,cache,20,"// Release the file cache",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:18,Performance,cache,cache,18,"// Check the file cache",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHandleDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:491,Testability,benchmark,benchmark,491,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelHist; \ingroup proofbench. PROOF selector for CPU-intensive benchmark test.; Events are generated and 1-D, 2-D, and/or 3-D histograms are filled. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:501,Testability,test,test,501,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelHist; \ingroup proofbench. PROOF selector for CPU-intensive benchmark test.; Events are generated and 1-D, 2-D, and/or 3-D histograms are filled. */",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:529,Availability,avail,available,529,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelHist::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:279,Performance,load,loaded,279,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelHist::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:515,Performance,load,loaded,515,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelHist::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:823,Safety,Abort,Abort,823,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelHist::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:656,Usability,simpl,simple,656,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelHist::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:9,Deployability,update,update,9,"// Final update",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:9,Deployability,update,update,9,"// Final update",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:9,Deployability,update,update,9,"// Final update",MatchSource.CODE_COMMENT,proof/proofbench/src/TSelHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TDrawFeedback.h:151,Usability,feedback,feedback,151,"//////////////////////////////////////////////////////////////////////////; // //; // TDrawFeedback //; // //; // Utility class to draw objects in the feedback list during queries. //; // Draws histograms in separated canvases and user-defined objects via //; // Draw(). Users requiring advanced treatment should implement their //; // own version following this example. See also TStatsFeedback. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TDrawFeedback.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TDrawFeedback.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TDrawFeedback.h:23,Usability,feedback,feedback,23,"// Present PROOF query feedback",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TDrawFeedback.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TDrawFeedback.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:3,Performance,Load,Load,3,"// Load the directory pointed to by fElem",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:24,Performance,cache,cache,24,"// instance of the tree cache for the tree",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:11,Performance,cache,cache,11,"// Whether cache is in learning phase",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:23,Usability,learn,learning,23,"// Whether cache is in learning phase",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:29,Performance,cache,cache,29,"// Control usage of the tree cache",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:3,Performance,Cache,Cache,3,"// Cache size",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h:83,Performance,load,loaded,83,"// Files && Trees currently open; // Auxilliary class to keep track open files and loaded trees",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TEventIter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TEventIter.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h:428,Performance,perform,performance,428,"//////////////////////////////////////////////////////////////////////////; // //; // TPacketizer //; // //; // This class generates packets to be processed on PROOF slave servers. //; // A packet is an event range (begin entry and number of entries) or //; // object range (first object and number of objects) in a TTree //; // (entries) or a directory (objects) in a file. //; // Packets are generated taking into account the performance of the //; // remote machine, the time it took to process a previous packet on //; // the remote machine, the locality of the database files, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h:26,Performance,perform,performance,26,"// maximum of our slaves' performance index",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h:53,Safety,avoid,avoid,53,"// maximum number of workers per filenode (Long_t to avoid; // warnings from backward compatibility support)",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h:3,Availability,error,error,3,"// error on accidental usage",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:186,Performance,load,load-balancing,186,"//////////////////////////////////////////////////////////////////////////; // //; // TPacketizerAdaptive //; // //; // This packetizer is based on TPacketizer but uses different //; // load-balancing algorithms and data structures. //; // Two main improvements in the load-balancing strategy: //; // - First one was to change the order in which the files are assigned //; // to the computing nodes in such a way that network transfers are //; // evenly distributed in the query time. Transfer of the remote files //; // was often becoming a bottleneck at the end of a query. //; // - The other improvement is the use of time-based packet size. We //; // measure the processing rate of all the nodes and calculate the //; // packet size, so that it takes certain amount of time. In this way //; // packetizer prevents the situation where the query can't finish //; // because of one slow node. //; // //; // The data structures: TFileStat, TFileNode and TSlaveStat are //; // enriched + changed and TFileNode::Compare method is changed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:269,Performance,load,load-balancing,269,"//////////////////////////////////////////////////////////////////////////; // //; // TPacketizerAdaptive //; // //; // This packetizer is based on TPacketizer but uses different //; // load-balancing algorithms and data structures. //; // Two main improvements in the load-balancing strategy: //; // - First one was to change the order in which the files are assigned //; // to the computing nodes in such a way that network transfers are //; // evenly distributed in the query time. Transfer of the remote files //; // was often becoming a bottleneck at the end of a query. //; // - The other improvement is the use of time-based packet size. We //; // measure the processing rate of all the nodes and calculate the //; // packet size, so that it takes certain amount of time. In this way //; // packetizer prevents the situation where the query can't finish //; // because of one slow node. //; // //; // The data structures: TFileStat, TFileNode and TSlaveStat are //; // enriched + changed and TFileNode::Compare method is changed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:542,Performance,bottleneck,bottleneck,542,"//////////////////////////////////////////////////////////////////////////; // //; // TPacketizerAdaptive //; // //; // This packetizer is based on TPacketizer but uses different //; // load-balancing algorithms and data structures. //; // Two main improvements in the load-balancing strategy: //; // - First one was to change the order in which the files are assigned //; // to the computing nodes in such a way that network transfers are //; // evenly distributed in the query time. Transfer of the remote files //; // was often becoming a bottleneck at the end of a query. //; // - The other improvement is the use of time-based packet size. We //; // measure the processing rate of all the nodes and calculate the //; // packet size, so that it takes certain amount of time. In this way //; // packetizer prevents the situation where the query can't finish //; // because of one slow node. //; // //; // The data structures: TFileStat, TFileNode and TSlaveStat are //; // enriched + changed and TFileNode::Compare method is changed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:26,Performance,perform,performance,26,"// maximum of our slaves' performance index",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:11,Integrability,synchroniz,synchronization,11,"// control synchronization of cache and packet sizes",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:30,Performance,cache,cache,30,"// control synchronization of cache and packet sizes",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:45,Performance,cache,cache-to-packet,45,"// max file entries to avg allowed ratio for cache-to-packet sync",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:53,Safety,avoid,avoid,53,"// maximum number of workers per filenode (Long_t to avoid; // warnings from backward compatibility support)",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:45,Energy Efficiency,adapt,adaptive,45,"// 0 means the classic and 1 (default) - the adaptive strategy",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:45,Modifiability,adapt,adaptive,45,"// 0 means the classic and 1 (default) - the adaptive strategy",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:3,Availability,error,error,3,"// error on accidental usage",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerAdaptive.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerFile.h:3,Availability,error,error,3,"// error on accidental usage",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerFile.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerFile.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerMulti.h:3,Availability,error,error,3,"// error on accidental usage",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerMulti.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerMulti.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerUnit.h:387,Performance,perform,performance,387,"//////////////////////////////////////////////////////////////////////////; // //; // TPacketizerUnit //; // //; // This packetizer generates packets of generic units, representing the //; // number of times an operation cycle has to be repeated by the worker //; // node, e.g. the number of Monte carlo events to be generated. //; // Packets sizes are generated taking into account the performance of //; // worker nodes, based on the time needed to process previous packets, //; // with the goal of having all workers ending at the same time. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerUnit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerUnit.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerUnit.h:3,Availability,error,error,3,"// error on accidental usage",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TPacketizerUnit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerUnit.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofDraw.h:200,Availability,error,error,200,"// Adds all vectors holded by all TProofVectorContainers in the collection; // the vector holded by this TProofVectorContainer.; // Returns the total number of poins in the result or -1 in case of an error.",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofDraw.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofDraw.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofLimitsFinder.h:154,Integrability,synchroniz,synchronize,154,"//////////////////////////////////////////////////////////////////////////; // //; // TProofLimitsFinder //; // //; // Class to find nice axis limits and synchronize them between workers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofLimitsFinder.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofLimitsFinder.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:149,Energy Efficiency,monitor,monitoring,149,"//////////////////////////////////////////////////////////////////////////; // //; // TProofMonSender //; // //; // Provides the interface for PROOF monitoring to different writers. //; // Allows to decouple the information sent from the backend. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:129,Integrability,interface,interface,129,"//////////////////////////////////////////////////////////////////////////; // //; // TProofMonSender //; // //; // Provides the interface for PROOF monitoring to different writers. //; // Allows to decouple the information sent from the backend. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:26,Modifiability,config,config,26,"// TProofMonSender status/config bits",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:3,Deployability,Toggle,Toggle,3,"// Toggle sending of summary",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:3,Deployability,Toggle,Toggle,3,"// Toggle sending of dataset info",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:3,Deployability,Toggle,Toggle,3,"// Toggle sending of files info",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:23,Energy Efficiency,monitor,monitoring,23,"// Interface for PROOF monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:3,Integrability,Interface,Interface,3,"// Interface for PROOF monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSender.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSenderSQL.h:23,Energy Efficiency,monitor,monitoring,23,"// Interface for PROOF monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSenderSQL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSenderSQL.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSenderSQL.h:3,Integrability,Interface,Interface,3,"// Interface for PROOF monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofMonSenderSQL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSenderSQL.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofPlayer.h:11,Integrability,message,message,11,"// Process message to replay when adding new workers dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofPlayer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofPlayer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofPlayer.h:27,Deployability,update,updates,27,"// List of objects to send updates of",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TProofPlayer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofPlayer.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatsFeedback.h:152,Usability,feedback,feedback,152,"//////////////////////////////////////////////////////////////////////////; // //; // TStatsFeedback //; // //; // Utility class to display PROOF stats feedback histos during queries. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatsFeedback.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatsFeedback.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatsFeedback.h:23,Usability,feedback,feedback,23,"// Present PROOF query feedback",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatsFeedback.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatsFeedback.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:179,Availability,error,error,179,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:269,Energy Efficiency,monitor,monitor,269,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:185,Integrability,message,messages,185,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:309,Integrability,message,messages,309,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:11,Availability,error,error,11,"// list of error messages",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:17,Integrability,message,messages,17,"// list of error messages",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:15,Integrability,message,messages,15,"//!iterator in messages",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:16,Integrability,message,messages,16,"// list of info messages",MatchSource.CODE_COMMENT,proof/proofplayer/inc/TStatus.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx:515,Usability,feedback,feedback,515,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 28/10/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDrawFeedback; \ingroup proofkernel. Utility class to draw objects in the feedback list during queries.; Draws histograms in separated canvases and user-defined objects via; Draw(). Users requiring advanced treatment should implement their; own version following this example. See also TStatsFeedback. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TDrawFeedback.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TDrawFeedback.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx:94,Usability,feedback,feedback,94,"////////////////////////////////////////////////////////////////////////////////; /// Display feedback",MatchSource.CODE_COMMENT,proof/proofplayer/src/TDrawFeedback.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:2,Safety,abort,abort,2,/*abort*/,MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load directory",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:54,Testability,test,test,54,"// Set entry number; if data iteration we may need to test the entry or event lists",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Availability,Error,Error,3,"// Error has been reported",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Security,Validat,Validate,3,"// Validate values for this element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Availability,Error,Error,3,"// Error has been reported",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Security,Validat,Validate,3,"// Validate values for this element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:44,Energy Efficiency,efficient,efficient,44,"// Position within this element. TODO: more efficient?",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:24,Performance,cache,cache,24,"// Avoid destroying the cache; must be placed before deleting the trees",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Safety,Avoid,Avoid,3,"// Avoid destroying the cache; must be placed before deleting the trees",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:19,Performance,cache,cache,19,"// Delete the tree cache ...",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:118,Performance,cache,cache,118,"////////////////////////////////////////////////////////////////////////////////; /// Return the size in bytes of the cache, if any; /// Return -1 if not used",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:122,Usability,learn,learning,122,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of entries in the learning phase",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:197,Availability,error,error,197,"////////////////////////////////////////////////////////////////////////////////; /// Create a Tree for the main TDSetElement and for all the friends.; /// Returns the main tree or 0 in case of an error.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:16,Performance,cache,cache,16,"// Set the file cache",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:15,Performance,cache,cache,15,"// Disable the cache",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load a tree from s TDSetElement",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:27,Performance,cache,cache,27,"// If requested set the no cache mode",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:32,Performance,load,loaded,32,"// Check if the tree is already loaded",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:20,Performance,cache,cache,20,"// Add track in the cache",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:18,Safety,abort,aborted,18,"// When files are aborted during processing (via TSelector::kAbortFile) the player; // invalidates the element by settign this bit. We need to ask for a new packet",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Security,Validat,Validate,3,"// Validate values for this element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:7,Availability,error,error,7,"// the error has been reported",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:20,Usability,learn,learning,20,"// Signal ending of learning phase",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:18,Safety,abort,aborted,18,"// When files are aborted during processing (via TSelector::kAbortFile) the player; // invalidates the element by settign this bit. We need to ask for a new packet",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:3,Security,Validat,Validate,3,"// Validate values for this element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:44,Energy Efficiency,efficient,efficient,44,"// Position within this element. TODO: more efficient?",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:7,Availability,error,error,7,"// the error has been reported",MatchSource.CODE_COMMENT,proof/proofplayer/src/TEventIter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:767,Performance,perform,performance,767,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 18/03/02; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPacketizer; \ingroup proofkernel. This class generates packets to be processed on PROOF worker servers.; A packet is an event range (begin entry and number of entries) or; object range (first object and number of objects) in a TTree; (entries) or a directory (objects) in a file.; Packets are generated taking into account the performance of the; remote machine, the time it took to process a previous packet on; the remote machine, the locality of the database files, etc. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:82,Performance,perform,performed,82,"//; // The following three utility classes manage the state of the; // work to be performed and the slaves involved in the process.; // A list of TFileNode(s) describes the hosts with files, each; // has a list of TFileStat(s) keeping the state for each TDSet; // element (file).; //; // The list of TSlaveStat(s) keep track of the work (being) done; // by each slave; //; //------------------------------------------------------------------------------",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:3,Deployability,Update,Update,3,"// Update the status info to the 'st'.; // return the difference (*st - *fStatus)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:18,Availability,avail,available,18,"// Record initial available workers",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:3,Performance,Optimiz,Optimize,3,"// Optimize the number of files to be open when running on subsample",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:3,Safety,avoid,avoid,3,"// avoid dangling pointers",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:28,Energy Efficiency,monitor,monitoring,28,"// Set the total number for monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:150,Availability,failure,failure,150,"////////////////////////////////////////////////////////////////////////////////; /// Adds new workers. Returns the number of workers added, or -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:3,Deployability,Update,Update,3,"// Update the max number that can access one file node if the default is used",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:34,Security,access,access,34,"// Update the max number that can access one file node if the default is used",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:8,Energy Efficiency,monitor,monitoring,8,"// Some monitoring systems (TXSocketHandler) need to know this",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:37,Security,validat,validation,37,"// This worker is ready for the next validation",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:31,Security,validat,validation,31,"// A socket got invalid during validation",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:12,Integrability,message,message,12,"// Get next message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:3,Deployability,update,update,3,"// update stats & free old element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:25,Availability,avail,available,25,"// only read new info if available",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:540,Performance,load,load-balancing,540,"// @(#)root/proofplayer:$Id$; // Author: Jan Iwaszkiewicz 11/12/06; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPacketizerAdaptive; \ingroup proofkernel. This packetizer is based on TPacketizer but uses different; load-balancing algorithms and data structures.; Two main improvements in the load-balancing strategy:; - First one was to change the order in which the files are assigned; to the computing nodes in such a way that network transfers are; evenly distributed in the query time. Transfer of the remote files; was often becoming a bottleneck at the end of a query.; - The other improvement is the use of time-based packet size. We; measure the processing rate of all the nodes and calculate the; packet size, so that it takes certain amount of time. In this way; packetizer prevents the situation where the query can't finish; because of one slow node. The data structures: TFileStat, TFileNode and TSlaveStat are; enriched + changed and TFileNode::Compare method is changed. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:617,Performance,load,load-balancing,617,"// @(#)root/proofplayer:$Id$; // Author: Jan Iwaszkiewicz 11/12/06; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPacketizerAdaptive; \ingroup proofkernel. This packetizer is based on TPacketizer but uses different; load-balancing algorithms and data structures.; Two main improvements in the load-balancing strategy:; - First one was to change the order in which the files are assigned; to the computing nodes in such a way that network transfers are; evenly distributed in the query time. Transfer of the remote files; was often becoming a bottleneck at the end of a query.; - The other improvement is the use of time-based packet size. We; measure the processing rate of all the nodes and calculate the; packet size, so that it takes certain amount of time. In this way; packetizer prevents the situation where the query can't finish; because of one slow node. The data structures: TFileStat, TFileNode and TSlaveStat are; enriched + changed and TFileNode::Compare method is changed. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:866,Performance,bottleneck,bottleneck,866,"// @(#)root/proofplayer:$Id$; // Author: Jan Iwaszkiewicz 11/12/06; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPacketizerAdaptive; \ingroup proofkernel. This packetizer is based on TPacketizer but uses different; load-balancing algorithms and data structures.; Two main improvements in the load-balancing strategy:; - First one was to change the order in which the files are assigned; to the computing nodes in such a way that network transfers are; evenly distributed in the query time. Transfer of the remote files; was often becoming a bottleneck at the end of a query.; - The other improvement is the use of time-based packet size. We; measure the processing rate of all the nodes and calculate the; packet size, so that it takes certain amount of time. In this way; packetizer prevents the situation where the query can't finish; because of one slow node. The data structures: TFileStat, TFileNode and TSlaveStat are; enriched + changed and TFileNode::Compare method is changed. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:82,Performance,perform,performed,82,"//; // The following three utility classes manage the state of the; // work to be performed and the slaves involved in the process.; // A list of TFileNode(s) describes the hosts with files, each; // has a list of TFileStat(s) keeping the state for each TDSet; // element (file).; //; // The list of TSlaveStat(s) keep track of the work (being) done; // by each slave; //; //------------------------------------------------------------------------------",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:45,Energy Efficiency,adapt,adaptive,45,"// 0 means the classic and 1 (default) - the adaptive strategy",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:45,Modifiability,adapt,adaptive,45,"// 0 means the classic and 1 (default) - the adaptive strategy",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:182,Integrability,depend,depending,182,"// Must return -1 if this is smaller than obj, 0 if objects are equal; // and 1 if this is larger than obj.; // smaller means more needing a new worker.; // Two cases are considered depending on; // relation between harddrive speed and network bandwidth.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:15,Energy Efficiency,adapt,adaptive,15,"// The default adaptive strategy.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:15,Modifiability,adapt,adaptive,15,"// The default adaptive strategy.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:50,Safety,avoid,avoid,50,"// The slave name is a special one in PROOF-Lite: avoid blocking on the DNS; // for non existing names",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update packetizer rates",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:14,Integrability,synchroniz,synchronize,14,"// Attempt to synchronize the packet size with the tree cache size",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:56,Performance,cache,cache,56,"// Attempt to synchronize the packet size with the tree cache size",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:30,Performance,cache,cache-packet,30,"// Check if there is a global cache-packet sync setting",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:61,Integrability,synchroniz,synchronization,61,"// Max file entries to avg allowed ratio for cache-to-packet synchronization; // (applies only if fCachePacketSync is true; -1. disables the bound)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:45,Performance,cache,cache-to-packet,45,"// Max file entries to avg allowed ratio for cache-to-packet synchronization; // (applies only if fCachePacketSync is true; -1. disables the bound)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:12,Modifiability,config,config,12,"// Save the config parameters in the dedicated list so that they will be saved; // in the outputlist and therefore in the relevant TQueryResult",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Performance,Optimiz,Optimize,3,"// Optimize the number of files to be open when running on subsample",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Safety,avoid,avoid,3,"// avoid dangling pointers",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:28,Energy Efficiency,monitor,monitoring,28,"// Set the total number for monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:49,Performance,cache,cached,49,"// calculating how many files from TDSet are not cached on; // any slave",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:8,Energy Efficiency,monitor,monitoring,8,"// Some monitoring systems (TXSocketHandler) need to know this",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:37,Security,validat,validation,37,"// This worker is ready for the next validation",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:31,Security,validat,validation,31,"// A socket got invalid during validation",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:12,Integrability,message,message,12,"// Get next message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:97,Integrability,depend,depends,97,"////////////////////////////////////////////////////////////////////////////////; /// The result depends on the fStrategy",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:103,Performance,perform,performance,103,"// The dynamic heuristic for setting the packet size (default); // Calculates the packet size based on performance of this slave; // and estimated time left until the end of the query.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:62,Availability,avail,available,62,"// Make sure it is not smaller then the cache, if the info is available and the size; // synchronization is required. But apply the cache-packet size synchronization only if there; // are enough left files to process and the files are all of similar sizes. Otherwise we risk; // to not exploit optimally all potentially active workers.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:89,Integrability,synchroniz,synchronization,89,"// Make sure it is not smaller then the cache, if the info is available and the size; // synchronization is required. But apply the cache-packet size synchronization only if there; // are enough left files to process and the files are all of similar sizes. Otherwise we risk; // to not exploit optimally all potentially active workers.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:150,Integrability,synchroniz,synchronization,150,"// Make sure it is not smaller then the cache, if the info is available and the size; // synchronization is required. But apply the cache-packet size synchronization only if there; // are enough left files to process and the files are all of similar sizes. Otherwise we risk; // to not exploit optimally all potentially active workers.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:40,Performance,cache,cache,40,"// Make sure it is not smaller then the cache, if the info is available and the size; // synchronization is required. But apply the cache-packet size synchronization only if there; // are enough left files to process and the files are all of similar sizes. Otherwise we risk; // to not exploit optimally all potentially active workers.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:132,Performance,cache,cache-packet,132,"// Make sure it is not smaller then the cache, if the info is available and the size; // synchronization is required. But apply the cache-packet size synchronization only if there; // are enough left files to process and the files are all of similar sizes. Otherwise we risk; // to not exploit optimally all potentially active workers.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:270,Safety,risk,risk,270,"// Make sure it is not smaller then the cache, if the info is available and the size; // synchronization is required. But apply the cache-packet size synchronization only if there; // are enough left files to process and the files are all of similar sizes. Otherwise we risk; // to not exploit optimally all potentially active workers.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:60,Usability,learn,learning,60,"// First packet for this worker in this query; // Twice the learning phase",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:162,Integrability,message,message,162,"////////////////////////////////////////////////////////////////////////////////; /// To be used by GetNextPacket but also in reaction to kPROOF_STOPPROCESS; /// message (when the worker was asked to stop processing during a packet).; /// returns the #%entries intended in the last packet - #%processed entries",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Deployability,update,update,3,"// update stats & free old element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Deployability,update,update,3,"// update processing rate",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:27,Integrability,message,message,27,"// the kPROOF_STOPPRPOCESS message is send after the worker receives zero; // as the reply to kPROOF_GETNEXTPACKET",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:330,Energy Efficiency,allocate,allocates,330,"////////////////////////////////////////////////////////////////////////////////; /// Get next packet;; /// A meaningfull difference to TPacketizer is the fact that this; /// packetizer, for each worker, tries to predict whether the worker; /// will finish processing it's local files before the end of the query.; /// If yes, it allocates, to those workers, files from non-slave filenodes; /// or from slaves that are overloaded. The check is done every time a new; /// file needs to be assigned.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:213,Safety,predict,predict,213,"////////////////////////////////////////////////////////////////////////////////; /// Get next packet;; /// A meaningfull difference to TPacketizer is the fact that this; /// packetizer, for each worker, tries to predict whether the worker; /// will finish processing it's local files before the end of the query.; /// If yes, it allocates, to those workers, files from non-slave filenodes; /// or from slaves that are overloaded. The check is done every time a new; /// file needs to be assigned.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Deployability,Update,Update,3,"// Update stats & free old element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:25,Availability,avail,available,25,"// only read new info if available",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:19,Integrability,message,message,19,"// Send last timer message and stop the timer",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Deployability,Update,Update,3,"// Update NextEntry in the file object",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:27,Deployability,update,update,27,"// Time elapsed since last update",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:46,Deployability,update,update,46,"// Add estimated entries processed since last update",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:46,Deployability,update,update,46,"// Add estimated entries processed since last update",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,Deployability,Update,Update,3,"// Update worker counters",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:6,Security,access,accessible,6,"// If accessible add it back to the old node; // and do DecProcessed",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerAdaptive.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:12,Integrability,wrap,wrapper,12,"// Iterator wrapper",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:93,Performance,load,load,93,"// We add all to the not assigned list so that they will be distributed; // according to the load",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:3,Deployability,Update,Update,3,"// Update stats & free old element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:28,Integrability,message,message,28,"// used only to read an old message type",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:25,Availability,avail,available,25,"// only read new info if available",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:3,Deployability,Update,Update,3,"// Update the total counter",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the circular ntple",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the status info to the 'st'.; /// return the difference (*st - *fStatus)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerFile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:3,Usability,Simpl,Simple,3,"// Simple or multi?",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerMulti.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:6,Safety,avoid,avoid,6,"// To avoid problems with counters we must set the total entries in each packetizer",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerMulti.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerMulti.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerMulti.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:145,Availability,failure,failure,145,"////////////////////////////////////////////////////////////////////////////////; /// Create a packetizer for dataset 'dset'; /// Return null on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerMulti.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:19,Testability,test,test,19,"// We are going to test validity during the packetizer initialization",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerMulti.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:760,Performance,perform,performance,760,"// @(#)root/proofplayer:$Id$; // Author: Long Tran-Thanh 22/07/07; // Revised: G. Ganis, May 2011; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPacketizerUnit; \ingroup proofkernel. This packetizer generates packets of generic units, representing the; number of times an operation cycle has to be repeated by the worker; node, e.g. the number of Monte carlo events to be generated.; Packets sizes are generated taking into account the performance of; worker nodes, based on the time needed to process previous packets,; with the goal of having all workers ending at the same time. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:74,Performance,perform,performed,74,"//; // The following utility class manage the state of the; // work to be performed and the slaves involved in the process.; //; // The list of TSlaveStat(s) keep track of the work (being) done; // by each slave; //; //------------------------------------------------------------------------------",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the circular ntple",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the status info to the 'st'.; /// return the difference (*st - *fStatus)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:12,Modifiability,config,config,12,"// Save the config parameters in the dedicated list so that they will be saved; // in the outputlist and therefore in the relevant TQueryResult",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Deployability,Update,Update,3,"// Update fixed number counter",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Deployability,Update,Update,3,"// Update/Save the config parameters in the dedicated list so that they will be saved; // in the outputlist and therefore in the relevant TQueryResult",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:19,Modifiability,config,config,19,"// Update/Save the config parameters in the dedicated list so that they will be saved; // in the outputlist and therefore in the relevant TQueryResult",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Deployability,Update,Update,3,"// Update stats & free old element",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:28,Integrability,message,message,28,"// used only to read an old message type",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Deployability,update,update,3,"// update the worker status",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:25,Availability,avail,available,25,"// only read new info if available",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:19,Integrability,message,message,19,"// Send last timer message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:85,Deployability,Update,Update,85,"// Schedule tasks for workers based on the currently estimated processing speeds; // Update performances; // slstat->fStatus was updated before;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:129,Deployability,update,updated,129,"// Schedule tasks for workers based on the currently estimated processing speeds; // Update performances; // slstat->fStatus was updated before;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Energy Efficiency,Schedul,Schedule,3,"// Schedule tasks for workers based on the currently estimated processing speeds; // Update performances; // slstat->fStatus was updated before;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:92,Performance,perform,performances,92,"// Schedule tasks for workers based on the currently estimated processing speeds; // Update performances; // slstat->fStatus was updated before;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Deployability,Update,Update,3,"// Update the sequential number",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,Deployability,Update,Update,3,"// Update the total counter",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:150,Availability,failure,failure,150,"////////////////////////////////////////////////////////////////////////////////; /// Adds new workers. Returns the number of workers added, or -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPacketizerUnit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:488,Integrability,interface,interface,488,"// @(#)root/proofplayer:$Id$; // Author: Kristjan Gulbrandsen 11/05/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPerfStats; \ingroup proofkernel. Provides the interface for the PROOF internal performance measurement; and event tracing. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:521,Performance,perform,performance,521,"// @(#)root/proofplayer:$Id$; // Author: Kristjan Gulbrandsen 11/05/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPerfStats; \ingroup proofkernel. Provides the interface for the PROOF internal performance measurement; and event tracing. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:20,Energy Efficiency,monitor,monitoring,20,"// Check per packet monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:30,Energy Efficiency,monitor,monitor-per-packet,30,"// Check if there is a global monitor-per-packet setting",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:45,Security,authoriz,authorized,45,"// Dataset string limited in length: get the authorized size",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:3,Energy Efficiency,Monitor,Monitoring,3,"// Monitoring for query performances using monitoring system (e.g. Monalisa, SQL, ...); //; // We support multiple specifications separated by ',' or '|' or '\' (the latter need; // top be escaped three times in the regular experession), e.g.; // ProofServ.Monitoring: Monalisa bla bla bla,; // +ProofServ.Monitoring: SQL blu blu blu",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:43,Energy Efficiency,monitor,monitoring,43,"// Monitoring for query performances using monitoring system (e.g. Monalisa, SQL, ...); //; // We support multiple specifications separated by ',' or '|' or '\' (the latter need; // top be escaped three times in the regular experession), e.g.; // ProofServ.Monitoring: Monalisa bla bla bla,; // +ProofServ.Monitoring: SQL blu blu blu",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:257,Energy Efficiency,Monitor,Monitoring,257,"// Monitoring for query performances using monitoring system (e.g. Monalisa, SQL, ...); //; // We support multiple specifications separated by ',' or '|' or '\' (the latter need; // top be escaped three times in the regular experession), e.g.; // ProofServ.Monitoring: Monalisa bla bla bla,; // +ProofServ.Monitoring: SQL blu blu blu",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:306,Energy Efficiency,Monitor,Monitoring,306,"// Monitoring for query performances using monitoring system (e.g. Monalisa, SQL, ...); //; // We support multiple specifications separated by ',' or '|' or '\' (the latter need; // top be escaped three times in the regular experession), e.g.; // ProofServ.Monitoring: Monalisa bla bla bla,; // +ProofServ.Monitoring: SQL blu blu blu",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:24,Performance,perform,performances,24,"// Monitoring for query performances using monitoring system (e.g. Monalisa, SQL, ...); //; // We support multiple specifications separated by ',' or '|' or '\' (the latter need; // top be escaped three times in the regular experession), e.g.; // ProofServ.Monitoring: Monalisa bla bla bla,; // +ProofServ.Monitoring: SQL blu blu blu",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:7,Energy Efficiency,monitor,monitor,7,"// Get monitor object from the plugin manager",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:31,Modifiability,plugin,plugin,31,"// Get monitor object from the plugin manager",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:16,Energy Efficiency,monitor,monitor,16,"// Shutdown the monitor writers, if any",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:86,Usability,Simpl,Simple,86,"////////////////////////////////////////////////////////////////////////////////; /// Simple event.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:170,Energy Efficiency,monitor,monitoring,170,"////////////////////////////////////////////////////////////////////////////////; /// Packet event.; /// See WriteQueryLog for the descripition of the structure sent for monitoring; /// when fMonitorPerPacket is kTRUE.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:12,Energy Efficiency,monitor,monitoring,12,"// Write to monitoring system, if requested",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:108,Energy Efficiency,monitor,monitoring,108,"////////////////////////////////////////////////////////////////////////////////; /// Send to the connected monitoring servers information related to this query.; /// The information is of three types: 'summary', 'dataset' and 'files'.; /// Actual 'table' formatting is done by the relevant sender, implementation of; /// TProofMonSender, where the details are given.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:12,Energy Efficiency,monitor,monitoring,12,"// Write to monitoring system",MatchSource.CODE_COMMENT,proof/proofplayer/src/TPerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:78,Modifiability,plug-in,plug-in,78,"// Simple call to draw a canvas on the fly from applications loading; // this plug-in dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:61,Performance,load,loading,61,"// Simple call to draw a canvas on the fly from applications loading; // this plug-in dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Usability,Simpl,Simple,3,"// Simple call to draw a canvas on the fly from applications loading; // this plug-in dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:80,Modifiability,plug-in,plug-in,80,"// Simple call to parse arguments on the fly from applications loading; // this plug-in dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:63,Performance,load,loading,63,"// Simple call to parse arguments on the fly from applications loading; // this plug-in dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Usability,Simpl,Simple,3,"// Simple call to parse arguments on the fly from applications loading; // this plug-in dynamically",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Usability,Simpl,Simple,3,"// Simple call to create destroy a 'named' canvas",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:112,Performance,load,loaded,112,"////////////////////////////////////////////////////////////////////////////////; /// Called when a new tree is loaded.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:105,Modifiability,variab,variable,105,"////////////////////////////////////////////////////////////////////////////////; /// Processes a single variable from an entry.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:25,Availability,error,error,25,"// did not run selector, error messages were already printed",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:31,Integrability,message,messages,31,"// did not run selector, error messages were already printed",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:174,Safety,avoid,avoid,174,"////////////////////////////////////////////////////////////////////////////////; /// Move to a canvas named `<name>_canvas`; create the canvas if not existing.; /// Used to avoid screwing up existing plots when non default names are used; /// for the final objects",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:95,Availability,error,error,95,"////////////////////////////////////////////////////////////////////////////////; /// Sets the error status.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:100,Modifiability,variab,variable,100,"////////////////////////////////////////////////////////////////////////////////; /// Compiles each variable from fTreeDrawArgsParser for the tree fTree.; /// Return kFALSE if any of the variable is not compilable.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:187,Modifiability,variab,variable,187,"////////////////////////////////////////////////////////////////////////////////; /// Compiles each variable from fTreeDrawArgsParser for the tree fTree.; /// Return kFALSE if any of the variable is not compilable.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:93,Modifiability,variab,variables,93,"////////////////////////////////////////////////////////////////////////////////; /// Define variables for 2D histogram.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:93,Modifiability,variab,variables,93,"////////////////////////////////////////////////////////////////////////////////; /// Define variables for 3D histogram.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:93,Modifiability,variab,variables,93,"////////////////////////////////////////////////////////////////////////////////; /// Define variables according to arguments.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:102,Modifiability,variab,variables,102,"////////////////////////////////////////////////////////////////////////////////; /// Define relevant variables",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:102,Modifiability,variab,variables,102,"////////////////////////////////////////////////////////////////////////////////; /// Define relevant variables",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership (? FIXME)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:3,Deployability,release,release,3,"// release ownership (? FIXME)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofLimitsFinder.cxx:513,Integrability,synchroniz,synchronize,513,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 19/04/2002; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofLimitsFinder; \ingroup proofkernel. Class to find axis limits and synchronize them between workers. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofLimitsFinder.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofLimitsFinder.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx:501,Energy Efficiency,monitor,monitoring,501,"// @(#)root/proofplayer:$Id$; // Author: G.Ganis July 2011; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofMonSender; \ingroup proofkernel. Provides the interface for PROOF monitoring to different writers.; Allows to decouple the information sent from the backend. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSender.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx:481,Integrability,interface,interface,481,"// @(#)root/proofplayer:$Id$; // Author: G.Ganis July 2011; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofMonSender; \ingroup proofkernel. Provides the interface for PROOF monitoring to different writers.; Allows to decouple the information sent from the backend. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSender.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx:280,Testability,log,log,280,"////////////////////////////////////////////////////////////////////////////////; /// Parse send options from string 'sendopts'.; /// Format is:; /// ""[-,+]S[n]|[-,+]D[m]|[-,+]F[j]""; /// where:; /// 1. The big letter refers to the 'table' following; ///; /// S table with summary log; /// D table with dataset info; /// F table files info; ///; /// 2. The '-,+' in front disables/enables the related table; if; /// absent '+' is assumed; ///; /// 3. The number after the letter is the version of the related; /// table; ///; /// Returns -1 if nothing is enabled; 0 otherwise",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSender.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx:17,Modifiability,variab,variables,17,"// Fill relevant variables",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSender.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:38,Modifiability,plugin,plugin,38,"// Init the sender instance using the plugin manager",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:238,Energy Efficiency,monitor,monitoring,238,"////////////////////////////////////////////////////////////////////////////////; /// Send 'summary' record for the table 'proofquerylog'.; ///; /// There are three versions of this record, corresponding the evolution; /// in time of the monitoring requirements.; ///; /// The default version 2 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerylog (; /// id int(11) NOT NULL auto_increment,; /// proofuser varchar(32) NOT NULL,; /// proofgroup varchar(32) default NULL,; /// querybegin datetime default NULL,; /// queryend datetime default NULL,; /// walltime int(11) default NULL,; /// cputime float default NULL,; /// bytesread bigint(20) default NULL,; /// events bigint(20) default NULL,; /// totevents bigint(20) default NULL,; /// workers int(11) default NULL,; /// querytag varchar(64) NOT NULL,; /// vmemmxw bigint(20) default NULL,; /// rmemmxw bigint(20) default NULL,; /// vmemmxm bigint(20) default NULL,; /// rmemmxm bigint(20) default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// status int(11) default NULL,; /// rootver varchar(32) NOT NULL,; /// PRIMARY KEY (id) );; ///; /// Version 1 corresponds to the table created with the following command:; /// ('user','begin','end' instead of 'proofuser', 'querybegin', 'queryend';; /// no 'status', 'missfiles', 'rootver'; 'dataset' field with name(s) of; /// processed dataset(s)); ///; /// CREATE TABLE proofquerylog (; /// id int(11) NOT NULL auto_increment,; /// user varchar(32) NOT NULL,; /// proofgroup varchar(32) default NULL,; /// begin datetime default NULL,; /// end datetime default NULL,; /// walltime int(11) default NULL,; /// cputime float default NULL,; /// bytesread bigint(20) default NULL,; /// events bigint(20) default NULL,; /// totevents bigint(20) default NULL,; /// workers int(11) default NULL,; /// querytag varchar(64) NOT NULL,; /// vmemmxw bigint(20) default NULL,; /// rmemmxw bigint(20) default NULL,; /// vmemmxm bigint(20",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:688,Availability,failure,failure,688,"//; // Version 0 corresponds to the table created with the following command:; // ('group' instead of 'proofgroup'; no 'querytag', 'vmemmxw',; // 'rmemmxw', 'vmemmxm', 'rmemmxm', 'numfiles', 'dataset'); //; // CREATE TABLE proofquerylog (; // id int(11) NOT NULL auto_increment,; // user varchar(32) NOT NULL,; // group varchar(32) default NULL,; // begin datetime default NULL,; // end datetime default NULL,; // walltime int(11) default NULL,; // cputime float default NULL,; // bytesread bigint(20) default NULL,; // events bigint(20) default NULL,; // totevents bigint(20) default NULL,; // workers int(11) default NULL,; // PRIMARY KEY (id) );; //; // Return 0 on success, -1 on any failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:31,Modifiability,variab,variable,31,"// We may need to correct some variable names first",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:574,Availability,avail,available,574,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:1477,Availability,failure,failure,1477,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:198,Deployability,integrat,integrated,198,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:198,Integrability,integrat,integrated,198,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:568,Availability,avail,available,568,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:1503,Availability,failure,failure,1503,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:193,Deployability,integrat,integrated,193,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:193,Integrability,integrat,integrated,193,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofMonSenderSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Safety,Timeout,Timeout,3,"// Timeout exception",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:50,Modifiability,variab,variable,50,"// To flag an abort condition: use a local static variable to avoid; // warnings about problems with longjumps",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:14,Safety,abort,abort,14,"// To flag an abort condition: use a local static variable to avoid; // warnings about problems with longjumps",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:62,Safety,avoid,avoid,62,"// To flag an abort condition: use a local static variable to avoid; // warnings about problems with longjumps",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:36,Safety,abort,abort,36,"//; // Special timer to handle stop/abort request via exception raising; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:120,Safety,abort,abort,120,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for the timer to stop/abort processing.; /// The 'timeout' is in seconds.; /// Make sure that 'to' make sense, i.e. not larger than 10 days;; /// the minimum value is 10 ms (0 does not seem to start the timer ...).",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:148,Safety,timeout,timeout,148,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for the timer to stop/abort processing.; /// The 'timeout' is in seconds.; /// Make sure that 'to' make sense, i.e. not larger than 10 days;; /// the minimum value is 10 ms (0 does not seem to start the timer ...).",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:168,Safety,abort,abort,168,"////////////////////////////////////////////////////////////////////////////////; /// Handle the signal coming from the expiration of the timer; /// associated with an abort or stop request.; /// We raise an exception which will be processed in the; /// event loop.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:124,Safety,timeout,timeout,124,"////////////////////////////////////////////////////////////////////////////////; /// Stop the process after this event. If timeout is positive, start; /// a timer firing after timeout seconds to hard-stop time-expensive; /// events.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:177,Safety,timeout,timeout,177,"////////////////////////////////////////////////////////////////////////////////; /// Stop the process after this event. If timeout is positive, start; /// a timer firing after timeout seconds to hard-stop time-expensive; /// events.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:119,Safety,abort,abort,119,"////////////////////////////////////////////////////////////////////////////////; /// Enable/disable the timer to stop/abort processing.; /// The 'timeout' is in seconds.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:147,Safety,timeout,timeout,147,"////////////////////////////////////////////////////////////////////////////////; /// Enable/disable the timer to stop/abort processing.; /// The 'timeout' is in seconds.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear input list.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:9,Security,checksum,checksums,9,"// Check checksums for the versions of the selector files",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:9,Security,checksum,checksums,9,"// Check checksums",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:10,Availability,error,error,10,"// Silent error printout on first attempt",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:37,Performance,load,loading,37,"// restore ignore level; // Retry by loading first the libraries listed in TQueryResult, if any",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Modifiability,variab,variables,3,"// variables may have been initialized in Begin()",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:92,Usability,feedback,feedback,92,"////////////////////////////////////////////////////////////////////////////////; /// Store feedback list (may not be used in this class).",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:90,Usability,feedback,feedback,90,"////////////////////////////////////////////////////////////////////////////////; /// Set feedback list (may not be used in this class).",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:158,Integrability,depend,dependency,158,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:141,Safety,avoid,avoids,141,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:121,Security,access,accessed,121,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:91,Usability,feedback,feedback,91,"////////////////////////////////////////////////////////////////////////////////; /// Draw feedback creation proxy. When accessed via TProof avoids; /// link dependency on libProofPlayer.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:95,Usability,feedback,feedback,95,"////////////////////////////////////////////////////////////////////////////////; /// Set draw feedback option.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:98,Usability,feedback,feedback,98,"////////////////////////////////////////////////////////////////////////////////; /// Delete draw feedback object.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:27,Performance,cache,cache,27,"// Get selector files from cache",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update fProgressStatus",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:166,Availability,error,error,166,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF worker.; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:35,Security,validat,validate,35,"// If in sequential (0-PROOF) mode validate the data set to get; // the number of entries",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:10,Usability,feedback,feedback,10,"// Create feedback lists, if required",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:19,Energy Efficiency,monitor,monitoring,19,"// force the first monitoring info",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:41,Energy Efficiency,consumption,consumption,41,"// Get the frequency for checking memory consumption and logging information",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:57,Testability,log,logging,57,"// Get the frequency for checking memory consumption and logging information",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:43,Security,access,access,43,"// Give the possibility to the selector to access additional info in the; // incoming packet",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:31,Safety,abort,abort,31,"// Make sure that the selector abort status is reset",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:187,Availability,error,error,187,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF worker with TSelector object; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:10,Energy Efficiency,monitor,monitoring,10,"// Refine monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:10,Energy Efficiency,monitor,monitoring,10,"// Refine monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update automatic binning parameters for given object ""name"".",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:93,Usability,feedback,feedback,93,"////////////////////////////////////////////////////////////////////////////////; /// Set up feedback (may not be used in this class).",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:91,Usability,feedback,feedback,91,"////////////////////////////////////////////////////////////////////////////////; /// Stop feedback (may not be used in this class).",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:207,Availability,avail,available,207,"////////////////////////////////////////////////////////////////////////////////; /// Draw the object if it is a canvas.; /// Return 0 in case of success, 1 if it is not a canvas or libProofDraw; /// is not available.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Performance,Load,Load,3,"// Load the library the first time",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Performance,Load,Load,3,"// Load library needed for graphics ...",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:243,Availability,avail,available,243,"////////////////////////////////////////////////////////////////////////////////; /// Parse the arguments from var, sel and opt and fill the selector and; /// object name accordingly.; /// Return 0 in case of success, 1 if libProofDraw is not available.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Performance,Load,Load,3,"// Load the library the first time",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Performance,Load,Load,3,"// Load library needed for graphics ...",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:120,Usability,feedback,feedback,120,"////////////////////////////////////////////////////////////////////////////////; /// Create/destroy a named canvas for feedback",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Performance,Load,Load,3,"// Load the library the first time",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Performance,Load,Load,3,"// Load library needed for graphics ...",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:10,Usability,FeedBack,FeedBackCanvas,10,"// Locate FeedBackCanvas",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:118,Performance,cache,cache,118,"////////////////////////////////////////////////////////////////////////////////; /// Return the size in bytes of the cache",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:122,Usability,learn,learning,122,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of entries in the learning phase",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:282,Availability,error,error,282,"////////////////////////////////////////////////////////////////////////////////; /// Process the specified TSelector object 'nentries' times.; /// Used to test the PROOF interator mechanism for cycle-driven selectors in a; /// local session.; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:156,Testability,test,test,156,"////////////////////////////////////////////////////////////////////////////////; /// Process the specified TSelector object 'nentries' times.; /// Used to test the PROOF interator mechanism for cycle-driven selectors in a; /// local session.; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:347,Availability,error,error,347,"////////////////////////////////////////////////////////////////////////////////; /// Process the specified TSelector file 'nentries' times.; /// Used to test the PROOF interator mechanism for cycle-driven selectors in a; /// local session.; /// Process specified TDSet on PROOF worker with TSelector object; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:154,Testability,test,test,154,"////////////////////////////////////////////////////////////////////////////////; /// Process the specified TSelector file 'nentries' times.; /// Used to test the PROOF interator mechanism for cycle-driven selectors in a; /// local session.; /// Process specified TDSet on PROOF worker with TSelector object; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:63,Usability,feedback,feedback,63,"// Objects stored in maps are already deleted when merging the feedback",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:177,Availability,failure,failure,177,"////////////////////////////////////////////////////////////////////////////////; /// Init the packetizer; /// Return 0 on success (fPacketizer is correctly initialized), -1 on failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:19,Testability,test,test,19,"// We are going to test validity during the packetizer initialization",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:19,Testability,test,test,19,"// We are going to test validity during the packetizer initialization",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:224,Availability,error,error,224,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF.; /// This method is called on client and on the PROOF master.; /// The return value is -1 in case of an error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:77,Integrability,message,messages,77,"// Negative memlogfreq disable checks.; // If 0 is passed we try to have 100 messages about memory; // Otherwise we use the frequency passed.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:27,Safety,avoid,avoid,27,"// Reset the input list to avoid double streaming and related problems (saving; // the TQueryResult)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,Testability,log,logs,12,"// Redirect logs from master to special log frame",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:40,Testability,log,log,40,"// Redirect logs from master to special log frame",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:47,Testability,log,log,47,"// Signal the start of finalize for the memory log grepping",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,Deployability,update,update,12,"// force an update of final result; // This forces a last call to TPacketizer::HandleTimer via the second argument; // (the first is ignored). This is needed when some events were skipped so that; // the total number of entries is not the one requested. The packetizer has no; // way in such a case to understand that processing is finished: it must be told.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:18,Testability,log,logging,18,"// Restore prompt logging, for clients (Collect leaves things as they were; // at the time it was called)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,Deployability,update,update,12,"// Force an update of final result",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:224,Availability,error,error,224,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF.; /// This method is called on client and on the PROOF master.; /// The return value is -1 in case of an error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:47,Energy Efficiency,schedul,schedule,47,"// Remove this object from the output list and schedule it for distruction",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:18,Energy Efficiency,schedul,scheduled,18,"// Remove objects scheduled for removal",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:50,Availability,error,error,50,"// Finalize a query.; // Returns -1 in case of an error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:24,Energy Efficiency,monitor,monitoring,24,"// Fill information for monitoring and stop it",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:17,Safety,abort,aborted,17,"// The query was aborted: let's add some info in the output list",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:96,Performance,optimiz,optimized,96,"// Reinit selector (with multi-sessioning we must do this until; // TSelector::GetSelector() is optimized to i) avoid reloading of an; // unchanged selector and ii) invalidate existing instances of; // reloaded selector)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:112,Safety,avoid,avoid,112,"// Reinit selector (with multi-sessioning we must do this until; // TSelector::GetSelector() is optimized to i) avoid reloading of an; // unchanged selector and ii) invalidate existing instances of; // reloaded selector)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:3,Deployability,Update,Update,3,"// Update the macro path",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,Integrability,interface,interface,12,"// No Merge interface, return individual objects",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:86,Usability,Feedback,Feedback,86,"////////////////////////////////////////////////////////////////////////////////; /// Feedback signal.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:321,Availability,error,error,321,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the received object 'obj' into the output list fOutput.; /// The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' optimizing the memory; /// consumption.; /// Returns -1 in case of error, 1 if the object has been merged into another; /// one (so that its ownership has not been taken and can be deleted), and 0; /// otherwise.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:281,Energy Efficiency,consumption,consumption,281,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the received object 'obj' into the output list fOutput.; /// The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' optimizing the memory; /// consumption.; /// Returns -1 in case of error, 1 if the object has been merged into another; /// one (so that its ownership has not been taken and can be deleted), and 0; /// otherwise.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:254,Performance,optimiz,optimizing,254,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the received object 'obj' into the output list fOutput.; /// The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' optimizing the memory; /// consumption.; /// Returns -1 in case of error, 1 if the object has been merged into another; /// one (so that its ownership has not been taken and can be deleted), and 0; /// otherwise.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:305,Energy Efficiency,consumption,consumption,305,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the content of the received output list 'out' into the final; /// output list fOutput. The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' limiting the memory; /// consumption.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:48,Safety,avoid,avoid,48,"// Remove and delete the events lists object to avoid spoiling iteration; // during next steps",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:179,Energy Efficiency,monitor,monitor,179,"////////////////////////////////////////////////////////////////////////////////; /// Printout the memory record after merging object 'obj'; /// This record is used by the memory monitor",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:88,Energy Efficiency,monitor,monitor,88,"// For PROOF-Lite we redirect this output to a the open log file so that the; // memory monitor can pick these messages up",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:111,Integrability,message,messages,111,"// For PROOF-Lite we redirect this output to a the open log file so that the; // memory monitor can pick these messages up",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:56,Testability,log,log,56,"// For PROOF-Lite we redirect this output to a the open log file so that the; // memory monitor can pick these messages up",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:26,Energy Efficiency,monitor,monitoring,26,"// Record also values for monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:94,Integrability,message,message,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the message to be notified in case of exception",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:587,Availability,error,error,587,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate object 'newobj' in the list 'outlist'.; /// The object is merged with an object of the same name already existing in; /// the list, or just added.; /// The boolean merged is set to kFALSE when the object is just added to 'outlist';; /// this happens if the Merge() method does not exist or if a object named as 'obj'; /// is not already in the list. If the obj is not 'merged' than it should not be; /// deleted, unless outlist is not owner of its objects.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:72,Energy Efficiency,efficient,efficient,72,"// Check if we can 'Add' the histogram to an existing one; this is more efficient; // then using Merge",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:74,Energy Efficiency,efficient,efficient,74,"// ... and create either the list to merge in one-go at the end; // (more efficient than merging one by one) or, if too big, merge; // these two and start the 'one-by-one' technology",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:92,Usability,feedback,feedback,92,"////////////////////////////////////////////////////////////////////////////////; /// Merge feedback lists.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:17,Usability,feedback,feedback,17,"// collection of feedback objects",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,Integrability,interface,interface,12,"// No Merge interface, return copy of individual objects",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:92,Usability,feedback,feedback,92,"////////////////////////////////////////////////////////////////////////////////; /// Store feedback results from the specified slave.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:105,Usability,feedback,feedback,105,"////////////////////////////////////////////////////////////////////////////////; /// Setup reporting of feedback objects.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:7,Usability,feedback,feedback,7,"// OK, feedback was requested, setup the timer",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:104,Usability,feedback,feedback,104,"////////////////////////////////////////////////////////////////////////////////; /// Stop reporting of feedback objects.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:91,Usability,feedback,feedback,91,"////////////////////////////////////////////////////////////////////////////////; /// Send feedback objects to client.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:48,Usability,feedback,feedback,48,"// timer already switched off; // process local feedback objects",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:43,Usability,feedback,feedback,43,"// remove the corresponding entry from the feedback list",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:8,Integrability,message,message,8,"// send message to client;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:148,Availability,error,error,148,"////////////////////////////////////////////////////////////////////////////////; /// Draw (support for TChain::Draw()).; /// Returns -1 in case of error or number of selected events in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:92,Usability,feedback,feedback,92,"////////////////////////////////////////////////////////////////////////////////; /// Setup feedback.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:7,Usability,feedback,feedback,7,"// OK, feedback was requested, setup the timer",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:91,Usability,feedback,feedback,91,"////////////////////////////////////////////////////////////////////////////////; /// Stop feedback.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:101,Deployability,update,update,101,"// If in sequential (0-slave-PROOF) mode we do not have a packetizer; // so we also send the info to update the progress bar.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:112,Usability,progress bar,progress bar,112,"// If in sequential (0-slave-PROOF) mode we do not have a packetizer; // so we also send the info to update the progress bar.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:8,Integrability,message,message,8,"// send message to client;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:181,Availability,error,error,181,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF. Runs on super master.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:104,Usability,feedback,feedback,104,"////////////////////////////////////////////////////////////////////////////////; /// Send progress and feedback to client.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,Integrability,message,message,12,"// Fill the message now",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:8,Integrability,message,message,8,"// send message to client;",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:135,Integrability,message,messages,135,"////////////////////////////////////////////////////////////////////////////////; /// Setup reporting of feedback objects and progress messages.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:105,Usability,feedback,feedback,105,"////////////////////////////////////////////////////////////////////////////////; /// Setup reporting of feedback objects and progress messages.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:32,Integrability,message,message,32,"// setup the timer for progress message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:322,Availability,failure,failure,322,"////////////////////////////////////////////////////////////////////////////////; /// Create the selector object and save the relevant files and binary information; /// in the cache so that the worker can pick it up.; /// Returns 0 and fill fSelector in case of success. Returns -1 and sets; /// fSelector to 0 in case of failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:176,Performance,cache,cache,176,"////////////////////////////////////////////////////////////////////////////////; /// Create the selector object and save the relevant files and binary information; /// in the cache so that the worker can pick it up.; /// Returns 0 and fill fSelector in case of success. Returns -1 and sets; /// fSelector to 0 in case of failure.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:224,Availability,error,error,224,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF.; /// This method is called on client and on the PROOF master.; /// The return value is -1 in case of an error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:221,Availability,error,error,221,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF.; /// This method is called on client and on the PROOF master.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:77,Integrability,message,messages,77,"// Negative memlogfreq disable checks.; // If 0 is passed we try to have 100 messages about memory; // Otherwise we use the frequency passed.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:81,Availability,avail,available,81,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:109,Energy Efficiency,monitor,monitoring,109,"// Add the unique query tag as TNamed object to the input list; // so that it is available in TSelectors for monitoring",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:18,Integrability,message,message,18,"// Broadcast main message",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:12,Testability,log,logs,12,"// Redirect logs from master to special log frame",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:40,Testability,log,log,40,"// Redirect logs from master to special log frame",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:18,Testability,log,logging,18,"// Restore prompt logging (Collect leaves things as they were; // at the time it was called)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:12,Deployability,update,update,12,"// force an update of final result",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:128,Availability,error,error,128,"////////////////////////////////////////////////////////////////////////////////; /// Finalize a query.; /// Returns -1 in case error, 0 otherwise.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:96,Performance,optimiz,optimized,96,"// Reinit selector (with multi-sessioning we must do this until; // TSelector::GetSelector() is optimized to i) avoid reloading of an; // unchanged selector and ii) invalidate existing instances of; // reloaded selector)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:112,Safety,avoid,avoid,112,"// Reinit selector (with multi-sessioning we must do this until; // TSelector::GetSelector() is optimized to i) avoid reloading of an; // unchanged selector and ii) invalidate existing instances of; // reloaded selector)",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:91,Usability,feedback,feedback,91,"////////////////////////////////////////////////////////////////////////////////; /// Send feedback objects to client.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:48,Usability,feedback,feedback,48,"// timer already switched off; // process local feedback objects",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:105,Usability,feedback,feedback,105,"////////////////////////////////////////////////////////////////////////////////; /// Setup reporting of feedback objects.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:7,Usability,feedback,feedback,7,"// OK, feedback was requested, setup the timer",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:92,Usability,feedback,feedback,92,"////////////////////////////////////////////////////////////////////////////////; /// Store feedback results from the specified slave.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TProofPlayerLite.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx:504,Usability,feedback,feedback,504,"// @(#)root/proofplayer:$Id$; // Author: G. Ganis May 2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatsFeedback; \ingroup proofkernel. Utility class to display PROOF stats feedback histos during queries. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatsFeedback.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatsFeedback.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx:94,Usability,feedback,feedback,94,"////////////////////////////////////////////////////////////////////////////////; /// Display feedback",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatsFeedback.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:537,Availability,error,error,537,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 7/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatus; \ingroup proofkernel. This class holds the status of an ongoing operation and collects; error messages. It provides a Merge() operation allowing it to; be used in PROOF to monitor status in the slaves.; No messages indicates success. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:621,Energy Efficiency,monitor,monitor,621,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 7/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatus; \ingroup proofkernel. This class holds the status of an ongoing operation and collects; error messages. It provides a Merge() operation allowing it to; be used in PROOF to monitor status in the slaves.; No messages indicates success. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:543,Integrability,message,messages,543,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 7/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatus; \ingroup proofkernel. This class holds the status of an ongoing operation and collects; error messages. It provides a Merge() operation allowing it to; be used in PROOF to monitor status in the slaves.; No messages indicates success. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:655,Integrability,message,messages,655,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 7/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatus; \ingroup proofkernel. This class holds the status of an ongoing operation and collects; error messages. It provides a Merge() operation allowing it to; be used in PROOF to monitor status in the slaves.; No messages indicates success. */",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:93,Availability,error,error,93,"////////////////////////////////////////////////////////////////////////////////; /// Add an error message.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:99,Integrability,message,message,99,"////////////////////////////////////////////////////////////////////////////////; /// Add an error message.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:98,Integrability,message,message,98,"////////////////////////////////////////////////////////////////////////////////; /// Add an info message.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:3,Availability,Error,Errors,3,"// Errors",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:3,Availability,Error,Errors,3,"// Errors first",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:112,Integrability,message,messages,112,"////////////////////////////////////////////////////////////////////////////////; /// Reset the iterator on the messages.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:102,Integrability,message,message,102,"////////////////////////////////////////////////////////////////////////////////; /// Return the next message or 0.",MatchSource.CODE_COMMENT,proof/proofplayer/src/TStatus.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:587,Availability,avail,available,587,"/**; * Namespace for dispatching RooFit computations to various backends.; *; * This namespace contains an interface for providing high-performance computation functions for use in; * RooAbsReal::doEval(), see RooBatchComputeInterface.; *; * Furthermore, several implementations of this interface can be created, which reside in RooBatchCompute::RF_ARCH,; * where RF_ARCH may be replaced by the architecture that this implementation targets, e.g. SSE, AVX, etc.; *; * Using the pointer RooBatchCompute::dispatch, a computation request can be dispatched to the fastest backend that is; * available on a specific platform.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:107,Integrability,interface,interface,107,"/**; * Namespace for dispatching RooFit computations to various backends.; *; * This namespace contains an interface for providing high-performance computation functions for use in; * RooAbsReal::doEval(), see RooBatchComputeInterface.; *; * Furthermore, several implementations of this interface can be created, which reside in RooBatchCompute::RF_ARCH,; * where RF_ARCH may be replaced by the architecture that this implementation targets, e.g. SSE, AVX, etc.; *; * Using the pointer RooBatchCompute::dispatch, a computation request can be dispatched to the fastest backend that is; * available on a specific platform.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:287,Integrability,interface,interface,287,"/**; * Namespace for dispatching RooFit computations to various backends.; *; * This namespace contains an interface for providing high-performance computation functions for use in; * RooAbsReal::doEval(), see RooBatchComputeInterface.; *; * Furthermore, several implementations of this interface can be created, which reside in RooBatchCompute::RF_ARCH,; * where RF_ARCH may be replaced by the architecture that this implementation targets, e.g. SSE, AVX, etc.; *; * Using the pointer RooBatchCompute::dispatch, a computation request can be dispatched to the fastest backend that is; * available on a specific platform.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:136,Performance,perform,performance,136,"/**; * Namespace for dispatching RooFit computations to various backends.; *; * This namespace contains an interface for providing high-performance computation functions for use in; * RooAbsReal::doEval(), see RooBatchComputeInterface.; *; * Furthermore, several implementations of this interface can be created, which reside in RooBatchCompute::RF_ARCH,; * where RF_ARCH may be replaced by the architecture that this implementation targets, e.g. SSE, AVX, etc.; *; * Using the pointer RooBatchCompute::dispatch, a computation request can be dispatched to the fastest backend that is; * available on a specific platform.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:12,Deployability,configurat,configuration,12,"/// Minimal configuration struct to steer the evaluation of a single node with; /// the RooBatchCompute library.",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:12,Modifiability,config,configuration,12,"/// Minimal configuration struct to steer the evaluation of a single node with; /// the RooBatchCompute library.",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:700,Availability,avail,available,700,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:365,Energy Efficiency,power,power,365,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:545,Energy Efficiency,efficient,efficient,545,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:94,Integrability,interface,interface,94,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:588,Integrability,interface,interface,588,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:822,Integrability,interface,interface,822,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:925,Integrability,interface,interface,925,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:740,Performance,perform,perform,740,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:103,Performance,load,loaded,103,"/**; * This dispatch pointer points to an implementation of the compute library, provided one has been loaded.; * Using a virtual call, computation requests are dispatched to backends with architecture-specific functions; * such as SSE, AVX, AVX2, etc.; *; * \see RooBatchComputeInterface, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooBatchCompute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:144,Integrability,rout,routines,144,"// with gcc on unix machines and on x86_64, we can gain by hand-coding; // exp(z) for the x87 coprocessor; other platforms have the default; // routines as fallback implementation, and compilers other than gcc on; // x86_64 generate better code with the default routines; also avoid; // the inline assembly code when the compiler is not optimising code, or; // is optimising for code size; // (we insist on __unix__ here, since the assemblers on other OSs; // typically do not speak AT&T syntax as gas does...)",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:262,Integrability,rout,routines,262,"// with gcc on unix machines and on x86_64, we can gain by hand-coding; // exp(z) for the x87 coprocessor; other platforms have the default; // routines as fallback implementation, and compilers other than gcc on; // x86_64 generate better code with the default routines; also avoid; // the inline assembly code when the compiler is not optimising code, or; // is optimising for code size; // (we insist on __unix__ here, since the assemblers on other OSs; // typically do not speak AT&T syntax as gas does...)",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:277,Safety,avoid,avoid,277,"// with gcc on unix machines and on x86_64, we can gain by hand-coding; // exp(z) for the x87 coprocessor; other platforms have the default; // routines as fallback implementation, and compilers other than gcc on; // x86_64 generate better code with the default routines; also avoid; // the inline assembly code when the compiler is not optimising code, or; // is optimising for code size; // (we insist on __unix__ here, since the assemblers on other OSs; // typically do not speak AT&T syntax as gas does...)",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:3,Performance,load,load,3,"// load log2(e)",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:136,Integrability,depend,depend,136,"// calculate value of taylor expansion...; // (note: there's no chance to vectorize this one, since; // the value of the next iteration depend on the ones from; // the previous iteration)",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:3,Usability,undo,undo,3,"// undo the flip in real part of z if needed",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:164,Usability,simpl,simplified,164,"// For a purely complex argument z, the faddeeva function equals to; // exp(z*z) * erfc(z). Together with coefficient exp(-u*u), this means the; // function can be simplified to:",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooHeterogeneousMath.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h:424,Availability,recover,recovered,424,"/// Little struct that can pack a float into the unused bits of the mantissa of a; /// NaN double. This can be used to transport information about violation; /// of function definition ranges, negative PDFs or other computation; /// problems in RooFit.; /// To separate NaNs that contain packed floats from regular NaNs, a tag is; /// written into the upper bits of the mantissa. If this tag is found, a payload; /// can be recovered. Otherwise, the NaN is assumed to originate from other sources; /// than a RooFit class that wants to signal to the minimiser.",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooNaNPacker.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h:424,Safety,recover,recovered,424,"/// Little struct that can pack a float into the unused bits of the mantissa of a; /// NaN double. This can be used to transport information about violation; /// of function definition ranges, negative PDFs or other computation; /// problems in RooFit.; /// To separate NaNs that contain packed floats from regular NaNs, a tag is; /// written into the upper bits of the mantissa. If this tag is found, a payload; /// can be recovered. Otherwise, the NaN is assumed to originate from other sources; /// than a RooFit class that wants to signal to the minimiser.",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooNaNPacker.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h:4,Testability,Test,Test,4,"/// Test if this struct has a float packed into its mantissa.",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooNaNPacker.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h:4,Testability,Test,Test,4,"/// Test if `val` has a float packed into its mantissa.",MatchSource.CODE_COMMENT,roofit/batchcompute/res/RooNaNPacker.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooNaNPacker.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Batches.h:534,Modifiability,flexible,flexible,534,"/*; * Project: RooFit; * Authors:; * Emmanouil Michalainas, CERN 3 March 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Batches.h; \class Batch; \class Batches; \ingroup roofit_dev_docs_batchcompute. These classes encapsulate the necessary data for the computations.; They are lightweight objects designed to be passed by value and also flexible,; so that they can contain data for every kind of compute function.; **/",MatchSource.CODE_COMMENT,roofit/batchcompute/src/Batches.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Batches.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:966,Modifiability,flexible,flexible-kernels-grid-stride-loops,966,"/*; * Project: RooFit; * Authors:; * Emmanouil Michalainas, CERN, Summer 2019; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file ComputeFunctions.cxx; \ingroup roofit_dev_docs_batchcompute. This file contains vectorizable computation functions for PDFs and other Roofit objects.; The same source file can also be compiled with nvcc. All functions have a single `Batches`; object as an argument passed by value, which contains all the information necessary for the; computation. In case of cuda computations, the loops have a step (stride) the size of the grid; which allows for reusing the same code as the cpu implementations, easier debugging and in terms; of performance, maximum memory coalescing. For more details, see; https://developer.nvidia.com/blog/cuda-pro-tip-write-flexible-kernels-grid-stride-loops/; **/",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:850,Performance,perform,performance,850,"/*; * Project: RooFit; * Authors:; * Emmanouil Michalainas, CERN, Summer 2019; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file ComputeFunctions.cxx; \ingroup roofit_dev_docs_batchcompute. This file contains vectorizable computation functions for PDFs and other Roofit objects.; The same source file can also be compiled with nvcc. All functions have a single `Batches`; object as an argument passed by value, which contains all the information necessary for the; computation. In case of cuda computations, the loops have a step (stride) the size of the grid; which allows for reusing the same code as the cpu implementations, easier debugging and in terms; of performance, maximum memory coalescing. For more details, see; https://developer.nvidia.com/blog/cuda-pro-tip-write-flexible-kernels-grid-stride-loops/; **/",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:59,Energy Efficiency,allocate,allocate,59,"// apply binomial coefficient in-place so we don't have to allocate new memory",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:22,Energy Efficiency,power,power,22,"// raising 1-x to the power of degree",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:20,Energy Efficiency,power,power,20,"// calculating next power for x and 1-x",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:55,Availability,toler,tolerated,55,"// Unreasonable normalisations. A zero integral can be tolerated if the function vanishes, though.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:144,Testability,log,logarithm,144,"/* TMath::ASinH(x) needs to be replaced with ln( x + sqrt(x^2+1)); * argasinh -> the argument of TMath::ASinH(); * argln -> the argument of the logarithm that replaces AsinH; * asinh -> the value that the function evaluates to; *; * ln is the logarithm that was solely present in the initial; * formula, that is before the asinh replacement; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:243,Testability,log,logarithm,243,"/* TMath::ASinH(x) needs to be replaced with ln( x + sqrt(x^2+1)); * argasinh -> the argument of TMath::ASinH(); * argln -> the argument of the logarithm that replaces AsinH; * asinh -> the value that the function evaluates to; *; * ln is the logarithm that was solely present in the initial; * formula, that is before the asinh replacement; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/ComputeFunctions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:10,Integrability,interface,interface,10,"/*; * C++ interface around CUDA functionality.; *; * Generally, if the call to the underlying CUDA function does not return; * `cudaSuccess`, a `std::runtime_error` is thrown.; *; * \ingroup RooFitCuda; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:20,Integrability,Wrap,Wrapper,20,/// \endcond; /*; * Wrapper around cudaEvent_t.; */,MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:91,Integrability,wrap,wrapper,91,"// When compiling with NVCC, we allow setting and getting the actual CUDA objects from the wrapper.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:6,Integrability,Wrap,Wrapper,6,/*; * Wrapper around cudaStream_t.; */,MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:91,Integrability,wrap,wrapper,91,"// When compiling with NVCC, we allow setting and getting the actual CUDA objects from the wrapper.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:167,Integrability,interface,interface,167,"/// \endcond; /**; * @class Array; * @brief A templated class for managing an array of data using a specified memory type.; *; * The Array class provides a convenient interface for managing an array of; * data using different memory types (e.g., memory on the host or device).; * The memory is automatically freed at the end of the lifetime.; *; * @tparam Data_t The type of data elements to be stored in the array.; * @tparam Memory_t The type of memory that provides storage for the array.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:208,Security,access,access,208,/**; * @brief Get a const pointer to the start of the array.; * @return A const pointer to the start of the array.; *; * This function returns a const pointer to the underlying memory.; * It allows read-only access to array elements.; */,MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:41,Energy Efficiency,allocate,allocated,41,/**; * An array of specific type that is allocated on the device with `cudaMalloc` and freed with `cudaFree`.; */,MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:289,Availability,down,download,289,"/**; * A pinned array of specific type that allocated on the host with `cudaMallocHost` and freed with `cudaFreeHost`.; * The memory is ""pinned"", i.e. page-locked and accessible to the device for fast copying.; * \see The documentation of `cudaMallocHost` on <a; * href=""https://developer.download.nvidia.com/compute/DevZone/docs/html/C/doc/html/group__CUDART__HIGHLEVEL_ge439496de696b166ba457dab5dd4f356.html"">developer.download.nvidia.com</a>.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:421,Availability,down,download,421,"/**; * A pinned array of specific type that allocated on the host with `cudaMallocHost` and freed with `cudaFreeHost`.; * The memory is ""pinned"", i.e. page-locked and accessible to the device for fast copying.; * \see The documentation of `cudaMallocHost` on <a; * href=""https://developer.download.nvidia.com/compute/DevZone/docs/html/C/doc/html/group__CUDART__HIGHLEVEL_ge439496de696b166ba457dab5dd4f356.html"">developer.download.nvidia.com</a>.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:44,Energy Efficiency,allocate,allocated,44,"/**; * A pinned array of specific type that allocated on the host with `cudaMallocHost` and freed with `cudaFreeHost`.; * The memory is ""pinned"", i.e. page-locked and accessible to the device for fast copying.; * \see The documentation of `cudaMallocHost` on <a; * href=""https://developer.download.nvidia.com/compute/DevZone/docs/html/C/doc/html/group__CUDART__HIGHLEVEL_ge439496de696b166ba457dab5dd4f356.html"">developer.download.nvidia.com</a>.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:167,Security,access,accessible,167,"/**; * A pinned array of specific type that allocated on the host with `cudaMallocHost` and freed with `cudaFreeHost`.; * The memory is ""pinned"", i.e. page-locked and accessible to the device for fast copying.; * \see The documentation of `cudaMallocHost` on <a; * href=""https://developer.download.nvidia.com/compute/DevZone/docs/html/C/doc/html/group__CUDART__HIGHLEVEL_ge439496de696b166ba457dab5dd4f356.html"">developer.download.nvidia.com</a>.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/CudaInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx:99,Performance,load,loaded,99,"// First initialisation of the pointers. When implementations of the batch compute library; // are loaded, they will overwrite the pointers.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/Initialisation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx:62,Availability,failure,failure,62,"/// Dynamically load a library and throw exception in case of failure",MatchSource.CODE_COMMENT,roofit/batchcompute/src/Initialisation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx:16,Performance,load,load,16,"/// Dynamically load a library and throw exception in case of failure",MatchSource.CODE_COMMENT,roofit/batchcompute/src/Initialisation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx:39,Performance,load,load,39,"/// Inspect hardware capabilities, and load the optimal library for RooFit computations.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/Initialisation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Initialisation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:65,Performance,load,loading,65,"// Set the dispatch pointer to this instance of the library upon loading",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:479,Modifiability,variab,variables,479,"/** Compute multiple values using optimized functions.; This method creates a Batches object and passes it to the correct compute function.; In case Implicit Multithreading is enabled, the events to be processed are equally; divided among the tasks to be generated and computed in parallel.; \param computer An enum specifying the compute function to be used.; \param output The array where the computation results are stored.; \param vars A std::span containing pointers to the variables involved in the computation.; \param extraArgs An optional std::span containing extra double values that may participate in the computation. **/",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:34,Performance,optimiz,optimized,34,"/** Compute multiple values using optimized functions.; This method creates a Batches object and passes it to the correct compute function.; In case Implicit Multithreading is enabled, the events to be processed are equally; divided among the tasks to be generated and computed in parallel.; \param computer An enum specifying the compute function to be used.; \param output The array where the computation results are stored.; \param vars A std::span containing pointers to the variables involved in the computation.; \param extraArgs An optional std::span containing extra double values that may participate in the computation. **/",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:79,Performance,multi-thread,multi-threaded,79,"// In the original implementation of this library, the evaluation was done; // multi-threaded in implicit multi-threading was enabled in ROOT with; // ROOT::EnableImplicitMT().; //; // However, this multithreaded mode was not carefully validated and is; // therefore not production ready. One would first have to study the; // overhead for different numbers of cores, number of events, and model; // complexity. The, we should only consider implicit multithreading here if; // there is no performance penalty for any scenario, to not surprise the; // users with unexpected slowdows!; //; // Note that the priority of investigating this is not high, because RooFit; // R & D efforts currently go in the direction of parallelization at the; // level of the gradient components, or achieving single-threaded speedup; // with automatic differentiation. Furthermore, the single-threaded; // performance of the new CPU evaluation backend with the RooBatchCompute; // library, is generally much faster than the legacy evaluation backend; // already, even if the latter uses multi-threading.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:106,Performance,multi-thread,multi-threading,106,"// In the original implementation of this library, the evaluation was done; // multi-threaded in implicit multi-threading was enabled in ROOT with; // ROOT::EnableImplicitMT().; //; // However, this multithreaded mode was not carefully validated and is; // therefore not production ready. One would first have to study the; // overhead for different numbers of cores, number of events, and model; // complexity. The, we should only consider implicit multithreading here if; // there is no performance penalty for any scenario, to not surprise the; // users with unexpected slowdows!; //; // Note that the priority of investigating this is not high, because RooFit; // R & D efforts currently go in the direction of parallelization at the; // level of the gradient components, or achieving single-threaded speedup; // with automatic differentiation. Furthermore, the single-threaded; // performance of the new CPU evaluation backend with the RooBatchCompute; // library, is generally much faster than the legacy evaluation backend; // already, even if the latter uses multi-threading.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:489,Performance,perform,performance,489,"// In the original implementation of this library, the evaluation was done; // multi-threaded in implicit multi-threading was enabled in ROOT with; // ROOT::EnableImplicitMT().; //; // However, this multithreaded mode was not carefully validated and is; // therefore not production ready. One would first have to study the; // overhead for different numbers of cores, number of events, and model; // complexity. The, we should only consider implicit multithreading here if; // there is no performance penalty for any scenario, to not surprise the; // users with unexpected slowdows!; //; // Note that the priority of investigating this is not high, because RooFit; // R & D efforts currently go in the direction of parallelization at the; // level of the gradient components, or achieving single-threaded speedup; // with automatic differentiation. Furthermore, the single-threaded; // performance of the new CPU evaluation backend with the RooBatchCompute; // library, is generally much faster than the legacy evaluation backend; // already, even if the latter uses multi-threading.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:886,Performance,perform,performance,886,"// In the original implementation of this library, the evaluation was done; // multi-threaded in implicit multi-threading was enabled in ROOT with; // ROOT::EnableImplicitMT().; //; // However, this multithreaded mode was not carefully validated and is; // therefore not production ready. One would first have to study the; // overhead for different numbers of cores, number of events, and model; // complexity. The, we should only consider implicit multithreading here if; // there is no performance penalty for any scenario, to not surprise the; // users with unexpected slowdows!; //; // Note that the priority of investigating this is not high, because RooFit; // R & D efforts currently go in the direction of parallelization at the; // level of the gradient components, or achieving single-threaded speedup; // with automatic differentiation. Furthermore, the single-threaded; // performance of the new CPU evaluation backend with the RooBatchCompute; // library, is generally much faster than the legacy evaluation backend; // already, even if the latter uses multi-threading.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:1067,Performance,multi-thread,multi-threading,1067,"// In the original implementation of this library, the evaluation was done; // multi-threaded in implicit multi-threading was enabled in ROOT with; // ROOT::EnableImplicitMT().; //; // However, this multithreaded mode was not carefully validated and is; // therefore not production ready. One would first have to study the; // overhead for different numbers of cores, number of events, and model; // complexity. The, we should only consider implicit multithreading here if; // there is no performance penalty for any scenario, to not surprise the; // users with unexpected slowdows!; //; // Note that the priority of investigating this is not high, because RooFit; // R & D efforts currently go in the direction of parallelization at the; // level of the gradient components, or achieving single-threaded speedup; // with automatic differentiation. Furthermore, the single-threaded; // performance of the new CPU evaluation backend with the RooBatchCompute; // library, is generally much faster than the legacy evaluation backend; // already, even if the latter uses multi-threading.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:236,Security,validat,validated,236,"// In the original implementation of this library, the evaluation was done; // multi-threaded in implicit multi-threading was enabled in ROOT with; // ROOT::EnableImplicitMT().; //; // However, this multithreaded mode was not carefully validated and is; // therefore not production ready. One would first have to study the; // overhead for different numbers of cores, number of events, and model; // complexity. The, we should only consider implicit multithreading here if; // there is no performance penalty for any scenario, to not surprise the; // users with unexpected slowdows!; //; // Note that the priority of investigating this is not high, because RooFit; // R & D efforts currently go in the direction of parallelization at the; // level of the gradient components, or achieving single-threaded speedup; // with automatic differentiation. Furthermore, the single-threaded; // performance of the new CPU evaluation backend with the RooBatchCompute; // library, is generally much faster than the legacy evaluation backend; // already, even if the latter uses multi-threading.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:31,Availability,error,errors,31,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:59,Availability,error,errors,59,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooBatchCompute.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h:90,Availability,avail,available,90,"/*; * VDT headers for RooFit. Since RooFit cannot directly depend on VDT (it might not be available),; * this layer can be used to switch between different implementations.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooVDTHeaders.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h
https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h:59,Integrability,depend,depend,59,"/*; * VDT headers for RooFit. Since RooFit cannot directly depend on VDT (it might not be available),; * this layer can be used to switch between different implementations.; */",MatchSource.CODE_COMMENT,roofit/batchcompute/src/RooVDTHeaders.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/HFMsgService.h:45,Integrability,message,messages,45,"// Shortcut definitions to issue HistFactory messages through the RooMsgService.",MatchSource.CODE_COMMENT,roofit/histfactory/inc/HFMsgService.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/HFMsgService.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/LinkDef.h:12,Performance,load,loading,12,"// for auto-loading namespaces",MatchSource.CODE_COMMENT,roofit/histfactory/inc/LinkDef.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/LinkDef.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Channel.h:51,Usability,simpl,simply,51,"/// One can add additional datasets; /// These are simply added to the xml under a different name",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Channel.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Channel.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ConfigParser.h:94,Performance,cache,cached,94,"/// To facilitate writing xml, when not; /// specified, files and paths default; /// to these cached values",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/ConfigParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ConfigParser.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/FlexibleInterpVar.h:3,Modifiability,flexible,flexible,3,"// flexible interpolation",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/FlexibleInterpVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/FlexibleInterpVar.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistFactoryNavigation.h:33,Availability,error,errors,33,"/// Print the current values and errors of pdf parameters",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/HistFactoryNavigation.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistFactoryNavigation.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistRef.h:18,Integrability,wrap,wrapping,18,"// Internal class wrapping an histogram and managing its content.; // conveninet for dealing with histogram pointers in the; // HistFactory class",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/HistRef.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistRef.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistRef.h:4,Deployability,Release,Release,4,"/// Release ownership of object.",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/HistRef.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistRef.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Measurement.h:21,Modifiability,config,configured,21,"/// add a completely configured channel",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Measurement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Measurement.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Measurement.h:4,Modifiability,Config,Configurables,4,"/// Configurables of this measurement",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Measurement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Measurement.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h:10,Deployability,integrat,integration,10,"///<! The integration cache manager",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h:10,Integrability,integrat,integration,10,"///<! The integration cache manager",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h:22,Performance,cache,cache,22,"///<! The integration cache manager",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h:10,Deployability,integrat,integration,10,"///<! The integration cache manager",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h:10,Integrability,integrat,integration,10,"///<! The integration cache manager",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h:22,Performance,cache,cache,22,"///<! The integration cache manager",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/PiecewiseInterpolation.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h:5,Usability,simpl,simple,5,"// A simple class to store the; // necessary objects for a; // single gamma in a single channel",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h:12,Testability,log,log,12,"///< Input -log(L) function",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Deployability,Configurat,Configuration,49,/** \class OverallSys; * \ingroup HistFactory; * Configuration for a constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Modifiability,Config,Configuration,49,/** \class OverallSys; * \ingroup HistFactory; * Configuration for a constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Deployability,Configurat,Configuration,49,/** \class NormFactor; * \ingroup HistFactory; * Configuration for an \a un- constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Modifiability,Config,Configuration,49,/** \class NormFactor; * \ingroup HistFactory; * Configuration for an \a un- constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:190,Availability,down,down,190,/** ////////////////////////////////////////////////////////////////////////////////////////////; * \class HistogramUncertaintyBase; * \ingroup HistFactory; * Base class to store the up and down variations for histogram uncertainties.; * Use the derived classes for actual models.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:47,Deployability,Configurat,Configuration,47,"/** \class HistoSys; * \ingroup HistFactory; * Configuration for a constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:47,Modifiability,Config,Configuration,47,"/** \class HistoSys; * \ingroup HistFactory; * Configuration for a constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:50,Deployability,Configurat,Configuration,50,"/** \class HistoFactor; * \ingroup HistFactory; * Configuration for an *un*constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:50,Modifiability,Config,Configuration,50,"/** \class HistoFactor; * \ingroup HistFactory; * Configuration for an *un*constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:60,Availability,error,error,60,/** \class StatError; * \ingroup HistFactory; * Statistical error of Monte Carlo predictions.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:81,Safety,predict,predictions,81,/** \class StatError; * \ingroup HistFactory; * Statistical error of Monte Carlo predictions.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:37,Availability,error,errors,37,"// Use an external histogram for the errors",MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:135,Availability,error,error,135,/** \class StatErrorConfig; * \ingroup HistFactory; * Configuration to automatically assign nuisance parameters for the statistical; * error of the Monte Carlo simulations.; * The default is to assign a Poisson uncertainty to a bin when its statistical uncertainty; * is larger than 5% of the bin content.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:54,Deployability,Configurat,Configuration,54,/** \class StatErrorConfig; * \ingroup HistFactory; * Configuration to automatically assign nuisance parameters for the statistical; * error of the Monte Carlo simulations.; * The default is to assign a Poisson uncertainty to a bin when its statistical uncertainty; * is larger than 5% of the bin content.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:54,Modifiability,Config,Configuration,54,/** \class StatErrorConfig; * \ingroup HistFactory; * Configuration to automatically assign nuisance parameters for the statistical; * error of the Monte Carlo simulations.; * The default is to assign a Poisson uncertainty to a bin when its statistical uncertainty; * is larger than 5% of the bin content.; */,MatchSource.CODE_COMMENT,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:222,Modifiability,variab,variables,222,"// Here is where we set the values, and constantness; // of all parameters in the workspace before creating; // an asimov dataset; /*; // Okay, y'all, first we're going to create a snapshot; // of the current state of the variables in the workspace. std::string ListOfVariableNames = """";; for( std::map< std::string, double >::iterator itr = fParamValsToSet.begin();; itr != fParamValsToSet.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }; for( std::map< std::string, bool >::iterator itr = fParamsToFix.begin();; itr != fParamsToFix.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }. // Save a snapshot; std::string SnapShotName = ""NominalParamValues"";; wspace->saveSnapshot(SnapShotName.c_str(), ListOfVariableNames.c_str());; */; //; // First we set all parameters to their given values; //",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:411,Modifiability,Extend,Extend,411,"// Here is where we set the values, and constantness; // of all parameters in the workspace before creating; // an asimov dataset; /*; // Okay, y'all, first we're going to create a snapshot; // of the current state of the variables in the workspace. std::string ListOfVariableNames = """";; for( std::map< std::string, double >::iterator itr = fParamValsToSet.begin();; itr != fParamValsToSet.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }; for( std::map< std::string, bool >::iterator itr = fParamsToFix.begin();; itr != fParamsToFix.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }. // Save a snapshot; std::string SnapShotName = ""NominalParamValues"";; wspace->saveSnapshot(SnapShotName.c_str(), ListOfVariableNames.c_str());; */; //; // First we set all parameters to their given values; //",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:422,Modifiability,Variab,Variable,422,"// Here is where we set the values, and constantness; // of all parameters in the workspace before creating; // an asimov dataset; /*; // Okay, y'all, first we're going to create a snapshot; // of the current state of the variables in the workspace. std::string ListOfVariableNames = """";; for( std::map< std::string, double >::iterator itr = fParamValsToSet.begin();; itr != fParamValsToSet.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }; for( std::map< std::string, bool >::iterator itr = fParamsToFix.begin();; itr != fParamsToFix.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }. // Save a snapshot; std::string SnapShotName = ""NominalParamValues"";; wspace->saveSnapshot(SnapShotName.c_str(), ListOfVariableNames.c_str());; */; //; // First we set all parameters to their given values; //",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:601,Modifiability,Extend,Extend,601,"// Here is where we set the values, and constantness; // of all parameters in the workspace before creating; // an asimov dataset; /*; // Okay, y'all, first we're going to create a snapshot; // of the current state of the variables in the workspace. std::string ListOfVariableNames = """";; for( std::map< std::string, double >::iterator itr = fParamValsToSet.begin();; itr != fParamValsToSet.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }; for( std::map< std::string, bool >::iterator itr = fParamsToFix.begin();; itr != fParamsToFix.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }. // Save a snapshot; std::string SnapShotName = ""NominalParamValues"";; wspace->saveSnapshot(SnapShotName.c_str(), ListOfVariableNames.c_str());; */; //; // First we set all parameters to their given values; //",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:612,Modifiability,Variab,Variable,612,"// Here is where we set the values, and constantness; // of all parameters in the workspace before creating; // an asimov dataset; /*; // Okay, y'all, first we're going to create a snapshot; // of the current state of the variables in the workspace. std::string ListOfVariableNames = """";; for( std::map< std::string, double >::iterator itr = fParamValsToSet.begin();; itr != fParamValsToSet.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }; for( std::map< std::string, bool >::iterator itr = fParamsToFix.begin();; itr != fParamsToFix.end(); ++itr) {; // Extend the Variable Name list; ListOfVariableNames += "","" + itr->first;; }. // Save a snapshot; std::string SnapShotName = ""NominalParamValues"";; wspace->saveSnapshot(SnapShotName.c_str(), ListOfVariableNames.c_str());; */; //; // First we set all parameters to their given values; //",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:18,Modifiability,variab,variable,18,"// Try to get the variable in the workspace",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:55,Modifiability,variab,variable,55,"// Check that the desired value is in the range of the variable",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:24,Modifiability,variab,variables,24,"//; // Then, we set any variables to constant; //",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:18,Modifiability,variab,variable,18,"// Try to get the variable in the workspace",MatchSource.CODE_COMMENT,roofit/histfactory/src/Asimov.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx:13,Modifiability,config,configured,13,"// add fully configured sample to channel",MatchSource.CODE_COMMENT,roofit/histfactory/src/Channel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx:116,Usability,simpl,simply,116,"// For a NumberCounting measurement only; // Set the value of data in a particular channel; //; // Internally, this simply creates a 1-bin TH1F for you",MatchSource.CODE_COMMENT,roofit/histfactory/src/Channel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx:63,Modifiability,config,configured,63,"// Check that all internal histogram pointers; // are properly configured (ie that they're not nullptr)",MatchSource.CODE_COMMENT,roofit/histfactory/src/Channel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:551,Modifiability,Config,ConfigParser,551,"// @(#)root/roostats:$Id: cranmer $; // Author: Kyle Cranmer, Akira Shibata; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::HistFactory::ConfigParser; * \ingroup HistFactory; * TODO Add documentation.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:55,Modifiability,variab,variable,55,"// If there is no '=' deliminator, we only; // set the variable constant",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:258,Usability,simpl,simply,258,"// Get the list of functions; // These apply to all measurements, so we; // first create the list of preprocess functions; // (before we create the list of measurements); // and then we add them to all measurements; // For now, we create this list twice; // simply for compatibility; // std::vector< std::string > preprocessFunctions;",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:3,Safety,safe,safety,3,"// safety for public functions",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:19,Modifiability,config,configure,19,"// Now, create and configure an asimov object; // and add it to the measurement",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:56,Integrability,depend,depending,56,"// End Loop over tag attributes; // Now, fill the maps, depending on the type:",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:24,Testability,Log,LogNormal,24,"// only Gamma, Uniform, LogNormal and NoConstraint are valid types",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:32,Modifiability,config,configure,32,"// Now, create the channel,; // configure it based on the XML; // and return it",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:20,Performance,cache,cached,20,"// Set the current (cached) value",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:20,Performance,cache,cached,20,"// Set the current (cached) value",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:56,Modifiability,config,configure,56,"// Loop over the children nodes in the XML file; // and configure the channel based on them",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:41,Availability,Error,Error,41,"/*; if( attrVal == """" ) {; cxcoutEHF << ""Error: Attribute 'NormalizeByTheory' in Sample has no value"" << std::endl;; throw hf_exc();; }; else if ( attrVal == ""True"" || attrVal == ""true"" ) sample.NormalizeByTheory = true;; else if ( attrVal == ""False"" || attrVal == ""false"" ) sample.NormalizeByTheory = false;; else {; cxcoutEHF << ""Error: Attribute 'NormalizeByTheory' in Sample has unknown value: "" << attrVal << std::endl;; std::cout << ""Value must be 'True' or 'False' "" << std::endl;; throw hf_exc();; }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:332,Availability,Error,Error,332,"/*; if( attrVal == """" ) {; cxcoutEHF << ""Error: Attribute 'NormalizeByTheory' in Sample has no value"" << std::endl;; throw hf_exc();; }; else if ( attrVal == ""True"" || attrVal == ""true"" ) sample.NormalizeByTheory = true;; else if ( attrVal == ""False"" || attrVal == ""false"" ) sample.NormalizeByTheory = false;; else {; cxcoutEHF << ""Error: Attribute 'NormalizeByTheory' in Sample has unknown value: "" << attrVal << std::endl;; std::cout << ""Value must be 'True' or 'False' "" << std::endl;; throw hf_exc();; }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:108,Testability,Log,Logic,108,"// End: Loop Over Attributes; // Based on the input, determine; // if we should use a histogram or not:; // Logic: One turns on using a histogram; // by setting the attribute ""HistoName""; // If this is set AND the InputFile or; // HistoPath aren't set, we set those; // to the current default values",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:32,Integrability,depend,dependents,32,"//std::string name, expression, dependents;",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:2,Modifiability,Config,ConfigParser,2,"//ConfigParser",MatchSource.CODE_COMMENT,roofit/histfactory/src/ConfigParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx:611,Modifiability,Flexible,FlexibleInterpVar,611,"// @(#)root/roostats:$Id: cranmer $; // Author: Kyle Cranmer, Akira Shibata; // Author: Giovanni Petrucciani (UCSD) (log-interpolation); /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::HistFactory::FlexibleInterpVar; * \ingroup HistFactory; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/FlexibleInterpVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx:117,Testability,log,log-interpolation,117,"// @(#)root/roostats:$Id: cranmer $; // Author: Kyle Cranmer, Akira Shibata; // Author: Giovanni Petrucciani (UCSD) (log-interpolation); /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::HistFactory::FlexibleInterpVar; * \ingroup HistFactory; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/FlexibleInterpVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx:39,Deployability,release,release,39,"// use R__ASSERT which remains also in release mode",MatchSource.CODE_COMMENT,roofit/histfactory/src/FlexibleInterpVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx:365,Integrability,message,message,365,"// namespace HistFactory; /**; * \ingroup HistFactory; * main function of the hist2workspace executable.; * It creates RooFit models from an xml config and files with histograms.; * See MakeModelAndMeasurementFast(), for further instructions.; * \param[in] argc number of CLI arguments; * \param[in] argv pointer to arguments; *; * -h Help; * -v Switch HistFactory message stream to INFO level.; * -vv Switch HistFactory message stream to DEBUG level.; * -disable_binned_fit_optimization Disable the binned fit optimization used in HistFactory since ROOT 6.28.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/hist2workspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx:421,Integrability,message,message,421,"// namespace HistFactory; /**; * \ingroup HistFactory; * main function of the hist2workspace executable.; * It creates RooFit models from an xml config and files with histograms.; * See MakeModelAndMeasurementFast(), for further instructions.; * \param[in] argc number of CLI arguments; * \param[in] argv pointer to arguments; *; * -h Help; * -v Switch HistFactory message stream to INFO level.; * -vv Switch HistFactory message stream to DEBUG level.; * -disable_binned_fit_optimization Disable the binned fit optimization used in HistFactory since ROOT 6.28.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/hist2workspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx:145,Modifiability,config,config,145,"// namespace HistFactory; /**; * \ingroup HistFactory; * main function of the hist2workspace executable.; * It creates RooFit models from an xml config and files with histograms.; * See MakeModelAndMeasurementFast(), for further instructions.; * \param[in] argc number of CLI arguments; * \param[in] argv pointer to arguments; *; * -h Help; * -v Switch HistFactory message stream to INFO level.; * -vv Switch HistFactory message stream to DEBUG level.; * -disable_binned_fit_optimization Disable the binned fit optimization used in HistFactory since ROOT 6.28.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/hist2workspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx:511,Performance,optimiz,optimization,511,"// namespace HistFactory; /**; * \ingroup HistFactory; * main function of the hist2workspace executable.; * It creates RooFit models from an xml config and files with histograms.; * See MakeModelAndMeasurementFast(), for further instructions.; * \param[in] argc number of CLI arguments; * \param[in] argv pointer to arguments; *; * -h Help; * -v Switch HistFactory message stream to INFO level.; * -vv Switch HistFactory message stream to DEBUG level.; * -disable_binned_fit_optimization Disable the binned fit optimization used in HistFactory since ROOT 6.28.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/hist2workspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/hist2workspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:390,Availability,error,errors,390,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:547,Availability,error,errors,547,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:14,Modifiability,Config,Configure,14,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:86,Modifiability,config,configures,86,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:445,Modifiability,config,configured,445,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:517,Modifiability,config,configuring,517,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:15,Availability,error,error,15,"// Set initial error too",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:46,Availability,error,errors,46,"// Give reasonable starting point for pre-fit errors by setting it to the; // absolute sigma Mostly useful for pre-fit plotting.; // Note: in commit 2129c4d920 ""[HF] Reduce verbosity of HistFactory.""; // from 2020, there was a check added to do this only for Gaussian; // constrained parameters and for Poisson constrained parameters if they; // are stat errors without any justification. In the ROOT 6.30; // development cycle, this check got removed again to cause less surprise; // to the user.",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:355,Availability,error,errors,355,"// Give reasonable starting point for pre-fit errors by setting it to the; // absolute sigma Mostly useful for pre-fit plotting.; // Note: in commit 2129c4d920 ""[HF] Reduce verbosity of HistFactory.""; // from 2020, there was a check added to do this only for Gaussian; // constrained parameters and for Poisson constrained parameters if they; // are stat errors without any justification. In the ROOT 6.30; // development cycle, this check got removed again to cause less surprise; // to the user.",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:166,Energy Efficiency,Reduce,Reduce,166,"// Give reasonable starting point for pre-fit errors by setting it to the; // absolute sigma Mostly useful for pre-fit plotting.; // Note: in commit 2129c4d920 ""[HF] Reduce verbosity of HistFactory.""; // from 2020, there was a check added to do this only for Gaussian; // constrained parameters and for Poisson constrained parameters if they; // are stat errors without any justification. In the ROOT 6.30; // development cycle, this check got removed again to cause less surprise; // to the user.",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:65,Modifiability,variab,variable,65,"// If the sigma value is less than a supplied threshold, set the variable to; // constant",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryImpl.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryModelUtils.cxx:144,Availability,Error,Error,144,"/*; RooAbsPdf* constraintTerm = (RooAbsPdf*) constraints->find( constraintTermName.c_str() );; if( constraintTerm == nullptr ) {; std::cout << ""Error: Couldn't find constraint term: "" << constraintTermName; << "" for parameter: "" << gamma_stat->GetName(); << std::endl;; throw std::runtime_error(""Failed to find Gamma ConstraintTerm"");; return -1;; }; */; // Find the ""data"" of the poisson term; // This is the nominal value",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryModelUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryModelUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:3,Safety,Avoid,Avoid,3,"// Avoid the overflow/underflow",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:110,Performance,optimiz,optimized,110,"// Get the total bin height for the ith bin (ROOT indexing convention); // in channel 'channel'; // (Could be optimized, it uses an intermediate histogram for now...); // Get the histogram, fetch the bin content, and return",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:164,Performance,optimiz,optimized,164,"// Get the total bin height for the ith bin (ROOT indexing convention); // in channel 'channel'; // (This will be slow if you plan on looping over it.; // Could be optimized, it uses an intermediate histogram for now...); // Get the histogram, fetch the bin content, and return",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:7,Usability,simpl,simply,7,"// And simply save this node into our map",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:259,Availability,Error,Error,259,"/* Not sure if we want to be silent; But since we're returning a pointer which can be nullptr,; I think it's the user's job to do checks on it.; A dereference will always cause a crash, so it won't; be silent for long...; if( term==nullptr ) {; std::cout << ""Error: Failed to find node: "" << name; << "" as a child of: "" << parent->GetName(); << std::endl;; }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:100,Integrability,depend,depends,100,"// First, as a sanity check, let's see if the parameter; // itself actually exists and if the model depends on it:",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:15,Safety,sanity check,sanity check,15,"// First, as a sanity check, let's see if the parameter; // itself actually exists and if the model depends on it:",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:12,Availability,error,errors,12,"// Gaussian errors are the 'sigma' in the constraint term; // Get the name of the 'sigma' for the gaussian; // (I don't know of a way of doing RooGaussian::GetSigma() ); // For alpha's, the sigma points to a global RooConstVar; // with the name ""1""; // For gamma_stat_*, the sigma is named *_sigma",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:11,Availability,error,errors,11,"// Poisson errors are given by inverting: tau = 1 / (sigma*sigma)",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:98,Integrability,message,messages,98,"// Make a histogram for this node; // Do some horrible things to prevent some really; // annoying messages from being printed",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:120,Modifiability,variab,variables,120,"// Turn a RooAbsReal* into a TH1* based; // on a template histogram.; // The 'vars' arg list defines the x (and y and z variables); // Loop over the bins of the Template,; // find the bin centers,; // Scan the input Var over those bin centers,; // and use the value of the function; // to make the new histogram; // Make the new histogram; // Cone and empty the template; // TH1* hist = (TH1*) histTemplate.Clone( name.c_str() );",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:12,Integrability,wrap,wrapper,12,"// A simple wrapper to use a ModelConfig",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:5,Usability,simpl,simple,5,"// A simple wrapper to use a ModelConfig",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:22,Modifiability,variab,variables,22,"// Now, loop over all variables and; // set the constant as; // Get the list of parameters",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistFactoryNavigation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:40,Performance,load,loading,40,"// use this order for safety on library loading",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:22,Safety,safe,safety,22,"// use this order for safety on library loading",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:3,Modifiability,Config,Configure,3,"// Configure a workspace by doing any; // necessary post-processing and by; // creating a ModelConfig; // Make a ModelConfig and configure it",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:129,Modifiability,config,configure,129,"// Configure a workspace by doing any; // necessary post-processing and by; // creating a ModelConfig; // Make a ModelConfig and configure it",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:11,Modifiability,variab,variable,11,"// Set the variable values and ""const"" ness with the workspace",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:3,Performance,Load,Load,3,"// Load the snapshot at the end of every loop iteration; // so we start each loop with a ""clean"" snapshot",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:29,Integrability,interface,interface,29,"// We want to eliminate this interface and use the measurement directly",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:33,Integrability,wrap,wrapper,33,"// This is a pretty light-weight wrapper function; //; // Take a fully configured measurement as well as; // one of its channels; //; // Return a workspace representing that channel; // Do this by first creating a vector of EstimateSummary's; // and this by configuring the workspace with any post-processing; // Get the channel's name",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:71,Modifiability,config,configured,71,"// This is a pretty light-weight wrapper function; //; // Take a fully configured measurement as well as; // one of its channels; //; // Return a workspace representing that channel; // Do this by first creating a vector of EstimateSummary's; // and this by configuring the workspace with any post-processing; // Get the channel's name",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:258,Modifiability,config,configuring,258,"// This is a pretty light-weight wrapper function; //; // Take a fully configured measurement as well as; // one of its channels; //; // Return a workspace representing that channel; // Do this by first creating a vector of EstimateSummary's; // and this by configuring the workspace with any post-processing; // Get the channel's name",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:12,Modifiability,config,configure,12,"// Finally, configure that workspace based on; // properties of the measurement",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:31,Modifiability,config,configured,31,"// This function takes a fully configured measurement; // which may contain several channels and returns; // a workspace holding the combined model; //; // This can be used, for example, within a script to produce; // a combined workspace on-the-fly; //; // This is a static function (for now) to make; // it a one-liner",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:3,Modifiability,Config,Configure,3,"// Configure the workspace",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:85,Integrability,depend,depending,85,"// namespace; /// Create observables of type RooRealVar. Creates 1 to 3 observables, depending on the type of the histogram.",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:22,Availability,error,error,22,"// give param initial error to match gaussSigma",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:40,Availability,error,error,40,"// ensure factor is assigned an initial error, even if its zero",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:7,Modifiability,variab,variables,7,"// add variables for all the relative overall uncertainties we expect",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:21,Testability,log,log-normal,21,"// check if exists a log-normal constraint",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:48,Modifiability,Flexible,FlexibleInterpVar,48,"// just add the alpha for the parameters of the FlexibleInterpVar function",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:24,Testability,log,log-normal,24,"// case systematic is a log-normal constraint",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:3,Testability,log,log,3,"// log normal constraint for parameter",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:136,Usability,simpl,simple,136,"// LM: change to 4 (piece-wise linear to 6th order polynomial interpolation + linear extrapolation ); //interp.setAllInterpCodes(0); // simple linear interpolation",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:89,Performance,optimiz,optimization,89,"// for use with RooSimultaneous::generate in mixed mode; // Enable the binned likelihood optimization",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:33,Integrability,depend,depending,33,"/// MB: label observables x,y,z, depending on histogram dimensionality; /// GHL: Give it the first sample's nominal histogram as a template; /// since the data histogram may not be present",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:13,Availability,error,error,13,"// <nominal, error>",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:16,Availability,error,error,16,"// give initial error value",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:94,Safety,predict,predictions,94,"///////////////////////////////////; // loop through estimates, add expectation, floating bin predictions,; // and terms that constrain floating to expectation via uncertainties; // GHL: Loop over samples instead, which doesn't contain the data",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:246,Testability,Log,Logic,246,"// MB : HACK no option to have both non-hist variations and hist variations ?; // get histogram; // GHL: Okay, this is going to be non-trivial.; // We will loop over histosys's, which contain both; // the low hist and the high hist together.; // Logic:; // - If we have no HistoSys's, do part A; // - else, if the histo syst's don't match, return (we ignore this case); // - finally, we take the syst's and apply the linear interpolation w/ constraint",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:26,Availability,error,error,26,"// Make the absolute stat error",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:13,Availability,error,error,13,"// clone the error histograms because in case the sample has not error hist; // it is created in MakeAbsolUncertainty; // we need later to clean statErrorHist",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:65,Availability,error,error,65,"// clone the error histograms because in case the sample has not error hist; // it is created in MakeAbsolUncertainty; // we need later to clean statErrorHist",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:28,Availability,error,error,28,"// We assume the (relative) error is provided.; // We must turn it into an absolute error; // using the nominal histogram",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:84,Availability,error,error,84,"// We assume the (relative) error is provided.; // We must turn it into an absolute error; // using the nominal histogram",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:24,Availability,error,error,24,"// Save the nominal and error hists; // for the building of constraint terms",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:548,Integrability,depend,dependence,548,"// To do the 'conservative' version, we would need to do some; // intervention here. We would probably need to create a different; // ParamHistFunc for each sample in the channel. The would nominally; // use the same gamma's, so we haven't increased the number of parameters; // However, if a bin in the 'nominal' histogram is 0, we simply need to; // change the parameter in that bin in the ParamHistFunc for this sample.; // We also need to add a constraint term.; // Actually, we'd probably not use the ParamHistFunc...?; // we could remove the dependence in this ParamHistFunc on the ith gamma; // and then create the poisson term: Pois(tau | n_exp)Pois(data | n_exp); // Next, try to get the common ParamHistFunc (it may have been; // created by another sample in this channel); // or create it if it doesn't yet exist:",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:333,Usability,simpl,simply,333,"// To do the 'conservative' version, we would need to do some; // intervention here. We would probably need to create a different; // ParamHistFunc for each sample in the channel. The would nominally; // use the same gamma's, so we haven't increased the number of parameters; // However, if a bin in the 'nominal' histogram is 0, we simply need to; // change the parameter in that bin in the ParamHistFunc for this sample.; // We also need to add a constraint term.; // Actually, we'd probably not use the ParamHistFunc...?; // we could remove the dependence in this ParamHistFunc on the ith gamma; // and then create the poisson term: Pois(tau | n_exp)Pois(data | n_exp); // Next, try to get the common ParamHistFunc (it may have been; // created by another sample in this channel); // or create it if it doesn't yet exist:",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:11,Modifiability,variab,variables,11,"// Set the variables constant, if requested",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:217,Availability,error,error,217,"// End: Create ShapeFactor ParamHistFunc; // Create the constraint terms and add; // them to the workspace (proto); // as well as the list of constraint terms (constraintTermNames); // The syst should be a fractional error",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:37,Availability,error,errors,37,"// Using this TH1* of fractinal stat errors,; // create a set of constraint terms:",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:43,Availability,error,error,43,"// Get the constraint type and the; // rel error threshold from the (last); // EstimateSummary looped over (but all; // should be the same); // Get the type of StatError constraint from the channel",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:108,Modifiability,config,config,108,"// proto.writeToFile((""results/model_""+channel+"".root"").c_str());; // fill out nuisance parameters in model config; // proto_config->GuessObsAndNuisance(*proto.data(""asimovData""));",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:73,Availability,error,errors,73,"// Take a nominal TH1* and create; // a TH1 representing the binwise; // errors (taken from the nominal TH1)",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:128,Availability,error,error,128,"// Take a list of < nominal, absolError > TH1* pairs; // and construct a single histogram representing the; // total fractional error as:; // UncertInQuad(bin i) = Sum: absolUncert*absolUncert; // Total(bin i) = Sum: Value; //; // TotalFracError(bin i) = Sqrt( UncertInQuad(i) ) / TotalBin(i)",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:41,Availability,error,error,41,"// If we otherwise get a NAN; // it's an error",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:79,Availability,Error,Error,79,"// 0th entry in vector is; // the 1st bin in TH1; // (we ignore underflow); // Error and bin content are interchanged because for some reason, the other functions; // use the bin content to convey the error ...",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:201,Availability,error,error,201,"// 0th entry in vector is; // the 1st bin in TH1; // (we ignore underflow); // Error and bin content are interchanged because for some reason, the other functions; // use the bin content to convey the error ...",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistRef.cxx:491,Integrability,wrap,wrapping,491,"// @(#)root/roostats:$Id$; // Author: L. Moneta; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HistFactory::HistRef; * \ingroup HistFactory; * Internal class wrapping an histogram and managing its content.; * convenient for dealing with histogram pointers in the; * HistFactory class; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/HistRef.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistRef.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx:533,Integrability,interface,interface,533,"/// \cond ROOFIT_INTERNAL; /*; * Project: RooFit; * Authors:; * Carsten D. Burgard, DESY/ATLAS, Dec 2021; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::HistFactory::JSONTool; * \ingroup HistFactory; The RooStats::HistFactory::JSONTool can be used to export a HistFactory; measurement to HS3 JSON. It is not part of the public user interface, but a; pretty useful tool for unit test, validating if a measurement object can be; directly translated to HS3 without going over RooFit. If this translation turns; out to be important for users, it can be considered in the future to make the; class part of the public interface.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/JSONTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx:813,Integrability,interface,interface,813,"/// \cond ROOFIT_INTERNAL; /*; * Project: RooFit; * Authors:; * Carsten D. Burgard, DESY/ATLAS, Dec 2021; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::HistFactory::JSONTool; * \ingroup HistFactory; The RooStats::HistFactory::JSONTool can be used to export a HistFactory; measurement to HS3 JSON. It is not part of the public user interface, but a; pretty useful tool for unit test, validating if a measurement object can be; directly translated to HS3 without going over RooFit. If this translation turns; out to be important for users, it can be considered in the future to make the; class part of the public interface.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/JSONTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx:585,Security,validat,validating,585,"/// \cond ROOFIT_INTERNAL; /*; * Project: RooFit; * Authors:; * Carsten D. Burgard, DESY/ATLAS, Dec 2021; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::HistFactory::JSONTool; * \ingroup HistFactory; The RooStats::HistFactory::JSONTool can be used to export a HistFactory; measurement to HS3 JSON. It is not part of the public user interface, but a; pretty useful tool for unit test, validating if a measurement object can be; directly translated to HS3 without going over RooFit. If this translation turns; out to be important for users, it can be considered in the future to make the; class part of the public interface.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/JSONTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx:579,Testability,test,test,579,"/// \cond ROOFIT_INTERNAL; /*; * Project: RooFit; * Authors:; * Carsten D. Burgard, DESY/ATLAS, Dec 2021; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::HistFactory::JSONTool; * \ingroup HistFactory; The RooStats::HistFactory::JSONTool can be used to export a HistFactory; measurement to HS3 JSON. It is not part of the public user interface, but a; pretty useful tool for unit test, validating if a measurement object can be; directly translated to HS3 without going over RooFit. If this translation turns; out to be important for users, it can be considered in the future to make the; class part of the public interface.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/JSONTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx:118,Availability,error,errors,118,"// For the gamma parameters, HistFactory will figure out the ranges; // itself based on the template bin contents and errors.",MatchSource.CODE_COMMENT,roofit/histfactory/src/JSONTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx:12,Modifiability,variab,variables,12,"// the lumi variables",MatchSource.CODE_COMMENT,roofit/histfactory/src/JSONTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/JSONTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:725,Deployability,configurat,configuration,725,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:692,Modifiability,config,configure,692,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:725,Modifiability,config,configuration,725,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:776,Modifiability,config,config,776,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:573,Testability,test,test,573,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:69,Availability,error,errors,69,"// Create the table file, which holds the table of fitted values and errors",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:147,Integrability,rout,routine,147,"// End loop over channels; /***; Second: Make the combined model:; If you want output histograms in root format, create and pass it to the combine routine.; ""combine"" : will do the individual cross-section measurements plus combination; ***/; // Use HistFactory to combine the individual channel workspaces",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:3,Modifiability,Config,Configure,3,"// Configure that workspace",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:19,Availability,error,errors,19,"// Print the MINOS errors to the TableFile",MatchSource.CODE_COMMENT,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:692,Deployability,integrat,integrated,692,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, George Lewis; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HistFactory::Measurement; * \ingroup HistFactory; The RooStats::HistFactory::Measurement class can be used to construct a model; by combining multiple RooStats::HistFactory::Channel objects. It also allows; to set some general properties like the integrated luminosity, its relative; uncertainty or the functional form of constraints on nuisance parameters.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:692,Integrability,integrat,integrated,692,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, George Lewis; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HistFactory::Measurement; * \ingroup HistFactory; The RooStats::HistFactory::Measurement class can be used to construct a model; by combining multiple RooStats::HistFactory::Channel objects. It also allows; to set some general properties like the integrated luminosity, its relative; uncertainty or the functional form of constraints on nuisance parameters.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:131,Integrability,depend,dependencies,131,"/// Add a preprocessed function by giving the function a name,; /// a functional expression, and a string with a bracketed list of dependencies (eg ""SigXsecOverSM[0,3]"")",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:48,Testability,Log,LogNormal,48,"/// Set constraint term for given systematic to LogNormal distribution",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:21,Usability,simpl,simply,21,"// Is this parameter simply a dummy?",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:88,Modifiability,config,configured,88,"/// Create XML files for this measurement in the given directory.; /// XML files can be configured with a different output prefix; /// Create an XML file for this measurement; /// First, create the XML driver; /// Then, create xml files for each channel",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:116,Integrability,Depend,Dependents,116,"/*; xml << ""<Function Name=\"""" << func.GetName() << ""\"" ""; << ""Expression=\"""" << func.GetExpression() << ""\"" ""; << ""Dependents=\"""" << func.GetDependents() << ""\"" ""; << ""/>"" << std::endl;; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:3,Testability,Log,LogNormal,3,"// LogNormal",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:30,Modifiability,config,configured,30,"/// A measurement, once fully configured, can be saved into a ROOT; /// file. This will persitify the Measurement object, along with any; /// channels and samples that have been added to it. It can then be; /// loaded, potentially modified, and used to create new models.; ///; /// Write every histogram to the file.; /// Edit the measurement to point to this file; /// and to point to each histogram in this file; /// Then write the measurement itself.",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:211,Performance,load,loaded,211,"/// A measurement, once fully configured, can be saved into a ROOT; /// file. This will persitify the Measurement object, along with any; /// channels and samples that have been added to it. It can then be; /// loaded, potentially modified, and used to create new models.; ///; /// Write every histogram to the file.; /// Edit the measurement to point to this file; /// and to point to each histogram in this file; /// Then write the measurement itself.",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:11,Performance,cache,cache,11,"// Get and cache the histograms for this channel:; //collector.CollectHistograms( channel );; // Do I need this...?; // channel.CollectHistograms();; // Make a directory to store the histograms; // for this channel",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:72,Availability,Error,Error,72,"/*; TH1* hSample = sample.GetHisto();; if( ! hSample ) {; std::cout << ""Error getting histogram for sample: ""; << sampName << std::endl;; throw -1;; }; sampleDir->cd();; hSample->Write();. sample.InputFile = OutputFileName;; sample.HistoName = hSample->GetName();; sample.HistoPath = sampleDirPath;; */; // Write the histograms associated with; // systematics; /* THIS IS WHAT I""M COMMENTING; sample.GetStatError().writeToFile( OutputFileName, sampleDirPath );. // Must write all systematics that contain internal histograms; // (This is not all systematics). for( unsigned int i = 0; i < sample.GetHistoSysList().size(); ++i ) {; sample.GetHistoSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetHistoFactorList().size(); ++i ) {; sample.GetHistoFactorList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetShapeSysList().size(); ++i ) {; sample.GetShapeSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; END COMMENT */; /*; sample.statError.writeToFile( OutputFileName, sampleDirPath );. // Now, get the Stat config histograms; if( sample.statError.HistoName != """" ) {; TH1* hStatError = sample.statError.GetErrorHist();; if( ! hStatError ) {; std::cout << ""Error getting stat error histogram for sample: ""; << sampName << std::endl;; throw -1;; }; hStatError->Write();. sample.statError.InputFile = OutputFileName;; sample.statError.HistoName = hStatError->GetName();; sample.statError.HistoPath = sampleDirPath;. }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:1276,Availability,Error,Error,1276,"/*; TH1* hSample = sample.GetHisto();; if( ! hSample ) {; std::cout << ""Error getting histogram for sample: ""; << sampName << std::endl;; throw -1;; }; sampleDir->cd();; hSample->Write();. sample.InputFile = OutputFileName;; sample.HistoName = hSample->GetName();; sample.HistoPath = sampleDirPath;; */; // Write the histograms associated with; // systematics; /* THIS IS WHAT I""M COMMENTING; sample.GetStatError().writeToFile( OutputFileName, sampleDirPath );. // Must write all systematics that contain internal histograms; // (This is not all systematics). for( unsigned int i = 0; i < sample.GetHistoSysList().size(); ++i ) {; sample.GetHistoSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetHistoFactorList().size(); ++i ) {; sample.GetHistoFactorList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetShapeSysList().size(); ++i ) {; sample.GetShapeSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; END COMMENT */; /*; sample.statError.writeToFile( OutputFileName, sampleDirPath );. // Now, get the Stat config histograms; if( sample.statError.HistoName != """" ) {; TH1* hStatError = sample.statError.GetErrorHist();; if( ! hStatError ) {; std::cout << ""Error getting stat error histogram for sample: ""; << sampName << std::endl;; throw -1;; }; hStatError->Write();. sample.statError.InputFile = OutputFileName;; sample.statError.HistoName = hStatError->GetName();; sample.statError.HistoPath = sampleDirPath;. }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:1295,Availability,error,error,1295,"/*; TH1* hSample = sample.GetHisto();; if( ! hSample ) {; std::cout << ""Error getting histogram for sample: ""; << sampName << std::endl;; throw -1;; }; sampleDir->cd();; hSample->Write();. sample.InputFile = OutputFileName;; sample.HistoName = hSample->GetName();; sample.HistoPath = sampleDirPath;; */; // Write the histograms associated with; // systematics; /* THIS IS WHAT I""M COMMENTING; sample.GetStatError().writeToFile( OutputFileName, sampleDirPath );. // Must write all systematics that contain internal histograms; // (This is not all systematics). for( unsigned int i = 0; i < sample.GetHistoSysList().size(); ++i ) {; sample.GetHistoSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetHistoFactorList().size(); ++i ) {; sample.GetHistoFactorList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetShapeSysList().size(); ++i ) {; sample.GetShapeSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; END COMMENT */; /*; sample.statError.writeToFile( OutputFileName, sampleDirPath );. // Now, get the Stat config histograms; if( sample.statError.HistoName != """" ) {; TH1* hStatError = sample.statError.GetErrorHist();; if( ! hStatError ) {; std::cout << ""Error getting stat error histogram for sample: ""; << sampName << std::endl;; throw -1;; }; hStatError->Write();. sample.statError.InputFile = OutputFileName;; sample.statError.HistoName = hStatError->GetName();; sample.statError.HistoPath = sampleDirPath;. }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:1127,Modifiability,config,config,1127,"/*; TH1* hSample = sample.GetHisto();; if( ! hSample ) {; std::cout << ""Error getting histogram for sample: ""; << sampName << std::endl;; throw -1;; }; sampleDir->cd();; hSample->Write();. sample.InputFile = OutputFileName;; sample.HistoName = hSample->GetName();; sample.HistoPath = sampleDirPath;; */; // Write the histograms associated with; // systematics; /* THIS IS WHAT I""M COMMENTING; sample.GetStatError().writeToFile( OutputFileName, sampleDirPath );. // Must write all systematics that contain internal histograms; // (This is not all systematics). for( unsigned int i = 0; i < sample.GetHistoSysList().size(); ++i ) {; sample.GetHistoSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetHistoFactorList().size(); ++i ) {; sample.GetHistoFactorList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetShapeSysList().size(); ++i ) {; sample.GetShapeSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; END COMMENT */; /*; sample.statError.writeToFile( OutputFileName, sampleDirPath );. // Now, get the Stat config histograms; if( sample.statError.HistoName != """" ) {; TH1* hStatError = sample.statError.GetErrorHist();; if( ! hStatError ) {; std::cout << ""Error getting stat error histogram for sample: ""; << sampName << std::endl;; throw -1;; }; hStatError->Write();. sample.statError.InputFile = OutputFileName;; sample.statError.HistoName = hStatError->GetName();; sample.statError.HistoPath = sampleDirPath;. }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:322,Performance,load,load,322,"/// The most common way to add histograms to channels is to have them; /// stored in ROOT files and to give HistFactory the location of these; /// files. This means providing the path to the ROOT file and the path; /// and name of the histogram within that file. When providing these; /// in a script, HistFactory doesn't load the histogram from the file; /// right away. Instead, once all such histograms have been supplied,; /// one should run this method to open all ROOT files and to copy and; /// save all necessary histograms.",MatchSource.CODE_COMMENT,roofit/histfactory/src/Measurement.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:371,Usability,simpl,simply,371,"////////////////////////////////////////////////////////////////////////////////; /// Create a function which returns binewise-values; /// This class contains N RooAbsReals's, one for each; /// bin from the given RooRealVar.; ///; /// The value of the function in the ith bin is; /// given by:; ///; /// F(i) = gamma_i * nominal(i); ///; /// Where the nominal values are simply fixed; /// numbers (default = 1.0 for all i)",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:41,Availability,failure,failure,41,"// return 0 for success; // return 1 for failure; // Check that the supplied list has; // the right number of arguments:",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:116,Deployability,update,update,116,"// output buffer for bin indices needs to be zero-initialized; // Use the vectorized RooAbsBinning::binNumbers() to update the total bin; // index for each dimension, using the `coef` parameter to multiply with the; // right index multiplication factor for each dimension.",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:21,Deployability,integrat,integration,21,"// Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:21,Integrability,integrat,integration,21,"// Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:44,Integrability,depend,dependents,44,"// Select subset of allVars that are actual dependents",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:17,Deployability,configurat,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:17,Modifiability,config,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:14,Performance,cache,cache,14,"// Create new cache element",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:9,Performance,cache,cache,9,"// Store cache element",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:107,Deployability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:194,Deployability,integrat,integrators,194,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:107,Integrability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:194,Integrability,integrat,integrators,194,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:3,Usability,Simpl,Simply,3,"// Simply loop over bins,; // get the height, and; // multiply by the bind width",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:12,Modifiability,variab,variable,12,"// look for variable in the DataHist, and if found, return the binning",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:13,Modifiability,variab,variable,13,"// found the variable, return its binning",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:3,Modifiability,variab,variable,3,"// variable not found, return null",MatchSource.CODE_COMMENT,roofit/histfactory/src/ParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:623,Availability,down,down,623,"/** \class PiecewiseInterpolation; * \ingroup HistFactory; * The PiecewiseInterpolation is a class that can morph distributions into each other, which; * is useful to estimate systematic uncertainties. Given a nominal distribution and one or; * more altered or distorted ones, it computes a new shape depending on the value of the nuisance; * parameters \f$ \alpha_i \f$:; * \f[; * A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i, \alpha_i).; * \f]; * If an \f$ \alpha_i \f$ is zero, the distribution is identical to the nominal distribution, at; * \f$ \pm 1 \f$ it is identical to the up/down distribution for that specific \f$ i \f$.; *; * The class supports several interpolation methods, which can be selected for each parameter separately; * using setInterpCode(). The default interpolation code is 4. This performs; * - \f$ |\alpha | > 1 \f$: Linear extrapolation.; * - \f$ |\alpha | < 1 \f$: Polynomial interpolation. A sixth-order polynomial is used. Its coefficients; * are chosen such that function, first, and second derivative at \f$ \alpha \pm 1 \f$ match the values; * that the extrapolation procedure uses.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:301,Integrability,depend,depending,301,"/** \class PiecewiseInterpolation; * \ingroup HistFactory; * The PiecewiseInterpolation is a class that can morph distributions into each other, which; * is useful to estimate systematic uncertainties. Given a nominal distribution and one or; * more altered or distorted ones, it computes a new shape depending on the value of the nuisance; * parameters \f$ \alpha_i \f$:; * \f[; * A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i, \alpha_i).; * \f]; * If an \f$ \alpha_i \f$ is zero, the distribution is identical to the nominal distribution, at; * \f$ \pm 1 \f$ it is identical to the up/down distribution for that specific \f$ i \f$.; *; * The class supports several interpolation methods, which can be selected for each parameter separately; * using setInterpCode(). The default interpolation code is 4. This performs; * - \f$ |\alpha | > 1 \f$: Linear extrapolation.; * - \f$ |\alpha | < 1 \f$: Polynomial interpolation. A sixth-order polynomial is used. Its coefficients; * are chosen such that function, first, and second derivative at \f$ \alpha \pm 1 \f$ match the values; * that the extrapolation procedure uses.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:846,Performance,perform,performs,846,"/** \class PiecewiseInterpolation; * \ingroup HistFactory; * The PiecewiseInterpolation is a class that can morph distributions into each other, which; * is useful to estimate systematic uncertainties. Given a nominal distribution and one or; * more altered or distorted ones, it computes a new shape depending on the value of the nuisance; * parameters \f$ \alpha_i \f$:; * \f[; * A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i, \alpha_i).; * \f]; * If an \f$ \alpha_i \f$ is zero, the distribution is identical to the nominal distribution, at; * \f$ \pm 1 \f$ it is identical to the up/down distribution for that specific \f$ i \f$.; *; * The class supports several interpolation methods, which can be selected for each parameter separately; * using setInterpCode(). The default interpolation code is 4. This performs; * - \f$ |\alpha | > 1 \f$: Linear extrapolation.; * - \f$ |\alpha | < 1 \f$: Polynomial interpolation. A sixth-order polynomial is used. Its coefficients; * are chosen such that function, first, and second derivative at \f$ \alpha \pm 1 \f$ match the values; * that the extrapolation procedure uses.; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:416,Availability,down,down,416,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new interpolation. The value of the function will be; /// \f[; /// A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i).; /// \f]; /// \param name Name of the object.; /// \param title Title (for e.g. plotting); /// \param nominal Nominal value of the function.; /// \param lowSet Set of down variations.; /// \param highSet Set of up variations.; /// \param paramSet Parameters that control the interpolation.",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:18,Deployability,integrat,integrator,18,"// Choose special integrator by default",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:18,Integrability,integrat,integrator,18,"// Choose special integrator by default",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:266,Performance,optimiz,optimization,266,"// The PiecewiseInterpolation class is used in the context of HistFactory; // models, where is is always used the same way: all RooAbsReals in _lowSet,; // _histSet, and also nominal are 1D RooHistFuncs with with same structure.; //; // Therefore, we can make a big optimization: we get the bin index only once; // here in the generated code for PiecewiseInterpolation. Then, we also; // rearrange the histogram data in such a way that we can always pass the; // same arrays to the free function that implements the interpolation, just; // with a dynamic offset calculated from the bin index.",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:301,Deployability,integrat,integration,301,"/*; cout << ""---------------------------\nin PiecewiseInterpolation get analytic integral "" <<endl;; cout << ""all vars = ""<<endl;; allVars.Print(""v"");; cout << ""anal vars = ""<<endl;; analVars.Print(""v"");; cout << ""normset vars = ""<<endl;; if(normSet2); normSet2->Print(""v"");; */; // Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:301,Integrability,integrat,integration,301,"/*; cout << ""---------------------------\nin PiecewiseInterpolation get analytic integral "" <<endl;; cout << ""all vars = ""<<endl;; allVars.Print(""v"");; cout << ""anal vars = ""<<endl;; analVars.Print(""v"");; cout << ""normset vars = ""<<endl;; if(normSet2); normSet2->Print(""v"");; */; // Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:23,Deployability,integrat,integration,23,"// Force using numeric integration; // use special numeric integrator",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:59,Deployability,integrat,integrator,59,"// Force using numeric integration; // use special numeric integrator",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:23,Integrability,integrat,integration,23,"// Force using numeric integration; // use special numeric integrator",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:59,Integrability,integrat,integrator,59,"// Force using numeric integration; // use special numeric integrator",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:44,Integrability,depend,dependents,44,"// Select subset of allVars that are actual dependents",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:17,Deployability,configurat,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:17,Modifiability,config,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:14,Performance,cache,cache,14,"// Create new cache element",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:9,Performance,cache,cache,9,"// Store cache element",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:107,Deployability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:194,Deployability,integrat,integrators,194,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:107,Integrability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:194,Integrability,integrat,integrators,194,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:643,Performance,Cache,CacheElem,643,"/*; cout <<""Enter analytic Integral""<<endl;; printDirty(true);; // _nominal.arg().setDirtyInhibit(true) ;; _nominal.arg().setShapeDirty() ;; RooAbsReal* temp ;; RooFIter lowIter(_lowSet.fwdIterator()) ;; while((temp=(RooAbsReal*)lowIter.next())) {; // temp->setDirtyInhibit(true) ;; temp->setShapeDirty() ;; }; RooFIter highIter(_highSet.fwdIterator()) ;; while((temp=(RooAbsReal*)highIter.next())) {; // temp->setDirtyInhibit(true) ;; temp->setShapeDirty() ;; }; */; /*; RooAbsArg::setDirtyInhibit(true);; printDirty(true);; cout <<""done setting dirty inhibit = true""<<endl;. // old integral, only works for linear and not positive definite; CacheElem* cache = (CacheElem*) _normIntMgr.getObjByIndex(code-1) ;. std::unique_ptr<RooArgSet> vars2( getParameters(RooArgSet()) );; std::unique_ptr<RooArgSet> iset( _normIntMgr.nameSet2ByIndex(code-1)->select(*vars2) );; cout <<""iset = ""<<endl;; iset->Print(""v"");. double sum = 0;; RooArgSet* vars = getVariables();; vars->remove(_paramSet);; _paramSet.Print(""v"");; vars->Print(""v"");; if(vars->size()==1){; RooRealVar* obs = (RooRealVar*) vars->first();; for(int i=0; i<obs->numBins(); ++i){; obs->setVal( obs->getMin() + (.5+i)*(obs->getMax()-obs->getMin())/obs->numBins());; sum+=evaluate()*(obs->getMax()-obs->getMin())/obs->numBins();; cout << ""obs = "" << obs->getVal() << "" sum = "" << sum << endl;; }; } else{; cout <<""only know how to deal with 1 observable right now""<<endl;; }; */; /*; _nominal.arg().setDirtyInhibit(false) ;; RooFIter lowIter2(_lowSet.fwdIterator()) ;; while((temp=(RooAbsReal*)lowIter2.next())) {; temp->setDirtyInhibit(false) ;; }; RooFIter highIter2(_highSet.fwdIterator()) ;; while((temp=(RooAbsReal*)highIter2.next())) {; temp->setDirtyInhibit(false) ;; }; */; /*; RooAbsArg::setDirtyInhibit(false);; printDirty(true);; cout <<""done""<<endl;; cout << ""sum = "" <<sum<<endl;; //return sum;; */; // old integral, only works for linear and not positive definite",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:654,Performance,cache,cache,654,"/*; cout <<""Enter analytic Integral""<<endl;; printDirty(true);; // _nominal.arg().setDirtyInhibit(true) ;; _nominal.arg().setShapeDirty() ;; RooAbsReal* temp ;; RooFIter lowIter(_lowSet.fwdIterator()) ;; while((temp=(RooAbsReal*)lowIter.next())) {; // temp->setDirtyInhibit(true) ;; temp->setShapeDirty() ;; }; RooFIter highIter(_highSet.fwdIterator()) ;; while((temp=(RooAbsReal*)highIter.next())) {; // temp->setDirtyInhibit(true) ;; temp->setShapeDirty() ;; }; */; /*; RooAbsArg::setDirtyInhibit(true);; printDirty(true);; cout <<""done setting dirty inhibit = true""<<endl;. // old integral, only works for linear and not positive definite; CacheElem* cache = (CacheElem*) _normIntMgr.getObjByIndex(code-1) ;. std::unique_ptr<RooArgSet> vars2( getParameters(RooArgSet()) );; std::unique_ptr<RooArgSet> iset( _normIntMgr.nameSet2ByIndex(code-1)->select(*vars2) );; cout <<""iset = ""<<endl;; iset->Print(""v"");. double sum = 0;; RooArgSet* vars = getVariables();; vars->remove(_paramSet);; _paramSet.Print(""v"");; vars->Print(""v"");; if(vars->size()==1){; RooRealVar* obs = (RooRealVar*) vars->first();; for(int i=0; i<obs->numBins(); ++i){; obs->setVal( obs->getMin() + (.5+i)*(obs->getMax()-obs->getMin())/obs->numBins());; sum+=evaluate()*(obs->getMax()-obs->getMin())/obs->numBins();; cout << ""obs = "" << obs->getVal() << "" sum = "" << sum << endl;; }; } else{; cout <<""only know how to deal with 1 observable right now""<<endl;; }; */; /*; _nominal.arg().setDirtyInhibit(false) ;; RooFIter lowIter2(_lowSet.fwdIterator()) ;; while((temp=(RooAbsReal*)lowIter2.next())) {; temp->setDirtyInhibit(false) ;; }; RooFIter highIter2(_highSet.fwdIterator()) ;; while((temp=(RooAbsReal*)highIter2.next())) {; temp->setDirtyInhibit(false) ;; }; */; /*; RooAbsArg::setDirtyInhibit(false);; printDirty(true);; cout <<""done""<<endl;; cout << ""sum = "" <<sum<<endl;; //return sum;; */; // old integral, only works for linear and not positive definite",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:663,Performance,Cache,CacheElem,663,"/*; cout <<""Enter analytic Integral""<<endl;; printDirty(true);; // _nominal.arg().setDirtyInhibit(true) ;; _nominal.arg().setShapeDirty() ;; RooAbsReal* temp ;; RooFIter lowIter(_lowSet.fwdIterator()) ;; while((temp=(RooAbsReal*)lowIter.next())) {; // temp->setDirtyInhibit(true) ;; temp->setShapeDirty() ;; }; RooFIter highIter(_highSet.fwdIterator()) ;; while((temp=(RooAbsReal*)highIter.next())) {; // temp->setDirtyInhibit(true) ;; temp->setShapeDirty() ;; }; */; /*; RooAbsArg::setDirtyInhibit(true);; printDirty(true);; cout <<""done setting dirty inhibit = true""<<endl;. // old integral, only works for linear and not positive definite; CacheElem* cache = (CacheElem*) _normIntMgr.getObjByIndex(code-1) ;. std::unique_ptr<RooArgSet> vars2( getParameters(RooArgSet()) );; std::unique_ptr<RooArgSet> iset( _normIntMgr.nameSet2ByIndex(code-1)->select(*vars2) );; cout <<""iset = ""<<endl;; iset->Print(""v"");. double sum = 0;; RooArgSet* vars = getVariables();; vars->remove(_paramSet);; _paramSet.Print(""v"");; vars->Print(""v"");; if(vars->size()==1){; RooRealVar* obs = (RooRealVar*) vars->first();; for(int i=0; i<obs->numBins(); ++i){; obs->setVal( obs->getMin() + (.5+i)*(obs->getMax()-obs->getMin())/obs->numBins());; sum+=evaluate()*(obs->getMax()-obs->getMin())/obs->numBins();; cout << ""obs = "" << obs->getVal() << "" sum = "" << sum << endl;; }; } else{; cout <<""only know how to deal with 1 observable right now""<<endl;; }; */; /*; _nominal.arg().setDirtyInhibit(false) ;; RooFIter lowIter2(_lowSet.fwdIterator()) ;; while((temp=(RooAbsReal*)lowIter2.next())) {; temp->setDirtyInhibit(false) ;; }; RooFIter highIter2(_highSet.fwdIterator()) ;; while((temp=(RooAbsReal*)highIter2.next())) {; temp->setDirtyInhibit(false) ;; }; */; /*; RooAbsArg::setDirtyInhibit(false);; printDirty(true);; cout <<""done""<<endl;; cout << ""sum = "" <<sum<<endl;; //return sum;; */; // old integral, only works for linear and not positive definite",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:1935,Availability,ERROR,ERROR,1935,"_paramIter->Next()) ) {; low = (RooAbsReal*)lowIntIter->Next() ;; high = (RooAbsReal*)highIntIter->Next() ;. if(param->getVal()>0) {; value += param->getVal()*(high->getVal() - nominal );; } else {; value += param->getVal()*(nominal - low->getVal());; }; ++i;; }; */; /* KC: the code below is wrong. Can't pull out a constant change to a non-linear shape deformation.; while( (param=(RooAbsReal*)paramIter.next()) ) {; low = (RooAbsReal*)lowIntIter.next() ;; high = (RooAbsReal*)highIntIter.next() ;. if(_interpCode.empty() || _interpCode.at(i)==0){; // piece-wise linear; if(param->getVal()>0); value += param->getVal()*(high->getVal() - nominal );; else; value += param->getVal()*(nominal - low->getVal());; } else if(_interpCode.at(i)==1){; // piece-wise log; if(param->getVal()>=0); value *= pow(high->getVal()/nominal, +param->getVal());; else; value *= pow(low->getVal()/nominal, -param->getVal());; } else if(_interpCode.at(i)==2){; // parabolic with linear; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }; } else if(_interpCode.at(i)==3){; //parabolic version of log-normal; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }. } else {; coutE(InputArguments) << ""PiecewiseInterpolation::analyticalIntegralWN ERROR: "" << param->GetName(); << "" with unknown interpolation code"" << endl ;; }; ++i;; }; */; // cout << ""value = "" << value <<endl;",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:827,Testability,log,log,827,"/* // MB : old bit of interpolation code; while( (param=(RooAbsReal*)_paramIter->Next()) ) {; low = (RooAbsReal*)lowIntIter->Next() ;; high = (RooAbsReal*)highIntIter->Next() ;. if(param->getVal()>0) {; value += param->getVal()*(high->getVal() - nominal );; } else {; value += param->getVal()*(nominal - low->getVal());; }; ++i;; }; */; /* KC: the code below is wrong. Can't pull out a constant change to a non-linear shape deformation.; while( (param=(RooAbsReal*)paramIter.next()) ) {; low = (RooAbsReal*)lowIntIter.next() ;; high = (RooAbsReal*)highIntIter.next() ;. if(_interpCode.empty() || _interpCode.at(i)==0){; // piece-wise linear; if(param->getVal()>0); value += param->getVal()*(high->getVal() - nominal );; else; value += param->getVal()*(nominal - low->getVal());; } else if(_interpCode.at(i)==1){; // piece-wise log; if(param->getVal()>=0); value *= pow(high->getVal()/nominal, +param->getVal());; else; value *= pow(low->getVal()/nominal, -param->getVal());; } else if(_interpCode.at(i)==2){; // parabolic with linear; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }; } else if(_interpCode.at(i)==3){; //parabolic version of log-normal; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }. } else {; coutE(InputArguments) << ""PiecewiseInterpolation::analyticalIntegralWN ERROR: "" << param->GetName(); << "" with unknown interpolation code",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:1467,Testability,log,log-normal,1467,"_paramIter->Next()) ) {; low = (RooAbsReal*)lowIntIter->Next() ;; high = (RooAbsReal*)highIntIter->Next() ;. if(param->getVal()>0) {; value += param->getVal()*(high->getVal() - nominal );; } else {; value += param->getVal()*(nominal - low->getVal());; }; ++i;; }; */; /* KC: the code below is wrong. Can't pull out a constant change to a non-linear shape deformation.; while( (param=(RooAbsReal*)paramIter.next()) ) {; low = (RooAbsReal*)lowIntIter.next() ;; high = (RooAbsReal*)highIntIter.next() ;. if(_interpCode.empty() || _interpCode.at(i)==0){; // piece-wise linear; if(param->getVal()>0); value += param->getVal()*(high->getVal() - nominal );; else; value += param->getVal()*(nominal - low->getVal());; } else if(_interpCode.at(i)==1){; // piece-wise log; if(param->getVal()>=0); value *= pow(high->getVal()/nominal, +param->getVal());; else; value *= pow(low->getVal()/nominal, -param->getVal());; } else if(_interpCode.at(i)==2){; // parabolic with linear; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }; } else if(_interpCode.at(i)==3){; //parabolic version of log-normal; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }. } else {; coutE(InputArguments) << ""PiecewiseInterpolation::analyticalIntegralWN ERROR: "" << param->GetName(); << "" with unknown interpolation code"" << endl ;; }; ++i;; }; */; // cout << ""value = "" << value <<endl;",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:159,Usability,intuit,intuitively,159,"/*; ////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a PiecewiseInterpolation to more intuitively reflect the contents of the; /// product operator construction. void PiecewiseInterpolation::printMetaArgs(ostream& os) const; {; _lowIter->Reset() ;; if (_highIter) {; _highIter->Reset() ;; }. bool first(true) ;. RooAbsArg* arg1, *arg2 ;; if (_highSet.size()!=0) {. while((arg1=(RooAbsArg*)_lowIter->Next())) {; if (!first) {; os << "" + "" ;; } else {; first = false ;; }; arg2=(RooAbsArg*)_highIter->Next() ;; os << arg1->GetName() << "" * "" << arg2->GetName() ;; }. } else {. while((arg1=(RooAbsArg*)_lowIter->Next())) {; if (!first) {; os << "" + "" ;; } else {; first = false ;; }; os << arg1->GetName() ;; }. }. os << "" "" ;; }. */",MatchSource.CODE_COMMENT,roofit/histfactory/src/PiecewiseInterpolation.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:920,Testability,log,log,920,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, George Lewis; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooStats::HistFactory::RooBarlowBeestonLL; * \ingroup HistFactory; //; // Class RooBarlowBeestonLL implements the profile likelihood estimator for; // a given likelihood and set of parameters of interest. The value return by; // RooBarlowBeestonLL is the input likelihood nll minimized w.r.t all nuisance parameters; // (which are all parameters except for those listed in the constructor) minus; // the -log(L) of the best fit. Note that this function is slow to evaluate; // as a MIGRAD minimization step is executed for each function evaluation; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:91,Modifiability,variab,variables,91,// Constructor of profile likelihood given input likelihood nll w.r.t; // the given set of variables. The input log likelihood is minimized w.r.t; // to all other variables of the likelihood at each evaluation and the; // value of the global log likelihood minimum is always subtracted.; // Determine actual parameters and observables; /*; std::unique_ptr<RooArgSet> actualObs{nllIn.getObservables(observables)};; std::unique_ptr<RooArgSet> actualPars{nllIn.getParameters(observables)};. _obs.add(*actualObs) ;; _par.add(*actualPars) ;; */,MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:163,Modifiability,variab,variables,163,// Constructor of profile likelihood given input likelihood nll w.r.t; // the given set of variables. The input log likelihood is minimized w.r.t; // to all other variables of the likelihood at each evaluation and the; // value of the global log likelihood minimum is always subtracted.; // Determine actual parameters and observables; /*; std::unique_ptr<RooArgSet> actualObs{nllIn.getObservables(observables)};; std::unique_ptr<RooArgSet> actualPars{nllIn.getParameters(observables)};. _obs.add(*actualObs) ;; _par.add(*actualPars) ;; */,MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:112,Testability,log,log,112,// Constructor of profile likelihood given input likelihood nll w.r.t; // the given set of variables. The input log likelihood is minimized w.r.t; // to all other variables of the likelihood at each evaluation and the; // value of the global log likelihood minimum is always subtracted.; // Determine actual parameters and observables; /*; std::unique_ptr<RooArgSet> actualObs{nllIn.getObservables(observables)};; std::unique_ptr<RooArgSet> actualPars{nllIn.getParameters(observables)};. _obs.add(*actualObs) ;; _par.add(*actualPars) ;; */,MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:242,Testability,log,log,242,// Constructor of profile likelihood given input likelihood nll w.r.t; // the given set of variables. The input log likelihood is minimized w.r.t; // to all other variables of the likelihood at each evaluation and the; // value of the global log likelihood minimum is always subtracted.; // Determine actual parameters and observables; /*; std::unique_ptr<RooArgSet> actualObs{nllIn.getObservables(observables)};; std::unique_ptr<RooArgSet> actualPars{nllIn.getParameters(observables)};. _obs.add(*actualObs) ;; _par.add(*actualPars) ;; */,MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:12,Performance,cache,cache,12,"// Create a cache object",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:21,Usability,simpl,simply,21,"// Delete this part, simply a comment",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:45,Performance,cache,cache,45,"//_barlowCache[channel_name].at(bin_index) = cache;",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:60,Performance,cache,cache,60,"// End: Loop over channels; // Successfully initialized the cache; // Printing some info; /*; std::map< std::string, std::vector< BarlowCache > >::iterator iter_cache;; for( iter_cache = _barlowCache.begin(); iter_cache != _barlowCache.end(); ++iter_cache ) {. std::string channel_name = (*iter_cache).first;; std::vector< BarlowCache >& channel_cache = (*iter_cache).second;. for( unsigned int i = 0; i < channel_cache.size(); ++i ) {; BarlowCache& bin_cache = channel_cache.at(i);. RooRealVar* gamma = bin_cache.gamma;; RooRealVar* tau = bin_cache.tau;; RooAbsReal* pois_mean = bin_cache.nom_pois_mean;; RooAbsPdf* sum_pdf = (RooAbsPdf*) bin_cache.sumPdf;; double binVolume = bin_cache.binVolume;. if( !bin_cache.hasStatUncert ) {; std::cout << ""Barlow Cache for Channel: "" << channel_name; << "" Bin: "" << i; << "" NO STAT UNCERT""; << std::endl;; }; else {; std::cout << ""Barlow Cache for Channel: "" << channel_name; << "" Bin: "" << i; << "" gamma: "" << gamma->GetName(); << "" tau: "" << tau->GetName(); << "" pois_mean: "" << pois_mean->GetName(); << "" sum_pdf: "" << sum_pdf->GetName(); << "" binVolume: "" << binVolume; << std::endl;; }. }; }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:755,Performance,Cache,Cache,755,"// End: Loop over channels; // Successfully initialized the cache; // Printing some info; /*; std::map< std::string, std::vector< BarlowCache > >::iterator iter_cache;; for( iter_cache = _barlowCache.begin(); iter_cache != _barlowCache.end(); ++iter_cache ) {. std::string channel_name = (*iter_cache).first;; std::vector< BarlowCache >& channel_cache = (*iter_cache).second;. for( unsigned int i = 0; i < channel_cache.size(); ++i ) {; BarlowCache& bin_cache = channel_cache.at(i);. RooRealVar* gamma = bin_cache.gamma;; RooRealVar* tau = bin_cache.tau;; RooAbsReal* pois_mean = bin_cache.nom_pois_mean;; RooAbsPdf* sum_pdf = (RooAbsPdf*) bin_cache.sumPdf;; double binVolume = bin_cache.binVolume;. if( !bin_cache.hasStatUncert ) {; std::cout << ""Barlow Cache for Channel: "" << channel_name; << "" Bin: "" << i; << "" NO STAT UNCERT""; << std::endl;; }; else {; std::cout << ""Barlow Cache for Channel: "" << channel_name; << "" Bin: "" << i; << "" gamma: "" << gamma->GetName(); << "" tau: "" << tau->GetName(); << "" pois_mean: "" << pois_mean->GetName(); << "" sum_pdf: "" << sum_pdf->GetName(); << "" binVolume: "" << binVolume; << std::endl;; }. }; }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:880,Performance,Cache,Cache,880,"// End: Loop over channels; // Successfully initialized the cache; // Printing some info; /*; std::map< std::string, std::vector< BarlowCache > >::iterator iter_cache;; for( iter_cache = _barlowCache.begin(); iter_cache != _barlowCache.end(); ++iter_cache ) {. std::string channel_name = (*iter_cache).first;; std::vector< BarlowCache >& channel_cache = (*iter_cache).second;. for( unsigned int i = 0; i < channel_cache.size(); ++i ) {; BarlowCache& bin_cache = channel_cache.at(i);. RooRealVar* gamma = bin_cache.gamma;; RooRealVar* tau = bin_cache.tau;; RooAbsReal* pois_mean = bin_cache.nom_pois_mean;; RooAbsPdf* sum_pdf = (RooAbsPdf*) bin_cache.sumPdf;; double binVolume = bin_cache.binVolume;. if( !bin_cache.hasStatUncert ) {; std::cout << ""Barlow Cache for Channel: "" << channel_name; << "" Bin: "" << i; << "" NO STAT UNCERT""; << std::endl;; }; else {; std::cout << ""Barlow Cache for Channel: "" << channel_name; << "" Bin: "" << i; << "" gamma: "" << gamma->GetName(); << "" tau: "" << tau->GetName(); << "" pois_mean: "" << pois_mean->GetName(); << "" sum_pdf: "" << sum_pdf->GetName(); << "" binVolume: "" << binVolume; << std::endl;; }. }; }; */",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:66,Integrability,depend,dependencies,66,"// If there is a gamma in the name,; // strip it from the list of dependencies",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:1881,Integrability,depend,dependsOn,1881,"HistFactory::RooBarlowBeestonLL::bestFitParams() const; {; validateAbsMin() ;; return _paramAbsMin ;; }. ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitObs() const; {; validateAbsMin() ;; return _obsAbsMin ;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// Optimized implementation of createProfile for profile likelihoods.; /// Return profile of original function in terms of stated parameters; /// of interest rather than profiling recursively.; /*; RooAbsReal* RooStats::HistFactory::RooBarlowBeestonLL::createProfile(const RooArgSet& paramsOfInterest); {; return nll().createProfile(paramsOfInterest) ;; }; */; /*; void RooStats::HistFactory::RooBarlowBeestonLL::FactorizePdf(const RooArgSet &observables, RooAbsPdf &pdf, RooArgList &obsTerms, RooArgList &constraints) const {; // utility function to factorize constraint terms from a pdf; // (from G. Petrucciani); const std::type_info & id = typeid(pdf);; if (id == typeid(RooProdPdf)) {; RooProdPdf *prod = dynamic_cast<RooProdPdf *>(&pdf);; RooArgList list(prod->pdfList());; for (int i = 0, n = list.size(); i < n; ++i) {; RooAbsPdf *pdfi = (RooAbsPdf *) list.at(i);; FactorizePdf(observables, *pdfi, obsTerms, constraints);; }; } else if (id == typeid(RooSimultaneous) ) { //|| id == typeid(RooSimultaneousOpt)) {; RooSimultaneous *sim = dynamic_cast<RooSimultaneous *>(&pdf);; std::unique_ptr<RooAbsCategoryLValue> cat{(RooAbsCategoryLValue *) sim->indexCat().Clone()};; for (int ic = 0, nc = cat->numBins((const char *)0); ic < nc; ++ic) {; cat->setBin(ic);; FactorizePdf(observables, *sim->getPdf(cat->getLabel()), obsTerms, constraints);; }; } else if (pdf.dependsOn(observables)) {; if (!obsTerms.contains(pdf)) obsTerms.add(pdf);; } else {; if (!constraints.contains(pdf)) constraints.add(pdf);; }; }; */; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:517,Performance,Optimiz,Optimized,517,"/*; ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitParams() const; {; validateAbsMin() ;; return _paramAbsMin ;; }. ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitObs() const; {; validateAbsMin() ;; return _obsAbsMin ;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// Optimized implementation of createProfile for profile likelihoods.; /// Return profile of original function in terms of stated parameters; /// of interest rather than profiling recursively.; /*; RooAbsReal* RooStats::HistFactory::RooBarlowBeestonLL::createProfile(const RooArgSet& paramsOfInterest); {; return nll().createProfile(paramsOfInterest) ;; }; */; /*; void RooStats::HistFactory::RooBarlowBeestonLL::FactorizePdf(const RooArgSet &observables, RooAbsPdf &pdf, RooArgList &obsTerms, RooArgList &constraints) const {; // utility function to factorize constraint terms from a pdf; // (from G. Petrucciani); const std::type_info & id = typeid(pdf);; if (id == typeid(RooProdPdf)) {; RooProdPdf *prod = dynamic_cast<RooProdPdf *>(&pdf);; RooArgList list(prod->pdfList());; for (int i = 0, n = list.size(); i < n; ++i) {; RooAbsPdf *pdfi = (RooAbsPdf *) list.at(i);; FactorizePdf(observables, *pdfi, obsTerms, constraints);; }; } else if (id == typeid(RooSimultaneous) ) { //|| id == typeid(RooSimultaneousOpt)) {; RooSimultaneous *sim = dynamic_cast<RooSimultaneous *>(&pdf);; std::unique_ptr<RooAbsCategoryLValue> cat{(RooAbsCategoryLValue *) sim->indexCat().Clone()};; for (int ic = 0, nc = cat->numBins((const char *)0); ic < nc; ++ic) {; cat->setBin(ic);; FactorizePdf(observables, *sim->getPdf(cat->getLabel()), obsTerms, constraints);; }; } else if (pdf.dependsOn(observables)) {; if (!obsTerms.contains(pdf)) obsTerms.add(pdf);; } else {; if (!constraints.contains(pdf)) co",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:172,Security,validat,validateAbsMin,172,"/*; ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitParams() const; {; validateAbsMin() ;; return _paramAbsMin ;; }. ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitObs() const; {; validateAbsMin() ;; return _obsAbsMin ;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// Optimized implementation of createProfile for profile likelihoods.; /// Return profile of original function in terms of stated parameters; /// of interest rather than profiling recursively.; /*; RooAbsReal* RooStats::HistFactory::RooBarlowBeestonLL::createProfile(const RooArgSet& paramsOfInterest); {; return nll().createProfile(paramsOfInterest) ;; }; */; /*; void RooStats::HistFactory::RooBarlowBeestonLL::FactorizePdf(const RooArgSet &observables, RooAbsPdf &pdf, RooArgList &obsTerms, RooArgList &constraints) const {; // utility function to factorize constraint terms from a pdf; // (from G. Petrucciani); const std::type_info & id = typeid(pdf);; if (id == typeid(RooProdPdf)) {; RooProdPdf *prod = dynamic_cast<RooProdPdf *>(&pdf);; RooArgList list(prod->pdfList());; for (int i = 0, n = list.size(); i < n; ++i) {; RooAbsPdf *pdfi = (RooAbsPdf *) list.at(i);; FactorizePdf(observables, *pdfi, obsTerms, constraints);; }; } else if (id == typeid(RooSimultaneous) ) { //|| id == typeid(RooSimultaneousOpt)) {; RooSimultaneous *sim = dynamic_cast<RooSimultaneous *>(&pdf);; std::unique_ptr<RooAbsCategoryLValue> cat{(RooAbsCategoryLValue *) sim->indexCat().Clone()};; for (int ic = 0, nc = cat->numBins((const char *)0); ic < nc; ++ic) {; cat->setBin(ic);; FactorizePdf(observables, *sim->getPdf(cat->getLabel()), obsTerms, constraints);; }; } else if (pdf.dependsOn(observables)) {; if (!obsTerms.contains(pdf)) obsTerms.add(pdf);; } else {; if (!constraints.contains(pdf)) co",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:383,Security,validat,validateAbsMin,383,"/*; ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitParams() const; {; validateAbsMin() ;; return _paramAbsMin ;; }. ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitObs() const; {; validateAbsMin() ;; return _obsAbsMin ;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// Optimized implementation of createProfile for profile likelihoods.; /// Return profile of original function in terms of stated parameters; /// of interest rather than profiling recursively.; /*; RooAbsReal* RooStats::HistFactory::RooBarlowBeestonLL::createProfile(const RooArgSet& paramsOfInterest); {; return nll().createProfile(paramsOfInterest) ;; }; */; /*; void RooStats::HistFactory::RooBarlowBeestonLL::FactorizePdf(const RooArgSet &observables, RooAbsPdf &pdf, RooArgList &obsTerms, RooArgList &constraints) const {; // utility function to factorize constraint terms from a pdf; // (from G. Petrucciani); const std::type_info & id = typeid(pdf);; if (id == typeid(RooProdPdf)) {; RooProdPdf *prod = dynamic_cast<RooProdPdf *>(&pdf);; RooArgList list(prod->pdfList());; for (int i = 0, n = list.size(); i < n; ++i) {; RooAbsPdf *pdfi = (RooAbsPdf *) list.at(i);; FactorizePdf(observables, *pdfi, obsTerms, constraints);; }; } else if (id == typeid(RooSimultaneous) ) { //|| id == typeid(RooSimultaneousOpt)) {; RooSimultaneous *sim = dynamic_cast<RooSimultaneous *>(&pdf);; std::unique_ptr<RooAbsCategoryLValue> cat{(RooAbsCategoryLValue *) sim->indexCat().Clone()};; for (int ic = 0, nc = cat->numBins((const char *)0); ic < nc; ++ic) {; cat->setBin(ic);; FactorizePdf(observables, *sim->getPdf(cat->getLabel()), obsTerms, constraints);; }; } else if (pdf.dependsOn(observables)) {; if (!obsTerms.contains(pdf)) obsTerms.add(pdf);; } else {; if (!constraints.contains(pdf)) co",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:184,Availability,Error,Error,184,"/* Slower way to find the channel vector:; // Get the vector of bin uncertainty caches for this channel; if( _barlowCache.find( channel_name ) == _barlowCache.end() ) {; std::cout << ""Error: channel: "" << channel_name; << "" not found in barlow Cache"" << std::endl;; throw runtime_error(""Channel not in barlow cache"");; }. std::vector< BarlowCache >& channel_cache = _barlowCache[ channel_name ];; */; // Loop over the bins in the cache; // Set all gamma's to 0",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:80,Performance,cache,caches,80,"/* Slower way to find the channel vector:; // Get the vector of bin uncertainty caches for this channel; if( _barlowCache.find( channel_name ) == _barlowCache.end() ) {; std::cout << ""Error: channel: "" << channel_name; << "" not found in barlow Cache"" << std::endl;; throw runtime_error(""Channel not in barlow cache"");; }. std::vector< BarlowCache >& channel_cache = _barlowCache[ channel_name ];; */; // Loop over the bins in the cache; // Set all gamma's to 0",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:244,Performance,Cache,Cache,244,"/* Slower way to find the channel vector:; // Get the vector of bin uncertainty caches for this channel; if( _barlowCache.find( channel_name ) == _barlowCache.end() ) {; std::cout << ""Error: channel: "" << channel_name; << "" not found in barlow Cache"" << std::endl;; throw runtime_error(""Channel not in barlow cache"");; }. std::vector< BarlowCache >& channel_cache = _barlowCache[ channel_name ];; */; // Loop over the bins in the cache; // Set all gamma's to 0",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:309,Performance,cache,cache,309,"/* Slower way to find the channel vector:; // Get the vector of bin uncertainty caches for this channel; if( _barlowCache.find( channel_name ) == _barlowCache.end() ) {; std::cout << ""Error: channel: "" << channel_name; << "" not found in barlow Cache"" << std::endl;; throw runtime_error(""Channel not in barlow cache"");; }. std::vector< BarlowCache >& channel_cache = _barlowCache[ channel_name ];; */; // Loop over the bins in the cache; // Set all gamma's to 0",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:430,Performance,cache,cache,430,"/* Slower way to find the channel vector:; // Get the vector of bin uncertainty caches for this channel; if( _barlowCache.find( channel_name ) == _barlowCache.end() ) {; std::cout << ""Error: channel: "" << channel_name; << "" not found in barlow Cache"" << std::endl;; throw runtime_error(""Channel not in barlow cache"");; }. std::vector< BarlowCache >& channel_cache = _barlowCache[ channel_name ];; */; // Loop over the bins in the cache; // Set all gamma's to 0",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:29,Performance,cache,cache,29,"// Loop over the bins in the cache; // Set all gamma's to 1",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:168,Performance,cache,cache,168,"//time_after_setVal=clock();; // Done with the first loops.; // Now evaluating the function; //clock_t time_before_eval, time_after_eval;; // Loop over the bins in the cache; //time_before_eval=clock();",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:11,Performance,cache,cached,11,"// Get the cached objects",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:34,Usability,simpl,simply,34,"// If the quadratic term is 0, we simply; // use a linear equation",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:1276,Deployability,configurat,configurations,1276," calculated, or because constant parameters have; /// changed value or parameters have changed const/float status, the minimum is recalculated. void RooStats::HistFactory::RooBarlowBeestonLL::validateAbsMin() const; {; // Check if constant status of any of the parameters have changed; if (_absMinValid) {; _piter->Reset() ;; RooAbsArg* par ;; while((par=(RooAbsArg*)_piter->Next())) {; if (_paramFixed[par->GetName()] != par->isConstant()) {; cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") constant status of parameter "" << par->GetName() << "" has changed from ""; << (_paramFixed[par->GetName()]?""fixed"":""floating"") << "" to "" << (par->isConstant()?""fixed"":""floating""); << "", recalculating absolute minimum"" << endl ;; _absMinValid = false ;; break ;; }; }; }. // If we don't have the absolute minimum w.r.t all observables, calculate that first; if (!_absMinValid) {. cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") determining minimum likelihood for current configurations w.r.t all observable"" << endl ;. // Save current values of non-marginalized parameters; std::unique_ptr<RooArgSet> obsStart{(RooArgSet*) _obs.snapshot(false)};. // Start from previous global minimum; if (_paramAbsMin.size()>0) {; const_cast<RooSetProxy&>(_par).assignValueOnly(_paramAbsMin) ;; }; if (_obsAbsMin.size()>0) {; const_cast<RooSetProxy&>(_obs).assignValueOnly(_obsAbsMin) ;; }. // Find minimum with all observables floating; const_cast<RooSetProxy&>(_obs).setAttribAll(""Constant"",false) ;; _minuit->migrad() ;. // Save value and remember; _absMin = _nll ;; _absMinValid = true ;. // Save parameter values at abs minimum as well; _paramAbsMin.removeAll() ;. // Only store non-constant parameters here!; std::unique_ptr<RooArgSet> tmp{(RooArgSet*) _par.selectByAttrib(""Constant"",false)};; _paramAbsMin.addClone(*tmp) ;. _obsAbsMin.addClone(_obs) ;. // Save constant status of all parameters; _piter->Reset() ;; R",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:1276,Modifiability,config,configurations,1276," calculated, or because constant parameters have; /// changed value or parameters have changed const/float status, the minimum is recalculated. void RooStats::HistFactory::RooBarlowBeestonLL::validateAbsMin() const; {; // Check if constant status of any of the parameters have changed; if (_absMinValid) {; _piter->Reset() ;; RooAbsArg* par ;; while((par=(RooAbsArg*)_piter->Next())) {; if (_paramFixed[par->GetName()] != par->isConstant()) {; cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") constant status of parameter "" << par->GetName() << "" has changed from ""; << (_paramFixed[par->GetName()]?""fixed"":""floating"") << "" to "" << (par->isConstant()?""fixed"":""floating""); << "", recalculating absolute minimum"" << endl ;; _absMinValid = false ;; break ;; }; }; }. // If we don't have the absolute minimum w.r.t all observables, calculate that first; if (!_absMinValid) {. cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") determining minimum likelihood for current configurations w.r.t all observable"" << endl ;. // Save current values of non-marginalized parameters; std::unique_ptr<RooArgSet> obsStart{(RooArgSet*) _obs.snapshot(false)};. // Start from previous global minimum; if (_paramAbsMin.size()>0) {; const_cast<RooSetProxy&>(_par).assignValueOnly(_paramAbsMin) ;; }; if (_obsAbsMin.size()>0) {; const_cast<RooSetProxy&>(_obs).assignValueOnly(_obsAbsMin) ;; }. // Find minimum with all observables floating; const_cast<RooSetProxy&>(_obs).setAttribAll(""Constant"",false) ;; _minuit->migrad() ;. // Save value and remember; _absMin = _nll ;; _absMinValid = true ;. // Save parameter values at abs minimum as well; _paramAbsMin.removeAll() ;. // Only store non-constant parameters here!; std::unique_ptr<RooArgSet> tmp{(RooArgSet*) _par.selectByAttrib(""Constant"",false)};; _paramAbsMin.addClone(*tmp) ;. _obsAbsMin.addClone(_obs) ;. // Save constant status of all parameters; _piter->Reset() ;; R",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:405,Security,validat,validateAbsMin,405,"/*; ////////////////////////////////////////////////////////////////////////////////; /// Check that parameters and likelihood value for 'best fit' are still valid. If not,; /// because the best fit has never been calculated, or because constant parameters have; /// changed value or parameters have changed const/float status, the minimum is recalculated. void RooStats::HistFactory::RooBarlowBeestonLL::validateAbsMin() const; {; // Check if constant status of any of the parameters have changed; if (_absMinValid) {; _piter->Reset() ;; RooAbsArg* par ;; while((par=(RooAbsArg*)_piter->Next())) {; if (_paramFixed[par->GetName()] != par->isConstant()) {; cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") constant status of parameter "" << par->GetName() << "" has changed from ""; << (_paramFixed[par->GetName()]?""fixed"":""floating"") << "" to "" << (par->isConstant()?""fixed"":""floating""); << "", recalculating absolute minimum"" << endl ;; _absMinValid = false ;; break ;; }; }; }. // If we don't have the absolute minimum w.r.t all observables, calculate that first; if (!_absMinValid) {. cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") determining minimum likelihood for current configurations w.r.t all observable"" << endl ;. // Save current values of non-marginalized parameters; std::unique_ptr<RooArgSet> obsStart{(RooArgSet*) _obs.snapshot(false)};. // Start from previous global minimum; if (_paramAbsMin.size()>0) {; const_cast<RooSetProxy&>(_par).assignValueOnly(_paramAbsMin) ;; }; if (_obsAbsMin.size()>0) {; const_cast<RooSetProxy&>(_obs).assignValueOnly(_obsAbsMin) ;; }. // Find minimum with all observables floating; const_cast<RooSetProxy&>(_obs).setAttribAll(""Constant"",false) ;; _minuit->migrad() ;. // Save value and remember; _absMin = _nll ;; _absMinValid = true ;. // Save parameter values at abs minimum as well; _paramAbsMin.removeAll() ;. // Only store non-constant parameters her",MatchSource.CODE_COMMENT,roofit/histfactory/src/RooBarlowBeestonLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Sample.cxx:14,Availability,Error,Error,14,"// Print Stat Error (if necessary)",MatchSource.CODE_COMMENT,roofit/histfactory/src/Sample.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Sample.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Sample.cxx:86,Security,access,accessible,86,"// Some helper functions; // (Not strictly necessary because; // methods are publicly accessible)",MatchSource.CODE_COMMENT,roofit/histfactory/src/Sample.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Sample.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Systematics.cxx:8,Availability,Error,Error,8,"// Stat Error Config",MatchSource.CODE_COMMENT,roofit/histfactory/src/Systematics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Systematics.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Systematics.cxx:14,Modifiability,Config,Config,14,"// Stat Error Config",MatchSource.CODE_COMMENT,roofit/histfactory/src/Systematics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Systematics.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Systematics.cxx:8,Availability,Error,Error,8,"// Stat Error",MatchSource.CODE_COMMENT,roofit/histfactory/src/Systematics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Systematics.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx:23,Testability,test,test,23,"// old directory where test is started",MatchSource.CODE_COMMENT,roofit/histfactory/test/stressHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx:10,Testability,test,test,10,"// do not test RooCategory",MatchSource.CODE_COMMENT,roofit/histfactory/test/stressHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx:7,Modifiability,variab,variables,7,"// get variables",MatchSource.CODE_COMMENT,roofit/histfactory/test/stressHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx:23,Testability,test,test,23,"// check fit result to test data",MatchSource.CODE_COMMENT,roofit/histfactory/test/stressHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/stressHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:3,Testability,Test,Tests,3,"// Tests for the HistFactory; // Authors: Stephan Hageboeck, CERN 01/2019; // Jonas Rembser, CERN 06/2023",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:65,Testability,test,test,65,"/// What kind of model is set up. Use this to instantiate; /// a test suite.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:238,Integrability,Depend,Depending,238,"//////////////////////////////////////////////////////////////////////////////////////////////////////////////////; /// Fixture class to set up a toy hist factory model.; /// In the SetUp() phase; /// - A file with histograms is created. Depending on the value of MakeModelMode,; /// equidistant or custom bins are used, and shape systematics are added.; /// - A Measurement with the histograms in the file is created.; /// - The corresponding workspace is created.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:21,Availability,error,errors,21,"// Tighten the stat. errors of the model, and kick bin 0, so the gammas have to adapt",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:80,Energy Efficiency,adapt,adapt,80,"// Tighten the stat. errors of the model, and kick bin 0, so the gammas have to adapt",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:80,Modifiability,adapt,adapt,80,"// Tighten the stat. errors of the model, and kick bin 0, so the gammas have to adapt",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:68,Availability,down,down,68,"// Distort data such that the shape systematics will pull gamma; // down in one bin and up in the other.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:120,Testability,Test,Test,120,"//////////////////////////////////////////////////////////////////////////////////////////////////////////////////; /// Test that the model consists of what is expected",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:25,Integrability,depend,depend,25,"// Check that sub models depend on their systematic uncertainties.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:4,Testability,Test,Test,4,"/// Test that the values returned are as expected.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:3,Testability,Test,Test,3,"// Test evaluating the model:",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:3,Testability,Test,Test,3,"// Test that shape uncertainties have an effect:",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:3,Testability,Test,Test,3,"// Test syst up:",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:13,Availability,down,down,13,"// Test syst down:",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:3,Testability,Test,Test,3,"// Test syst down:",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:125,Availability,reliab,reliably,125,"// The final parameters of alpha_syst2 and alpha_syst4 are very close to the; // pre-fit value zero. For the fit to converge reliably, the pre-fit values; // are set away from the minimum.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:3,Testability,Test,Test,3,"// Test fitting the model to data",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:8,Testability,test,tests,8,"// This tests both correct pre-caching of constant terms and (if false) that all doEval() are correct.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:42,Availability,failure,failure,42,"// Stop if one of the previous runs had a failure to keep the terminal clean.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:10,Availability,toler,tolerance,10,"// Higher tolerance: Expect a pull due to shape syst.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:10,Availability,toler,tolerance,10,"// Higher tolerance: Expect a pull due to shape syst.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:25,Availability,down,down,25,"// This should be pulled down",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:46,Testability,test,test,46,"// TODO: merge with the previous HFFixtureFix test suite once the codegen AD; // supports all of HistFactory",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx:3,Testability,Test,Tests,3,"// Tests for the ParamHistFunc; // Authors: Jonas Rembser, CERN 08/2023",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactoryPlotting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx:4,Testability,Test,Test,4,"/// Test that plotting HistFactory components works correctly. Covers the; /// problem reported in this forum post:; /// https://root-forum.cern.ch/t/problems-plotting-individual-components-with-roofit-histfactory",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactoryPlotting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx:46,Performance,Load,Load,46,"// --------------------------------------; // Load histograms; // --------------------------------------; // file with histograms",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactoryPlotting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx:3,Performance,load,load,3,"// load histograms",MatchSource.CODE_COMMENT,roofit/histfactory/test/testHistFactoryPlotting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactoryPlotting.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:3,Testability,Test,Tests,3,"// Tests for the ParamHistFunc; // Authors: Jonas Rembser, CERN 08/2022",MatchSource.CODE_COMMENT,roofit/histfactory/test/testParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:4,Security,Validat,Validate,4,"/// Validate the ParamHistFunc in the n-dimensional case, comparing both the; /// BatchMode and the old implementation results to a manually-compute; /// reference result.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:14,Modifiability,variab,variables,14,"// Create the variables and set their bin numbers. The range is tweaked; // such that each integer values falls in a different bin, starting from; // zero.",MatchSource.CODE_COMMENT,roofit/histfactory/test/testParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:3,Usability,Simpl,Simple,3,"// Simple set of parameters that just return their index in the parameter; // list",MatchSource.CODE_COMMENT,roofit/histfactory/test/testParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:72,Modifiability,variab,variable,72,"// Do some things in one go:; // * assign random integer values to each variable in each iteration; // * fill the dataset used for batched evaluation; // * compute the reference result manually; // * compute the result with the ParamHistFunc without BatchMode",MatchSource.CODE_COMMENT,roofit/histfactory/test/testParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:3,Security,Validat,Validate,3,"// Validate the results",MatchSource.CODE_COMMENT,roofit/histfactory/test/testParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/inc/RooFitHS3/RooJSONFactoryWSTool.h:3,Availability,error,error,3,"// error handling helpers",MatchSource.CODE_COMMENT,roofit/hs3/inc/RooFitHS3/RooJSONFactoryWSTool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/inc/RooFitHS3/RooJSONFactoryWSTool.h
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/inc/RooFitHS3/RooJSONFactoryWSTool.h:10,Modifiability,variab,variables,10,"// member variables",MatchSource.CODE_COMMENT,roofit/hs3/inc/RooFitHS3/RooJSONFactoryWSTool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/inc/RooFitHS3/RooJSONFactoryWSTool.h
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/Domains.cxx:3,Safety,Avoid,Avoid,3,"// Avoid writing a domain that was already written",MatchSource.CODE_COMMENT,roofit/hs3/src/Domains.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/Domains.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:6,Safety,avoid,avoid,6,"// To avoid repeating the same string literals that can potentially get out of; // sync.",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:174,Testability,log,log-space,174,"// the below contains a a hack to cut off variations that go below 0; // this is needed because with interpolation code 4, which is the default, interpolation is done in; // log-space. hence, values <= 0 result in NaN which propagate throughout the model and cause evaluations to; // fail if you know a nicer way to solve this, please go ahead and fix the lines below",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:3,Safety,avoid,avoid,3,"// avoid negative sigma. This NP will be set constant anyway later",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:64,Modifiability,Flexible,FlexibleInterpVar,64,"// some (modified) histfactory models have several instances of FlexibleInterpVar; // we collect and merge them here",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:12,Modifiability,config,configure,12,"// sort and configure norms",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:12,Modifiability,config,configure,12,"// sort and configure the normsys",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:12,Modifiability,config,configure,12,"// sort and configure the histosys",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:43,Availability,error,error,43,"// reverse engineering the correct partial error; // the (arbitrary) convention used here is that all samples should have the same relative error",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx:140,Availability,error,error,140,"// reverse engineering the correct partial error; // the (arbitrary) convention used here is that all samples should have the same relative error",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_HistFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_HistFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx:37,Deployability,integrat,integrator,37,"// todo: at some point, take care of integrator configurations",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_RooFitCore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx:48,Deployability,configurat,configurations,48,"// todo: at some point, take care of integrator configurations",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_RooFitCore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx:37,Integrability,integrat,integrator,37,"// todo: at some point, take care of integrator configurations",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_RooFitCore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx:48,Modifiability,config,configurations,48,"// todo: at some point, take care of integrator configurations",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_RooFitCore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx:21,Usability,undo,undo,21,"// Same mechanism to undo the parameter transformation as in the; // RooExponentialFactory (see comments in that class for more info).",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_RooFitCore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx:276,Usability,simpl,simply,276,"// If the parameter name ends with the ""_exponential_inverted"" suffix,; // this means that it was exported from a RooFit object where the; // parameter first needed to be transformed on export to match the HS3; // specification. But when re-importing such a parameter, we can simply; // skip the transformation and use the original RooFit parameter without; // the suffix.; //; // A concrete example: take the following RooFit pdf in the factory language:; //; // ""Exponential::exponential_1(x[0, 10], c[-0.1])""; //; // It defines en exponential exp(c * x). However, in HS3 the exponential; // is defined as exp(-c * x), to RooFit would export these dictionaries; // to the JSON:; //; // {; // ""name"": ""exponential_1"", // HS3 exponential_dist with transformed parameter; // ""type"": ""exponential_dist"",; // ""x"": ""x"",; // ""c"": ""c_exponential_inverted""; // },; // {; // ""name"": ""c_exponential_inverted"", // transformation function created on-the-fly on export; // ""type"": ""generic_function"",; // ""expression"": ""-c""; // }; //; // On import, we can directly take the non-transformed parameter, which is; // we check for the suffix and optionally remove it from the requested; // name next:",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONFactories_RooFitCore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONFactories_RooFitCore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx:3,Performance,load,load,3,"// load a yml file defining the factory expressions",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONIO.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx:3,Usability,clear,clear,3,"// clear all factory expressions",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONIO.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx:3,Performance,load,load,3,"// load a yml file defining the export keys",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONIO.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx:3,Usability,clear,clear,3,"// clear all export keys",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONIO.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIO.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIOUtils.cxx:64,Availability,error,error,64,"// Check if variable is at least a range or constant else throw error",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONIOUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIOUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIOUtils.cxx:12,Modifiability,variab,variable,12,"// Check if variable is at least a range or constant else throw error",MatchSource.CODE_COMMENT,roofit/hs3/src/JSONIOUtils.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIOUtils.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1794,Availability,avail,available,1794," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:2094,Availability,avail,available,2094," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1389,Deployability,install,installed,1389," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:194,Integrability,interoperab,interoperability,194,"/** \class RooJSONFactoryWSTool; \ingroup roofit_dev_docs_hs3. When using \ref Roofitmain, statistical models can be conveniently handled and; stored as a RooWorkspace. However, for the sake of interoperability; with other statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1296,Integrability,depend,dependency,1296," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1708,Usability,learn,learn,1708," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:48,Modifiability,variab,variable,48,"/**; * @struct Var; * @brief Structure to store variable information.; *; * This structure represents variable information such as the number of bins, minimum and maximum values,; * and a vector of binning edges for a variable.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:102,Modifiability,variab,variable,102,"/**; * @struct Var; * @brief Structure to store variable information.; *; * This structure represents variable information such as the number of bins, minimum and maximum values,; * and a vector of binning edges for a variable.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:218,Modifiability,variab,variable,218,"/**; * @struct Var; * @brief Structure to store variable information.; *; * This structure represents variable information such as the number of bins, minimum and maximum values,; * and a vector of binning edges for a variable.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:83,Modifiability,variab,variable,83,/**; * @brief Constructor for Var from JSONNode.; * @param val JSONNode containing variable information.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:293,Availability,error,error,293,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:14,Modifiability,Config,Configure,14,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:95,Modifiability,config,configures,95,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:558,Modifiability,variab,variables,558,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:742,Modifiability,config,configured,742,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:57,Modifiability,variab,variable,57,"/**; * @brief Check if a RooAbsArg is a literal constant variable.; *; * This function checks whether the provided RooAbsArg 'arg' is a literal constant variable.; * A literal constant variable is a RooConstVar with a numeric value as a name.; *; * @param arg The reference to the RooAbsArg to be checked.; * @return bool Returns true if 'arg' is a literal constant variable; otherwise, returns false.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:153,Modifiability,variab,variable,153,"/**; * @brief Check if a RooAbsArg is a literal constant variable.; *; * This function checks whether the provided RooAbsArg 'arg' is a literal constant variable.; * A literal constant variable is a RooConstVar with a numeric value as a name.; *; * @param arg The reference to the RooAbsArg to be checked.; * @return bool Returns true if 'arg' is a literal constant variable; otherwise, returns false.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:185,Modifiability,variab,variable,185,"/**; * @brief Check if a RooAbsArg is a literal constant variable.; *; * This function checks whether the provided RooAbsArg 'arg' is a literal constant variable.; * A literal constant variable is a RooConstVar with a numeric value as a name.; *; * @param arg The reference to the RooAbsArg to be checked.; * @return bool Returns true if 'arg' is a literal constant variable; otherwise, returns false.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:366,Modifiability,variab,variable,366,"/**; * @brief Check if a RooAbsArg is a literal constant variable.; *; * This function checks whether the provided RooAbsArg 'arg' is a literal constant variable.; * A literal constant variable is a RooConstVar with a numeric value as a name.; *; * @param arg The reference to the RooAbsArg to be checked.; * @return bool Returns true if 'arg' is a literal constant variable; otherwise, returns false.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:23,Modifiability,variab,variable,23,"/**; * @brief Export a variable from the workspace to a JSONNode.; *; * This function exports a variable, represented by the provided RooAbsArg pointer 'v', from the workspace to a; * JSONNode. The variable's information is added to the JSONNode as key-value pairs.; *; * @param v The pointer to the RooAbsArg representing the variable to be exported.; * @param node The JSONNode to which the variable will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:96,Modifiability,variab,variable,96,"/**; * @brief Export a variable from the workspace to a JSONNode.; *; * This function exports a variable, represented by the provided RooAbsArg pointer 'v', from the workspace to a; * JSONNode. The variable's information is added to the JSONNode as key-value pairs.; *; * @param v The pointer to the RooAbsArg representing the variable to be exported.; * @param node The JSONNode to which the variable will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:198,Modifiability,variab,variable,198,"/**; * @brief Export a variable from the workspace to a JSONNode.; *; * This function exports a variable, represented by the provided RooAbsArg pointer 'v', from the workspace to a; * JSONNode. The variable's information is added to the JSONNode as key-value pairs.; *; * @param v The pointer to the RooAbsArg representing the variable to be exported.; * @param node The JSONNode to which the variable will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:327,Modifiability,variab,variable,327,"/**; * @brief Export a variable from the workspace to a JSONNode.; *; * This function exports a variable, represented by the provided RooAbsArg pointer 'v', from the workspace to a; * JSONNode. The variable's information is added to the JSONNode as key-value pairs.; *; * @param v The pointer to the RooAbsArg representing the variable to be exported.; * @param node The JSONNode to which the variable will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:393,Modifiability,variab,variable,393,"/**; * @brief Export a variable from the workspace to a JSONNode.; *; * This function exports a variable, represented by the provided RooAbsArg pointer 'v', from the workspace to a; * JSONNode. The variable's information is added to the JSONNode as key-value pairs.; *; * @param v The pointer to the RooAbsArg representing the variable to be exported.; * @param node The JSONNode to which the variable will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:8,Modifiability,variab,variable,8,"// this variable was already exported",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:21,Modifiability,variab,variables,21,"/**; * @brief Export variables from the workspace to a JSONNode.; *; * This function exports variables, represented by the provided RooArgSet, from the workspace to a JSONNode.; * The variables' information is added to the JSONNode as key-value pairs.; *; * @param allElems The RooArgSet representing the variables to be exported.; * @param n The JSONNode to which the variables will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:93,Modifiability,variab,variables,93,"/**; * @brief Export variables from the workspace to a JSONNode.; *; * This function exports variables, represented by the provided RooArgSet, from the workspace to a JSONNode.; * The variables' information is added to the JSONNode as key-value pairs.; *; * @param allElems The RooArgSet representing the variables to be exported.; * @param n The JSONNode to which the variables will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:184,Modifiability,variab,variables,184,"/**; * @brief Export variables from the workspace to a JSONNode.; *; * This function exports variables, represented by the provided RooArgSet, from the workspace to a JSONNode.; * The variables' information is added to the JSONNode as key-value pairs.; *; * @param allElems The RooArgSet representing the variables to be exported.; * @param n The JSONNode to which the variables will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:305,Modifiability,variab,variables,305,"/**; * @brief Export variables from the workspace to a JSONNode.; *; * This function exports variables, represented by the provided RooArgSet, from the workspace to a JSONNode.; * The variables' information is added to the JSONNode as key-value pairs.; *; * @param allElems The RooArgSet representing the variables to be exported.; * @param n The JSONNode to which the variables will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:369,Modifiability,variab,variables,369,"/**; * @brief Export variables from the workspace to a JSONNode.; *; * This function exports variables, represented by the provided RooArgSet, from the workspace to a JSONNode.; * The variables' information is added to the JSONNode as key-value pairs.; *; * @param allElems The RooArgSet representing the variables to be exported.; * @param n The JSONNode to which the variables will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:453,Deployability,update,updated,453,"/**; * @brief Export an object from the workspace to a JSONNode.; *; * This function exports an object, represented by the provided RooAbsArg, from the workspace to a JSONNode.; * The object's information is added to the JSONNode as key-value pairs.; *; * @param func The RooAbsArg representing the object to be exported.; * @param exportedObjectNames A set of strings containing names of previously exported objects to avoid duplicates.; * This set is updated with the name of the newly exported object.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:420,Safety,avoid,avoid,420,"/**; * @brief Export an object from the workspace to a JSONNode.; *; * This function exports an object, represented by the provided RooAbsArg, from the workspace to a JSONNode.; * The object's information is added to the JSONNode as key-value pairs.; *; * @param func The RooAbsArg representing the object to be exported.; * @param exportedObjectNames A set of strings containing names of previously exported objects to avoid duplicates.; * This set is updated with the name of the newly exported object.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:75,Integrability,depend,dependents,75,"// RooSimultaneous is not used in the HS3 standard, we only export the; // dependents and some ROOT internal information.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:40,Availability,avail,available,40,"// check if we have a specific exporter available",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:97,Usability,clear,clear,97,"// The exporter might have messed with the content of the node; // before failing. That's why we clear it and only reset the name.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:385,Integrability,depend,dependants,385,/**; * @brief Import a function from the JSONNode into the workspace.; *; * This function imports a function from the given JSONNode into the workspace.; * The function's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the function to be imported.; * @param importAllDependants A boolean flag indicating whether to import all dependants (servers) of the function.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:45,Availability,error,error,45,"// if the key we found is not a map, it's an error",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:14,Integrability,depend,dependents,14,"// import all dependents if importing a workspace, not for creating new objects",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:402,Integrability,depend,dependants,402,/**; * @brief Import a function from a JSON string into the workspace.; *; * This function imports a function from the provided JSON string into the workspace.; * The function's information is read from the JSON string and added to the workspace.; *; * @param jsonString The JSON string containing the function information.; * @param importAllDependants A boolean flag indicating whether to import all dependants (servers) of the function.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:123,Modifiability,variab,variables,123,"/**; * @brief Export histogram data to a JSONNode.; *; * This function exports histogram data, represented by the provided variables and contents, to a JSONNode.; * The histogram's axes information and bin contents are added as key-value pairs to the JSONNode.; *; * @param vars The RooArgSet representing the variables associated with the histogram.; * @param n The number of bins in the histogram.; * @param contents A pointer to the array containing the bin contents of the histogram.; * @param output The JSONNode to which the histogram data will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:310,Modifiability,variab,variables,310,"/**; * @brief Export histogram data to a JSONNode.; *; * This function exports histogram data, represented by the provided variables and contents, to a JSONNode.; * The histogram's axes information and bin contents are added as key-value pairs to the JSONNode.; *; * @param vars The RooArgSet representing the variables associated with the histogram.; * @param n The number of bins in the histogram.; * @param contents A pointer to the array containing the bin contents of the histogram.; * @param output The JSONNode to which the histogram data will be exported.; * @return void; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:252,Modifiability,variab,variables,252,"/**; * @brief Export combined data from the workspace to a custom struct.; *; * This function exports combined data from the workspace, represented by the provided RooAbsData object,; * to a CombinedData struct. The struct contains information such as variables, categories,; * and bin contents of the combined data.; *; * @param data The RooAbsData object representing the combined data to be exported.; * @return CombinedData A custom struct containing the exported combined data.; */",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:155,Modifiability,variab,variable,155,"// this is a regular unbinned dataset; // This works around a problem in RooStats/HistFactory that was only fixed; // in ROOT 6.30: until then, the weight variable of the observed dataset,; // called ""weightVar"", was added to the observables. Therefore, it also got; // added to the Asimov dataset. But the Asimov has its own weight variable,; // called ""binWeightAsimov"", making ""weightVar"" an actual observable in the; // Asimov data. But this is only by accident and should be removed.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:333,Modifiability,variab,variable,333,"// this is a regular unbinned dataset; // This works around a problem in RooStats/HistFactory that was only fixed; // in ROOT 6.30: until then, the weight variable of the observed dataset,; // called ""weightVar"", was added to the observables. Therefore, it also got; // added to the Asimov dataset. But the Asimov has its own weight variable,; // called ""binWeightAsimov"", making ""weightVar"" an actual observable in the; // Asimov data. But this is only by accident and should be removed.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:323,Availability,redundant,redundant,323,"// Check if this actually represents a binned dataset, and then import it; // like a RooDataHist. This happens frequently when people create combined; // RooDataSets from binned data to fit HistFactory models. In this case, it; // doesn't make sense to export them like an unbinned dataset, because the; // coordinates are redundant information with the binning. We only do this; // for 1D data for now.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:323,Safety,redund,redundant,323,"// Check if this actually represents a binned dataset, and then import it; // like a RooDataHist. This happens frequently when people create combined; // RooDataSets from binned data to fit HistFactory models. In this case, it; // doesn't make sense to export them like an unbinned dataset, because the; // coordinates are redundant information with the binning. We only do this; // for 1D data for now.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:183,Modifiability,variab,variables,183,/**; * @brief Read axes from the JSONNode and create a RooArgSet representing them.; *; * This function reads axes information from the given JSONNode and; * creates a RooArgSet with variables representing these axes.; *; * @param topNode The JSONNode containing the axes information to be read.; * @return RooArgSet A RooArgSet containing the variables created from the JSONNode.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:344,Modifiability,variab,variables,344,/**; * @brief Read axes from the JSONNode and create a RooArgSet representing them.; *; * This function reads axes information from the given JSONNode and; * creates a RooArgSet with variables representing these axes.; *; * @param topNode The JSONNode containing the axes information to be read.; * @return RooArgSet A RooArgSet containing the variables created from the JSONNode.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:239,Modifiability,variab,variables,239,/**; * @brief Read binned data from the JSONNode and create a RooDataHist object.; *; * This function reads binned data from the given JSONNode and creates a RooDataHist object.; * The binned data is associated with the specified name and variables (RooArgSet) in the workspace.; *; * @param n The JSONNode representing the binned data to be read.; * @param name The name to be associated with the created RooDataHist object.; * @param vars The RooArgSet representing the variables associated with the binned data.; * @return std::unique_ptr<RooDataHist> A unique pointer to the created RooDataHist object.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:472,Modifiability,variab,variables,472,/**; * @brief Read binned data from the JSONNode and create a RooDataHist object.; *; * This function reads binned data from the given JSONNode and creates a RooDataHist object.; * The binned data is associated with the specified name and variables (RooArgSet) in the workspace.; *; * @param n The JSONNode representing the binned data to be read.; * @param name The name to be associated with the created RooDataHist object.; * @param vars The RooArgSet representing the variables associated with the binned data.; * @return std::unique_ptr<RooDataHist> A unique pointer to the created RooDataHist object.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:23,Modifiability,variab,variable,23,/**; * @brief Import a variable from the JSONNode into the workspace.; *; * This function imports a variable from the given JSONNode into the workspace.; * The variable's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the variable to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:100,Modifiability,variab,variable,100,/**; * @brief Import a variable from the JSONNode into the workspace.; *; * This function imports a variable from the given JSONNode into the workspace.; * The variable's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the variable to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:160,Modifiability,variab,variable,160,/**; * @brief Import a variable from the JSONNode into the workspace.; *; * This function imports a variable from the given JSONNode into the workspace.; * The variable's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the variable to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:282,Modifiability,variab,variable,282,/**; * @brief Import a variable from the JSONNode into the workspace.; *; * This function imports a variable from the given JSONNode into the workspace.; * The variable's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the variable to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:25,Integrability,depend,dependants,25,/**; * @brief Import all dependants (servers) of a node into the workspace.; *; * This function imports all the dependants (servers) of the given JSONNode into the workspace.; * The dependants' information is read from the JSONNode and added to the workspace.; *; * @param n The JSONNode representing the node whose dependants are to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:112,Integrability,depend,dependants,112,/**; * @brief Import all dependants (servers) of a node into the workspace.; *; * This function imports all the dependants (servers) of the given JSONNode into the workspace.; * The dependants' information is read from the JSONNode and added to the workspace.; *; * @param n The JSONNode representing the node whose dependants are to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:182,Integrability,depend,dependants,182,/**; * @brief Import all dependants (servers) of a node into the workspace.; *; * This function imports all the dependants (servers) of the given JSONNode into the workspace.; * The dependants' information is read from the JSONNode and added to the workspace.; *; * @param n The JSONNode representing the node whose dependants are to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:316,Integrability,depend,dependants,316,/**; * @brief Import all dependants (servers) of a node into the workspace.; *; * This function imports all the dependants (servers) of the given JSONNode into the workspace.; * The dependants' information is read from the JSONNode and added to the workspace.; *; * @param n The JSONNode representing the node whose dependants are to be imported.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:18,Integrability,depend,dependants,18,"// import all the dependants of an object",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:27,Modifiability,variab,variables,27,"// We only want to add the variables that actually got exported and skip; // the ones that the pdfs encoded implicitly (like in the case of; // HistFactory).",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:76,Availability,error,error,76,"// Per HS3 standard, the hs3_version in the metadata is required. So we; // error out if it is missing. TODO: now we are only checking if the; // hs3_version tag exists, but in the future when the HS3 specification; // versions are actually frozen, we should also check if the hs3_version is; // one that RooFit can actually read.",MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:31,Integrability,message,message,31,/**; * @brief Writes a warning message to the RooFit message service.; *; * @param str The warning message to be logged.; * @return std::ostream& A reference to the output stream.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:53,Integrability,message,message,53,/**; * @brief Writes a warning message to the RooFit message service.; *; * @param str The warning message to be logged.; * @return std::ostream& A reference to the output stream.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:99,Integrability,message,message,99,/**; * @brief Writes a warning message to the RooFit message service.; *; * @param str The warning message to be logged.; * @return std::ostream& A reference to the output stream.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:113,Testability,log,logged,113,/**; * @brief Writes a warning message to the RooFit message service.; *; * @param str The warning message to be logged.; * @return std::ostream& A reference to the output stream.; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:24,Availability,error,error,24,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:115,Availability,error,error,115,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:30,Integrability,message,message,30,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:52,Integrability,message,message,52,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:121,Integrability,message,message,121,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:135,Testability,log,logged,135,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,roofit/hs3/src/RooJSONFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/static_execute.h:27,Performance,load,loading,27,"// Execute code on library loading by running code in the constructor of a; // class that is a static class member of another class.",MatchSource.CODE_COMMENT,roofit/hs3/src/static_execute.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/static_execute.h
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testHS3SimultaneousFit.cxx:3,Testability,Test,Test,3,"// Test for the JSON IO of a full workspace with a multi-channel model and; // data.; // Author: Jonas Rembser, CERN 02/2023",MatchSource.CODE_COMMENT,roofit/hs3/test/testHS3SimultaneousFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testHS3SimultaneousFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testHS3SimultaneousFit.cxx:30,Modifiability,config,config,30,"// Simultaneous PDF and model config",MatchSource.CODE_COMMENT,roofit/hs3/test/testHS3SimultaneousFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testHS3SimultaneousFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Testability,Test,Tests,3,"// Tests for the RooJSONFactoryWSTool; // Authors: Carsten D. Burgard, DESY/ATLAS, 12/2021; // Jonas Rembser, CERN 12/2022",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Security,Validat,Validate,3,"// Validate the JSON IO for a given RooAbsReal in a RooWorkspace. The workspace; // will be written out and read back, and then the values of the old and new; // RooAbsReal will be compared for equality in each bin of the observable that; // is called ""x"" by convention.",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:17,Testability,Test,Test,17,"// namespace; // Test that the IO of attributes and string attributes works.",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:29,Testability,test,test,29,"// With the next part of the test, we want to cover the closure of; // coefficient normalization reference observables.",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:4,Testability,Test,Test,4,"/// Test that the IO of pdfs that contain literal RooConstVars works.",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:26,Deployability,integrat,integration,26,"// To silence the numeric integration",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:26,Integrability,integrat,integration,26,"// To silence the numeric integration",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Testability,Test,Test,3,"// Test different values for ""lowestOrder""",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:26,Deployability,integrat,integration,26,"// To silence the numeric integration",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:26,Integrability,integrat,integration,26,"// To silence the numeric integration",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Testability,Test,Test,3,"// Test that it also works with index notation builtin to TFormula",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Testability,Test,Test,3,"// Test for ordinal notation",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:12,Modifiability,variab,variable,12,"// Test for variable names with numbers and extra whitespaces in it",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Testability,Test,Test,3,"// Test for variable names with numbers and extra whitespaces in it",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:3,Testability,Test,Test,3,"// Test different values for ""lowestOrder""",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx:12,Testability,test,test,12,"// Create a test model: RooSimultaneous with Gaussian in one component, and; // product of two Gaussians in the other.",MatchSource.CODE_COMMENT,roofit/hs3/test/testRooFitHS3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/test/testRooFitHS3.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/inc/RooFit/Detail/JSONInterface.h:72,Energy Efficiency,efficient,efficient,72,"// Internally, we store the backend type with an enum to be more memory efficient.",MatchSource.CODE_COMMENT,roofit/jsoninterface/inc/RooFit/Detail/JSONInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/inc/RooFit/Detail/JSONInterface.h
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONInterface.cxx:81,Integrability,interface,interface,81,"/// Returns the name of the library that serves as the backend for the JSON; /// interface, which is either `""nlohmann-json""` or `""rapidyaml""`.; /// \return Backend name as a string.",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/JSONInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONInterface.cxx:60,Integrability,interface,interface,60,"/// Set the library that serves as the backend for the JSON interface. Note that the `""rapidyaml""` backend is only; /// supported if rapidyaml was found on the system when ROOT was compiled. \param[in] name Name of the backend, can be; /// either `""nlohmann-json""` or `""rapidyaml""`.",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/JSONInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONParser.cxx:87,Performance,cache,cache,87,"// not so nice to use const_cast here, but the non-const version will only live in the cache",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/JSONParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONParser.cxx:13,Integrability,interface,interface,13,"// TJSONNode interface",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/JSONParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/JSONParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:12,Integrability,interface,interface,12,"// JSONTree interface implementation",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:26,Performance,cache,cache,26,"// destructor. clears the cache.",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:15,Usability,clear,clears,15,"// destructor. clears the cache.",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:12,Integrability,interface,interface,12,"// JSONNode interface implementation",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:3,Availability,error,error,3,"// error callback using std::runtime_error",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:35,Performance,cache,cache,35,"// obtain a string from the string cache",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:31,Performance,cache,cache,31,"// obtain a node from the node cache",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:13,Performance,cache,caches,13,"// clear all caches",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx:3,Usability,clear,clear,3,"// clear all caches",MatchSource.CODE_COMMENT,roofit/jsoninterface/src/RYMLParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/jsoninterface/src/RYMLParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h:24,Integrability,depend,dependence,24,"// To avoid unnecessary dependence on nlohman json in the interface. Note that; // we should not forward declare nlohmann::json directly, since its declaration; // might change (it is currently a typedef). With this wrapper type, we are; // completely decoupled on nlohmann::json in the RMetaData interface.",MatchSource.CODE_COMMENT,roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h:58,Integrability,interface,interface,58,"// To avoid unnecessary dependence on nlohman json in the interface. Note that; // we should not forward declare nlohmann::json directly, since its declaration; // might change (it is currently a typedef). With this wrapper type, we are; // completely decoupled on nlohmann::json in the RMetaData interface.",MatchSource.CODE_COMMENT,roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h:216,Integrability,wrap,wrapper,216,"// To avoid unnecessary dependence on nlohman json in the interface. Note that; // we should not forward declare nlohmann::json directly, since its declaration; // might change (it is currently a typedef). With this wrapper type, we are; // completely decoupled on nlohmann::json in the RMetaData interface.",MatchSource.CODE_COMMENT,roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h:297,Integrability,interface,interface,297,"// To avoid unnecessary dependence on nlohman json in the interface. Note that; // we should not forward declare nlohmann::json directly, since its declaration; // might change (it is currently a typedef). With this wrapper type, we are; // completely decoupled on nlohmann::json in the RMetaData interface.",MatchSource.CODE_COMMENT,roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h:6,Safety,avoid,avoid,6,"// To avoid unnecessary dependence on nlohman json in the interface. Note that; // we should not forward declare nlohmann::json directly, since its declaration; // might change (it is currently a typedef). With this wrapper type, we are; // completely decoupled on nlohmann::json in the RMetaData interface.",MatchSource.CODE_COMMENT,roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h:22,Testability,log,logfiles,22,"// getters to inspect logfiles",MatchSource.CODE_COMMENT,roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/inc/RooFit/MultiProcess/HeatmapAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:15,Performance,QUEUE,QUEUE,15,"// -- WORKER - QUEUE COMMUNICATION --",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:6,Performance,QUEUE,QUEUE,6,"// -- QUEUE - MASTER COMMUNICATION --",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:80,Integrability,message,message,80,"// -- MASTER - WORKER COMMUNICATION --; /// specialization that sends the final message",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:56,Integrability,message,messages,56,"/// specialization that queues first parts of multipart messages",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:24,Performance,queue,queues,24,"/// specialization that queues first parts of multipart messages",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:40,Integrability,message,message,40,"/// specialization that sends the final message",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:56,Integrability,message,messages,56,"/// specialization that queues first parts of multipart messages",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:24,Performance,queue,queues,24,"/// specialization that queues first parts of multipart messages",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:8,Integrability,message,messages,8,"// test messages",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:3,Testability,test,test,3,"// test messages",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:15,Performance,QUEUE,QUEUE,15,"// -- WORKER - QUEUE COMMUNICATION --",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:6,Performance,QUEUE,QUEUE,6,"// -- QUEUE - MASTER COMMUNICATION --",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:3,Integrability,Message,Messages,3,"// Messages from master to queue",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:27,Performance,queue,queue,27,"// Messages from master to queue",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:3,Integrability,Message,Messages,3,"// Messages from worker to queue",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:27,Performance,queue,queue,27,"// Messages from worker to queue",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:3,Integrability,Message,Messages,3,"// Messages from queue to worker",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h:17,Performance,queue,queue,17,"// Messages from queue to worker",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger_decl.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/ProcessManager.h:17,Testability,test,testing,17,"// for debugging/testing:",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/ProcessManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/ProcessManager.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/ProcessTimer.h:39,Modifiability,variab,variables,39,"// setup processtimer, initialize some variables",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/ProcessTimer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/ProcessTimer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h:33,Integrability,message,message,33,"/// Have a worker ask for a task-message from the queue; ///; /// \param[out] job_task JobTask reference to put the Job ID and the task index into.; /// \return true if a task was popped from the queue successfully, false if the queue was empty.",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Queue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h:50,Performance,queue,queue,50,"/// Have a worker ask for a task-message from the queue; ///; /// \param[out] job_task JobTask reference to put the Job ID and the task index into.; /// \return true if a task was popped from the queue successfully, false if the queue was empty.",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Queue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h:196,Performance,queue,queue,196,"/// Have a worker ask for a task-message from the queue; ///; /// \param[out] job_task JobTask reference to put the Job ID and the task index into.; /// \return true if a task was popped from the queue successfully, false if the queue was empty.",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Queue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h:229,Performance,queue,queue,229,"/// Have a worker ask for a task-message from the queue; ///; /// \param[out] job_task JobTask reference to put the Job ID and the task index into.; /// \return true if a task was popped from the queue successfully, false if the queue was empty.",MatchSource.CODE_COMMENT,roofit/multiprocess/res/RooFit/MultiProcess/Queue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Queue.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:31,Deployability,Configurat,Configuration,31,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:117,Deployability,configurat,configuration,117,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:287,Deployability,configurat,configuration,287,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:378,Deployability,deploy,deployed,378,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:2420,Integrability,depend,depends,2420,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:11,Modifiability,Config,Config,11,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:31,Modifiability,Config,Configuration,31,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:117,Modifiability,config,configuration,117,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:287,Modifiability,config,configuration,287,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:317,Modifiability,config,configurable,317,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:608,Modifiability,Config,Config,608,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:833,Modifiability,Config,Config,833,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:903,Modifiability,Config,Config,903,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:1493,Modifiability,Config,Config,1493,"LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depe",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:1917,Modifiability,Config,Config,1917,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:1925,Performance,Queue,Queue,1925,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:1955,Performance,queue,queue,1955,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:2101,Performance,Queue,Queue,2101,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:2195,Performance,Queue,Queue,2195,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:2341,Performance,queue,queue,2341,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:106,Security,access,accessible,106,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:222,Security,access,accessible,222,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:865,Security,access,access,865,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:2347,Usability,simpl,simply,2347,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:47,Performance,queue,queue,47,"/// Set the priority for Job tasks in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; /// A higher value means a higher priority.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_priorities Task priority values, where vector index equals task ID.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:93,Performance,queue,queue,93,"/// Set the priority for Job tasks in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; /// A higher value means a higher priority.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_priorities Task priority values, where vector index equals task ID.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:67,Performance,queue,queue,67,"/// Set the desired order for executing tasks of a Job in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; ///; /// Translates the desired order to priorities. Because workers will start; /// stealing work immediately after it has been queued, the desired order; /// cannot be guaranteed -- hence ""suggest"" -- because the first queued task; /// will possibly be taken before higher priority tasks have been sent to; /// the queue.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_order Task IDs in the desired order.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:113,Performance,queue,queue,113,"/// Set the desired order for executing tasks of a Job in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; ///; /// Translates the desired order to priorities. Because workers will start; /// stealing work immediately after it has been queued, the desired order; /// cannot be guaranteed -- hence ""suggest"" -- because the first queued task; /// will possibly be taken before higher priority tasks have been sent to; /// the queue.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_order Task IDs in the desired order.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:294,Performance,queue,queued,294,"/// Set the desired order for executing tasks of a Job in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; ///; /// Translates the desired order to priorities. Because workers will start; /// stealing work immediately after it has been queued, the desired order; /// cannot be guaranteed -- hence ""suggest"" -- because the first queued task; /// will possibly be taken before higher priority tasks have been sent to; /// the queue.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_order Task IDs in the desired order.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:386,Performance,queue,queued,386,"/// Set the desired order for executing tasks of a Job in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; ///; /// Translates the desired order to priorities. Because workers will start; /// stealing work immediately after it has been queued, the desired order; /// cannot be guaranteed -- hence ""suggest"" -- because the first queued task; /// will possibly be taken before higher priority tasks have been sent to; /// the queue.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_order Task IDs in the desired order.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:482,Performance,queue,queue,482,"/// Set the desired order for executing tasks of a Job in Priority queue mode.; ///; /// Only useful in Priority queue mode, in FIFO mode this doesn't do anything.; ///; /// Translates the desired order to priorities. Because workers will start; /// stealing work immediately after it has been queued, the desired order; /// cannot be guaranteed -- hence ""suggest"" -- because the first queued task; /// will possibly be taken before higher priority tasks have been sent to; /// the queue.; ///; /// \param[in] job_id Job ID to set task order for.; /// \param[in] task_order Task IDs in the desired order.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Config.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx:33,Performance,Queue,Queue,33,"/** \class FIFOQueue; * \brief A Queue with simple FIFO behavior; */; /// See Queue::pop.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/FIFOQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx:78,Performance,Queue,Queue,78,"/** \class FIFOQueue; * \brief A Queue with simple FIFO behavior; */; /// See Queue::pop.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/FIFOQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx:44,Usability,simpl,simple,44,"/** \class FIFOQueue; * \brief A Queue with simple FIFO behavior; */; /// See Queue::pop.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/FIFOQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx:8,Performance,Queue,Queue,8,"/// See Queue::add.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/FIFOQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:74,Testability,log,logfiles,74,"// namespace; /** \class HeatmapAnalyzer; *; * \brief Reads and processes logfiles produced by RooFit::MultiProcess::ProcessTimer; *; * RooFit::MultiProcess::ProcessTimer records timings of multiple processes simultaneously; * and allows for these timings to be written out in json format, one for each process.; * This class, the HeatmapAnalyzer, can read these json files and produce a heatmap from; * them with partial derivatives on the y-axis, likelihood evaluations on the x-axis, and; * time expenditures on the z-axis. This class also contains some convenience functions; * for inspecting these log files.; *; * Note that this class requires the logfiles to contain three specific keys in the json:; * - `master:gradient` containing an array of gradient timestamps; * - `*eval_task*<task_number>` containing an array of task evaluation timestamps.; * - `*eval_partition*` containing an array of partition evaluation timestamps; */; ////////////////////////////////////////////////////////////////////////////////; /// HeatmapAnalyzer Constructor. This method reads the input files in the folder; /// specified by the user and creates internal attributes used by the other; /// methods in this class.; /// \param[in] logs_dir Directory where log files are stored in the format; /// outputted by RooFit::MultiProcess::ProcessTimer.; /// There can be other files in this directory as well.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:603,Testability,log,log,603,"// namespace; /** \class HeatmapAnalyzer; *; * \brief Reads and processes logfiles produced by RooFit::MultiProcess::ProcessTimer; *; * RooFit::MultiProcess::ProcessTimer records timings of multiple processes simultaneously; * and allows for these timings to be written out in json format, one for each process.; * This class, the HeatmapAnalyzer, can read these json files and produce a heatmap from; * them with partial derivatives on the y-axis, likelihood evaluations on the x-axis, and; * time expenditures on the z-axis. This class also contains some convenience functions; * for inspecting these log files.; *; * Note that this class requires the logfiles to contain three specific keys in the json:; * - `master:gradient` containing an array of gradient timestamps; * - `*eval_task*<task_number>` containing an array of task evaluation timestamps.; * - `*eval_partition*` containing an array of partition evaluation timestamps; */; ////////////////////////////////////////////////////////////////////////////////; /// HeatmapAnalyzer Constructor. This method reads the input files in the folder; /// specified by the user and creates internal attributes used by the other; /// methods in this class.; /// \param[in] logs_dir Directory where log files are stored in the format; /// outputted by RooFit::MultiProcess::ProcessTimer.; /// There can be other files in this directory as well.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:654,Testability,log,logfiles,654,"// namespace; /** \class HeatmapAnalyzer; *; * \brief Reads and processes logfiles produced by RooFit::MultiProcess::ProcessTimer; *; * RooFit::MultiProcess::ProcessTimer records timings of multiple processes simultaneously; * and allows for these timings to be written out in json format, one for each process.; * This class, the HeatmapAnalyzer, can read these json files and produce a heatmap from; * them with partial derivatives on the y-axis, likelihood evaluations on the x-axis, and; * time expenditures on the z-axis. This class also contains some convenience functions; * for inspecting these log files.; *; * Note that this class requires the logfiles to contain three specific keys in the json:; * - `master:gradient` containing an array of gradient timestamps; * - `*eval_task*<task_number>` containing an array of task evaluation timestamps.; * - `*eval_partition*` containing an array of partition evaluation timestamps; */; ////////////////////////////////////////////////////////////////////////////////; /// HeatmapAnalyzer Constructor. This method reads the input files in the folder; /// specified by the user and creates internal attributes used by the other; /// methods in this class.; /// \param[in] logs_dir Directory where log files are stored in the format; /// outputted by RooFit::MultiProcess::ProcessTimer.; /// There can be other files in this directory as well.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:1249,Testability,log,log,1249,"// namespace; /** \class HeatmapAnalyzer; *; * \brief Reads and processes logfiles produced by RooFit::MultiProcess::ProcessTimer; *; * RooFit::MultiProcess::ProcessTimer records timings of multiple processes simultaneously; * and allows for these timings to be written out in json format, one for each process.; * This class, the HeatmapAnalyzer, can read these json files and produce a heatmap from; * them with partial derivatives on the y-axis, likelihood evaluations on the x-axis, and; * time expenditures on the z-axis. This class also contains some convenience functions; * for inspecting these log files.; *; * Note that this class requires the logfiles to contain three specific keys in the json:; * - `master:gradient` containing an array of gradient timestamps; * - `*eval_task*<task_number>` containing an array of task evaluation timestamps.; * - `*eval_partition*` containing an array of partition evaluation timestamps; */; ////////////////////////////////////////////////////////////////////////////////; /// HeatmapAnalyzer Constructor. This method reads the input files in the folder; /// specified by the user and creates internal attributes used by the other; /// methods in this class.; /// \param[in] logs_dir Directory where log files are stored in the format; /// outputted by RooFit::MultiProcess::ProcessTimer.; /// There can be other files in this directory as well.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:382,Testability,log,logs,382,"////////////////////////////////////////////////////////////////////////////////; /// This method is the main functionality in this class. It does the heavy; /// lifting of matching duration timestamps to tasks and partition evaluations.; /// \param[in] analyzed_gradient Gradient to analyze. For example, setting to 1; /// analyzes the first gradient (ordered by time); /// in the logs.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:17,Testability,log,logfiles,17,"// loop over all logfiles stored in durations_",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:83,Testability,log,logfile,83,"// partial heatmap is the heatmap that will be filled in for the current durations logfile",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx:42,Testability,log,logfile,42,"// loops over all evaluated partitions in logfile",MatchSource.CODE_COMMENT,roofit/multiprocess/src/HeatmapAnalyzer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/HeatmapAnalyzer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1026,Deployability,update,updated,1026,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2184,Deployability,update,updated,2184," will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2399,Deployability,update,update,2399,"e; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:3285,Deployability,update,updated,3285,"ll also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results()' is provided for convenience to wait for; * all tasks to be retrieved for the current Job. Implementers can also; * choose to have the master process perform other tasks in between any of; * these three steps, or even skip steps completely.; *; * Child classes should refrain from direct access to the JobManager instance; * (through JobManager::instance), but rather use the here provided; * Job::get_manager(). This function starts the worker_loop on the worker when; * first called, meaning that the workers will not be running before they; * are needed.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:28,Integrability,interface,interface,28,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:560,Integrability,message,message,560,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1086,Integrability,Message,Message,1086," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1094,Integrability,protocol,protocol,1094," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1148,Integrability,message,messages,1148," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1277,Integrability,message,message,1277," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1356,Integrability,message,message,1356," must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Not",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1565,Integrability,message,message,1565,"_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to t",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1754,Integrability,rout,routed,1754,"_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to t",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1873,Integrability,rout,routed,1873,"he ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job us",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1972,Integrability,message,messages,1972,"instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job point",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2533,Integrability,depend,dependent,2533,"e; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:332,Modifiability,inherit,inheriting,332,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2638,Modifiability,inherit,inheriting,2638,"one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results()' is provided for convenience to wait for; * all tasks to be retrieved for the current Job. Implementers can also; * choose to have the master process perform other tasks i",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2090,Performance,queue,queue,2090,"e master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would co",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2138,Performance,queue,queue,2138," will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the ",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:3396,Performance,queue,queue,3396,"ll also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results()' is provided for convenience to wait for; * all tasks to be retrieved for the current Job. Implementers can also; * choose to have the master process perform other tasks in between any of; * these three steps, or even skip steps completely.; *; * Child classes should refrain from direct access to the JobManager instance; * (through JobManager::instance), but rather use the here provided; * Job::get_manager(). This function starts the worker_loop on the worker when; * first called, meaning that the workers will not be running before they; * are needed.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:3636,Performance,perform,perform,3636,"ll also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results()' is provided for convenience to wait for; * all tasks to be retrieved for the current Job. Implementers can also; * choose to have the master process perform other tasks in between any of; * these three steps, or even skip steps completely.; *; * Child classes should refrain from direct access to the JobManager instance; * (through JobManager::instance), but rather use the here provided; * Job::get_manager(). This function starts the worker_loop on the worker when; * first called, meaning that the workers will not be running before they; * are needed.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:3774,Security,access,access,3774,"ll also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results()' is provided for convenience to wait for; * all tasks to be retrieved for the current Job. Implementers can also; * choose to have the master process perform other tasks in between any of; * these three steps, or even skip steps completely.; *; * Child classes should refrain from direct access to the JobManager instance; * (through JobManager::instance), but rather use the here provided; * Job::get_manager(). This function starts the worker_loop on the worker when; * first called, meaning that the workers will not be running before they; * are needed.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1113,Usability,simpl,simple,1113," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:116,Security,access,access,116,"/** \brief Get JobManager instance; create and activate if necessary; *; * Child classes should refrain from direct access to the JobManager instance; * (through JobManager::instance), but rather use the here provided; * Job::get_manager(). This function starts the worker_loop on the worker when; * first called, meaning that the workers will not be running before they; * are needed.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:31,Deployability,update,update,31,"/// \brief Virtual function to update any necessary state on workers; ///; /// This function is called from the worker loop when something is received; /// over the ZeroMQ ""SUB"" socket. The master process sends messages to workers; /// on its ""PUB"" socket. Thus, we can update, for instance, parameter values; /// on the worker that were updated since the last call on the master side.; /// \note Implementers: make sure to also update the state_id_ member.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:270,Deployability,update,update,270,"/// \brief Virtual function to update any necessary state on workers; ///; /// This function is called from the worker loop when something is received; /// over the ZeroMQ ""SUB"" socket. The master process sends messages to workers; /// on its ""PUB"" socket. Thus, we can update, for instance, parameter values; /// on the worker that were updated since the last call on the master side.; /// \note Implementers: make sure to also update the state_id_ member.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:338,Deployability,update,updated,338,"/// \brief Virtual function to update any necessary state on workers; ///; /// This function is called from the worker loop when something is received; /// over the ZeroMQ ""SUB"" socket. The master process sends messages to workers; /// on its ""PUB"" socket. Thus, we can update, for instance, parameter values; /// on the worker that were updated since the last call on the master side.; /// \note Implementers: make sure to also update the state_id_ member.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:429,Deployability,update,update,429,"/// \brief Virtual function to update any necessary state on workers; ///; /// This function is called from the worker loop when something is received; /// over the ZeroMQ ""SUB"" socket. The master process sends messages to workers; /// on its ""PUB"" socket. Thus, we can update, for instance, parameter values; /// on the worker that were updated since the last call on the master side.; /// \note Implementers: make sure to also update the state_id_ member.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:211,Integrability,message,messages,211,"/// \brief Virtual function to update any necessary state on workers; ///; /// This function is called from the worker loop when something is received; /// over the ZeroMQ ""SUB"" socket. The master process sends messages to workers; /// on its ""PUB"" socket. Thus, we can update, for instance, parameter values; /// on the worker that were updated since the last call on the master side.; /// \note Implementers: make sure to also update the state_id_ member.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:33,Performance,queue,queue,33,"// complete type for JobManager::queue()",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:33,Performance,queue,queue,33,"// complete type for JobManager::queue()",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:33,Performance,queue,queue,33,"// complete type for JobManager::queue()",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:956,Modifiability,Config,Config,956,"/** \class JobManager; *; * \brief Main point of access for all MultiProcess infrastructure; *; * This class mainly serves as the access point to the multi-process infrastructure; * for 'Job's. It is meant to be used as a singleton that holds and connects the other; * infrastructural classes: the messenger, process manager, worker and queue loops.; *; * It is important that the user of this class, particularly the one that calls; * 'instance()' first, calls 'activate()' soon after, because everything that is; * done in between 'instance()' and 'activate()' will be executed on all processes.; * This may be useful in some cases, but in general, one will probably want to always; * use the 'JobManager' in its full capacity, including the queue and worker loops.; * This is the way the Job class uses this class, see 'Job::get_manager()'.; *; * The default number of processes is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance.; */; // static function",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:337,Performance,queue,queue,337,"/** \class JobManager; *; * \brief Main point of access for all MultiProcess infrastructure; *; * This class mainly serves as the access point to the multi-process infrastructure; * for 'Job's. It is meant to be used as a singleton that holds and connects the other; * infrastructural classes: the messenger, process manager, worker and queue loops.; *; * It is important that the user of this class, particularly the one that calls; * 'instance()' first, calls 'activate()' soon after, because everything that is; * done in between 'instance()' and 'activate()' will be executed on all processes.; * This may be useful in some cases, but in general, one will probably want to always; * use the 'JobManager' in its full capacity, including the queue and worker loops.; * This is the way the Job class uses this class, see 'Job::get_manager()'.; *; * The default number of processes is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance.; */; // static function",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:744,Performance,queue,queue,744,"/** \class JobManager; *; * \brief Main point of access for all MultiProcess infrastructure; *; * This class mainly serves as the access point to the multi-process infrastructure; * for 'Job's. It is meant to be used as a singleton that holds and connects the other; * infrastructural classes: the messenger, process manager, worker and queue loops.; *; * It is important that the user of this class, particularly the one that calls; * 'instance()' first, calls 'activate()' soon after, because everything that is; * done in between 'instance()' and 'activate()' will be executed on all processes.; * This may be useful in some cases, but in general, one will probably want to always; * use the 'JobManager' in its full capacity, including the queue and worker loops.; * This is the way the Job class uses this class, see 'Job::get_manager()'.; *; * The default number of processes is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance.; */; // static function",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:49,Security,access,access,49,"/** \class JobManager; *; * \brief Main point of access for all MultiProcess infrastructure; *; * This class mainly serves as the access point to the multi-process infrastructure; * for 'Job's. It is meant to be used as a singleton that holds and connects the other; * infrastructural classes: the messenger, process manager, worker and queue loops.; *; * It is important that the user of this class, particularly the one that calls; * 'instance()' first, calls 'activate()' soon after, because everything that is; * done in between 'instance()' and 'activate()' will be executed on all processes.; * This may be useful in some cases, but in general, one will probably want to always; * use the 'JobManager' in its full capacity, including the queue and worker loops.; * This is the way the Job class uses this class, see 'Job::get_manager()'.; *; * The default number of processes is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance.; */; // static function",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:130,Security,access,access,130,"/** \class JobManager; *; * \brief Main point of access for all MultiProcess infrastructure; *; * This class mainly serves as the access point to the multi-process infrastructure; * for 'Job's. It is meant to be used as a singleton that holds and connects the other; * infrastructural classes: the messenger, process manager, worker and queue loops.; *; * It is important that the user of this class, particularly the one that calls; * 'instance()' first, calls 'activate()' soon after, because everything that is; * done in between 'instance()' and 'activate()' will be executed on all processes.; * This may be useful in some cases, but in general, one will probably want to always; * use the 'JobManager' in its full capacity, including the queue and worker loops.; * This is the way the Job class uses this class, see 'Job::get_manager()'.; *; * The default number of processes is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance.; */; // static function",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:872,Availability,down,down,872,"// The instance typically gets created by some Job. Once all Jobs are gone, the; // JM will get destroyed. In this case, the job_objects map should have; // been emptied.; // The second case is when the program ends, at which time the static instance; // is destroyed. Jobs may still be present, for instance, the Job subclass; // RooFit::TestStatistics::LikelihoodGradientJob, will have; // been put into RooMinimizer::_theFitter->fObjFunction, as the gradient; // member. Because _theFitter is also a global static member, we cannot; // guarantee destruction order, and so the JobManager may be destroyed before; // all Jobs are destroyed. We cannot therefore make sure that the first; // condition is met. However, the Job objects stuck in _theFitter are not; // meant to be run again, because the program is ending anyway. So also in this; // case, we can safely shut down.; // There used to be an assert statement that checked whether the job_objects; // map was empty at destruction time, but that neglected the second possibility; // and led to assertion failures, which left the Messenger and ProcessManager; // objects intact, leading to the forked processes and their ZeroMQ resources; // to remain after exiting the main/master/parent process.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:1062,Availability,failure,failures,1062,"// The instance typically gets created by some Job. Once all Jobs are gone, the; // JM will get destroyed. In this case, the job_objects map should have; // been emptied.; // The second case is when the program ends, at which time the static instance; // is destroyed. Jobs may still be present, for instance, the Job subclass; // RooFit::TestStatistics::LikelihoodGradientJob, will have; // been put into RooMinimizer::_theFitter->fObjFunction, as the gradient; // member. Because _theFitter is also a global static member, we cannot; // guarantee destruction order, and so the JobManager may be destroyed before; // all Jobs are destroyed. We cannot therefore make sure that the first; // condition is met. However, the Job objects stuck in _theFitter are not; // meant to be run again, because the program is ending anyway. So also in this; // case, we can safely shut down.; // There used to be an assert statement that checked whether the job_objects; // map was empty at destruction time, but that neglected the second possibility; // and led to assertion failures, which left the Messenger and ProcessManager; // objects intact, leading to the forked processes and their ZeroMQ resources; // to remain after exiting the main/master/parent process.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:860,Safety,safe,safely,860,"// The instance typically gets created by some Job. Once all Jobs are gone, the; // JM will get destroyed. In this case, the job_objects map should have; // been emptied.; // The second case is when the program ends, at which time the static instance; // is destroyed. Jobs may still be present, for instance, the Job subclass; // RooFit::TestStatistics::LikelihoodGradientJob, will have; // been put into RooMinimizer::_theFitter->fObjFunction, as the gradient; // member. Because _theFitter is also a global static member, we cannot; // guarantee destruction order, and so the JobManager may be destroyed before; // all Jobs are destroyed. We cannot therefore make sure that the first; // condition is met. However, the Job objects stuck in _theFitter are not; // meant to be run again, because the program is ending anyway. So also in this; // case, we can safely shut down.; // There used to be an assert statement that checked whether the job_objects; // map was empty at destruction time, but that neglected the second possibility; // and led to assertion failures, which left the Messenger and ProcessManager; // objects intact, leading to the forked processes and their ZeroMQ resources; // to remain after exiting the main/master/parent process.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:339,Testability,Test,TestStatistics,339,"// The instance typically gets created by some Job. Once all Jobs are gone, the; // JM will get destroyed. In this case, the job_objects map should have; // been emptied.; // The second case is when the program ends, at which time the static instance; // is destroyed. Jobs may still be present, for instance, the Job subclass; // RooFit::TestStatistics::LikelihoodGradientJob, will have; // been put into RooMinimizer::_theFitter->fObjFunction, as the gradient; // member. Because _theFitter is also a global static member, we cannot; // guarantee destruction order, and so the JobManager may be destroyed before; // all Jobs are destroyed. We cannot therefore make sure that the first; // condition is met. However, the Job objects stuck in _theFitter are not; // meant to be run again, because the program is ending anyway. So also in this; // case, we can safely shut down.; // There used to be an assert statement that checked whether the job_objects; // map was empty at destruction time, but that neglected the second possibility; // and led to assertion failures, which left the Messenger and ProcessManager; // objects intact, leading to the forked processes and their ZeroMQ resources; // to remain after exiting the main/master/parent process.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:902,Testability,assert,assert,902,"// The instance typically gets created by some Job. Once all Jobs are gone, the; // JM will get destroyed. In this case, the job_objects map should have; // been emptied.; // The second case is when the program ends, at which time the static instance; // is destroyed. Jobs may still be present, for instance, the Job subclass; // RooFit::TestStatistics::LikelihoodGradientJob, will have; // been put into RooMinimizer::_theFitter->fObjFunction, as the gradient; // member. Because _theFitter is also a global static member, we cannot; // guarantee destruction order, and so the JobManager may be destroyed before; // all Jobs are destroyed. We cannot therefore make sure that the first; // condition is met. However, the Job objects stuck in _theFitter are not; // meant to be run again, because the program is ending anyway. So also in this; // case, we can safely shut down.; // There used to be an assert statement that checked whether the job_objects; // map was empty at destruction time, but that neglected the second possibility; // and led to assertion failures, which left the Messenger and ProcessManager; // objects intact, leading to the forked processes and their ZeroMQ resources; // to remain after exiting the main/master/parent process.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:1052,Testability,assert,assertion,1052,"// The instance typically gets created by some Job. Once all Jobs are gone, the; // JM will get destroyed. In this case, the job_objects map should have; // been emptied.; // The second case is when the program ends, at which time the static instance; // is destroyed. Jobs may still be present, for instance, the Job subclass; // RooFit::TestStatistics::LikelihoodGradientJob, will have; // been put into RooMinimizer::_theFitter->fObjFunction, as the gradient; // member. Because _theFitter is also a global static member, we cannot; // guarantee destruction order, and so the JobManager may be destroyed before; // all Jobs are destroyed. We cannot therefore make sure that the first; // condition is met. However, the Job objects stuck in _theFitter are not; // meant to be run again, because the program is ending anyway. So also in this; // case, we can safely shut down.; // There used to be an assert statement that checked whether the job_objects; // map was empty at destruction time, but that neglected the second possibility; // and led to assertion failures, which left the Messenger and ProcessManager; // objects intact, leading to the forked processes and their ZeroMQ resources; // to remain after exiting the main/master/parent process.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:57,Integrability,message,message,57,"// job_id must always be the first element of the result message!",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:17,Performance,queue,queue,17,"/// \brief Start queue and worker loops on child processes; ///; /// This function exists purely because activation from the constructor is; /// impossible; the constructor must return a constructed instance, which it; /// can't do if it's stuck in an infinite loop. This means the Job that first; /// creates the JobManager instance must also activate it (or any other user; /// of this class).; /// This should be called soon after creation of instance, because everything; /// between construction and activation gets executed both on the master; /// process and on the slaves.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/JobManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1023,Availability,robust,robust,1023,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:989,Deployability,update,update,989,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:61,Integrability,wrap,wraps,61,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1050,Integrability,message,messages,1050,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1128,Integrability,message,messages,1128,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1213,Integrability,message,message,1213,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1316,Integrability,message,message,1316,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:173,Performance,queue,queue,173,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:425,Performance,queue,queue,425,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:536,Performance,queue,queue,536,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:611,Performance,queue,queue,611,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:649,Performance,queue,queue,649,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:749,Performance,queue,queue,749,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:880,Performance,queue,queue,880,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1292,Performance,perform,performance,1292,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:1603,Performance,queue,queue,1603,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:686,Testability,test,test,686,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:30,Performance,queue,queue,30,"// high water mark for master-queue sending, which can be quite a busy channel, especially at the start of a run",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:13,Performance,queue,queue-worker,13,"// first the queue-worker sockets; // do resize instead of reserve so that the unique_ptrs are initialized; // (to nullptr) so that we can do reset below, alternatively you can do; // push/emplace_back with move or something",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:19,Performance,queue,queue,19,"// then the master-queue sockets",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:20,Performance,queue,queue-worker,20,"// we only need one queue-worker pipe on the worker",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:319,Availability,avail,available,319,"// Dev note: do not call zmqSvc()::close_context from here! The Messenger; // is (a member of) a static variable (JobManager) and ZeroMQSvc is static; // as well (the singleton returned by zmqSvc()). Because of the ""static; // destruction order fiasco"", it is not guaranteed that ZeroMQSvc singleton; // state is still available at time of destruction of the Messenger. Instead; // of a compile time error, this will lead to segfaults at runtime when; // exiting the program (on some platforms), because even though the ZeroMQSvc; // singleton pointer may be overwritten with random data, it will usually; // not randomly become nullptr, which means the nullptr check in the getter; // will still pass and the randomized pointer will be dereferenced.; // Instead, we close context in any new ProcessManager that may be created,; // which means the Messenger will get a fresh context anyway.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:400,Availability,error,error,400,"// Dev note: do not call zmqSvc()::close_context from here! The Messenger; // is (a member of) a static variable (JobManager) and ZeroMQSvc is static; // as well (the singleton returned by zmqSvc()). Because of the ""static; // destruction order fiasco"", it is not guaranteed that ZeroMQSvc singleton; // state is still available at time of destruction of the Messenger. Instead; // of a compile time error, this will lead to segfaults at runtime when; // exiting the program (on some platforms), because even though the ZeroMQSvc; // singleton pointer may be overwritten with random data, it will usually; // not randomly become nullptr, which means the nullptr check in the getter; // will still pass and the randomized pointer will be dereferenced.; // Instead, we close context in any new ProcessManager that may be created,; // which means the Messenger will get a fresh context anyway.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:104,Modifiability,variab,variable,104,"// Dev note: do not call zmqSvc()::close_context from here! The Messenger; // is (a member of) a static variable (JobManager) and ZeroMQSvc is static; // as well (the singleton returned by zmqSvc()). Because of the ""static; // destruction order fiasco"", it is not guaranteed that ZeroMQSvc singleton; // state is still available at time of destruction of the Messenger. Instead; // of a compile time error, this will lead to segfaults at runtime when; // exiting the program (on some platforms), because even though the ZeroMQSvc; // singleton pointer may be overwritten with random data, it will usually; // not randomly become nullptr, which means the nullptr check in the getter; // will still pass and the randomized pointer will be dereferenced.; // Instead, we close context in any new ProcessManager that may be created,; // which means the Messenger will get a fresh context anyway.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:127,Integrability,PUB-SUB,PUB-SUB,127,"/// \brief Test whether push-pull sockets are working; ///; /// \note This function tests the PUSH-PULL socket pairs only. The PUB-SUB sockets are already tested in the; /// constructor.; ///; /// \param process_manager ProcessManager object used to instantiate this object. Used to identify which process we are; /// running on and hence which sockets need to be tested.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:11,Testability,Test,Test,11,"/// \brief Test whether push-pull sockets are working; ///; /// \note This function tests the PUSH-PULL socket pairs only. The PUB-SUB sockets are already tested in the; /// constructor.; ///; /// \param process_manager ProcessManager object used to instantiate this object. Used to identify which process we are; /// running on and hence which sockets need to be tested.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:84,Testability,test,tests,84,"/// \brief Test whether push-pull sockets are working; ///; /// \note This function tests the PUSH-PULL socket pairs only. The PUB-SUB sockets are already tested in the; /// constructor.; ///; /// \param process_manager ProcessManager object used to instantiate this object. Used to identify which process we are; /// running on and hence which sockets need to be tested.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:155,Testability,test,tested,155,"/// \brief Test whether push-pull sockets are working; ///; /// \note This function tests the PUSH-PULL socket pairs only. The PUB-SUB sockets are already tested in the; /// constructor.; ///; /// \param process_manager ProcessManager object used to instantiate this object. Used to identify which process we are; /// running on and hence which sockets need to be tested.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:364,Testability,test,tested,364,"/// \brief Test whether push-pull sockets are working; ///; /// \note This function tests the PUSH-PULL socket pairs only. The PUB-SUB sockets are already tested in the; /// constructor.; ///; /// \param process_manager ProcessManager object used to instantiate this object. Used to identify which process we are; /// running on and hence which sockets need to be tested.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:192,Performance,queue,queue,192,"// Before blocking SIGTERM, set the signal handler, so we can also check after blocking whether a signal occurred; // In our case, we already set it in the ProcessManager after forking to the queue and worker processes.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:73,Performance,queue,queue,73,"// make sure to always receive last on master, so that master knows when queue is done,; // which means workers are done as well, so if master is done everything is done:",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:48,Safety,timeout,timeout,48,"// poll: wait until status change (-1: infinite timeout)",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:25,Integrability,message,messages,25,"// then process incoming messages from sockets",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:3,Integrability,message,message,3,"// message comes from the master/queue socket (first element):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:33,Performance,queue,queue,33,"// message comes from the master/queue socket (first element):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:29,Availability,reliab,reliable,29,"// TODO: replace with a more reliable lookup",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:46,Performance,Queue,Queue,46,"/// Helper function that creates a poller for Queue::loop()",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:15,Performance,QUEUE,QUEUE,15,"// -- WORKER - QUEUE COMMUNICATION --",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:6,Performance,QUEUE,QUEUE,6,"// -- QUEUE - MASTER COMMUNICATION --",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:90,Energy Efficiency,monitor,monitor,90,"/// Function called from send and receive template functions in debug builds; /// used to monitor the messages that are going to be sent or are received.; /// By defining this in the implementation file, compilation is a lot faster; /// during debugging of Messenger or communication protocols.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:102,Integrability,message,messages,102,"/// Function called from send and receive template functions in debug builds; /// used to monitor the messages that are going to be sent or are received.; /// By defining this in the implementation file, compilation is a lot faster; /// during debugging of Messenger or communication protocols.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:284,Integrability,protocol,protocols,284,"/// Function called from send and receive template functions in debug builds; /// used to monitor the messages that are going to be sent or are received.; /// By defining this in the implementation file, compilation is a lot faster; /// during debugging of Messenger or communication protocols.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:35,Performance,Queue,Queue,35,"/** \class PriorityQueue; * \brief Queue that orders tasks according to specified task priorities.; */; /// See Queue::pop.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:112,Performance,Queue,Queue,112,"/** \class PriorityQueue; * \brief Queue that orders tasks according to specified task priorities.; */; /// See Queue::pop.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:8,Performance,Queue,Queue,8,"/// See Queue::add.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:70,Modifiability,Config,Config,70,"/// Set the desired order for executing tasks of a Job.; ///; /// See Config::Queue::suggestTaskOrder.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:78,Performance,Queue,Queue,78,"/// Set the desired order for executing tasks of a Job.; ///; /// See Config::Queue::suggestTaskOrder.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:50,Modifiability,Config,Config,50,"/// Set the priority for Job tasks.; ///; /// See Config::Queue::setTaskPriorities.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx:58,Performance,Queue,Queue,58,"/// Set the priority for Job tasks.; ///; /// See Config::Queue::setTaskPriorities.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/PriorityQueue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/PriorityQueue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:57,Performance,queue,queue,57,"/// \class ProcessManager; /// \brief Fork processes for queue and workers; ///; /// This class manages three types of processes:; /// 1. master: the initial main process. It defines and enqueues tasks; /// and processes results.; /// 2. workers: a pool of processes that will try to take tasks from the; /// queue. These are forked from master.; /// 3. queue: This process runs the queue_loop and maintains the queue of; /// tasks. It is also forked from master.; ///; /// \param N_workers Number of worker processes to spawn.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:309,Performance,queue,queue,309,"/// \class ProcessManager; /// \brief Fork processes for queue and workers; ///; /// This class manages three types of processes:; /// 1. master: the initial main process. It defines and enqueues tasks; /// and processes results.; /// 2. workers: a pool of processes that will try to take tasks from the; /// queue. These are forked from master.; /// 3. queue: This process runs the queue_loop and maintains the queue of; /// tasks. It is also forked from master.; ///; /// \param N_workers Number of worker processes to spawn.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:354,Performance,queue,queue,354,"/// \class ProcessManager; /// \brief Fork processes for queue and workers; ///; /// This class manages three types of processes:; /// 1. master: the initial main process. It defines and enqueues tasks; /// and processes results.; /// 2. workers: a pool of processes that will try to take tasks from the; /// queue. These are forked from master.; /// 3. queue: This process runs the queue_loop and maintains the queue of; /// tasks. It is also forked from master.; ///; /// \param N_workers Number of worker processes to spawn.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:412,Performance,queue,queue,412,"/// \class ProcessManager; /// \brief Fork processes for queue and workers; ///; /// This class manages three types of processes:; /// 1. master: the initial main process. It defines and enqueues tasks; /// and processes results.; /// 2. workers: a pool of processes that will try to take tasks from the; /// queue. These are forked from master.; /// 3. queue: This process runs the queue_loop and maintains the queue of; /// tasks. It is also forked from master.; ///; /// \param N_workers Number of worker processes to spawn.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:916,Safety,avoid,avoiding,916,"// Note: zmq context is automatically created in the ZeroMQSvc class and maintained as singleton,; // but we must close any possibly existing state before reusing it. This assumes that our Messenger; // is the only user of ZeroMQSvc and that there is only one Messenger at a time. Beware that; // this must be designed more carefully if either of these assumptions change! Note also that this; // call must be done before the ProcessManager forks new processes, otherwise the master process'; // context that will be cloned to all forked processes will be closed multiple times, which will; // hang, because the ZeroMQ context creates threads and these will not be cloned along with the; // fork. See the ZeroMQ documentation for more details on this. In principle, one could design this; // in a more finegrained way by keeping the context on the master process and only recreating it; // on child processes (while avoiding calling the destructor on the child processes!). This; // approach may offer more flexibility if this is needed in the future.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:260,Integrability,message,message,260,"// static function; /// We need this to tell the children to die, because we can't talk; /// to them anymore during JobManager destruction, because that kills; /// the Messenger first. We do that with SIGTERMs. The sigterm_received(); /// should be checked in message loops to stop them when it's true.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:12,Performance,queue,queue,12,"// ... then queue:",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:16,Performance,queue,queue,16,"// we're now on queue",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx:20,Availability,mask,mask,20,"// zero all bits in mask",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessTimer.cxx:117,Testability,log,logs,117,"/** \class ProcessTimer; *; * \brief Can be used to generate timings of multiple processes simultaneously and output logs; *; * This static class records timings of multiple processes simultaneously and allows for these; * timings to be written out in json format, one file for each process. Multiple overlapping; * sections can be timed independently on the same process. It also allows for the timings; * to be written out to json logfiles in a specified interval, for example every half hour.; *; * Note that this class logs timings in milliseconds.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessTimer.cxx:433,Testability,log,logfiles,433,"/** \class ProcessTimer; *; * \brief Can be used to generate timings of multiple processes simultaneously and output logs; *; * This static class records timings of multiple processes simultaneously and allows for these; * timings to be written out in json format, one file for each process. Multiple overlapping; * sections can be timed independently on the same process. It also allows for the timings; * to be written out to json logfiles in a specified interval, for example every half hour.; *; * Note that this class logs timings in milliseconds.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessTimer.cxx:523,Testability,log,logs,523,"/** \class ProcessTimer; *; * \brief Can be used to generate timings of multiple processes simultaneously and output logs; *; * This static class records timings of multiple processes simultaneously and allows for these; * timings to be written out in json format, one file for each process. Multiple overlapping; * sections can be timed independently on the same process. It also allows for the timings; * to be written out to json logfiles in a specified interval, for example every half hour.; *; * Note that this class logs timings in milliseconds.; */",MatchSource.CODE_COMMENT,roofit/multiprocess/src/ProcessTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/ProcessTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:444,Integrability,message,messages,444,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:11,Performance,Queue,Queue,11,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:35,Performance,queue,queue,35,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:78,Performance,queue,queue,78,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:125,Performance,Queue,Queue,125,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:163,Performance,queue,queue,163,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:275,Performance,queue,queue,275,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:346,Performance,Queue,Queue,346,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:366,Performance,queue,queue,366,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:538,Performance,load,load,538,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:1134,Performance,load,load,1134,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:1181,Performance,Queue,Queue,1181,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:805,Usability,simpl,simple,805,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:954,Usability,simpl,simple,954,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:25,Performance,Queue,Queue,25,"/// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:64,Safety,safe,safety,64,"// Note: below two commands should be run atomically for thread safety (if that ever becomes an issue)",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:71,Integrability,message,messages,71,"/// \brief The queue process's event loop; ///; /// Polls for incoming messages from other processes and handles them.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:15,Performance,queue,queue,15,"/// \brief The queue process's event loop; ///; /// Polls for incoming messages from other processes and handles them.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:192,Performance,queue,queue,192,"// Before blocking SIGTERM, set the signal handler, so we can also check after blocking whether a signal occurred; // In our case, we already set it in the ProcessManager after forking to the queue and worker processes.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:113,Safety,timeout,timeout,113,"// watch for zmq_error from ppoll caused by SIGTERM from master; // poll: wait until status change (-1: infinite timeout)",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:25,Integrability,message,messages,25,"// then process incoming messages from sockets",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:3,Integrability,message,message,3,"// message comes from the master/queue socket (first element):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:33,Performance,queue,queue,33,"// message comes from the master/queue socket (first element):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx:594,Integrability,message,message,594,"// This can happen from recv if ppoll initially gets a read-ready signal for a socket,; // but the received data does not pass the checksum test, so the socket becomes unreadable; // again or from non-blocking send if the socket becomes unwritable either due to the HWM; // being reached or the socket not being connected (anymore). The latter case usually means; // the connection has been severed from the other side, meaning it has probably been killed; // and in that case the next ppoll call will probably also receive a SIGTERM, ending the; // loop. In case something else is wrong, this message will print multiple times, which; // should be taken as a cue for writing a bug report :)",MatchSource.CODE_COMMENT,roofit/multiprocess/src/util.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx:131,Security,checksum,checksum,131,"// This can happen from recv if ppoll initially gets a read-ready signal for a socket,; // but the received data does not pass the checksum test, so the socket becomes unreadable; // again or from non-blocking send if the socket becomes unwritable either due to the HWM; // being reached or the socket not being connected (anymore). The latter case usually means; // the connection has been severed from the other side, meaning it has probably been killed; // and in that case the next ppoll call will probably also receive a SIGTERM, ending the; // loop. In case something else is wrong, this message will print multiple times, which; // should be taken as a cue for writing a bug report :)",MatchSource.CODE_COMMENT,roofit/multiprocess/src/util.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx:140,Testability,test,test,140,"// This can happen from recv if ppoll initially gets a read-ready signal for a socket,; // but the received data does not pass the checksum test, so the socket becomes unreadable; // again or from non-blocking send if the socket becomes unwritable either due to the HWM; // being reached or the socket not being connected (anymore). The latter case usually means; // the connection has been severed from the other side, meaning it has probably been killed; // and in that case the next ppoll call will probably also receive a SIGTERM, ending the; // loop. In case something else is wrong, this message will print multiple times, which; // should be taken as a cue for writing a bug report :)",MatchSource.CODE_COMMENT,roofit/multiprocess/src/util.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx:122,Safety,abort,abort,122,"// returns a tuple containing first the poll result and second a boolean flag that tells the caller whether it should; // abort the enclosing loop",MatchSource.CODE_COMMENT,roofit/multiprocess/src/util.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/util.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:107,Integrability,message,messages,107,"/// \brief The worker processes' event loop; ///; /// Asks the queue process for tasks, polls for incoming messages from other; /// processes and handles them.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:63,Performance,queue,queue,63,"/// \brief The worker processes' event loop; ///; /// Asks the queue process for tasks, polls for incoming messages from other; /// processes and handles them.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:192,Performance,queue,queue,192,"// Before blocking SIGTERM, set the signal handler, so we can also check after blocking whether a signal occurred; // In our case, we already set it in the ProcessManager after forking to the queue and worker processes.",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:13,Availability,error,error,13,"// watch for error from ppoll (which is called inside receive functions) caused by SIGTERM from master; // try to dequeue a task",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:36,Deployability,update,update,36,"// wait for handshake from queue or update from SUB socket",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:27,Performance,queue,queue,27,"// wait for handshake from queue or update from SUB socket",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:45,Deployability,update,update,45,"// because the poller may now have a waiting update from master over the SUB socket,; // but the queue socket could be first in the poll_result vector, and during handling; // of a new task it is possible we need to already receive the updated state over SUB,; // we have to then flip this boolean so that in the for loop when we reach the SUB; // socket's result, we can skip it (otherwise we will hang there, because no more; // updated state will be coming):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:236,Deployability,update,updated,236,"// because the poller may now have a waiting update from master over the SUB socket,; // but the queue socket could be first in the poll_result vector, and during handling; // of a new task it is possible we need to already receive the updated state over SUB,; // we have to then flip this boolean so that in the for loop when we reach the SUB; // socket's result, we can skip it (otherwise we will hang there, because no more; // updated state will be coming):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:431,Deployability,update,updated,431,"// because the poller may now have a waiting update from master over the SUB socket,; // but the queue socket could be first in the poll_result vector, and during handling; // of a new task it is possible we need to already receive the updated state over SUB,; // we have to then flip this boolean so that in the for loop when we reach the SUB; // socket's result, we can skip it (otherwise we will hang there, because no more; // updated state will be coming):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:97,Performance,queue,queue,97,"// because the poller may now have a waiting update from master over the SUB socket,; // but the queue socket could be first in the poll_result vector, and during handling; // of a new task it is possible we need to already receive the updated state over SUB,; // we have to then flip this boolean so that in the for loop when we reach the SUB; // socket's result, we can skip it (otherwise we will hang there, because no more; // updated state will be coming):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:25,Integrability,message,messages,25,"// then process incoming messages from sockets",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:3,Integrability,message,message,3,"// message comes from the master-worker SUB socket (first element):",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:8,Performance,queue,queue,8,"// from queue socket",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:46,Deployability,update,updated,46,"// while loop, because multiple jobs may have updated state coming",MatchSource.CODE_COMMENT,roofit/multiprocess/src/worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/NoopJob.h:19,Performance,queue,queue,19,"// ... JobManager::queue()",MatchSource.CODE_COMMENT,roofit/multiprocess/test/NoopJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/NoopJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/NoopJob.h:16,Performance,queue,queue,16,"// master fills queue with tasks",MatchSource.CODE_COMMENT,roofit/multiprocess/test/NoopJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/NoopJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/NoopJob.h:54,Integrability,message,message,54,"// job ID must always be the first part of any result message/type",MatchSource.CODE_COMMENT,roofit/multiprocess/test/NoopJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/NoopJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:19,Performance,queue,queue,19,"// ... JobManager::queue()",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:34,Safety,avoid,avoiding,34,"// for simplicity of the example (avoiding getters/setters) we make data members public as well",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:7,Usability,simpl,simplicity,7,"// for simplicity of the example (avoiding getters/setters) we make data members public as well",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:16,Performance,queue,queue,16,"// master fills queue with tasks",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:168,Integrability,message,message,168,"// -- BEGIN plumbing --; // typically, on master, this would be called inside evaluate, before queuing tasks; on workers it's called; // automatically when a published message is received from master",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:60,Integrability,rout,route,60,"// always send Job id first! This is used in worker_loop to route the; // update_state call to the correct Job.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:54,Integrability,message,message,54,"// job ID must always be the first part of any result message/type",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:70,Security,access,access,70,"// You can implement all the usual fixture class members here.; // To access the test parameter, call GetParam() from class; // TestWithParam<T>.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:81,Testability,test,test,81,"// You can implement all the usual fixture class members here.; // To access the test parameter, call GetParam() from class; // TestWithParam<T>.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:128,Testability,Test,TestWithParam,128,"// You can implement all the usual fixture class members here.; // To access the test parameter, call GetParam() from class; // TestWithParam<T>.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:173,Deployability,update,updates,173,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:10,Testability,test,test,10,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:3,Usability,Simpl,Simple,3,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:87,Usability,simpl,simple,87,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:16,Testability,test,test,16,"// start serial test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:18,Testability,test,test,18,"// start parallel test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:173,Deployability,update,updates,173,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:10,Testability,test,test,10,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:3,Usability,Simpl,Simple,3,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:87,Usability,simpl,simple,87,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:173,Deployability,update,updates,173,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:10,Testability,test,test,10,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:3,Usability,Simpl,Simple,3,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:87,Usability,simpl,simple,87,"// Simple test case: calculate x^2 + b, where x is a vector. This case does; // both a simple calculation (squaring the input vector x) and represents; // handling of state updates in b.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:18,Testability,test,test,18,"// start parallel test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Job.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:21,Testability,test,test,21,"// the point of this test is to see whether clean-up of ZeroMQ resources is done properly without calling any; // destructors (which is what happens when you call _Exit() instead of regularly ending the program by reaching the; // end of main()).",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:196,Testability,test,test,196,"// Originally, we could not get the debugger (lldb) to play nicely with ZeroMQ; every time we paused a process, it; // said it crashed because of SIGSTOP, but SIGSTOP should just pause it... this test was meant to reproduce this; // behavior and fix it, which was done by more carefully handling exceptions.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:94,Usability,pause,paused,94,"// Originally, we could not get the debugger (lldb) to play nicely with ZeroMQ; every time we paused a process, it; // said it crashed because of SIGSTOP, but SIGSTOP should just pause it... this test was meant to reproduce this; // behavior and fix it, which was done by more carefully handling exceptions.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:179,Usability,pause,pause,179,"// Originally, we could not get the debugger (lldb) to play nicely with ZeroMQ; every time we paused a process, it; // said it crashed because of SIGSTOP, but SIGSTOP should just pause it... this test was meant to reproduce this; // behavior and fix it, which was done by more carefully handling exceptions.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:108,Performance,race condition,race condition,108,"// The SIGSTOP test failed spuriously on CI at some point. We suspected this was due to some; // improbable race condition caused in some place where SIGSTOP/SIGCONT crashes a process.; // To find this crash, we bombard the processes with signals in this test.; // We were not able to trigger the crash, so we disabled the test, but leave it in for when; // the spurious test resurfaces.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:15,Testability,test,test,15,"// The SIGSTOP test failed spuriously on CI at some point. We suspected this was due to some; // improbable race condition caused in some place where SIGSTOP/SIGCONT crashes a process.; // To find this crash, we bombard the processes with signals in this test.; // We were not able to trigger the crash, so we disabled the test, but leave it in for when; // the spurious test resurfaces.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:255,Testability,test,test,255,"// The SIGSTOP test failed spuriously on CI at some point. We suspected this was due to some; // improbable race condition caused in some place where SIGSTOP/SIGCONT crashes a process.; // To find this crash, we bombard the processes with signals in this test.; // We were not able to trigger the crash, so we disabled the test, but leave it in for when; // the spurious test resurfaces.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:323,Testability,test,test,323,"// The SIGSTOP test failed spuriously on CI at some point. We suspected this was due to some; // improbable race condition caused in some place where SIGSTOP/SIGCONT crashes a process.; // To find this crash, we bombard the processes with signals in this test.; // We were not able to trigger the crash, so we disabled the test, but leave it in for when; // the spurious test resurfaces.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:371,Testability,test,test,371,"// The SIGSTOP test failed spuriously on CI at some point. We suspected this was due to some; // improbable race condition caused in some place where SIGSTOP/SIGCONT crashes a process.; // To find this crash, we bombard the processes with signals in this test.; // We were not able to trigger the crash, so we disabled the test, but leave it in for when; // the spurious test resurfaces.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:22,Integrability,message,message,22,"// printf(""first send message to queue...\n"");",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:33,Performance,queue,queue,33,"// printf(""first send message to queue...\n"");",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:24,Integrability,message,message,24,"// printf(""send another message to queue...\n"");",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:35,Performance,queue,queue,35,"// printf(""send another message to queue...\n"");",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:26,Performance,queue,queue,26,"// printf(""received %d on queue\n"", number);; /*number =*/",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:26,Performance,queue,queue,26,"// printf(""received %d on queue\n"", number);",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:109,Availability,robust,robust,109,"// This test has been disabled in favor of the pub-sub connection check in the Messenger ctor, which is more robust",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:47,Integrability,pub-sub,pub-sub,47,"// This test has been disabled in favor of the pub-sub connection check in the Messenger ctor, which is more robust",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx:8,Testability,test,test,8,"// This test has been disabled in favor of the pub-sub connection check in the Messenger ctor, which is more robust",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Messenger.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Messenger.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessManager.cxx:8,Testability,test,test,8,"// This test doesn't actually represent a current usecase in RooFit, but let's; // showcase the possibility anyway for future reference.; // first create a regular pm like in the birthAndDeath test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessManager.cxx:193,Testability,test,test,193,"// This test doesn't actually represent a current usecase in RooFit, but let's; // showcase the possibility anyway for future reference.; // first create a regular pm like in the birthAndDeath test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessManager.cxx:62,Performance,queue,queue,62,"// then from each forked node, spin up another set of workers+queue!",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_ProcessManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessTimer.cxx:51,Testability,test,test,51,"// alias; /// It's not easy to guarantee that this test always passes. It is not; /// deterministic because we time something across multiple processes and; /// sometimes some processes might be doing something else during the running; /// of these tests. That's why the test is disabled for now.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_ProcessTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessTimer.cxx:249,Testability,test,tests,249,"// alias; /// It's not easy to guarantee that this test always passes. It is not; /// deterministic because we time something across multiple processes and; /// sometimes some processes might be doing something else during the running; /// of these tests. That's why the test is disabled for now.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_ProcessTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessTimer.cxx:271,Testability,test,test,271,"// alias; /// It's not easy to guarantee that this test always passes. It is not; /// deterministic because we time something across multiple processes and; /// sometimes some processes might be doing something else during the running; /// of these tests. That's why the test is disabled for now.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_ProcessTimer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_ProcessTimer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:62,Performance,queue,queue,62,"// Calculate the expected task execution order for a priority queue; //; // We would expect the first executed task to be the one with the highest; // priority, but it is sometimes (even often) rather one of the first; // submitted tasks instead. This is because the worker will immediately steal; // a task once one is on the queue. Often, the worker's first request comes; // before the highest priority one was added. So when comparing to the; // suggested order, we have to move this first executed task to the front.; //; // Things can go even worse in slow systems; there may be several tasks that; // get executed before the queue managed to receive all tasks. We loop; // through all of these, until we hit the last submitted task. From that point; // on, we demand adherence to the expected order.; //; // In the worst case, this could mean that the tasks are received as 0, 1,; // 2, 3, 4, 5, 6, 7, 8, 9. This is still expected behavior, given the; // asynchronous nature of the system, although, of course, quite; // undesirable and would indicate a clear need to improve performance.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:327,Performance,queue,queue,327,"// Calculate the expected task execution order for a priority queue; //; // We would expect the first executed task to be the one with the highest; // priority, but it is sometimes (even often) rather one of the first; // submitted tasks instead. This is because the worker will immediately steal; // a task once one is on the queue. Often, the worker's first request comes; // before the highest priority one was added. So when comparing to the; // suggested order, we have to move this first executed task to the front.; //; // Things can go even worse in slow systems; there may be several tasks that; // get executed before the queue managed to receive all tasks. We loop; // through all of these, until we hit the last submitted task. From that point; // on, we demand adherence to the expected order.; //; // In the worst case, this could mean that the tasks are received as 0, 1,; // 2, 3, 4, 5, 6, 7, 8, 9. This is still expected behavior, given the; // asynchronous nature of the system, although, of course, quite; // undesirable and would indicate a clear need to improve performance.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:632,Performance,queue,queue,632,"// Calculate the expected task execution order for a priority queue; //; // We would expect the first executed task to be the one with the highest; // priority, but it is sometimes (even often) rather one of the first; // submitted tasks instead. This is because the worker will immediately steal; // a task once one is on the queue. Often, the worker's first request comes; // before the highest priority one was added. So when comparing to the; // suggested order, we have to move this first executed task to the front.; //; // Things can go even worse in slow systems; there may be several tasks that; // get executed before the queue managed to receive all tasks. We loop; // through all of these, until we hit the last submitted task. From that point; // on, we demand adherence to the expected order.; //; // In the worst case, this could mean that the tasks are received as 0, 1,; // 2, 3, 4, 5, 6, 7, 8, 9. This is still expected behavior, given the; // asynchronous nature of the system, although, of course, quite; // undesirable and would indicate a clear need to improve performance.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:1083,Performance,perform,performance,1083,"// Calculate the expected task execution order for a priority queue; //; // We would expect the first executed task to be the one with the highest; // priority, but it is sometimes (even often) rather one of the first; // submitted tasks instead. This is because the worker will immediately steal; // a task once one is on the queue. Often, the worker's first request comes; // before the highest priority one was added. So when comparing to the; // suggested order, we have to move this first executed task to the front.; //; // Things can go even worse in slow systems; there may be several tasks that; // get executed before the queue managed to receive all tasks. We loop; // through all of these, until we hit the last submitted task. From that point; // on, we demand adherence to the expected order.; //; // In the worst case, this could mean that the tasks are received as 0, 1,; // 2, 3, 4, 5, 6, 7, 8, 9. This is still expected behavior, given the; // asynchronous nature of the system, although, of course, quite; // undesirable and would indicate a clear need to improve performance.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:1061,Usability,clear,clear,1061,"// Calculate the expected task execution order for a priority queue; //; // We would expect the first executed task to be the one with the highest; // priority, but it is sometimes (even often) rather one of the first; // submitted tasks instead. This is because the worker will immediately steal; // a task once one is on the queue. Often, the worker's first request comes; // before the highest priority one was added. So when comparing to the; // suggested order, we have to move this first executed task to the front.; //; // Things can go even worse in slow systems; there may be several tasks that; // get executed before the queue managed to receive all tasks. We loop; // through all of these, until we hit the last submitted task. From that point; // on, we demand adherence to the expected order.; //; // In the worst case, this could mean that the tasks are received as 0, 1,; // 2, 3, 4, 5, 6, 7, 8, 9. This is still expected behavior, given the; // asynchronous nature of the system, although, of course, quite; // undesirable and would indicate a clear need to improve performance.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:9,Testability,test,test,9,"/// This test makes sure the program doesn't break when the user; /// forgets to set the priority for a Job.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:63,Testability,test,test,63,"// one worker to keep it light, it's really irrelevant in this test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:94,Testability,test,test,94,"// It should just have run successfully at this point, no specific results to check.; // This test exists because an empty task_priority_ for a job would cause a segfault; // if we didn't handle it (as we didn't in some previous version).",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:18,Performance,queue,queueType,18,"/// Test changing queueType after a Queue has already been built; this should not be allowed.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:36,Performance,Queue,Queue,36,"/// Test changing queueType after a Queue has already been built; this should not be allowed.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:4,Testability,Test,Test,4,"/// Test changing queueType after a Queue has already been built; this should not be allowed.",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:63,Testability,test,test,63,"// one worker to keep it light, it's really irrelevant in this test",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_Queue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_worker.cxx:81,Testability,TEST,TEST,81,"// TODO: implement something along these lines (the following is pseudocode); // TEST(worker, loop); //{; // do_fork();; // if (on_master()) {; // wait();; // terminate_worker();; // } else if (on_worker()) {; // worker_loop();; // }; //}",MatchSource.CODE_COMMENT,roofit/multiprocess/test/test_worker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_worker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/utils.h:65,Integrability,depend,depend,65,"// create gaussians and also the observables and parameters they depend on",MatchSource.CODE_COMMENT,roofit/multiprocess/test/utils.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/utils.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:2,Performance,load,load,2,"//load in a new dataset and re-calculate the PDF; //return 0 if successful",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:25,Availability,avail,available,25,"// The Roo2DKeys options available are:; // a = select an adaptive bandwidth [default]; // n = select a normal bandwidth; // m = mirror kernel contributions at edges [fold gaussians back into the x,y plane]; // d = print debug statements [useful for development only; default is off]; // v = print verbose debug statements [useful for development only; default is off]; // vv = print ludicrously verbose debug statements [useful for development only; default is off]",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:58,Energy Efficiency,adapt,adaptive,58,"// The Roo2DKeys options available are:; // a = select an adaptive bandwidth [default]; // n = select a normal bandwidth; // m = mirror kernel contributions at edges [fold gaussians back into the x,y plane]; // d = print debug statements [useful for development only; default is off]; // v = print verbose debug statements [useful for development only; default is off]; // vv = print ludicrously verbose debug statements [useful for development only; default is off]",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:58,Modifiability,adapt,adaptive,58,"// The Roo2DKeys options available are:; // a = select an adaptive bandwidth [default]; // n = select a normal bandwidth; // m = mirror kernel contributions at edges [fold gaussians back into the x,y plane]; // d = print debug statements [useful for development only; default is off]; // v = print verbose debug statements [useful for development only; default is off]; // vv = print ludicrously verbose debug statements [useful for development only; default is off]",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:289,Energy Efficiency,adapt,adaptive,289,"// Set the value of a scale factor to modify the bandwidth by. The default value for this is unity.; // Modification of 'normal' bandwidths is useful when the data are not 'normally distributed',; // otherwise one expects little departure from that behavior. Note that both the normal and adaptive; // bandwidth selections are modified by this factor. Useful for systematic studies.; // ***********; // *IMPORTANT* The kernel is proportional to 1/widthScaleFactor.; // ***********",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:289,Modifiability,adapt,adaptive,289,"// Set the value of a scale factor to modify the bandwidth by. The default value for this is unity.; // Modification of 'normal' bandwidths is useful when the data are not 'normally distributed',; // otherwise one expects little departure from that behavior. Note that both the normal and adaptive; // bandwidth selections are modified by this factor. Useful for systematic studies.; // ***********; // *IMPORTANT* The kernel is proportional to 1/widthScaleFactor.; // ***********",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:68,Energy Efficiency,adapt,adaptive,68,"// choose the kernel bandwidth to use. The default is 0; // 0 = use adaptive kernel estimator (uses local population to vary with of kernels); // 1 = use trivial kernel estimator (uses all data and sigma to estimate uniform kernel bandwidth)",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:68,Modifiability,adapt,adaptive,68,"// choose the kernel bandwidth to use. The default is 0; // 0 = use adaptive kernel estimator (uses local population to vary with of kernels); // 1 = use trivial kernel estimator (uses all data and sigma to estimate uniform kernel bandwidth)",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h:184,Performance,perform,perform,184,"// save PDF to a file as a TH2F *, TTree * or both; // this is so that you only need to compute the PDF once and; // are free to use the much faster Roo2DHistPdf class in order; // to perform fits/do toy studies etc.",MatchSource.CODE_COMMENT,roofit/roofit/inc/Roo2DKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/Roo2DKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooBlindTools.h:38,Integrability,Interface,Interface,38,"// ---------------------; // -- Class Interface --; // ---------------------",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooBlindTools.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooBlindTools.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCBShape.h:3,Performance,Optimiz,Optimized,3,"// Optimized accept/reject generator support",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCBShape.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCBShape.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:36,Integrability,message,message,36,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:20,Safety,avoid,avoid,20,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:513,Availability,ERROR,ERROR,513,"// Custom streamer for function pointer reference object. When writing,; // the function pointer is substituted by its registered name. When function; // is unregistered name 'UNKNOWN' is written and a warning is issues. When; // reading back, the embedded name is converted back to a function pointer; // using the mapping service. When name UNKNOWN is encountered a warning is; // issues and a dummy null function is substituted. When the registered function; // name can not be mapped to a function pointer an ERROR is issued and a pointer; // to the dummy null function is substituted",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:36,Integrability,message,message,36,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:20,Safety,avoid,avoid,20,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction1Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction1Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h:36,Integrability,message,message,36,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction2Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h:20,Safety,avoid,avoid,20,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction2Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h:513,Availability,ERROR,ERROR,513,"// Custom streamer for function pointer reference object. When writing,; // the function pointer is substituted by its registered name. When function; // is unregistered name 'UNKNOWN' is written and a warning is issues. When; // reading back, the embedded name is converted back to a function pointer; // using the mapping service. When name UNKNOWN is encountered a warning is; // issues and a dummy null function is substituted. When the registered function; // name can not be mapped to a function pointer an ERROR is issued and a pointer; // to the dummy null function is substituted",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction2Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction2Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction2Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction2Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:36,Integrability,message,message,36,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:20,Safety,avoid,avoid,20,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:513,Availability,ERROR,ERROR,513,"// Custom streamer for function pointer reference object. When writing,; // the function pointer is substituted by its registered name. When function; // is unregistered name 'UNKNOWN' is written and a warning is issues. When; // reading back, the embedded name is converted back to a function pointer; // using the mapping service. When name UNKNOWN is encountered a warning is; // issues and a dummy null function is substituted. When the registered function; // name can not be mapped to a function pointer an ERROR is issued and a pointer; // to the dummy null function is substituted",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:36,Integrability,message,message,36,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:20,Safety,avoid,avoid,20,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction3Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction3Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h:36,Integrability,message,message,36,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction4Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h:20,Safety,avoid,avoid,20,"// This union is to avoid a warning message:",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction4Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h:513,Availability,ERROR,ERROR,513,"// Custom streamer for function pointer reference object. When writing,; // the function pointer is substituted by its registered name. When function; // is unregistered name 'UNKNOWN' is written and a warning is issues. When; // reading back, the embedded name is converted back to a function pointer; // using the mapping service. When name UNKNOWN is encountered a warning is; // issues and a dummy null function is substituted. When the registered function; // name can not be mapped to a function pointer an ERROR is issued and a pointer; // to the dummy null function is substituted",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction4Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction4Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCFunction4Binding.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCFunction4Binding.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooChi2MCSModule.h:3,Energy Efficiency,Reduce,Reduced,3,"// Reduced Chi^2 w.r.t data",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooChi2MCSModule.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooChi2MCSModule.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCrystalBall.h:3,Performance,Optimiz,Optimized,3,"// Optimized accept/reject generator support",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooCrystalBall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooCrystalBall.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooExponential.h:14,Modifiability,variab,variable,14,"/// Get the x variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooExponential.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooExponential.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooGaussian.h:14,Modifiability,variab,variable,14,"/// Get the x variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooGaussian.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooGaussian.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooIntegralMorph.h:31,Performance,cache,cached,31,"// If true, both (x,alpha) are cached",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooIntegralMorph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooIntegralMorph.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooIntegralMorph.h:17,Performance,cache,cache,17,"// Current morph cache element in use",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooIntegralMorph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooIntegralMorph.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooJohnson.h:70,Safety,detect,detection,70,"// NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooJohnson.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooJohnson.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooKeysPdf.h:18,Modifiability,variab,variable,18,"// cached info on variable",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooKeysPdf.h:3,Performance,cache,cached,3,"// cached info on variable",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLagrangianMorphFunc.h:1934,Security,access,accessed,1934,"arina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * Copyright (c) 2000-2007, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); *****************************************************************************/; ////////////////////////////////////////////////////////////////////////////////////////////////; //; // RooLagrangianMorphFunc; //; // The RooLagrangianMorphFunc is a type of RooAbsReal that allows to morph; // different input EFT samples to some arbitrary output EFT; // sample, as long as the desired set of output parameters lie; // within the realm spanned by the input samples. More; // specifically, it expects as an input a TFile (or TDirectory); // with the following layout:; //; // TDirectory; // |-sample1; // | |-param_card // TH1 EFT parameter values of sample1; // | | histogram1 // TH1 of some physics distribution; // | |-subfolder1 // a subfolder (optional); // | | |-histogram2 // TH1 of some physics distribution; // | | |-....; // |-sample2; // | |-param_card // TH1 of EFT parameter values of sample2; // | | histogram1 // TH1 of some physics distribution; // | |-subfolder1 // same folder structure as before; // | | |-histogram2 // TH1 of some physics distribution; // | | |-....; // |-sampleN; // The RooLagrangianMorphFunc operates on this structure, extracts data; // and meta-data and produces a morphing result as a RooRealSumFunc; // consisting of the input histograms with appropriate prefactors.; //; // The histograms to be morphed can be accessed via their paths in; // the respective sample, e.g. using; // ""histogram""; // or ""subfolder1/histogram1""; // or ""some/deep/path/to/some/subfolder/histname""; //; ////////////////////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLagrangianMorphFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLagrangianMorphFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLagrangianMorphFunc.h:8,Performance,cache,cache,8,"//! The cache manager",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLagrangianMorphFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLagrangianMorphFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLegacyExpPoly.h:14,Modifiability,variab,variable,14,"/// Get the x variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLegacyExpPoly.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLegacyExpPoly.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h:141,Testability,Log,Lognormal,141,/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/,MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLognormal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h:14,Modifiability,variab,variable,14,"/// Get the x variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLognormal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h:9,Modifiability,variab,variable,9,"///< the variable",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLognormal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h:3,Testability,log,log-normal,3,"// log-normal PDF",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooLognormal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h:8,Performance,cache,cache,8,"//! The cache manager",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h:3,Performance,Cache,Cache,3,"// Cache needs to be able to clear _norm pointer",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h:29,Usability,clear,clear,29,"// Cache needs to be able to clear _norm pointer",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFunc.h:8,Performance,cache,cache,8,"//! The cache manager",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorphFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFunc.h:3,Performance,Cache,Cache,3,"// Cache needs to be able to clear _norm pointer",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorphFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFunc.h:29,Usability,clear,clear,29,"// Cache needs to be able to clear _norm pointer",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorphFunc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFunc.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFuncND.h:541,Integrability,wrap,wrapper,541,"/// Setting flag makes this RooMomentMorphFuncND instance behave like the; /// former RooMomentMorphND class, with the the only difference being the; /// base class. If you want to create a pdf object that behaves exactly like; /// the old RooMomentMorphND, you can do it as follows:; ///; /// ```C++; /// RooMomentMorphFuncND func{<c'tor args you previously passed to RooMomentMorphFunc>};; ///; /// func.setPdfMode(); // change behavior to be exactly like the former RooMomentMorphND; ///; /// // Pass the selfNormalized=true` flag to the wrapper because the; /// RooMomentMorphFuncND already normalizes itself in pdf mode.; /// RooWrapperPdf pdf{""pdf_name"", ""pdf_name"", func, /*selfNormalized=*/true};; /// ```",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorphFuncND.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFuncND.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFuncND.h:16,Performance,cache,cache,16,"///<! Transient cache manager",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorphFuncND.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFuncND.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFuncND.h:16,Performance,cache,cache,16,"///<! Transient cache manager",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooMomentMorphFuncND.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorphFuncND.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h:18,Modifiability,variab,variable,18,"// cached info on variable",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNDKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h:3,Performance,cache,cached,3,"// cached info on variable",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNDKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h:15,Energy Efficiency,adapt,adaptive,15,"// Weights for adaptive kernels",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNDKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h:15,Modifiability,adapt,adaptive,15,"// Weights for adaptive kernels",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNDKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h:3,Performance,Cache,Cache,3,"// Cache for x values",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNDKeysPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNDKeysPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNovosibirsk.h:70,Integrability,depend,dependent,70,"// Your constructor needs a name and title and then a list of the; // dependent variables and parameters used by this PDF. Use an; // underscore in the variable names to distinguish them from your; // own local versions.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNovosibirsk.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNovosibirsk.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNovosibirsk.h:80,Modifiability,variab,variables,80,"// Your constructor needs a name and title and then a list of the; // dependent variables and parameters used by this PDF. Use an; // underscore in the variable names to distinguish them from your; // own local versions.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNovosibirsk.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNovosibirsk.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNovosibirsk.h:152,Modifiability,variab,variable,152,"// Your constructor needs a name and title and then a list of the; // dependent variables and parameters used by this PDF. Use an; // underscore in the variable names to distinguish them from your; // own local versions.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooNovosibirsk.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooNovosibirsk.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPoisson.h:108,Usability,Simpl,Simple,108,/*****************************************************************************; * Project: RooFit *; * *; * Simple Poisson PDF; * author: Kyle Cranmer <cranmer@cern.ch>; * *; *****************************************************************************/,MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPoisson.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPoisson.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPoisson.h:14,Modifiability,variab,variable,14,"/// Get the x variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPoisson.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPoisson.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPolynomial.h:14,Modifiability,variab,variable,14,"/// Get the x variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPolynomial.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPolynomial.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPolynomial.h:91,Energy Efficiency,reduce,reducer,91,"// If this polynomial has no terms it's a uniform distribution, and a uniform; // pdf is a reducer node because it doesn't depend on the observables.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPolynomial.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPolynomial.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPolynomial.h:123,Integrability,depend,depend,123,"// If this polynomial has no terms it's a uniform distribution, and a uniform; // pdf is a reducer node because it doesn't depend on the observables.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPolynomial.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPolynomial.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPowerSum.h:52,Modifiability,variab,variable,52,"/// Get the base of the exponentiated terms (aka. x variable).",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPowerSum.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPowerSum.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPowerSum.h:3,Energy Efficiency,Power,Power,3,"// Power PDF",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPowerSum.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPowerSum.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h:354,Integrability,wrap,wrapping,354,"/*; * Project: RooFit; * Authors:; * Robin Syring, CERN 2024; *; * Copyright (c) 2024, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooPyBind; \ingroup Roofit; \brief A RooFit class for wrapping python functions. This clsss provides the functionality to wrap arbitrary python functions in; RooFit.; */",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPyBind.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h:422,Integrability,wrap,wrap,422,"/*; * Project: RooFit; * Authors:; * Robin Syring, CERN 2024; *; * Copyright (c) 2024, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooPyBind; \ingroup Roofit; \brief A RooFit class for wrapping python functions. This clsss provides the functionality to wrap arbitrary python functions in; RooFit.; */",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPyBind.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h:7,Modifiability,variab,variables,7,"// all variables as list of variables",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPyBind.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h:28,Modifiability,variab,variables,28,"// all variables as list of variables",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooPyBind.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h:21,Modifiability,variab,variable,21,"///< The independent variable.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooSpline.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h:21,Testability,log,logarithmic,21,"///< Flag indicating logarithmic scaling of x values.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooSpline.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h:21,Testability,log,logarithmic,21,"///< Flag indicating logarithmic scaling of y values.",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooSpline.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooVoigtian.h:46,Availability,error,error,46,"/// Enable the fast evaluation of the complex error function using look-up; /// tables (default is the ""slow"" CERNlib algorithm).",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooVoigtian.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooVoigtian.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooVoigtian.h:47,Availability,error,error,47,"/// Disable the fast evaluation of the complex error function using look-up; /// tables (default is the ""slow"" CERNlib algorithm).",MatchSource.CODE_COMMENT,roofit/roofit/inc/RooVoigtian.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooVoigtian.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:158,Availability,error,error,158,"////////////////////////////////////////////////////////////////////////////////; /// Loads a new data set into the class instance.; /// Returns 1 in case of error, 0 otherwise.; /// \param[in] data; /// \param[in] options",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:86,Performance,Load,Loads,86,"////////////////////////////////////////////////////////////////////////////////; /// Loads a new data set into the class instance.; /// Returns 1 in case of error, 0 otherwise.; /// \param[in] data; /// \param[in] options",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:34,Modifiability,variab,variable,34,"//check that the data contain the variable we are interested in",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:9,Energy Efficiency,adapt,adaptive,9,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:31,Energy Efficiency,reduce,reduce,31,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:42,Integrability,depend,dependence,42,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:9,Modifiability,adapt,adaptive,9,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:157,Performance,load,loaded,157,"////////////////////////////////////////////////////////////////////////////////; /// Plots the PDF as a histogram and saves it to a file, so that it can be loaded in; /// as a Roo2DHist PDF in the future to save on calculation time.; /// \param[in] outputFile Name of the file where to store the PDF; /// \param[in] histName PDF histogram name",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:194,Energy Efficiency,reduce,reduced,194,"////////////////////////////////////////////////////////////////////////////////; /// Saves the data and calculated bandwidths to a file,; /// as a record of what produced the PDF and to give a reduced; /// data set in order to facilitate re-calculation in the future.; /// \param[in] outputFile Name of the file where to store the data; /// \param[in] name Name of the tree which will contain the data",MatchSource.CODE_COMMENT,roofit/roofit/src/Roo2DKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx:10,Deployability,integrat,integrate,10,"// We can integrate over m if power = 0.5",MatchSource.CODE_COMMENT,roofit/roofit/src/RooArgusBG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx:30,Energy Efficiency,power,power,30,"// We can integrate over m if power = 0.5",MatchSource.CODE_COMMENT,roofit/roofit/src/RooArgusBG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx:10,Integrability,integrat,integrate,10,"// We can integrate over m if power = 0.5",MatchSource.CODE_COMMENT,roofit/roofit/src/RooArgusBG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx:15,Deployability,integrat,integration,15,"// Formula for integration over m when p=0.5",MatchSource.CODE_COMMENT,roofit/roofit/src/RooArgusBG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx:15,Integrability,integrat,integration,15,"// Formula for integration over m when p=0.5",MatchSource.CODE_COMMENT,roofit/roofit/src/RooArgusBG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:240,Modifiability,variab,variable,240,"/// \brief Constructor for RooBCPEffDecay.; ///; /// Creates an instance of RooBCPEffDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] tag The CP state category.; /// \param[in] tau The decay time parameter.; /// \param[in] dm The mixing frequency parameter.; /// \param[in] avgMistag The average mistag rate parameter.; /// \param[in] CPeigenval The CP eigen value parameter.; /// \param[in] absLambda The absolute value of the complex lambda parameter.; /// \param[in] argLambda The argument of the complex lambda parameter.; /// \param[in] effRatio The B0/B0bar efficiency ratio.; /// \param[in] delMistag Delta mistag rate parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:6,Deployability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:6,Integrability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'tag'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'tag'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:106,Integrability,depend,dependent,106,"////////////////////////////////////////////////////////////////////////////////; /// Generates mix-state dependent.; /// \param[in] code",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:20,Integrability,depend,dependent,20,"// Generate delta-t dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPEffDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:240,Modifiability,variab,variable,240,"/// \brief Constructor for RooBCPGenDecay.; ///; /// Creates an instance of RooBCPGenDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] tag The CP state category.; /// \param[in] tau The decay time parameter.; /// \param[in] dm The mixing frequency parameter.; /// \param[in] avgMistag The average mistag rate parameter.; /// \param[in] avgC Coefficient of cos term.; /// \param[in] avgS Coefficient of sin term.; /// \param[in] delMistag Delta mistag rate parameter.; /// \param[in] mu Tag efficiency difference parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:6,Deployability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:6,Integrability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'tag'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'tag'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:105,Integrability,depend,dependent,105,"////////////////////////////////////////////////////////////////////////////////; /// Generate mix-state dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:20,Integrability,depend,dependent,20,"// Generate delta-t dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBCPGenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBDecay.cxx:230,Modifiability,variab,variable,230,"/// \brief Constructor for RooBDecay.; ///; /// Creates an instance of RooBDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] tau The average decay time parameter.; /// \param[in] dgamma The Delta Gamma parameter.; /// \param[in] f0 The Cosh Coefficient.; /// \param[in] f1 The Sinh Coefficient.; /// \param[in] f2 The Cos Coefficient.; /// \param[in] f3 The Sin Coefficient.; /// \param[in] dm The Delta Mass parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBernstein.cxx:390,Modifiability,extend,extend,390,"/*; * Project: RooFit; *; * Copyright (c) 2024, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooBernstein; \ingroup Roofit. Bernstein basis polynomials are positive-definite in the range [0,1].; In this implementation, we extend [0,1] to be the range of the parameter.; There are n+1 Bernstein basis polynomials of degree n:; \f[; B_{i,n}(x) = \begin{pmatrix}n \\\ i \end{pmatrix} x^i \cdot (1-x)^{n-i}; \f]; Thus, by providing n coefficients that are positive-definite, there; is a natural way to have well-behaved polynomial PDFs. For any n, the n+1 polynomials; 'form a partition of unity', i.e., they sum to one for all values of x.; They can be used as a basis to span the space of polynomials with degree n or less:; \f[; PDF(x, c_0, ..., c_n) = \mathcal{N} \cdot \sum_{i=0}^{n} c_i \cdot B_{i,n}(x).; \f]; By giving n+1 coefficients in the constructor, this class constructs the n+1; polynomials of degree n, and sums them to form an element of the space of polynomials; of degree n. \f$ \mathcal{N} \f$ is a normalisation constant that takes care of the; cases where the \f$ c_i \f$ are not all equal to one. See also; http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBernstein.cxx:109,Integrability,depend,depends,109,"/// Force use of a given normalisation range.; /// Needed for functions or PDFs (e.g. RooAddPdf) whose shape depends on the choice of normalisation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:236,Modifiability,variab,variable,236,"/// \brief Constructor for RooBMixDecay.; ///; /// Creates an instance of RooBMixDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] mixState The mixing state category.; /// \param[in] tagFlav The flavour of tagged B0 category.; /// \param[in] tau The mixing life time parameter.; /// \param[in] dm The mixing frequency parameter.; /// \param[in] mistag The mistag rate parameter.; /// \param[in] delMistag The delta mistag rate parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:6,Deployability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:6,Integrability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'mixState' and 'tagFlav'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'mixState' and 'tagFlav'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'mixState'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'mixState'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'tagFlav'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'tagFlav'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:105,Integrability,depend,dependent,105,"////////////////////////////////////////////////////////////////////////////////; /// Generate mix-state dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:20,Integrability,depend,dependent,20,"// Generate delta-t dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBMixDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx:241,Modifiability,variab,variable,241,"////////////////////////////////////////////////////////////////////////////////; /// Construct a Bukin PDF.; /// \param name The name of the PDF for RooFit's bookkeeping.; /// \param title The title for e.g. plotting it.; /// \param _x The variable.; /// \param _Xp The peak position.; /// \param _sigp The peak width as FWHM divided by 2*sqrt(2*log(2))=2.35; /// \param _xi Peak asymmetry. Use values around 0.; /// \param _rho1 Left tail. Use slightly negative starting values.; /// \param _rho2 Right tail. Use slightly positive starting values.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBukinPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx:347,Testability,log,log,347,"////////////////////////////////////////////////////////////////////////////////; /// Construct a Bukin PDF.; /// \param name The name of the PDF for RooFit's bookkeeping.; /// \param title The title for e.g. plotting it.; /// \param _x The variable.; /// \param _Xp The peak position.; /// \param _sigp The peak width as FWHM divided by 2*sqrt(2*log(2))=2.35; /// \param _xi Peak asymmetry. Use values around 0.; /// \param _rho1 Left tail. Use slightly negative starting values.; /// \param _rho2 Right tail. Use slightly positive starting values.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBukinPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx:40,Integrability,depend,dependent,40,"// The two addresses refer to our first dependent variable and; // parameter, respectively, as declared in the rdl file",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBukinPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx:50,Modifiability,variab,variable,50,"// The two addresses refer to our first dependent variable and; // parameter, respectively, as declared in the rdl file",MatchSource.CODE_COMMENT,roofit/roofit/src/RooBukinPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCBShape.cxx:77,Modifiability,variab,variable,77,"// The maximum value for given (m0,alpha,n,sigma); // is 1./ Integral in the variable range",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCBShape.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCBShape.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChebychev.cxx:32,Modifiability,variab,variable,32,"// first bring the range of the variable _x to the normalised range [-1, 1]; // calculate sum_k c_k T_k(x) where x is given in the normalised range,; // c_0 = 1, and the higher coefficients are given in _coefList",MatchSource.CODE_COMMENT,roofit/roofit/src/RooChebychev.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChebychev.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChebychev.cxx:32,Modifiability,variab,variable,32,"// first bring the range of the variable _x to the normalised range [-1, 1]; // calculate sum_k c_k T_k(x) where x is given in the normalised range,; // c_0 = 1, and the higher coefficients are given in _coefList",MatchSource.CODE_COMMENT,roofit/roofit/src/RooChebychev.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChebychev.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx:922,Energy Efficiency,reduce,reduced,922,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooChi2MCSModule; \ingroup Roofit. RooChi2MCSModule is an add-on module to RooMCStudy that; calculates the chi-squared of fitted p.d.f with respect to a binned; version of the data. For each fit the chi-squared, the reduced chi-squared; the number of degrees of freedom and the probability of the chi-squared; is store in the summary dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooChi2MCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx:13,Modifiability,variab,variable,13,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofit/src/RooChi2MCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx:34,Testability,log,log,34,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofit/src/RooChi2MCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChiSquarePdf.cxx:112,Availability,avail,available,112,"////////////////////////////////////////////////////////////////////////////////; /// No analytical calculation available (yet) of integrals over subranges",MatchSource.CODE_COMMENT,roofit/roofit/src/RooChiSquarePdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChiSquarePdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:1010,Energy Efficiency,reduce,reduce,1010,"/*****************************************************************************; * Project: RooFit *; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; // Authors of this class:; // T. Skwarnicki:; // - modify RooCBShape to Asymmetrical Double-Sided CB; // Michael Wilkinson; // - add to RooFit source; // Jonas Rembser, CERN 02/2021:; // - merging RooDSCBShape with RooSDSCBShape to RooCrystalBall; // - implement possibility to have asymmetrical Gaussian core; // - complete rewrite of evaluation and integral code to reduce code; // duplication; /** \class RooCrystalBall; \ingroup Roofit. PDF implementing the generalized Asymmetrical Double-Sided Crystall Ball line shape.; \f[; f(m;m_0,\sigma,\alpha_L,n_L,\alpha_R,n_R) =; \begin{cases}; A_L \cdot (B_L - \frac{m - m_0}{\sigma_L})^{-n_L}, & \mbox{for }\frac{m - m_0}{\sigma_L} < -\alpha_L \\; \exp \left( - \frac{1}{2} \cdot \left[ \frac{m - m_0}{\sigma_L} \right]^2 \right), & \mbox{for }\frac{m - m_0}{\sigma_L} \leq 0 \\; \exp \left( - \frac{1}{2} \cdot \left[ \frac{m - m_0}{\sigma_R} \right]^2 \right), & \mbox{for }\frac{m - m_0}{\sigma_R} \leq \alpha_R \\; A_R \cdot (B_R + \frac{m - m_0}{\sigma_R})^{-n_R}, & \mbox{otherwise}, \\; \end{cases}; \f]; times some normalization factor,; where; \f[; \begin{align}; A_i &= \left(\frac{n_i}{\left| \alpha_i \right|}\right)^{n_i} \cdot \exp\left(- \frac {\left| \alpha_i \right|^2}{2}\right) \\; B_i &= \frac{n_i}{\left| \alpha_i \right|} - \left| \alpha_i \right| \\; \end{align}; \f]; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:967,Modifiability,rewrite,rewrite,967,"/*****************************************************************************; * Project: RooFit *; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; // Authors of this class:; // T. Skwarnicki:; // - modify RooCBShape to Asymmetrical Double-Sided CB; // Michael Wilkinson; // - add to RooFit source; // Jonas Rembser, CERN 02/2021:; // - merging RooDSCBShape with RooSDSCBShape to RooCrystalBall; // - implement possibility to have asymmetrical Gaussian core; // - complete rewrite of evaluation and integral code to reduce code; // duplication; /** \class RooCrystalBall; \ingroup Roofit. PDF implementing the generalized Asymmetrical Double-Sided Crystall Ball line shape.; \f[; f(m;m_0,\sigma,\alpha_L,n_L,\alpha_R,n_R) =; \begin{cases}; A_L \cdot (B_L - \frac{m - m_0}{\sigma_L})^{-n_L}, & \mbox{for }\frac{m - m_0}{\sigma_L} < -\alpha_L \\; \exp \left( - \frac{1}{2} \cdot \left[ \frac{m - m_0}{\sigma_L} \right]^2 \right), & \mbox{for }\frac{m - m_0}{\sigma_L} \leq 0 \\; \exp \left( - \frac{1}{2} \cdot \left[ \frac{m - m_0}{\sigma_R} \right]^2 \right), & \mbox{for }\frac{m - m_0}{\sigma_R} \leq \alpha_R \\; A_R \cdot (B_R + \frac{m - m_0}{\sigma_R})^{-n_R}, & \mbox{otherwise}, \\; \end{cases}; \f]; times some normalization factor,; where; \f[; \begin{align}; A_i &= \left(\frac{n_i}{\left| \alpha_i \right|}\right)^{n_i} \cdot \exp\left(- \frac {\left| \alpha_i \right|^2}{2}\right) \\; B_i &= \frac{n_i}{\left| \alpha_i \right|} - \left| \alpha_i \right| \\; \end{align}; \f]; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:600,Energy Efficiency,power,power,600,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:693,Energy Efficiency,power,power-law,693,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:768,Energy Efficiency,power,power,768,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:862,Energy Efficiency,power,power-law,862,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:312,Modifiability,variab,variable,312,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:508,Energy Efficiency,power,power,508,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:601,Energy Efficiency,power,power-law,601,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:676,Energy Efficiency,power,power,676,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:770,Energy Efficiency,power,power-law,770,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:316,Modifiability,variab,variable,316,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:563,Energy Efficiency,power,power,563,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and only a tail on; /// one side (just like `RooCBShape`) or two symmetric tails (like `RooSDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alpha Location of transition to a power law, in standard deviations away from the mean.; /// \param n Exponent of power-law tail.; /// \param doubleSided Whether the tail is only on one side or on both sides",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:643,Energy Efficiency,power,power-law,643,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and only a tail on; /// one side (just like `RooCBShape`) or two symmetric tails (like `RooSDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alpha Location of transition to a power law, in standard deviations away from the mean.; /// \param n Exponent of power-law tail.; /// \param doubleSided Whether the tail is only on one side or on both sides",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:372,Modifiability,variab,variable,372,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and only a tail on; /// one side (just like `RooCBShape`) or two symmetric tails (like `RooSDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alpha Location of transition to a power law, in standard deviations away from the mean.; /// \param n Exponent of power-law tail.; /// \param doubleSided Whether the tail is only on one side or on both sides",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:73,Modifiability,variab,variable,73,"// The maximum value for given (m0,alpha,n,sigma) is 1./ Integral in the variable range; // For the crystal ball, the maximum is 1.0 in the current implementation,; // but it's maybe better to keep this general in case the implementation changes.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDecay.cxx:231,Modifiability,variab,variable,231,"////////////////////////////////////////////////////////////////////////////////; /// Create a new RooDecay.; /// \param[in] name Name of this object.; /// \param[in] title Title (for *e.g.* plotting); /// \param[in] t Convolution variable (*e.g.* time).; /// \param[in] tau Decay constant.; /// \param[in] model Resolution model for the convolution.; /// \param[in] type One of the decays types `SingleSided, Flipped, DoubleSided`",MatchSource.CODE_COMMENT,roofit/roofit/src/RooDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDecay.cxx:20,Integrability,depend,dependent,20,"// Generate delta-t dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx:1215,Deployability,integrat,integrator,1215,"// switch (code) {; // case 1: {; // double min = dm.min(rangeName);; // double max = dm.max(rangeName);; // if (max <= dm0); // return 0;; // else if (min < dm0); // min = dm0;; //; // bool doNumerical = false;; // if (A != 0); // doNumerical = true;; // else if (B < 0) {; // // If b<0, pdf can be negative at large dm, the integral should; // // only up to where pdf hits zero. Better solution should be; // // solve the zero and use it as max.; // // Here we check this whether pdf(max) < 0. If true, let numerical; // // integral take care of. ( kind of ugly!); // if (1 - exp(-(max - dm0) / C) + B * (max / dm0 - 1) < 0); // doNumerical = true;; // }; // if (!doNumerical) {; // return (max - min) + C * exp(dm0 / C) * (exp(-max / C) - exp(-min / C)) +; // B * (0.5 * (max * max - min * min) / dm0 - (max - min));; // } else {; // // In principle the integral for a!=0 can be done analytically.; // // It involves incomplete Gamma function, TMath::Gamma(a+1,m/c),; // // which is not defined for a < -1. And the whole expression is; // // not stable for m/c >> 1.; // // Do numerical integral; // RooArgSet vset(dm.arg(),""vset"");; // std::unique_ptr<RooAbsFunc> func{bindVars(vset)};; // RooRombergIntegrator integrator(*func,min,max);; // return integrator.integral();; // }; // }; // }",MatchSource.CODE_COMMENT,roofit/roofit/src/RooDstD0BG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx:1253,Deployability,integrat,integrator,1253,"// switch (code) {; // case 1: {; // double min = dm.min(rangeName);; // double max = dm.max(rangeName);; // if (max <= dm0); // return 0;; // else if (min < dm0); // min = dm0;; //; // bool doNumerical = false;; // if (A != 0); // doNumerical = true;; // else if (B < 0) {; // // If b<0, pdf can be negative at large dm, the integral should; // // only up to where pdf hits zero. Better solution should be; // // solve the zero and use it as max.; // // Here we check this whether pdf(max) < 0. If true, let numerical; // // integral take care of. ( kind of ugly!); // if (1 - exp(-(max - dm0) / C) + B * (max / dm0 - 1) < 0); // doNumerical = true;; // }; // if (!doNumerical) {; // return (max - min) + C * exp(dm0 / C) * (exp(-max / C) - exp(-min / C)) +; // B * (0.5 * (max * max - min * min) / dm0 - (max - min));; // } else {; // // In principle the integral for a!=0 can be done analytically.; // // It involves incomplete Gamma function, TMath::Gamma(a+1,m/c),; // // which is not defined for a < -1. And the whole expression is; // // not stable for m/c >> 1.; // // Do numerical integral; // RooArgSet vset(dm.arg(),""vset"");; // std::unique_ptr<RooAbsFunc> func{bindVars(vset)};; // RooRombergIntegrator integrator(*func,min,max);; // return integrator.integral();; // }; // }; // }",MatchSource.CODE_COMMENT,roofit/roofit/src/RooDstD0BG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx:1215,Integrability,integrat,integrator,1215,"// switch (code) {; // case 1: {; // double min = dm.min(rangeName);; // double max = dm.max(rangeName);; // if (max <= dm0); // return 0;; // else if (min < dm0); // min = dm0;; //; // bool doNumerical = false;; // if (A != 0); // doNumerical = true;; // else if (B < 0) {; // // If b<0, pdf can be negative at large dm, the integral should; // // only up to where pdf hits zero. Better solution should be; // // solve the zero and use it as max.; // // Here we check this whether pdf(max) < 0. If true, let numerical; // // integral take care of. ( kind of ugly!); // if (1 - exp(-(max - dm0) / C) + B * (max / dm0 - 1) < 0); // doNumerical = true;; // }; // if (!doNumerical) {; // return (max - min) + C * exp(dm0 / C) * (exp(-max / C) - exp(-min / C)) +; // B * (0.5 * (max * max - min * min) / dm0 - (max - min));; // } else {; // // In principle the integral for a!=0 can be done analytically.; // // It involves incomplete Gamma function, TMath::Gamma(a+1,m/c),; // // which is not defined for a < -1. And the whole expression is; // // not stable for m/c >> 1.; // // Do numerical integral; // RooArgSet vset(dm.arg(),""vset"");; // std::unique_ptr<RooAbsFunc> func{bindVars(vset)};; // RooRombergIntegrator integrator(*func,min,max);; // return integrator.integral();; // }; // }; // }",MatchSource.CODE_COMMENT,roofit/roofit/src/RooDstD0BG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx:1253,Integrability,integrat,integrator,1253,"// switch (code) {; // case 1: {; // double min = dm.min(rangeName);; // double max = dm.max(rangeName);; // if (max <= dm0); // return 0;; // else if (min < dm0); // min = dm0;; //; // bool doNumerical = false;; // if (A != 0); // doNumerical = true;; // else if (B < 0) {; // // If b<0, pdf can be negative at large dm, the integral should; // // only up to where pdf hits zero. Better solution should be; // // solve the zero and use it as max.; // // Here we check this whether pdf(max) < 0. If true, let numerical; // // integral take care of. ( kind of ugly!); // if (1 - exp(-(max - dm0) / C) + B * (max / dm0 - 1) < 0); // doNumerical = true;; // }; // if (!doNumerical) {; // return (max - min) + C * exp(dm0 / C) * (exp(-max / C) - exp(-min / C)) +; // B * (0.5 * (max * max - min * min) / dm0 - (max - min));; // } else {; // // In principle the integral for a!=0 can be done analytically.; // // It involves incomplete Gamma function, TMath::Gamma(a+1,m/c),; // // which is not defined for a < -1. And the whole expression is; // // not stable for m/c >> 1.; // // Do numerical integral; // RooArgSet vset(dm.arg(),""vset"");; // std::unique_ptr<RooAbsFunc> func{bindVars(vset)};; // RooRombergIntegrator integrator(*func,min,max);; // return integrator.integral();; // }; // }; // }",MatchSource.CODE_COMMENT,roofit/roofit/src/RooDstD0BG.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDstD0BG.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooExponential.cxx:903,Integrability,depend,depends,903,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExponential; \ingroup Roofit. Exponential PDF. It computes; \f[; \mathrm{RooExponential}(x, c) = \mathcal{N} \cdot \exp(c\cdot x),; \f]; where \f$ \mathcal{N} \f$ is a normalisation constant that depends on the; range and values of the arguments.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooExponential.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooExponential.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctor1DBinding.cxx:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctor1DBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctor1DBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctor1DBinding.cxx:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctor1DBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctor1DBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1342,Deployability,integrat,integrated,1342,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1342,Integrability,integrat,integrated,1342,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:601,Modifiability,variab,variables,601,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:643,Modifiability,variab,variables,643,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1193,Modifiability,variab,variables,1193,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1235,Modifiability,variab,variables,1235,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:522,Usability,usab,usable,522,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1106,Usability,usab,usable,1106,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:300,Modifiability,variab,variables,300,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit function that makes `ftor` usable in RooFit.; /// \param name Name of the object.; /// \param title Title (e.g. for plotting); /// \param ftor Functor instance to be evaluated.; /// \param v RooFit variables to be passed to the function.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:129,Usability,usab,usable,129,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit function that makes `ftor` usable in RooFit.; /// \param name Name of the object.; /// \param title Title (e.g. for plotting); /// \param ftor Functor instance to be evaluated.; /// \param v RooFit variables to be passed to the function.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:47,Modifiability,variab,variables,47,"// Check that function dimension and number of variables match",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:319,Modifiability,variab,variables,319,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit PDF that makes `ftor` usable as a PDF in RooFit.; /// \param name Name of the object.; /// \param title Title (e.g. for plotting); /// \param ftor Functor instance to be evaluated and normalised.; /// \param v RooFit variables to be passed to the function.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:124,Usability,usab,usable,124,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit PDF that makes `ftor` usable as a PDF in RooFit.; /// \param name Name of the object.; /// \param title Title (e.g. for plotting); /// \param ftor Functor instance to be evaluated and normalised.; /// \param v RooFit variables to be passed to the function.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:47,Modifiability,variab,variables,47,"// Check that function dimension and number of variables match",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:63,Modifiability,variab,variable,63,"// Return value of embedded function using value of referenced variable x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooFunctorBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:1065,Modifiability,parameteriz,parameterization,1065,"/*****************************************************************************; * Project: RooFit *; * *; * Simple Gamma distribution; * authors: Stefan A. Schmitz, Gregory Schott; * *; *****************************************************************************/; /** \class RooGamma; \ingroup Roofit. Implementation of the Gamma PDF for RooFit/RooStats.; \f[; f(x) = \frac{(x-\mu)^{\gamma-1} \cdot \exp^{(-(x-mu) / \beta}}{\Gamma(\gamma) \cdot \beta^{\gamma}}; \f]; defined for \f$ x \geq 0 \f$ if \f$ \mu = 0 \f$. Notes from Kyle Cranmer:. Wikipedia and several sources refer to the Gamma distribution as. \f[; G(\mu,\alpha,\beta) = \beta^\alpha \mu^{(\alpha-1)} \frac{e^{(-\beta \mu)}}{\Gamma(\alpha)}; \f]. Below is the correspondence:. | Wikipedia | This Implementation |; |-----------------|--------------------------|; | \f$ \alpha \f$ | \f$ \gamma \f$ |; | \f$ \beta \f$ | \f$ \frac{1}{\beta} \f$ |; | \f$ \mu \f$ | x |; | 0 | \f$ \mu \f$ |. Note, that for a model Pois(N|mu), a uniform prior on mu, and a measurement N; the posterior is in the Wikipedia parameterization Gamma(mu, alpha=N+1, beta=1); thus for this implementation it is:. `RooGamma(_x=mu,_gamma=N+1,_beta=1,_mu=0)`. Also note, that in this case it is equivalent to; RooPoison(N,mu) and treating the function as a PDF in mu.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:108,Usability,Simpl,Simple,108,"/*****************************************************************************; * Project: RooFit *; * *; * Simple Gamma distribution; * authors: Stefan A. Schmitz, Gregory Schott; * *; *****************************************************************************/; /** \class RooGamma; \ingroup Roofit. Implementation of the Gamma PDF for RooFit/RooStats.; \f[; f(x) = \frac{(x-\mu)^{\gamma-1} \cdot \exp^{(-(x-mu) / \beta}}{\Gamma(\gamma) \cdot \beta^{\gamma}}; \f]; defined for \f$ x \geq 0 \f$ if \f$ \mu = 0 \f$. Notes from Kyle Cranmer:. Wikipedia and several sources refer to the Gamma distribution as. \f[; G(\mu,\alpha,\beta) = \beta^\alpha \mu^{(\alpha-1)} \frac{e^{(-\beta \mu)}}{\Gamma(\alpha)}; \f]. Below is the correspondence:. | Wikipedia | This Implementation |; |-----------------|--------------------------|; | \f$ \alpha \f$ | \f$ \gamma \f$ |; | \f$ \beta \f$ | \f$ \frac{1}{\beta} \f$ |; | \f$ \mu \f$ | x |; | 0 | \f$ \mu \f$ |. Note, that for a model Pois(N|mu), a uniform prior on mu, and a measurement N; the posterior is in the Wikipedia parameterization Gamma(mu, alpha=N+1, beta=1); thus for this implementation it is:. `RooGamma(_x=mu,_gamma=N+1,_beta=1,_mu=0)`. Also note, that in this case it is equivalent to; RooPoison(N,mu) and treating the function as a PDF in mu.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:96,Energy Efficiency,adapt,adapted,96,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:331,Integrability,depend,depends,331,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:96,Modifiability,adapt,adapted,96,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:204,Modifiability,Variab,Variables,204,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:169,Usability,Simpl,Simple,169,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGamma.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:910,Modifiability,inherit,inheriting,910,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooGaussModel; \ingroup Roofit. Class RooGaussModel implements a RooResolutionModel that models a Gaussian; distribution. Object of class RooGaussModel can be used; for analytical convolutions with classes inheriting from RooAbsAnaConvPdf; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:233,Energy Efficiency,adapt,adapt,233,"// We have an implementation also for CUDA right now only for the most used; // basis type, which is expBasis. If the need to support other basis types; // arises, they can be implemented following this example. Remember to also; // adapt RooGaussModel::canComputeBatchWithCuda().",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:233,Modifiability,adapt,adapt,233,"// We have an implementation also for CUDA right now only for the most used; // basis type, which is expBasis. If the need to support other basis types; // arises, they can be implemented following this example. Remember to also; // adapt RooGaussModel::canComputeBatchWithCuda().",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,Deployability,integrat,integration,14,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,Integrability,integrat,integration,14,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,Deployability,integrat,integration,14,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,Integrability,integrat,integration,14,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGaussModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:962,Modifiability,inherit,inheriting,962,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooGExpModel; \ingroup Roofit. The RooGExpModel is a RooResolutionModel implementation that models; a resolution function that is the convolution of a Gaussian with; a one-sided exponential. Such objects can be used; for analytical convolutions with classes inheriting from RooAbsAnaConvPdf.; \f[; \mathrm{GExp} = \exp \left( -\frac{1}{2} \left(\frac{x-\mu}{\sigma} \right)^2 \right)^2; \otimes \exp\left( -\frac{x}{\tau} \right); \f]. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:126,Availability,error,error,126,"////////////////////////////////////////////////////////////////////////////////; /// Approximation of the log of the complex error function",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:107,Testability,log,log,107,"////////////////////////////////////////////////////////////////////////////////; /// Approximation of the log of the complex error function",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:99,Safety,avoid,avoid,99,"// If exponent argument is very large, bring canceling RooMath::erfc() term inside exponent; // to avoid floating point over/underflows of intermediate calculations",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:14,Deployability,integrat,integration,14,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:14,Integrability,integrat,integration,14,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:14,Deployability,integrat,integration,14,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:14,Integrability,integrat,integration,14,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,roofit/roofit/src/RooGExpModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:733,Deployability,continuous,continuous,733,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooIntegralMorph; \ingroup Roofit. Class RooIntegralMorph is an implementation of the histogram interpolation; technique described by Alex Read in 'NIM A 425 (1999) 357-369 'Linear interpolation of histograms'; for continuous functions rather than histograms. The interpolation method, in short,; works as follows. - Given a p.d.f f1(x) with c.d.f F1(x) and p.d.f f2(x) with c.d.f F2(x). - One finds takes a value 'y' of both c.d.fs and determines the corresponding x; values x(1,2) at which F(1,2)(x)==y. - The value of the interpolated p.d.f fbar(x) is then calculated as; fbar(alpha*x1+(1-alpha)*x2) = f1(x1)*f2(x2) / ( alpha*f2(x2) + (1-alpha)*f1(x1) ) ;. From a technical point of view class RooIntegralMorph is a p.d.f that takes; two input p.d.fs f1(x,p) an f2(x,q) and an interpolation parameter to; make a p.d.f fbar(x,p,q,alpha). The shapes f1 and f2 are always taken; to be end the end-points of the parameter alpha, regardless of what; the those numeric values are. Since the value of fbar(x) cannot be easily calculated for a given value; of x, class RooIntegralMorph is an implementation of RooAbsCachedPdf and; calculates the shape of the interpolated p.d.f. fbar(x) for all values; of x for a given value of alpha,p,q and caches these values in a histogram; (as implemented by RooAbsCachedPdf). The binning granularity of the cache; can be controlled by the binning named ""cache"" on the RooRealVar representing; the observable x. The fbar sampling algorithm is based ",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:4052,Deployability,continuous,continuous,4052,"g (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y (or the distance of y to 1.0); by a factor of sqrt(10) iteratively up to the point where the corresponding; x value no longer changes significantly. For p.d.f.s with very flat tails; such as Gaussians some part of the tail may be lost due to limitations; in numeric precision in the CDF inversion step. An effect related to the above limitation in numeric precision should; be anticipated when floating the alpha parameter in a fit. If a p.d.f; with such flat tails is fitted, it is likely that the dataset contains; events in the flat tail region. If the alpha parameter is varied, the; likelihood contribution from such events may exhibit discontinuities; in alpha, causing discontinuities in the summed likelihood as well; that will cause convergence problems in MINUIT. To mitigate this effect; one can use the setCacheAlpha() method to instruct RooIntegralMorph; to construct a two-dimensional cache for its output values in both; x and alpha. If linear interpolation is requested on the resulting; output histogram, the resulting interpolation of the p.d.f in the; alpha dimension will smooth out the discontinuities in the tail regions; result in a continuous likelihood distribution that can be fitted.; An added advantage of the cacheAlpha option is that if parameters; p,q of f1,f2 are fixed, the cached values in RooIntegralMorph are; valid for the entire fit session and do not need to be recalculated; for each change in alpha, which may result an considerable increase; in calculation speed. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:1756,Performance,cache,caches,1756,"r than histograms. The interpolation method, in short,; works as follows. - Given a p.d.f f1(x) with c.d.f F1(x) and p.d.f f2(x) with c.d.f F2(x). - One finds takes a value 'y' of both c.d.fs and determines the corresponding x; values x(1,2) at which F(1,2)(x)==y. - The value of the interpolated p.d.f fbar(x) is then calculated as; fbar(alpha*x1+(1-alpha)*x2) = f1(x1)*f2(x2) / ( alpha*f2(x2) + (1-alpha)*f1(x1) ) ;. From a technical point of view class RooIntegralMorph is a p.d.f that takes; two input p.d.fs f1(x,p) an f2(x,q) and an interpolation parameter to; make a p.d.f fbar(x,p,q,alpha). The shapes f1 and f2 are always taken; to be end the end-points of the parameter alpha, regardless of what; the those numeric values are. Since the value of fbar(x) cannot be easily calculated for a given value; of x, class RooIntegralMorph is an implementation of RooAbsCachedPdf and; calculates the shape of the interpolated p.d.f. fbar(x) for all values; of x for a given value of alpha,p,q and caches these values in a histogram; (as implemented by RooAbsCachedPdf). The binning granularity of the cache; can be controlled by the binning named ""cache"" on the RooRealVar representing; the observable x. The fbar sampling algorithm is based on a recursive division; mechanism with a built-in precision cutoff: First an initial sampling in; 64 equally spaced bins is made. Then the value of fbar is calculated in; the center of each gap. If the calculated value deviates too much from; the value obtained by linear interpolation from the edge bins, gap; is recursively divided. This strategy makes it possible to define a very; fine cache sampling (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampli",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:1860,Performance,cache,cache,1860,"d.f F2(x). - One finds takes a value 'y' of both c.d.fs and determines the corresponding x; values x(1,2) at which F(1,2)(x)==y. - The value of the interpolated p.d.f fbar(x) is then calculated as; fbar(alpha*x1+(1-alpha)*x2) = f1(x1)*f2(x2) / ( alpha*f2(x2) + (1-alpha)*f1(x1) ) ;. From a technical point of view class RooIntegralMorph is a p.d.f that takes; two input p.d.fs f1(x,p) an f2(x,q) and an interpolation parameter to; make a p.d.f fbar(x,p,q,alpha). The shapes f1 and f2 are always taken; to be end the end-points of the parameter alpha, regardless of what; the those numeric values are. Since the value of fbar(x) cannot be easily calculated for a given value; of x, class RooIntegralMorph is an implementation of RooAbsCachedPdf and; calculates the shape of the interpolated p.d.f. fbar(x) for all values; of x for a given value of alpha,p,q and caches these values in a histogram; (as implemented by RooAbsCachedPdf). The binning granularity of the cache; can be controlled by the binning named ""cache"" on the RooRealVar representing; the observable x. The fbar sampling algorithm is based on a recursive division; mechanism with a built-in precision cutoff: First an initial sampling in; 64 equally spaced bins is made. Then the value of fbar is calculated in; the center of each gap. If the calculated value deviates too much from; the value obtained by linear interpolation from the edge bins, gap; is recursively divided. This strategy makes it possible to define a very; fine cache sampling (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y ",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:1907,Performance,cache,cache,1907,"d.f F2(x). - One finds takes a value 'y' of both c.d.fs and determines the corresponding x; values x(1,2) at which F(1,2)(x)==y. - The value of the interpolated p.d.f fbar(x) is then calculated as; fbar(alpha*x1+(1-alpha)*x2) = f1(x1)*f2(x2) / ( alpha*f2(x2) + (1-alpha)*f1(x1) ) ;. From a technical point of view class RooIntegralMorph is a p.d.f that takes; two input p.d.fs f1(x,p) an f2(x,q) and an interpolation parameter to; make a p.d.f fbar(x,p,q,alpha). The shapes f1 and f2 are always taken; to be end the end-points of the parameter alpha, regardless of what; the those numeric values are. Since the value of fbar(x) cannot be easily calculated for a given value; of x, class RooIntegralMorph is an implementation of RooAbsCachedPdf and; calculates the shape of the interpolated p.d.f. fbar(x) for all values; of x for a given value of alpha,p,q and caches these values in a histogram; (as implemented by RooAbsCachedPdf). The binning granularity of the cache; can be controlled by the binning named ""cache"" on the RooRealVar representing; the observable x. The fbar sampling algorithm is based on a recursive division; mechanism with a built-in precision cutoff: First an initial sampling in; 64 equally spaced bins is made. Then the value of fbar is calculated in; the center of each gap. If the calculated value deviates too much from; the value obtained by linear interpolation from the edge bins, gap; is recursively divided. This strategy makes it possible to define a very; fine cache sampling (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y ",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:2392,Performance,cache,cache,2392,"nd f2 are always taken; to be end the end-points of the parameter alpha, regardless of what; the those numeric values are. Since the value of fbar(x) cannot be easily calculated for a given value; of x, class RooIntegralMorph is an implementation of RooAbsCachedPdf and; calculates the shape of the interpolated p.d.f. fbar(x) for all values; of x for a given value of alpha,p,q and caches these values in a histogram; (as implemented by RooAbsCachedPdf). The binning granularity of the cache; can be controlled by the binning named ""cache"" on the RooRealVar representing; the observable x. The fbar sampling algorithm is based on a recursive division; mechanism with a built-in precision cutoff: First an initial sampling in; 64 equally spaced bins is made. Then the value of fbar is calculated in; the center of each gap. If the calculated value deviates too much from; the value obtained by linear interpolation from the edge bins, gap; is recursively divided. This strategy makes it possible to define a very; fine cache sampling (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y (or the distance of y to 1.0); by a factor of sqrt(10) iteratively up to the point where the corresponding; x value no longer changes significantly. For p.d.f.s with very flat tails; such as Gaussians some part of the tail may be lost due to limitations; in numeric precision in the CDF inversion step. An effect related to the above limitation in numeric precision should; be anticipated when floating the alpha parameter in a fit. If a p.d.f; with such flat tails is fitted, ",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:3795,Performance,cache,cache,3795,"g (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y (or the distance of y to 1.0); by a factor of sqrt(10) iteratively up to the point where the corresponding; x value no longer changes significantly. For p.d.f.s with very flat tails; such as Gaussians some part of the tail may be lost due to limitations; in numeric precision in the CDF inversion step. An effect related to the above limitation in numeric precision should; be anticipated when floating the alpha parameter in a fit. If a p.d.f; with such flat tails is fitted, it is likely that the dataset contains; events in the flat tail region. If the alpha parameter is varied, the; likelihood contribution from such events may exhibit discontinuities; in alpha, causing discontinuities in the summed likelihood as well; that will cause convergence problems in MINUIT. To mitigate this effect; one can use the setCacheAlpha() method to instruct RooIntegralMorph; to construct a two-dimensional cache for its output values in both; x and alpha. If linear interpolation is requested on the resulting; output histogram, the resulting interpolation of the p.d.f in the; alpha dimension will smooth out the discontinuities in the tail regions; result in a continuous likelihood distribution that can be fitted.; An added advantage of the cacheAlpha option is that if parameters; p,q of f1,f2 are fixed, the cached values in RooIntegralMorph are; valid for the entire fit session and do not need to be recalculated; for each change in alpha, which may result an considerable increase; in calculation speed. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:4134,Performance,cache,cacheAlpha,4134,"g (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y (or the distance of y to 1.0); by a factor of sqrt(10) iteratively up to the point where the corresponding; x value no longer changes significantly. For p.d.f.s with very flat tails; such as Gaussians some part of the tail may be lost due to limitations; in numeric precision in the CDF inversion step. An effect related to the above limitation in numeric precision should; be anticipated when floating the alpha parameter in a fit. If a p.d.f; with such flat tails is fitted, it is likely that the dataset contains; events in the flat tail region. If the alpha parameter is varied, the; likelihood contribution from such events may exhibit discontinuities; in alpha, causing discontinuities in the summed likelihood as well; that will cause convergence problems in MINUIT. To mitigate this effect; one can use the setCacheAlpha() method to instruct RooIntegralMorph; to construct a two-dimensional cache for its output values in both; x and alpha. If linear interpolation is requested on the resulting; output histogram, the resulting interpolation of the p.d.f in the; alpha dimension will smooth out the discontinuities in the tail regions; result in a continuous likelihood distribution that can be fitted.; An added advantage of the cacheAlpha option is that if parameters; p,q of f1,f2 are fixed, the cached values in RooIntegralMorph are; valid for the entire fit session and do not need to be recalculated; for each change in alpha, which may result an considerable increase; in calculation speed. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:4203,Performance,cache,cached,4203,"g (e.g. 1000 or 10000) bins without incurring a; corresponding CPU penalty. Note on numeric stability of the algorithm. Since the algorithm relies; on a numeric inversion of cumulative distributions functions, some precision; may be lost at the 'edges' of the same (i.e. at regions in x where the; c.d.f. value is close to zero or one). The general sampling strategy is; to start with 64 equally spaces samples in the range y=(0.01-0.99).; Then the y ranges are pushed outward by reducing y (or the distance of y to 1.0); by a factor of sqrt(10) iteratively up to the point where the corresponding; x value no longer changes significantly. For p.d.f.s with very flat tails; such as Gaussians some part of the tail may be lost due to limitations; in numeric precision in the CDF inversion step. An effect related to the above limitation in numeric precision should; be anticipated when floating the alpha parameter in a fit. If a p.d.f; with such flat tails is fitted, it is likely that the dataset contains; events in the flat tail region. If the alpha parameter is varied, the; likelihood contribution from such events may exhibit discontinuities; in alpha, causing discontinuities in the summed likelihood as well; that will cause convergence problems in MINUIT. To mitigate this effect; one can use the setCacheAlpha() method to instruct RooIntegralMorph; to construct a two-dimensional cache for its output values in both; x and alpha. If linear interpolation is requested on the resulting; output histogram, the resulting interpolation of the p.d.f in the; alpha dimension will smooth out the discontinuities in the tail regions; result in a continuous likelihood distribution that can be fitted.; An added advantage of the cacheAlpha option is that if parameters; p,q of f1,f2 are fixed, the cached values in RooIntegralMorph are; valid for the entire fit session and do not need to be recalculated; for each change in alpha, which may result an considerable increase; in calculation speed. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:278,Performance,cache,cache,278,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with observables x, pdf shapes pdf1 and pdf2 which represent; /// the shapes at the end points of the interpolation parameter alpha; /// If doCacheAlpha is true, a two-dimensional cache is constructed in; /// both alpha and x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// Observable to be cached for given choice of normalization.; /// Returns the 'x' observable unless doCacheAlpha is set in which; /// case a set with both x and alpha",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:104,Performance,cache,cache,104,"////////////////////////////////////////////////////////////////////////////////; /// Parameters of the cache. Returns parameters of both pdf1 and pdf2; /// and parameter cache, in case doCacheAlpha is not set.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:171,Performance,cache,cache,171,"////////////////////////////////////////////////////////////////////////////////; /// Parameters of the cache. Returns parameters of both pdf1 and pdf2; /// and parameter cache, in case doCacheAlpha is not set.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:117,Performance,cache,cache,117,"////////////////////////////////////////////////////////////////////////////////; /// Return base name component for cache components in this case; /// a string encoding the names of both end point p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:95,Performance,cache,cache,95,"////////////////////////////////////////////////////////////////////////////////; /// Fill the cache with the interpolated shape.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:6,Performance,cache,cacheAlpha,6,"// If cacheAlpha is true employ slice iterator here to fill all slices",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:136,Performance,cache,cache,136,"////////////////////////////////////////////////////////////////////////////////; /// Return all RooAbsArg components contained in this cache",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:99,Performance,cache,cache,99,"////////////////////////////////////////////////////////////////////////////////; /// Construct of cache element, copy relevant input from RooIntegralMorph,; /// create the cdfs from the input p.d.fs and instantiate the root finders; /// on the cdfs to perform the inversion.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:253,Performance,perform,perform,253,"////////////////////////////////////////////////////////////////////////////////; /// Construct of cache element, copy relevant input from RooIntegralMorph,; /// create the cdfs from the input p.d.fs and instantiate the root finders; /// on the cdfs to perform the inversion.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:44,Performance,cache,cached,44,"// Mark in base class that normalization of cached pdf is invariant under pdf parameters",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:92,Performance,cache,cache,92,"// _yatX = 0 ;; // _calcX = 0 ;; // Must do this here too: fillCache() may not be called if cache contents is retrieved from EOcache",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:166,Performance,cache,cache,166,"////////////////////////////////////////////////////////////////////////////////; /// Calculate shape of p.d.f for x,alpha values; /// defined by dIter iterator over cache histogram",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:53,Performance,cache,cache,53,"// if (!_yatX) {; // _yatX = new double[_x->numBins(""cache"")+1] ;; // _calcX = new double[_x->numBins(""cache"")+1] ;; // }",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:103,Performance,cache,cache,103,"// if (!_yatX) {; // _yatX = new double[_x->numBins(""cache"")+1] ;; // _calcX = new double[_x->numBins(""cache"")+1] ;; // }",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:3,Performance,Perform,Perform,3,"// Perform initial scan of 100 points",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:10,Performance,optimiz,optimization,10,"// Little optimization here exploiting the fact that th cumulative; // distribution functions increase monotonically, so we already know that; // the next x-value must be higher than the last one as y is increasing. So; // we can use the previous x values as lower bounds.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce ymin by half an order of magnitude",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce ymin by half an order of magnitude",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:162,Performance,cache,cache,162,"////////////////////////////////////////////////////////////////////////////////; /// Indicate to the RooAbsCachedPdf base class that for the filling of the; /// cache the traversal of the x should be in the innermost loop, to minimize; /// recalculation of the one-dimensional internal cache for a fixed value of alpha",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:287,Performance,cache,cache,287,"////////////////////////////////////////////////////////////////////////////////; /// Indicate to the RooAbsCachedPdf base class that for the filling of the; /// cache the traversal of the x should be in the innermost loop, to minimize; /// recalculation of the one-dimensional internal cache for a fixed value of alpha",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:32,Availability,fault,faulting,32,"// Put x last to minimize cache faulting",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:26,Performance,cache,cache,26,"// Put x last to minimize cache faulting",MatchSource.CODE_COMMENT,roofit/roofit/src/RooIntegralMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:332,Deployability,integrat,integration,332,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:377,Deployability,integrat,integration,377,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:332,Integrability,integrat,integration,332,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:377,Integrability,integrat,integration,377,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:535,Usability,simpl,simple,535,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:19,Deployability,integrat,integrator,19,"// use a different integrator by default.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:19,Integrability,integrat,integrator,19,"// use a different integrator by default.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:239,Performance,cache,cache,239,"//Internally, we have to enlarge the range of fit parameters to make; //fits converge even if we are close to the limit of a parameter. Therefore, we clone the pdf and its; //observables here. If something happens to the external PDF, the cache is wiped,; //and we start to clone again.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJeffreysPrior.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx:824,Modifiability,variab,variable,824,"// Author: Stephan Hageboeck, CERN, May 2019; /*****************************************************************************; * Project: RooFit *; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooJohnson; \ingroup Roofit. Johnson's \f$ S_{U} \f$ distribution. This PDF results from transforming a normally distributed variable \f$ x \f$ to this form:; \f[; z = \gamma + \delta \sinh^{-1}\left( \frac{x - \mu}{\lambda} \right); \f]; The resulting PDF is; \f[; \mathrm{PDF}[\mathrm{Johnson}\ S_U] = \frac{\delta}{\lambda\sqrt{2\pi}}; \frac{1}{\sqrt{1 + \left( \frac{x-\mu}{\lambda} \right)^2}}; \;\exp\left[-\frac{1}{2} \left(\gamma + \delta \sinh^{-1}\left(\frac{x-\mu}{\lambda}\right) \right)^2\right].; \f]. It is often used to fit a mass difference for charm decays, and therefore the variable \f$ x \f$ is called; ""mass"" in the implementation. A mass threshold allows to set the PDF to zero to the left of the threshold. ###References:; Johnson, N. L. (1949). *Systems of Frequency Curves Generated by Methods of Translation*. Biometrika **36(1/2)**, 149–176. [doi:10.2307/2332539](https://doi.org/10.2307%2F2332539). \image html RooJohnson_plot.png. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx:1293,Modifiability,variab,variable,1293,"// Author: Stephan Hageboeck, CERN, May 2019; /*****************************************************************************; * Project: RooFit *; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooJohnson; \ingroup Roofit. Johnson's \f$ S_{U} \f$ distribution. This PDF results from transforming a normally distributed variable \f$ x \f$ to this form:; \f[; z = \gamma + \delta \sinh^{-1}\left( \frac{x - \mu}{\lambda} \right); \f]; The resulting PDF is; \f[; \mathrm{PDF}[\mathrm{Johnson}\ S_U] = \frac{\delta}{\lambda\sqrt{2\pi}}; \frac{1}{\sqrt{1 + \left( \frac{x-\mu}{\lambda} \right)^2}}; \;\exp\left[-\frac{1}{2} \left(\gamma + \delta \sinh^{-1}\left(\frac{x-\mu}{\lambda}\right) \right)^2\right].; \f]. It is often used to fit a mass difference for charm decays, and therefore the variable \f$ x \f$ is called; ""mass"" in the implementation. A mass threshold allows to set the PDF to zero to the left of the threshold. ###References:; Johnson, N. L. (1949). *Systems of Frequency Curves Generated by Methods of Translation*. Biometrika **36(1/2)**, 149–176. [doi:10.2307/2332539](https://doi.org/10.2307%2F2332539). \image html RooJohnson_plot.png. **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx:240,Modifiability,variab,variable,240,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new Johnson PDF.; ///; /// \param name Name that identifies the PDF in computations; /// \param title Title for plotting; /// \param mass The variable of the PDF. Often this is a mass.; /// \param mu Location parameter of the Gaussian component.; /// \param lambda Width parameter (>0) of the Gaussian component.; /// \param gamma Shape parameter that distorts distribution to left/right.; /// \param delta Shape parameter (>0) that determines strength of Gaussian-like component.; /// \param massThreshold Set PDF to zero below this threshold.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:1056,Energy Efficiency,adapt,adaptive,1056,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * GR, Gerhard Raven, UC San Diego, raven@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooKeysPdf; \ingroup Roofit. Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the pdf.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with low event density to promote smoothness. The details of the general algorithm; are described in the following paper:. Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:1112,Energy Efficiency,adapt,adaptively,1112,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * GR, Gerhard Raven, UC San Diego, raven@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooKeysPdf; \ingroup Roofit. Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the pdf.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with low event density to promote smoothness. The details of the general algorithm; are described in the following paper:. Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:1420,Energy Efficiency,Energy,Energy,1420,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * GR, Gerhard Raven, UC San Diego, raven@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooKeysPdf; \ingroup Roofit. Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the pdf.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with low event density to promote smoothness. The details of the general algorithm; are described in the following paper:. Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:1056,Modifiability,adapt,adaptive,1056,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * GR, Gerhard Raven, UC San Diego, raven@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooKeysPdf; \ingroup Roofit. Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the pdf.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with low event density to promote smoothness. The details of the general algorithm; are described in the following paper:. Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:1112,Modifiability,adapt,adaptively,1112,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * GR, Gerhard Raven, UC San Diego, raven@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooKeysPdf; \ingroup Roofit. Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the pdf.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with low event density to promote smoothness. The details of the general algorithm; are described in the following paper:. Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:86,Performance,cache,cache,86,"////////////////////////////////////////////////////////////////////////////////; /// cache stuff about x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:86,Performance,cache,cache,86,"////////////////////////////////////////////////////////////////////////////////; /// cache stuff about x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:3,Performance,cache,cache,3,"// cache stuff about x",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:88,Performance,perform,performing,88,"// cerr << ""got point below lower bound:""; // << double(_x) << "" < "" << _lo; // << "" -- performing linear extrapolation..."" << endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:88,Performance,perform,performing,88,"// cerr << ""got point above upper bound:""; // << double(_x) << "" > "" << _hi; // << "" -- performing linear extrapolation..."" << endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:14,Usability,simpl,simple,14,"// for now do simple linear interpolation.; // one day replace by splines...",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:93,Deployability,integrat,integration,93,"// this code is based on _lookupTable and uses linear interpolation, just as; // evaluate(); integration is done using the trapez rule",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:93,Integrability,integrat,integration,93,"// this code is based on _lookupTable and uses linear interpolation, just as; // evaluate(); integration is done using the trapez rule",MatchSource.CODE_COMMENT,roofit/roofit/src/RooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:967,Deployability,continuous,continuous,967,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:1363,Integrability,depend,depends,1363,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:999,Modifiability,coupling,coupling,999,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:1388,Modifiability,coupling,couplings,1388,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:41,Availability,error,error,41,"// coutE(Eval) << ""boost::numeric::ublas error: matrix is not invertible!""; // << std::endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:3,Security,sanitiz,sanitize,3,"// sanitize numeric problems",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:196,Deployability,update,update,196,"///////////////////////////////////////////////////////////////////////////////; /// Set up folder ownership over its children, and treat likewise any subfolders.; /// @param theFolder: folder to update. Assumed to be a valid pointer",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:300,Deployability,update,updates,300,"///////////////////////////////////////////////////////////////////////////////; /// Load a TFolder from a file while ensuring it owns its content.; /// This avoids memory leaks. Note that when fetching objects; /// from this folder, you need to clone them to prevent deletion.; /// Also recursively updates nested subfolders accordingly; /// @param inFile: Input file to read - assumed to be a valid pointer; /// @param folderName: Name of the folder to read from the file; /// @return a unique_ptr to the folder. Nullptr if not found.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:85,Performance,Load,Load,85,"///////////////////////////////////////////////////////////////////////////////; /// Load a TFolder from a file while ensuring it owns its content.; /// This avoids memory leaks. Note that when fetching objects; /// from this folder, you need to clone them to prevent deletion.; /// Also recursively updates nested subfolders accordingly; /// @param inFile: Input file to read - assumed to be a valid pointer; /// @param folderName: Name of the folder to read from the file; /// @return a unique_ptr to the folder. Nullptr if not found.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:158,Safety,avoid,avoids,158,"///////////////////////////////////////////////////////////////////////////////; /// Load a TFolder from a file while ensuring it owns its content.; /// This avoids memory leaks. Note that when fetching objects; /// from this folder, you need to clone them to prevent deletion.; /// Also recursively updates nested subfolders accordingly; /// @param inFile: Input file to read - assumed to be a valid pointer; /// @param folderName: Name of the folder to read from the file; /// @return a unique_ptr to the folder. Nullptr if not found.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:464,Availability,error,error,464,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:95,Performance,load,load,95,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:220,Performance,load,load,220,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:259,Performance,load,load,259,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:347,Performance,load,load,347,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:408,Performance,load,load,408,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:547,Performance,load,loaded,547,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:157,Safety,avoid,avoiding,157,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:15,Performance,load,loaded,15,"// replace the loaded object by a clone, as the loaded folder will delete the original; // can use a static_cast - confirmed validity by initial cast above.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:48,Performance,load,loaded,48,"// replace the loaded object by a clone, as the loaded folder will delete the original; // can use a static_cast - confirmed validity by initial cast above.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:121,Modifiability,coupling,coupling,121,"///////////////////////////////////////////////////////////////////////////////; /// extract the operators from a single coupling",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:122,Modifiability,coupling,couplings,122,"///////////////////////////////////////////////////////////////////////////////; /// extract the operators from a list of couplings",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:62,Modifiability,coupling,couplings,62,"// coutD(InputArguments) << ""extracting operators from; // ""<<couplings.size()<<"" couplings"" << std::endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:82,Modifiability,coupling,couplings,82,"// coutD(InputArguments) << ""extracting operators from; // ""<<couplings.size()<<"" couplings"" << std::endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:97,Modifiability,coupling,couplings,97,"///////////////////////////////////////////////////////////////////////////////; /// extract the couplings from a given set and copy them to a new one",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:127,Modifiability,coupling,couplings,127,"////////////////////////////////////////////////////////////////////////////////; /// build a vertex map based on vertices and couplings appearing",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:27,Modifiability,coupling,couplings,27,"// std::cout << ""Number of couplings "" << ncouplings << std::endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:56,Modifiability,coupling,coupling,56,"// even exponents are not interference terms; // if the coupling is part of a ""pairwise non-interfering group""",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:39,Modifiability,coupling,couplings,39,"// mark the term as zero if any of the couplings are zero",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:98,Performance,Cache,CacheElem,98,"// namespace; ///////////////////////////////////////////////////////////////////////////////; // CacheElem magic ////////////////////////////////////////////////////////////; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:215,Deployability,update,update,215,"//#ifndef USE_MULTIPRECISION_LC; //#pragma GCC diagnostic push; //#pragma GCC diagnostic ignored ""-Wunused-parameter""; //#endif; ////////////////////////////////////////////////////////////////////////////////; /// update sample weight (-?-)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:12,Availability,ERROR,ERROR,12,"//#else; // ERROR(""updating sample weights currently not possible without boost!"");; //#endif",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:90,Energy Efficiency,energy,energy,90,"////////////////////////////////////////////////////////////////////////////////; /// set energy scale of the EFT expansion",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:90,Energy Efficiency,energy,energy,90,"////////////////////////////////////////////////////////////////////////////////; /// get energy scale of the EFT expansion",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:132,Testability,test,test,132,"////////////////////////////////////////////////////////////////////////////////; /// randomize the parameters a bit; /// useful to test and debug fitting",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:123,Deployability,update,update,123,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the new physics objects and update the weights in the morphing; /// function.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:9,Deployability,update,update,9,"// then, update the weights in the morphing function",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:99,Performance,cache,cache,99,"////////////////////////////////////////////////////////////////////////////////; /// retrieve the cache object",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:103,Performance,cache,cache,103,"////////////////////////////////////////////////////////////////////////////////; /// return true if a cache object is present, false otherwise",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:117,Energy Efficiency,power,power,117,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given parameter; /// morphing power is provided as soon as any two samples provide different,; /// non-zero values for this parameter",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:170,Energy Efficiency,power,power,170,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given parameter; /// morphing power is provided as soon as any two samples provide different,; /// non-zero values for this parameter",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:117,Energy Efficiency,power,power,117,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given coupling; /// morphing power is provided as soon as any two samples provide; /// different, non-zero values for this coupling",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:169,Energy Efficiency,power,power,169,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given coupling; /// morphing power is provided as soon as any two samples provide; /// different, non-zero values for this coupling",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:146,Modifiability,coupling,coupling,146,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given coupling; /// morphing power is provided as soon as any two samples provide; /// different, non-zero values for this coupling",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:263,Modifiability,coupling,coupling,263,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given coupling; /// morphing power is provided as soon as any two samples provide; /// different, non-zero values for this coupling",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:101,Modifiability,coupling,couplings,101,"////////////////////////////////////////////////////////////////////////////////; /// get the set of couplings",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:104,Modifiability,coupling,couplings,104,"////////////////////////////////////////////////////////////////////////////////; /// retrieve a set of couplings (-?-)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:104,Modifiability,coupling,couplings,104,"////////////////////////////////////////////////////////////////////////////////; /// retrieve a set of couplings (-?-)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:12,Integrability,wrap,wrapper,12,"// create a wrapper on the roorealsumfunc",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:93,Modifiability,extend,extended,93,"////////////////////////////////////////////////////////////////////////////////; /// return extended mored capabilities",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:123,Modifiability,extend,extended,123,"////////////////////////////////////////////////////////////////////////////////; /// return expected number of events for extended likelihood calculation,; /// this is the sum of all coefficients",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:123,Modifiability,extend,extended,123,"////////////////////////////////////////////////////////////////////////////////; /// return expected number of events for extended likelihood calculation,; /// this is the sum of all coefficients",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:101,Modifiability,coupling,couplings,101,"////////////////////////////////////////////////////////////////////////////////; /// print a set of couplings",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:103,Deployability,integrat,integration,103,"////////////////////////////////////////////////////////////////////////////////; /// Force analytical integration for the given observable",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:103,Integrability,integrat,integration,103,"////////////////////////////////////////////////////////////////////////////////; /// Force analytical integration for the given observable",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:303,Availability,error,errors,303,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the condition of the coefficient matrix. If the condition number; /// is very large, then the matrix is ill-conditioned and is almost singular.; /// The computation of the inverse is prone to large numerical errors",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:24,Integrability,interface,interface,24,"// Register the factory interface",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:31,Integrability,interface,interface,31,"// Helper function for factory interface",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:3,Performance,Perform,Perform,3,"// Perform syntax check. Warn about any meta parameters other than the ones needed",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLagrangianMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLegacyExpPoly.cxx:113,Modifiability,variab,variable,113,"////////////////////////////////////////////////////////////////////////////////; /// Create a polynomial in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] lowestOrder [optional] Truncate the sum such that it skips the lower orders:; /// \f[; /// 1. + \sum_{i=0}^{\mathrm{coefList.size()}} a_{i} * x^{(i + \mathrm{lowestOrder})}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooLegacyExpPoly pol(""pol"", ""pol"", x, RooArgList(a, b), lowestOrder = 2); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = 1 * x^0 + (0 * x^{\ldots}) + a * x^2 + b * x^3.; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLegacyExpPoly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLegacyExpPoly.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLegacyExpPoly.cxx:235,Modifiability,variab,variable,235,"////////////////////////////////////////////////////////////////////////////////; /// Create a polynomial in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] lowestOrder [optional] Truncate the sum such that it skips the lower orders:; /// \f[; /// 1. + \sum_{i=0}^{\mathrm{coefList.size()}} a_{i} * x^{(i + \mathrm{lowestOrder})}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooLegacyExpPoly pol(""pol"", ""pol"", x, RooArgList(a, b), lowestOrder = 2); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = 1 * x^0 + (0 * x^{\ldots}) + a * x^2 + b * x^3.; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLegacyExpPoly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLegacyExpPoly.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:493,Modifiability,parameteriz,parameterization,493,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:677,Modifiability,parameteriz,parameterization,677,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:141,Testability,Log,Lognormal,141,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:344,Testability,Log,Lognormal,344,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:794,Testability,log,log,794,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:811,Testability,log,log,811,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:131,Modifiability,parameteriz,parameterization,131,"////////////////////////////////////////////////////////////////////////////////; /// ln(k)<1 would correspond to sigma < 0 in the parameterization; /// resulting by transforming a normal random variable in its; /// standard parameterization to a lognormal random variable; /// => treat ln(k) as -ln(k) for k<1",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:195,Modifiability,variab,variable,195,"////////////////////////////////////////////////////////////////////////////////; /// ln(k)<1 would correspond to sigma < 0 in the parameterization; /// resulting by transforming a normal random variable in its; /// standard parameterization to a lognormal random variable; /// => treat ln(k) as -ln(k) for k<1",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:225,Modifiability,parameteriz,parameterization,225,"////////////////////////////////////////////////////////////////////////////////; /// ln(k)<1 would correspond to sigma < 0 in the parameterization; /// resulting by transforming a normal random variable in its; /// standard parameterization to a lognormal random variable; /// => treat ln(k) as -ln(k) for k<1",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:264,Modifiability,variab,variable,264,"////////////////////////////////////////////////////////////////////////////////; /// ln(k)<1 would correspond to sigma < 0 in the parameterization; /// resulting by transforming a normal random variable in its; /// standard parameterization to a lognormal random variable; /// => treat ln(k) as -ln(k) for k<1",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:247,Testability,log,lognormal,247,"////////////////////////////////////////////////////////////////////////////////; /// ln(k)<1 would correspond to sigma < 0 in the parameterization; /// resulting by transforming a normal random variable in its; /// standard parameterization to a lognormal random variable; /// => treat ln(k) as -ln(k) for k<1",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:113,Testability,Log,Lognormal,113,"////////////////////////////////////////////////////////////////////////////////; /// Compute multiple values of Lognormal distribution.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooLognormal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:38,Integrability,depend,depend,38,"// slope and offset (to be set later, depend on m)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:69,Integrability,depend,depends,69,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:141,Performance,optimiz,optimizers,141,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:69,Integrability,depend,depends,69,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:141,Performance,optimiz,optimizers,141,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:19,Performance,cache,cache,19,"// Store it in the cache",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:16,Deployability,continuous,continuous,16,"// this gives a continuous differentiable transition between grid points.; // now fall through to Linear case",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorph.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:38,Integrability,depend,depend,38,"// slope and offset (to be set later, depend on m)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:69,Integrability,depend,depends,69,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:141,Performance,optimiz,optimizers,141,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:69,Integrability,depend,depends,69,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:141,Performance,optimiz,optimizers,141,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:19,Performance,cache,cache,19,"// Store it in the cache",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx:16,Deployability,continuous,continuous,16,"// this gives a continuous differentiable transition between grid points.; // now fall through to Linear case",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx:38,Integrability,depend,depend,38,"// slope and offset (to be set later, depend on nuisance parameters)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFuncND.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx:69,Integrability,depend,depends,69,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFuncND.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx:141,Performance,optimiz,optimizers,141,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFuncND.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx:69,Integrability,depend,depends,69,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFuncND.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx:141,Performance,optimiz,optimizers,141,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFuncND.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx:19,Performance,cache,cache,19,"// Store it in the cache",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMomentMorphFuncND.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorphFuncND.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMultiBinomial.cxx:1004,Integrability,depend,dependents,1004,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Author: *; * Tristan du Pree, Nikhef, Amsterdam, tdupree@nikhef.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooMultiBinomial; \ingroup Roofit. RooMultiBinomial is an efficiency function which makes all combinations of; efficiencies given as input different efficiency functions for different categories. Given a dataset with a category C that determines if a given; event is accepted (1) or rejected (0) for the efficiency to be measured,; this class evaluates as F if C is 'accept' and as (1-F) if; C is 'reject'. Values of F below 0 and above 1 are clipped.; F may have an arbitrary number of dependents and parameters. The combination only 'reject' can be chosen to be visible or not visible; (and hence this efficiency is then equal to zero).; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooMultiBinomial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMultiBinomial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:833,Energy Efficiency,adapt,adaptive,833,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:889,Energy Efficiency,adapt,adaptively,889,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:1197,Energy Efficiency,Energy,Energy,1197,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:833,Modifiability,adapt,adaptive,833,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:889,Modifiability,adapt,adaptively,889,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:1041,Testability,log,log,1041,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:223,Energy Efficiency,adapt,adaptive,223,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:836,Energy Efficiency,adapt,adaptive,836,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:876,Energy Efficiency,adapt,adaptive,876,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:918,Energy Efficiency,adapt,adaptive,918,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:223,Modifiability,adapt,adaptive,223,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:836,Modifiability,adapt,adaptive,836,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:876,Modifiability,adapt,adaptive,876,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:918,Modifiability,adapt,adaptive,918,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:19,Deployability,update,updates,19,"// check for value updates",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:19,Deployability,update,updates,19,"// check for value updates",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:56,Integrability,depend,depend,56,"// mirror dataset around dataset boundaries -- does not depend on event weights",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:30,Modifiability,variab,variable,30,"// store indices of events in variable boundaries and box shell.; //calculateShell(&_fullBoxInfo);; // calculate normalization needed in analyticalIntegral(); //calculatePreNorm(&_fullBoxInfo);; // lookup table for determining which events contribute to a certain coordinate",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:27,Energy Efficiency,adapt,adaptive,27,"// determine static and/or adaptive bandwidth",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:27,Modifiability,adapt,adaptive,27,"// determine static and/or adaptive bandwidth",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:94,Deployability,configurat,configuration,94,"////////////////////////////////////////////////////////////////////////////////; /// set the configuration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:94,Modifiability,config,configuration,94,"////////////////////////////////////////////////////////////////////////////////; /// set the configuration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:13,Energy Efficiency,adapt,adaptive,13,"// number of adaptive width iterations. Default is 1.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:13,Modifiability,adapt,adaptive,13,"// number of adaptive width iterations. Default is 1.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:129,Modifiability,variab,variables,129,"////////////////////////////////////////////////////////////////////////////////; /// copy the dataset and calculate some useful variables",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:3,Deployability,update,update,3,"// update sigmas (rho dependent)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:22,Integrability,depend,dependent,22,"// update sigmas (rho dependent)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:274,Deployability,configurat,configuration,274,"////////////////////////////////////////////////////////////////////////////////; /// determine mirror dataset.; /// mirror points are added around the physical boundaries of the dataset; /// Two steps:; /// 1. For each entry, determine if it should be mirrored (the mirror configuration).; /// 2. For each mirror configuration, make the mirror points.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:314,Deployability,configurat,configuration,314,"////////////////////////////////////////////////////////////////////////////////; /// determine mirror dataset.; /// mirror points are added around the physical boundaries of the dataset; /// Two steps:; /// 1. For each entry, determine if it should be mirrored (the mirror configuration).; /// 2. For each mirror configuration, make the mirror points.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:274,Modifiability,config,configuration,274,"////////////////////////////////////////////////////////////////////////////////; /// determine mirror dataset.; /// mirror points are added around the physical boundaries of the dataset; /// Two steps:; /// 1. For each entry, determine if it should be mirrored (the mirror configuration).; /// 2. For each mirror configuration, make the mirror points.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:314,Modifiability,config,configuration,314,"////////////////////////////////////////////////////////////////////////////////; /// determine mirror dataset.; /// mirror points are added around the physical boundaries of the dataset; /// Two steps:; /// 1. For each entry, determine if it should be mirrored (the mirror configuration).; /// 2. For each mirror configuration, make the mirror points.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:21,Deployability,configurat,configurations,21,"// create all mirror configurations for event i",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:21,Modifiability,config,configurations,21,"// create all mirror configurations for event i",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:43,Deployability,configurat,configuration,43,"// number of mirror points for this mirror configuration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:43,Modifiability,config,configuration,43,"// number of mirror points for this mirror configuration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:156,Modifiability,variab,variable,156,"////////////////////////////////////////////////////////////////////////////////; /// determine points in +/- nSigma shell around the box determined by the variable; /// ranges. These points are needed in the normalization, to determine probability; /// leakage in and out of the box.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:7,Energy Efficiency,adapt,adaptive,7,"// non-adaptive bandwidth; // (default, and needed to calculate adaptive bandwidth)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:64,Energy Efficiency,adapt,adaptive,64,"// non-adaptive bandwidth; // (default, and needed to calculate adaptive bandwidth)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:7,Modifiability,adapt,adaptive,7,"// non-adaptive bandwidth; // (default, and needed to calculate adaptive bandwidth)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:64,Modifiability,adapt,adaptive,64,"// non-adaptive bandwidth; // (default, and needed to calculate adaptive bandwidth)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:3,Energy Efficiency,adapt,adaptive,3,"// adaptive width",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:3,Modifiability,adapt,adaptive,3,"// adaptive width",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:22,Energy Efficiency,adapt,adaptive,22,"// cout << ""Number of adaptive iterations: "" << _nAdpt << endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:22,Modifiability,adapt,adaptive,22,"// cout << ""Number of adaptive iterations: "" << _nAdpt << endl;",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:52,Energy Efficiency,adapt,adaptive,52,"// cout << "" Cycle: "" << k << endl;; // if multiple adaptive iterations, need to swap weight sets",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:52,Modifiability,adapt,adaptive,52,"// cout << "" Cycle: "" << k << endl;; // if multiple adaptive iterations, need to swap weight sets",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:22,Deployability,update,updated,22,"// this is the latest updated weights set",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:3,Deployability,update,update,3,"// update internal rho parameters; // redetermine static and/or adaptive bandwidth",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:64,Energy Efficiency,adapt,adaptive,64,"// update internal rho parameters; // redetermine static and/or adaptive bandwidth",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:64,Modifiability,adapt,adaptive,64,"// update internal rho parameters; // redetermine static and/or adaptive bandwidth",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:42,Deployability,integrat,integrated,42,"// determine which observables need to be integrated over ...",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:42,Integrability,integrat,integrated,42,"// determine which observables need to be integrated over ...",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:35,Modifiability,variab,variable,35,"// calculate leakage in and out of variable range box",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:24,Modifiability,variab,variables,24,"// used for setting the variables.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNDKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:1808,Energy Efficiency,charge,charge,1808,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * AH, Andreas Hoecker, Orsay, hoecker@slac.stanford.edu *; * SL, Sandrine Laplace, Orsay, laplace@slac.stanford.edu *; * JS, Jan Stark, Paris, stark@slac.stanford.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California, *; * IN2P3. All rights reserved. *; * *; * History *; * Nov-2001 WV Created initial version *; * Dec-2001 SL mischarge correction, direct CPV *; * Jan-2002 AH built dedicated generator + code cleaning *; * Mar-2002 JS committed debugged version to CVS *; * Apr-2002 AH allow prompt (ie, non-Pdf) mischarge treatment *; * May-2002 JS Changed the set of CP parameters (mathematically equiv.) *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNonCPEigenDecay; \ingroup Roofit. Time-dependent RooAbsAnaConvPdf for CP violating decays; to Non-CP eigenstates (eg, \f$ B_0 \rightarrow \rho^\pm \pi^\mp\f$).; For a description of the physics model see the; BaBar Physics Book, section 6.5.2.3 .; The set of CP parameters used in this class is equivalent to; the one used in the Physics Book, but it is not exactly the; same. Starting from the set in the BaBar Book, in order to; get the parameters used here you have to change the sign of both; \f$a_c^+\f$ and \f$a_c^-\f$, and then substitute:; \f[; a_s^Q = S + Q \cdot \delta S \\; a_c^Q = C + Q \cdot \delta C; \f]; where Q denotes the charge of the \f$\rho\f$ meson.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:1206,Integrability,depend,dependent,1206,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * AH, Andreas Hoecker, Orsay, hoecker@slac.stanford.edu *; * SL, Sandrine Laplace, Orsay, laplace@slac.stanford.edu *; * JS, Jan Stark, Paris, stark@slac.stanford.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California, *; * IN2P3. All rights reserved. *; * *; * History *; * Nov-2001 WV Created initial version *; * Dec-2001 SL mischarge correction, direct CPV *; * Jan-2002 AH built dedicated generator + code cleaning *; * Mar-2002 JS committed debugged version to CVS *; * Apr-2002 AH allow prompt (ie, non-Pdf) mischarge treatment *; * May-2002 JS Changed the set of CP parameters (mathematically equiv.) *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNonCPEigenDecay; \ingroup Roofit. Time-dependent RooAbsAnaConvPdf for CP violating decays; to Non-CP eigenstates (eg, \f$ B_0 \rightarrow \rho^\pm \pi^\mp\f$).; For a description of the physics model see the; BaBar Physics Book, section 6.5.2.3 .; The set of CP parameters used in this class is equivalent to; the one used in the Physics Book, but it is not exactly the; same. Starting from the set in the BaBar Book, in order to; get the parameters used here you have to change the sign of both; \f$a_c^+\f$ and \f$a_c^-\f$, and then substitute:; \f[; a_s^Q = S + Q \cdot \delta S \\; a_c^Q = C + Q \cdot \delta C; \f]; where Q denotes the charge of the \f$\rho\f$ meson.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:193,Energy Efficiency,charge,charge,193,"////////////////////////////////////////////////////////////////////////////////; /// - B0 : _tag == -1; /// - B0bar : _tag == +1; /// - rho+ : _rhoQ == +1; /// - rho- : _rhoQ == -1; /// - the charge correction factor ""_correctQ"" serves to implement misidentified charges",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:264,Energy Efficiency,charge,charges,264,"////////////////////////////////////////////////////////////////////////////////; /// - B0 : _tag == -1; /// - B0bar : _tag == +1; /// - rho+ : _rhoQ == +1; /// - rho- : _rhoQ == -1; /// - the charge correction factor ""_correctQ"" serves to implement misidentified charges",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:24,Deployability,integrat,integration,24,"// advertise analytical integration; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:24,Integrability,integrat,integration,24,"// advertise analytical integration; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:114,Energy Efficiency,charge,charge,114,"////////////////////////////////////////////////////////////////////////////////; /// correct for the right/wrong charge...",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:6,Deployability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:6,Integrability,integrat,integration,6,"// No integration",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'tag'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'tag'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'rhoQ'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'rhoQ'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Deployability,Integrat,Integration,3,"// Integration over 'tag' and 'rhoQ'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Integrability,Integrat,Integration,3,"// Integration over 'tag' and 'rhoQ'",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:21,Energy Efficiency,charge,charge,21,"// for both: tag and charge",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:20,Integrability,depend,dependent,20,"// Generate delta-t dependent",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:46,Deployability,integrat,integrated,46,"// B flavor and rho charge (we do not use the integrated weights)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:20,Energy Efficiency,charge,charge,20,"// B flavor and rho charge (we do not use the integrated weights)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:46,Integrability,integrat,integrated,46,"// B flavor and rho charge (we do not use the integrated weights)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:12,Energy Efficiency,charge,charge,12,"// opposite charge?; // Int_t rhoQc = _rhoQ*int(_correctQ);",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:35,Security,secur,security,35,"// The 1.10 in the above line is a security feature to prevent crashes close to the limit at 1.00",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Safety,sanity check,sanity check,3,"// sanity check...",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNonCPEigenDecay.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:284,Deployability,Update,Updated,284,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * DB, Dieter Best, UC Irvine, best@slac.stanford.edu *; * HT, Hirohisa Tanaka SLAC tanaka@slac.stanford.edu *; * *; * Updated version with analytical integral *; * MP, Marko Petric, J. Stefan Institute, marko.petric@ijs.si *; * *; * Copyright (c) 2000-2013, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNovosibirsk; \ingroup Roofit. RooNovosibirsk implements the Novosibirsk function. Function taken from H. Ikeda et al. NIM A441 (2000), p. 401 (Belle Collaboration). **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:40,Integrability,depend,dependent,40,"// The two addresses refer to our first dependent variable and; // parameter, respectively, as declared in the rdl file",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:50,Modifiability,variab,variable,50,"// The two addresses refer to our first dependent variable and; // parameter, respectively, as declared in the rdl file",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:14,Testability,log,logarithm,14,"//Argument of logarithm negative. Real continuation -> function equals zero",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:8,Testability,Log,Log,8,"//Sqrt( Log(2) )",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:8,Testability,Log,Log,8,"//Sqrt( Log(4) )",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:2,Testability,Log,Log,2,"//Log(2)",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:11,Testability,Log,Log,11,"//Sqrt( pi/Log(2) )",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:16,Availability,error,error,16,"//Calculate the error function arguments",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:16,Availability,error,error,16,"//Calculate the error function arguments",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:14,Availability,error,error,14,"// Emit fatal error",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:28,Safety,avoid,avoid,28,"// Put dummy return here to avoid compiler warnings",MatchSource.CODE_COMMENT,roofit/roofit/src/RooNovosibirsk.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:1297,Integrability,depend,dependent,1297,"*; *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooParametricStepFunction; \ingroup Roofit. The Parametric Step Function PDF is a binned distribution whose parameters; are the heights of each bin. This PDF was first used in BaBar's B0->pi0pi0; paper BABAR Collaboration (B. Aubert et al.) Phys.Rev.Lett.91:241801,2003. This PDF may be used to describe oddly shaped distributions. It differs; from a RooKeysPdf or a RooHistPdf in that a RooParametricStepFunction; has free parameters. In particular, any statistical uncertainty in; sample used to model this PDF may be understood with these free parameters;; this is not possible with non-parametric PDFs. The RooParametricStepFunction has Nbins-1 free parameters. Note that; the limits of the dependent variable must match the low and hi bin limits. Here is an example showing how to use the RooParametricStepFunction to fit toy; data generated from a uniform distribution:. ~~~ {.cpp}; // Define some constant parameters; const int nBins = 10;; const double xMin = 0.0;; const double xMax = 10.0;; const double binWidth = (xMax - xMin) / nBins;; const std::size_t nEvents = 10000;. // Fill the bin boundaries; std::vector<double> binBoundaries(nBins + 1);. for(int i = 0; i <= nBins; ++i) {; binBoundaries[i] = i * binWidth;; }. // The RooParametricStepFunction needs a TArrayD; TArrayD binBoundariesTArr{int(binBoundaries.size()), binBoundaries.data()};. RooRealVar x{""x"", ""x"", xMin, xMax};. // There are nBins-1 free coefficient parameters, whose sum must be <= 1.0.; // We all set them to 0.1, such that the resulting step function pdf is; // initially uniform.; RooArgList coefList;; for(int i = 0; i < nBins - 1; ++i) {; auto name = std::string(""coef_"") + std::to_string(i);; coefList.addOwned(std::m",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParametricStepFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:1307,Modifiability,variab,variable,1307,"*; *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooParametricStepFunction; \ingroup Roofit. The Parametric Step Function PDF is a binned distribution whose parameters; are the heights of each bin. This PDF was first used in BaBar's B0->pi0pi0; paper BABAR Collaboration (B. Aubert et al.) Phys.Rev.Lett.91:241801,2003. This PDF may be used to describe oddly shaped distributions. It differs; from a RooKeysPdf or a RooHistPdf in that a RooParametricStepFunction; has free parameters. In particular, any statistical uncertainty in; sample used to model this PDF may be understood with these free parameters;; this is not possible with non-parametric PDFs. The RooParametricStepFunction has Nbins-1 free parameters. Note that; the limits of the dependent variable must match the low and hi bin limits. Here is an example showing how to use the RooParametricStepFunction to fit toy; data generated from a uniform distribution:. ~~~ {.cpp}; // Define some constant parameters; const int nBins = 10;; const double xMin = 0.0;; const double xMax = 10.0;; const double binWidth = (xMax - xMin) / nBins;; const std::size_t nEvents = 10000;. // Fill the bin boundaries; std::vector<double> binBoundaries(nBins + 1);. for(int i = 0; i <= nBins; ++i) {; binBoundaries[i] = i * binWidth;; }. // The RooParametricStepFunction needs a TArrayD; TArrayD binBoundariesTArr{int(binBoundaries.size()), binBoundaries.data()};. RooRealVar x{""x"", ""x"", xMin, xMax};. // There are nBins-1 free coefficient parameters, whose sum must be <= 1.0.; // We all set them to 0.1, such that the resulting step function pdf is; // initially uniform.; RooArgList coefList;; for(int i = 0; i < nBins - 1; ++i) {; auto name = std::string(""coef_"") + std::to_string(i);; coefList.addOwned(std::m",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParametricStepFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:20,Deployability,integrat,integration,20,"// Bin fully in the integration domain",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParametricStepFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:20,Integrability,integrat,integration,20,"// Bin fully in the integration domain",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParametricStepFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:22,Deployability,integrat,integrate,22,"// Simplest scenario, integrate over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:22,Integrability,integrat,integrate,22,"// Simplest scenario, integrate over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:41,Integrability,depend,dependents,41,"// Simplest scenario, integrate over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:3,Usability,Simpl,Simplest,3,"// Simplest scenario, integrate over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:107,Deployability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:194,Deployability,integrat,integrators,194,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:107,Integrability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:194,Integrability,integrat,integrators,194,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:33,Deployability,integrat,integration,33,"// Supports only the scenario of integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:33,Integrability,integrat,integration,33,"// Supports only the scenario of integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:54,Integrability,depend,dependents,54,"// Supports only the scenario of integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:283,Deployability,integrat,integration,283,"// The logic for summing over the histogram is borrowed from RooHistPdf with some differences:; //; // - a lambda function is used to inject the parameters for bin scaling into the RooDataHist::sum method; //; // - for simplicity, there is no check for the possibility of full-range integration with another overload of; // RooDataHist::sum",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:134,Integrability,inject,inject,134,"// The logic for summing over the histogram is borrowed from RooHistPdf with some differences:; //; // - a lambda function is used to inject the parameters for bin scaling into the RooDataHist::sum method; //; // - for simplicity, there is no check for the possibility of full-range integration with another overload of; // RooDataHist::sum",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:283,Integrability,integrat,integration,283,"// The logic for summing over the histogram is borrowed from RooHistPdf with some differences:; //; // - a lambda function is used to inject the parameters for bin scaling into the RooDataHist::sum method; //; // - for simplicity, there is no check for the possibility of full-range integration with another overload of; // RooDataHist::sum",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:134,Security,inject,inject,134,"// The logic for summing over the histogram is borrowed from RooHistPdf with some differences:; //; // - a lambda function is used to inject the parameters for bin scaling into the RooDataHist::sum method; //; // - for simplicity, there is no check for the possibility of full-range integration with another overload of; // RooDataHist::sum",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:7,Testability,log,logic,7,"// The logic for summing over the histogram is borrowed from RooHistPdf with some differences:; //; // - a lambda function is used to inject the parameters for bin scaling into the RooDataHist::sum method; //; // - for simplicity, there is no check for the possibility of full-range integration with another overload of; // RooDataHist::sum",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx:219,Usability,simpl,simplicity,219,"// The logic for summing over the histogram is borrowed from RooHistPdf with some differences:; //; // - a lambda function is used to inject the parameters for bin scaling into the RooDataHist::sum method; //; // - for simplicity, there is no check for the possibility of full-range integration with another overload of; // RooDataHist::sum",MatchSource.CODE_COMMENT,roofit/roofit/src/RooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPoisson.cxx:108,Usability,Simpl,Simple,108,/*****************************************************************************; * Project: RooFit *; * *; * Simple Poisson PDF; * author: Kyle Cranmer <cranmer@cern.ch>; * *; *****************************************************************************/; /** \class RooPoisson; \ingroup Roofit. Poisson pdf; **/,MatchSource.CODE_COMMENT,roofit/roofit/src/RooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx:113,Modifiability,variab,variable,113,"////////////////////////////////////////////////////////////////////////////////; /// Create a polynomial in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] lowestOrder [optional] Truncate the sum such that it skips the lower orders:; /// \f[; /// 1. + \sum_{i=0}^{\mathrm{coefList.size()}} a_{i} * x^{(i + \mathrm{lowestOrder})}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPolynomial pol(""pol"", ""pol"", x, RooArgList(a, b), lowestOrder = 2); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = 1 * x^0 + (0 * x^{\ldots}) + a * x^2 + b * x^3.; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPolynomial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx:235,Modifiability,variab,variable,235,"////////////////////////////////////////////////////////////////////////////////; /// Create a polynomial in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] lowestOrder [optional] Truncate the sum such that it skips the lower orders:; /// \f[; /// 1. + \sum_{i=0}^{\mathrm{coefList.size()}} a_{i} * x^{(i + \mathrm{lowestOrder})}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPolynomial pol(""pol"", ""pol"", x, RooArgList(a, b), lowestOrder = 2); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = 1 * x^0 + (0 * x^{\ldots}) + a * x^2 + b * x^3.; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPolynomial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx:145,Deployability,integrat,integrated,145,"////////////////////////////////////////////////////////////////////////////////; /// Advertise to RooFit that this function can be analytically integrated.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPolynomial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx:145,Integrability,integrat,integrated,145,"////////////////////////////////////////////////////////////////////////////////; /// Advertise to RooFit that this function can be analytically integrated.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPolynomial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:316,Energy Efficiency,power,power,316,"/*; * Project: RooFit; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooPowerSum; \ingroup Roofit. RooPowerSum implements a power law PDF of the form; \f[ f(x) = \mathcal{N} \cdot \sum_{i} a_{i} * x^{b_i} \f]. \image html RooPowerSum.png; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:95,Energy Efficiency,power,power,95,"////////////////////////////////////////////////////////////////////////////////; /// Create a power law in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] expList The exponentials \f$ b_i \f$; /// \f[; /// \sum_{i=0}^{n} a_{i} * x^{b_{i}}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPowerSum powl(""pow"", ""pow"", x, RooArgList(a1, a2), RooArgList(b1,b2)); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = a1 * x^b1 + a2 * x^b2; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:112,Modifiability,variab,variable,112,"////////////////////////////////////////////////////////////////////////////////; /// Create a power law in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] expList The exponentials \f$ b_i \f$; /// \f[; /// \sum_{i=0}^{n} a_{i} * x^{b_{i}}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPowerSum powl(""pow"", ""pow"", x, RooArgList(a1, a2), RooArgList(b1,b2)); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = a1 * x^b1 + a2 * x^b2; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:234,Modifiability,variab,variable,234,"////////////////////////////////////////////////////////////////////////////////; /// Create a power law in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] expList The exponentials \f$ b_i \f$; /// \f[; /// \sum_{i=0}^{n} a_{i} * x^{b_{i}}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPowerSum powl(""pow"", ""pow"", x, RooArgList(a1, a2), RooArgList(b1,b2)); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = a1 * x^b1 + a2 * x^b2; /// \f]",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:113,Energy Efficiency,Power,Power,113,"////////////////////////////////////////////////////////////////////////////////; /// Compute multiple values of Power distribution.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:145,Deployability,integrat,integrated,145,"////////////////////////////////////////////////////////////////////////////////; /// Advertise to RooFit that this function can be analytically integrated.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:145,Integrability,integrat,integrated,145,"////////////////////////////////////////////////////////////////////////////////; /// Advertise to RooFit that this function can be analytically integrated.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooPowerSum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:266,Testability,log,log-space,266,"/** \class RooSpline; \ingroup Roofit; \brief A RooFit class for creating spline functions. This class provides the functionality to create spline functions in RooFit,; , using ROOT TSpline. It supports splines of order 3 or 5. It also support; interpolation in the log-space (x or y), for example; exp(spline({x0}, {log y0})), useful when you have something (as xsections); that is more similar to exponentials than polynomials. Usage example:; ~~~ {.cpp}; RooRealVar x{""x"", ""x"", 0, 5};. std::vector<double> x0{1., 2, 3};; std::vector<double> y0{10., 20, 50};. RooSpline spline{""myspline"", ""my spline"", x, x0, y0};. auto frame = x.frame();; spline.plotOn(frame);; frame->Draw();; ~~~; */",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:317,Testability,log,log,317,"/** \class RooSpline; \ingroup Roofit; \brief A RooFit class for creating spline functions. This class provides the functionality to create spline functions in RooFit,; , using ROOT TSpline. It supports splines of order 3 or 5. It also support; interpolation in the log-space (x or y), for example; exp(spline({x0}, {log y0})), useful when you have something (as xsections); that is more similar to exponentials than polynomials. Usage example:; ~~~ {.cpp}; RooRealVar x{""x"", ""x"", 0, 5};. std::vector<double> x0{1., 2, 3};; std::vector<double> y0{10., 20, 50};. RooSpline spline{""myspline"", ""my spline"", x, x0, y0};. auto frame = x.frame();; spline.plotOn(frame);; frame->Draw();; ~~~; */",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:179,Modifiability,variab,variable,179,"/// Constructor for creating a spline from a TGraph.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] gr The input TGraph containing the data points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:325,Testability,log,logx,325,"/// Constructor for creating a spline from a TGraph.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] gr The input TGraph containing the data points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:356,Testability,log,logarithmically,356,"/// Constructor for creating a spline from a TGraph.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] gr The input TGraph containing the data points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:419,Testability,log,logy,419,"/// Constructor for creating a spline from a TGraph.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] gr The input TGraph containing the data points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:450,Testability,log,logarithmically,450,"/// Constructor for creating a spline from a TGraph.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] gr The input TGraph containing the data points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:179,Modifiability,variab,variable,179,"/// Constructor for creating a spline from raw data.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] x0 The array of x values for the spline points.; /// \param[in] y0 The array of y values for the spline points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:389,Testability,log,logx,389,"/// Constructor for creating a spline from raw data.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] x0 The array of x values for the spline points.; /// \param[in] y0 The array of y values for the spline points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:420,Testability,log,logarithmically,420,"/// Constructor for creating a spline from raw data.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] x0 The array of x values for the spline points.; /// \param[in] y0 The array of y values for the spline points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:483,Testability,log,logy,483,"/// Constructor for creating a spline from raw data.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] x0 The array of x values for the spline points.; /// \param[in] y0 The array of y values for the spline points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:514,Testability,log,logarithmically,514,"/// Constructor for creating a spline from raw data.; /// \param[in] name The name of the spline.; /// \param[in] title The title of the spline.; /// \param[in] x The independent variable.; /// \param[in] x0 The array of x values for the spline points.; /// \param[in] y0 The array of y values for the spline points.; /// \param[in] order The order of the spline (3 or 5).; /// \param[in] logx If true, the x values are logarithmically scaled before spline creation.; /// \param[in] logy If true, the y values are logarithmically scaled before spline creation.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx:13,Testability,log,logarithm,13,"// To do the logarithm inplace if necessary.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx:34,Modifiability,variab,variables,34,"/// Bind a TFx function to RooFit variables. Also see RooTFnBinding.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooTFnBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx:34,Modifiability,variab,variables,34,"/// Bind a TFx function to RooFit variables. Also see RooTFnBinding.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooTFnBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx:34,Modifiability,variab,variables,34,"/// Bind a TFx function to RooFit variables. Also see RooTFnBinding.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooTFnBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx:34,Modifiability,variab,variables,34,"/// Bind a TFx function to RooFit variables. Also see RooTFnBinding.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooTFnBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx:34,Modifiability,variab,variables,34,"/// Bind a TFx function to RooFit variables. Also see RooTFnBinding.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooTFnBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx:34,Modifiability,variab,variables,34,"/// Bind a TFx function to RooFit variables. Also see RooTFnBinding.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooTFnBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooTFnBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindCPAsymVar.cxx:1201,Availability,error,error,1201,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindCPAsymVar; \ingroup Roofit. Implementation of BlindTools' CP asymmetry blinding method; A RooUnblindCPAsymVar object is a real valued function; object, constructed from a blind value holder and a; set of unblinding parameters. When supplied to a PDF; in lieu of a regular parameter, the blind value holder; supplied to the unblinded objects will in a fit be minimized; to blind value corresponding to the actual minimum of the; parameter. The transformation is chosen such that the; the error on the blind parameters is identical to that; of the unblind parameter; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUnblindCPAsymVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindCPAsymVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindOffset.cxx:1189,Availability,error,error,1189,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindOffset; \ingroup Roofit. Implementation of BlindTools' offset blinding method; A RooUnblindOffset object is a real valued function; object, constructed from a blind value holder and a; set of unblinding parameters. When supplied to a PDF; in lieu of a regular parameter, the blind value holder; supplied to the unblinded objects will in a fit be minimized; to blind value corresponding to the actual minimum of the; parameter. The transformation is chosen such that the; the error on the blind parameters is identical to that; of the unblind parameter; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUnblindOffset.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindOffset.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindPrecision.cxx:1198,Availability,error,error,1198,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindPrecision; \ingroup Roofit. Implementation of BlindTools' precision blinding method; A RooUnblindPrecision object is a real valued function; object, constructed from a blind value holder and a; set of unblinding parameters. When supplied to a PDF; in lieu of a regular parameter, the blind value holder; supplied to the unblinded objects will in a fit be minimized; to blind value corresponding to the actual minimum of the; parameter. The transformation is chosen such that the; the error on the blind parameters is identical to that; of the unblind parameter; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUnblindPrecision.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindPrecision.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx:1252,Availability,error,error,1252,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindUniform; \ingroup Roofit. Implementation of BlindTools' offset blinding method.; A RooUnblindUniform object is a real-valued function; object, constructed from a parameter to be blinded and a; set of config parameters to change the blinding method.; When supplied to a PDF in lieu of the regular parameter,; a transformation will be applied such that the likelihood is computed with the actual; value of the parameter, but RooFit (, the user, MINUIT) see only; the transformed (blinded) value. The transformation is chosen such that; the error of the blind parameter is identical to that; of the original parameter.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUnblindUniform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx:914,Modifiability,config,config,914,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindUniform; \ingroup Roofit. Implementation of BlindTools' offset blinding method.; A RooUnblindUniform object is a real-valued function; object, constructed from a parameter to be blinded and a; set of config parameters to change the blinding method.; When supplied to a PDF in lieu of the regular parameter,; a transformation will be applied such that the likelihood is computed with the actual; value of the parameter, but RooFit (, the user, MINUIT) see only; the transformed (blinded) value. The transformation is chosen such that; the error of the blind parameter is identical to that; of the original parameter.; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUnblindUniform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx:24,Deployability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 31 observables",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUniform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx:24,Integrability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 31 observables",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUniform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx:24,Deployability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 31 observables",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUniform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx:24,Integrability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 31 observables",MatchSource.CODE_COMMENT,roofit/roofit/src/RooUniform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUniform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx:798,Availability,error,error,798,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * TS, Thomas Schietinger, SLAC, schieti@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooVoigtian; \ingroup Roofit. RooVoigtian is an efficient implementation of the convolution of a; Breit-Wigner with a Gaussian, making use of the complex error function.; RooFitCore provides two algorithms for the evaluation of the complex error; function (the default CERNlib C335 algorithm, and a faster, look-up-table; based method). By default, RooVoigtian employs the default (CERNlib); algorithm. Select the faster algorithm either in the constructor, or with; the selectFastAlgorithm() method. \note The ""width"" parameter that determines the Breit-Wigner shape; represents the **full width at half maximum (FWHM)** of the; Breit-Wigner (often referred to as \f$\Gamma\f$ or \f$2\gamma\f$).; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooVoigtian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx:884,Availability,error,error,884,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * TS, Thomas Schietinger, SLAC, schieti@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooVoigtian; \ingroup Roofit. RooVoigtian is an efficient implementation of the convolution of a; Breit-Wigner with a Gaussian, making use of the complex error function.; RooFitCore provides two algorithms for the evaluation of the complex error; function (the default CERNlib C335 algorithm, and a faster, look-up-table; based method). By default, RooVoigtian employs the default (CERNlib); algorithm. Select the faster algorithm either in the constructor, or with; the selectFastAlgorithm() method. \note The ""width"" parameter that determines the Breit-Wigner shape; represents the **full width at half maximum (FWHM)** of the; Breit-Wigner (often referred to as \f$\Gamma\f$ or \f$2\gamma\f$).; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooVoigtian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx:692,Energy Efficiency,efficient,efficient,692,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * TS, Thomas Schietinger, SLAC, schieti@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooVoigtian; \ingroup Roofit. RooVoigtian is an efficient implementation of the convolution of a; Breit-Wigner with a Gaussian, making use of the complex error function.; RooFitCore provides two algorithms for the evaluation of the complex error; function (the default CERNlib C335 algorithm, and a faster, look-up-table; based method). By default, RooVoigtian employs the default (CERNlib); algorithm. Select the faster algorithm either in the constructor, or with; the selectFastAlgorithm() method. \note The ""width"" parameter that determines the Breit-Wigner shape; represents the **full width at half maximum (FWHM)** of the; Breit-Wigner (often referred to as \f$\Gamma\f$ or \f$2\gamma\f$).; **/",MatchSource.CODE_COMMENT,roofit/roofit/src/RooVoigtian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx:679,Availability,error,error,679,"////////////////////////////////////////////////////////////////////////////////; /// Construct a RooVoigtian PDF, which represents the convolution of a; /// Breit-Wigner with a Gaussian.; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param _x The observable for the PDF.; /// \param _mean The mean of the distribution.; /// \param _width The **full width at half maximum (FWHM)** of the Breit-Wigner; /// (often referred to as \f$\Gamma\f$ or \f$2\gamma\f$).; /// \param _sigma The width of the Gaussian distribution.; /// \param doFast Use the faster look-up-table-based method for the evaluation; /// of the complex error function.",MatchSource.CODE_COMMENT,roofit/roofit/src/RooVoigtian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/GaussFunction.h:18,Testability,log,log,18,/* fLogAmp = std::log( p[0] ); */,MatchSource.CODE_COMMENT,roofit/roofit/test/GaussFunction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/GaussFunction.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx:28,Testability,test,test,28,"// Input for the ROOT_10615 test. Since the input in not that large, it is hardcoded in the source.",MatchSource.CODE_COMMENT,roofit/roofit/test/stabilityTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx:132,Deployability,integrat,integration,132,"// namespace; // Test that a simple fit with Gauss and Voigt yields the same values as with; // ROOT 6.18. The fit requires numeric integration for the Voigt. To suppress; // false positives, the precision for numeric integrals was increased by 1000x.; // This test uses Minuit2.; //; // Previously in: roottest/root/roofitstats/stabilityTests.cxx",MatchSource.CODE_COMMENT,roofit/roofit/test/stabilityTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx:132,Integrability,integrat,integration,132,"// namespace; // Test that a simple fit with Gauss and Voigt yields the same values as with; // ROOT 6.18. The fit requires numeric integration for the Voigt. To suppress; // false positives, the precision for numeric integrals was increased by 1000x.; // This test uses Minuit2.; //; // Previously in: roottest/root/roofitstats/stabilityTests.cxx",MatchSource.CODE_COMMENT,roofit/roofit/test/stabilityTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx:17,Testability,Test,Test,17,"// namespace; // Test that a simple fit with Gauss and Voigt yields the same values as with; // ROOT 6.18. The fit requires numeric integration for the Voigt. To suppress; // false positives, the precision for numeric integrals was increased by 1000x.; // This test uses Minuit2.; //; // Previously in: roottest/root/roofitstats/stabilityTests.cxx",MatchSource.CODE_COMMENT,roofit/roofit/test/stabilityTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx:261,Testability,test,test,261,"// namespace; // Test that a simple fit with Gauss and Voigt yields the same values as with; // ROOT 6.18. The fit requires numeric integration for the Voigt. To suppress; // false positives, the precision for numeric integrals was increased by 1000x.; // This test uses Minuit2.; //; // Previously in: roottest/root/roofitstats/stabilityTests.cxx",MatchSource.CODE_COMMENT,roofit/roofit/test/stabilityTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx:29,Usability,simpl,simple,29,"// namespace; // Test that a simple fit with Gauss and Voigt yields the same values as with; // ROOT 6.18. The fit requires numeric integration for the Voigt. To suppress; // false positives, the precision for numeric integrals was increased by 1000x.; // This test uses Minuit2.; //; // Previously in: roottest/root/roofitstats/stabilityTests.cxx",MatchSource.CODE_COMMENT,roofit/roofit/test/stabilityTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/stabilityTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:17,Energy Efficiency,allocate,allocated,17,"// use array pre-allocated in tree->Draw . This is faster; // assert(x != 0);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:62,Testability,assert,assert,62,"// use array pre-allocated in tree->Draw . This is faster; // assert(x != 0);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:18,Integrability,wrap,wrapper,18,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f(*func);; // ROOT::Math::WrappedTF1 f(*func);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:7,Usability,simpl,simply,7,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f(*func);; // ROOT::Math::WrappedTF1 f(*func);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:7,Availability,toler,tolerance,7,"// set tolerance 1 for tree to be same as in TTTreePlayer::UnBinFIt",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:71,Modifiability,Config,Config,71,"// need to fix param 0 , normalization in the unbinned fits; // fitter.Config().ParSettings(0).Fix();",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:185,Testability,assert,assert,185,"// if (fitter == ""Minuit2"") {; // // increase print level; // TVirtualFitter * tvf = TVirtualFitter::GetFitter();; // TFitterMinuit * minuit2 = dynamic_cast<TFitterMinuit * >(tvf);; // assert (minuit2 != 0);; // minuit2->SetPrintLevel(3);; // }",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:3,Testability,assert,assert,3,"// assert(iret == 0);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:85,Integrability,wrap,wrapper,85,"// dummy for testing; // iret |= FitUsingNewFitter<DUMMY>(h1,f1);; // use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:13,Testability,test,testing,13,"// dummy for testing; // iret |= FitUsingNewFitter<DUMMY>(h1,f1);; // use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:74,Usability,simpl,simply,74,"// dummy for testing; // iret |= FitUsingNewFitter<DUMMY>(h1,f1);; // use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:3,Testability,test,test,3,"// test with linear fitter; // for this test need to pass a multi-dim function",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:40,Testability,test,test,40,"// test with linear fitter; // for this test need to pass a multi-dim function",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:3,Testability,test,test,3,"// test with a graph",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:16,Availability,error,error,16,"// to seto zero error on X",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:12,Availability,error,error,12,"// try with error in X",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:15,Availability,error,error,15,"// to set zero error on X",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:18,Integrability,wrap,wrapper,18,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:7,Usability,simpl,simply,7,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:66,Testability,test,test,66,"// iret |= FitUsingNewFitter<GSL_BFGS2>(h2,f2); // Too long for a test!; // test also fitting a TGraphErrors with histogram data",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:76,Testability,test,test,76,"// iret |= FitUsingNewFitter<GSL_BFGS2>(h2,f2); // Too long for a test!; // test also fitting a TGraphErrors with histogram data",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:16,Availability,error,error,16,"// to seto zero error on X",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:12,Availability,error,error,12,"// try with error in X",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:16,Availability,error,error,16,"// to seto zero error on X",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:20,Testability,test,test,20,"// #ifdef LATER; // test using grad function",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:74,Testability,test,test,74,"// iret |= FitUsingNewFitter<GSL_BFGS2>(h2,f2,useGrad); // Too long for a test!; // test LS algorithm",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:84,Testability,test,test,84,"// iret |= FitUsingNewFitter<GSL_BFGS2>(h2,f2,useGrad); // Too long for a test!; // test LS algorithm",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:34,Modifiability,variab,variable,34,"// t1.Draw(""x""); // to select fit variable",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:18,Integrability,wrap,wrapper,18,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:7,Usability,simpl,simply,7,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:34,Modifiability,variab,variable,34,"// t1.Draw(""x""); // to select fit variable",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:18,Integrability,wrap,wrapper,18,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:7,Usability,simpl,simply,7,"// use simply TF1 wrapper; // ROOT::Math::WrappedMultiTF1 f2(*f1);",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx:67,Testability,test,test,67,"// iret |= FitUsingNewFitter<GSL_BFGS2>(&t1,f2); // Too long for a test!",MatchSource.CODE_COMMENT,roofit/roofit/test/testFitPerf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testFitPerf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx:3,Testability,Test,Test,3,"// Test for RooBernstein; // Authors: Rahul Balasubramanian, CERN 05/2020",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx:22,Modifiability,variab,variable,22,"// Set ranges for the variable",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx:15,Deployability,integrat,integration,15,"// Test ranged integration",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx:15,Integrability,integrat,integration,15,"// Test ranged integration",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx:3,Testability,Test,Test,3,"// Test ranged integration",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBernstein.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBernstein.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx:3,Testability,Test,Tests,3,"// Tests for the RooBifurGauss; // Authors: Jonas Rembser, CERN 2023",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBifurGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx:31,Deployability,integrat,integration,31,"/// Cross-check the analytical integration code with the normal Gaussian.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBifurGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx:31,Integrability,integrat,integration,31,"/// Cross-check the analytical integration code with the normal Gaussian.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBifurGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx:117,Modifiability,variab,variable,117,"// We need to set the range also for ""mean"", because this test also checks; // the analytical integral over the mean variable.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBifurGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx:58,Testability,test,test,58,"// We need to set the range also for ""mean"", because this test also checks; // the analytical integral over the mean variable.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooBifurGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:16,Security,validat,validate,16,"// You can also validate by comparing with the RooDSCBShape and RooSDSCBShape; // classes that are floating around in the RooFit user community.; // Some commented-out lines are kept on purpose in this test to make this as; // easy as possible.; //; // #include ""RooDSCBShape.h""; // #include ""RooSDSCBShape.h""",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:202,Testability,test,test,202,"// You can also validate by comparing with the RooDSCBShape and RooSDSCBShape; // classes that are floating around in the RooFit user community.; // Some commented-out lines are kept on purpose in this test to make this as; // easy as possible.; //; // #include ""RooDSCBShape.h""; // #include ""RooSDSCBShape.h""",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:70,Testability,log,log,70,"// it's important to have values of nL and nR close to one to hit the log computations",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:269,Deployability,integrat,integration,269,"// We want to hit all cases here to completely cover the analytical integral function.; // The RooCrystalBall has 4 separate definition regions:; //; // 1. Gaussian core left; // 2. Gaussian core right; // 3. left tail; // 4. right tail; //; // It's important that the integration range limits are in all possible combinations of these; // regions to cover all branches of the integration code.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:377,Deployability,integrat,integration,377,"// We want to hit all cases here to completely cover the analytical integral function.; // The RooCrystalBall has 4 separate definition regions:; //; // 1. Gaussian core left; // 2. Gaussian core right; // 3. left tail; // 4. right tail; //; // It's important that the integration range limits are in all possible combinations of these; // regions to cover all branches of the integration code.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:269,Integrability,integrat,integration,269,"// We want to hit all cases here to completely cover the analytical integral function.; // The RooCrystalBall has 4 separate definition regions:; //; // 1. Gaussian core left; // 2. Gaussian core right; // 3. left tail; // 4. right tail; //; // It's important that the integration range limits are in all possible combinations of these; // regions to cover all branches of the integration code.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx:377,Integrability,integrat,integration,377,"// We want to hit all cases here to completely cover the analytical integral function.; // The RooCrystalBall has 4 separate definition regions:; //; // 1. Gaussian core left; // 2. Gaussian core right; // 3. left tail; // 4. right tail; //; // It's important that the integration range limits are in all possible combinations of these; // regions to cover all branches of the integration code.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooCrystalBall.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooCrystalBall.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooExponential.cxx:3,Testability,Test,Tests,3,"// Tests for the RooJohnson; // Author: Stephan Hageboeck, CERN 05/2019",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooExponential.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooExponential.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooExponential.cxx:8,Integrability,depend,depends,8,"// This depends on proper (de-)serialisation of proxies:",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooExponential.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooExponential.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx:3,Testability,test,test,3,"// test fitting using also RooFit and new Fitter",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx:3,Testability,assert,assert,3,"// assert(n >= 2);; // create the gaussians",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx:71,Modifiability,Config,Config,71,"// need to fix param 0 , normalization in the unbinned fits; // fitter.Config().ParSettings(0).Fix();",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx:30,Usability,simpl,simple,30,"// in case of N = 1 do also a simple gauss fit; // using TF1 gausN; // if (N == 1) {",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooGaussian.cxx:3,Testability,Test,Tests,3,"// Tests for the RooGaussian; // Authors: Stephan Hageboeck, CERN 01/2019",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooGaussian.cxx:2,Testability,Test,Test,2,"//Test central quantiles",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:3,Testability,Test,Tests,3,"// Tests for the RooJohnson; // Author: Stephan Hageboeck, CERN 05/2019",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:100,Deployability,update,updated,100,"// This test needs to stay disabled until ROOT-10144 in TFormula v5 is fixed; // or until RooFit is updated to use TFormula v6 (ROOT-10164)",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:8,Testability,test,test,8,"// This test needs to stay disabled until ROOT-10144 in TFormula v5 is fixed; // or until RooFit is updated to use TFormula v6 (ROOT-10164)",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:101,Testability,test,testing,101,"// Note: Ownership bug. Deleting this might crash on Mac.; // Therefore, it will leak because we are testing not the; // GenericPdf.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:12,Deployability,integrat,integration,12,"//Numerical integration poor for narrow peaks",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:12,Integrability,integrat,integration,12,"//Numerical integration poor for narrow peaks",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:3,Testability,Test,Tests,3,"// Tests for the RooKeysPdf and friends; // Authors: Jonas Rembser, CERN 07/2022",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:3,Testability,Test,Test,3,"// Test the support of RooKeysPdf and RooNDKeysPdf for weighted datasets.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:302,Security,validat,validates,302,"// We create data with 100 events at x = 5 and 400 events at x = 15. One; // version will have 500 unweighted entries, the other will have only 2; // entries with the weights 100 and 400 to represent the same data. The; // resulting RooKeysPdfs should be identical for both datasets. Checking; // this validates that dataset weights are correctly dealt with.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:45,Energy Efficiency,adapt,adaptive,45,"// Creating RooKeysPdf and RooNDKeysPdf with adaptive kernel and no; // mirroring for both weighted and unweighted datasets.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:45,Modifiability,adapt,adaptive,45,"// Creating RooKeysPdf and RooNDKeysPdf with adaptive kernel and no; // mirroring for both weighted and unweighted datasets.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:3,Testability,Test,Test,3,"// Test generation with proto data, covering GitHub issue #12286.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooKeysPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:3,Testability,Test,Tests,3,"// Tests for RooParamHistFunc; // Author: Jonas Rembser, CERN 03/2020",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:29,Deployability,integrat,integration,29,"// This tests the analytical integration of RooParamHistFunc,; // inspired by this issue on GitHub:; // https://github.com/root-project/root/issues/7182",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:29,Integrability,integrat,integration,29,"// This tests the analytical integration of RooParamHistFunc,; // inspired by this issue on GitHub:; // https://github.com/root-project/root/issues/7182",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:8,Testability,test,tests,8,"// This tests the analytical integration of RooParamHistFunc,; // inspired by this issue on GitHub:; // https://github.com/root-project/root/issues/7182",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:76,Deployability,integrat,integration,76,"// Extending the code in issue 7182, we also want to make sure that the; // integration also works if the bin scaling parameters are not just one,; // which would be equivalent to RooHistFunc.; //; // Let's scale each bin content by the bin index:",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:76,Integrability,integrat,integration,76,"// Extending the code in issue 7182, we also want to make sure that the; // integration also works if the bin scaling parameters are not just one,; // which would be equivalent to RooHistFunc.; //; // Let's scale each bin content by the bin index:",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:3,Modifiability,Extend,Extending,3,"// Extending the code in issue 7182, we also want to make sure that the; // integration also works if the bin scaling parameters are not just one,; // which would be equivalent to RooHistFunc.; //; // Let's scale each bin content by the bin index:",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:143,Availability,error,error,143,"// This tests the analytical integration of RooParamHistFunc; // after the RooParamHistFunc has been cloned.; // The test was inspired by this error reported on the forum:; // https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:29,Deployability,integrat,integration,29,"// This tests the analytical integration of RooParamHistFunc; // after the RooParamHistFunc has been cloned.; // The test was inspired by this error reported on the forum:; // https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:29,Integrability,integrat,integration,29,"// This tests the analytical integration of RooParamHistFunc; // after the RooParamHistFunc has been cloned.; // The test was inspired by this error reported on the forum:; // https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:8,Testability,test,tests,8,"// This tests the analytical integration of RooParamHistFunc; // after the RooParamHistFunc has been cloned.; // The test was inspired by this error reported on the forum:; // https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:117,Testability,test,test,117,"// This tests the analytical integration of RooParamHistFunc; // after the RooParamHistFunc has been cloned.; // The test was inspired by this error reported on the forum:; // https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:96,Testability,test,test,96,"// Combine the RooParamHistFunc with something else in a RooRealSumPdf.; // This is do make the test more similar to the Barlow-Beeston test,; // which is where the RooParamHistFunc is primarily used.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:136,Testability,test,test,136,"// Combine the RooParamHistFunc with something else in a RooRealSumPdf.; // This is do make the test more similar to the Barlow-Beeston test,; // which is where the RooParamHistFunc is primarily used.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooParamHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:3,Testability,Test,Tests,3,"// Tests for the RooPoisson; // Authors: Stephan Hageboeck, CERN 01/2019; // Jonas Rembser, CERN 11/2022",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:57,Availability,avail,available,57,"//Test the bare CDF with some known values from publicly available tables:",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:2,Testability,Test,Test,2,"//Test the bare CDF with some known values from publicly available tables:",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:86,Safety,avoid,avoid,86,"// Test integral in the high tails.; // Implementation should switch to cdf_c here to avoid catastrophic cancellation.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:3,Testability,Test,Test,3,"// Test integral in the high tails.; // Implementation should switch to cdf_c here to avoid catastrophic cancellation.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:91,Deployability,integrat,integrated,91,"// namespace; // Covers GitHub issue #10868 about the wrong integral for RooPoisson if; // integrated from a > 0 to infinity.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:91,Integrability,integrat,integrated,91,"// namespace; // Covers GitHub issue #10868 about the wrong integral for RooPoisson if; // integrated from a > 0 to infinity.",MatchSource.CODE_COMMENT,roofit/roofit/test/testRooPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h:3,Integrability,wrap,wrapper,3,"// wrapper class for a RooPdf",MatchSource.CODE_COMMENT,roofit/roofit/test/WrapperRooPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h:15,Safety,abort,abort,15,"// code should abort if not found",MatchSource.CODE_COMMENT,roofit/roofit/test/WrapperRooPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h:156,Testability,assert,assert,156,"// // iterate on fX; // TIterator* itr = fX->createIterator() ;; // RooAbsArg* arg = 0;; // while( ( arg = dynamic_cast<RooAbsArg*>(itr->Next() ) ) ) {; // assert(arg != 0);; // arg->setDirtyInhibit(true); // for having faster setter later in DoEval; // }",MatchSource.CODE_COMMENT,roofit/roofit/test/WrapperRooPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h:253,Testability,assert,assert,253,"// double operator() (double *x, double * p = 0) {; // if (p != 0) SetParameters(p);; // // iterate on observables; // TIterator* itr = fX->createIterator() ;; // RooRealVar* var = 0;; // while( ( var = dynamic_cast<RooRealVar*>(itr->Next() ) ) ) {; // assert(var != 0);; // var->setVal(*x++);; // }; // // debug; // //fX->Print(""v"");; // if (fNorm); // return fPdf->getVal(fX);; // else; // return fPdf->getVal(); // get unnormalized value; // }",MatchSource.CODE_COMMENT,roofit/roofit/test/WrapperRooPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h:19,Performance,optimiz,optimized,19,"// should maybe be optimized ???",MatchSource.CODE_COMMENT,roofit/roofit/test/WrapperRooPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/WrapperRooPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx:84,Testability,test,test,84,"// VDT stops computing exponentials below exp(-708) = 3.3075530e-308; // Since this test runs Gaussians far from their mean, we need to be a bit more forgiving",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx:46,Deployability,integrat,integrator,46,"//_toleranceCompareLogs{2.E-14};; // make the integrator slightly more precise (1e-6 -> 1e-7) to reduce inaccuracy in fitting",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testBukin.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx:97,Energy Efficiency,reduce,reduce,97,"//_toleranceCompareLogs{2.E-14};; // make the integrator slightly more precise (1e-6 -> 1e-7) to reduce inaccuracy in fitting",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testBukin.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx:46,Integrability,integrat,integrator,46,"//_toleranceCompareLogs{2.E-14};; // make the integrator slightly more precise (1e-6 -> 1e-7) to reduce inaccuracy in fitting",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testBukin.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx:11,Testability,test,test,11,"// No == 2 test because of assert",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx:27,Testability,assert,assert,27,"// No == 2 test because of assert",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx:20,Availability,error,error,20,"// Would need SumW2 error matrix correction, but no done in macro",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testCompatMode.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testExponential.cxx:41,Availability,down,down,41,"// Beyond ~19, the VDT polynomials break down when c1 is very negative",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testExponential.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testExponential.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:14,Testability,Test,TestGaussWeighted,14,"// TODO: make TestGaussWeighted work on Windows",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:34,Availability,error,error,34,"// Would need SumW2 or asymptotic error correction, but that's not in test macro.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:70,Testability,test,test,70,"// Would need SumW2 or asymptotic error correction, but that's not in test macro.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGauss.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGauss.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx:4,Testability,Test,Test,4,"/// Test binned fit with a lot of bins. Because of ROOT-3874, it unfortunately; /// has a biased sigma parameter.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx:94,Integrability,interface,interface,94,"// TODO Test a batch fit that uses categories once categories can be passed through the batch interface.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx:8,Testability,Test,Test,8,"// TODO Test a batch fit that uses categories once categories can be passed through the batch interface.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testGaussBinned.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testJohnson.cxx:9,Usability,clear,clear,9,"// Is it clear that the fits can infer the value of lambda when generating in mu?",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testJohnson.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testJohnson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testJohnson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx:14,Testability,Test,TestGaussWeighted,14,"// TODO: make TestGaussWeighted work on Windows",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testLandau.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testLandau.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx:6,Testability,test,testing,6,"// No testing of logs because landau can return 0.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testLandau.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx:17,Testability,log,logs,17,"// No testing of logs because landau can return 0.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testLandau.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx:11,Modifiability,variab,variables,11,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testLandau.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testLandau.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testNestedPDFs.cxx:190,Testability,test,testing,190,"// Implement a polynomial. Value ranges are chosen to keep it positive.; // Note that even though the parameters are constant for the fit, they are still; // varied within their ranges when testing the function at random parameter points.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testNestedPDFs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testNestedPDFs.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testPoisson.cxx:7,Testability,test,tests,7,"// Fit tests have a small bias. Unclear why.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/testPoisson.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testPoisson.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx:11,Deployability,integrat,integration,11,"// Shut up integration messages",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx:11,Integrability,integrat,integration,11,"// Shut up integration messages",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx:23,Integrability,message,messages,23,"// Shut up integration messages",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:4,Testability,Test,Test,4,"/// Test batch against scalar code for fixed values of observable. Don't run normalisation.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:4,Testability,Test,Test,4,"/// Test batch against scalar code for fixed values of observable with normalisation.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:4,Testability,Test,Test,4,"/// Test batch against scalar code for fixed values of observable. Compute log probabilities.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:75,Testability,log,log,75,"/// Test batch against scalar code for fixed values of observable. Compute log probabilities.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:100,Testability,test,tests,100,"/// Run a fit for batch and scalar code and compare results.; /// Clone the PDFs before running the tests. This can run the test even if some internal state; /// is propagated / saved wrongly.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:124,Testability,test,test,124,"/// Run a fit for batch and scalar code and compare results.; /// Clone the PDFs before running the tests. This can run the test even if some internal state; /// is propagated / saved wrongly.",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:48,Availability,avail,available,48,"// Ignore legacy tests if legacy backend is not available",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h:17,Testability,test,tests,17,"// Ignore legacy tests if legacy backend is not available",MatchSource.CODE_COMMENT,roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/VectorisedPDFTests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/Roo1DTable.h:12,Integrability,interface,interface,12,"// Printing interface (human readable)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/Roo1DTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/Roo1DTable.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/Roo1DTable.h:12,Integrability,interface,interface,12,"// Printing interface (human readable)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/Roo1DTable.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/Roo1DTable.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,Security,access,access,29,"// Coefficient normalization access",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:14,Deployability,integrat,integration,14,"// Analytical integration support",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:14,Integrability,integrat,integration,14,"// Analytical integration support",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:26,Deployability,integrat,integration,26,"// Coefficient Analytical integration support",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:26,Integrability,integrat,integration,26,"// Coefficient Analytical integration support",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,Modifiability,variab,variable,29,"/// Retrieve the convolution variable.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,Modifiability,variab,variable,29,"/// Retrieve the convolution variable.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:17,Modifiability,variab,variable,17,"///< Convolution variable",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,Deployability,integrat,integration,29,"///<! Registry of analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,Integrability,integrat,integration,29,"///<! Registry of analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:17,Integrability,interface,interface,17,"// I/O streaming interface (machine readable)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:12,Integrability,interface,interface,12,"// Printing interface (human readable)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:3,Security,Access,Accessors,3,"// Accessors to attributes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:3,Security,Access,Accessors,3,"// Accessors to transient attributes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:28,Integrability,interface,interface,28,"// Is value in range (dummy interface always returns true)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:44,Integrability,interface,interface,44,"// Has this argument a defined range (dummy interface always returns false)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:136,Integrability,interface,interface,136,"////////////////////////////////////////////////////////////////////////////; /// \anchor optimisationInterface; /// \name Optimisation interface; /// These functions allow RooFit to optimise a computation graph, to keep track; /// of cached values, and to invalidate caches.; /// @{; // Cache mode optimization (tracks changes & do lazy evaluation vs evaluate always)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:235,Performance,cache,cached,235,"////////////////////////////////////////////////////////////////////////////; /// \anchor optimisationInterface; /// \name Optimisation interface; /// These functions allow RooFit to optimise a computation graph, to keep track; /// of cached values, and to invalidate caches.; /// @{; // Cache mode optimization (tracks changes & do lazy evaluation vs evaluate always)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:268,Performance,cache,caches,268,"////////////////////////////////////////////////////////////////////////////; /// \anchor optimisationInterface; /// \name Optimisation interface; /// These functions allow RooFit to optimise a computation graph, to keep track; /// of cached values, and to invalidate caches.; /// @{; // Cache mode optimization (tracks changes & do lazy evaluation vs evaluate always)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:288,Performance,Cache,Cache,288,"////////////////////////////////////////////////////////////////////////////; /// \anchor optimisationInterface; /// \name Optimisation interface; /// These functions allow RooFit to optimise a computation graph, to keep track; /// of cached values, and to invalidate caches.; /// @{; // Cache mode optimization (tracks changes & do lazy evaluation vs evaluate always)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:299,Performance,optimiz,optimization,299,"////////////////////////////////////////////////////////////////////////////; /// \anchor optimisationInterface; /// \name Optimisation interface; /// These functions allow RooFit to optimise a computation graph, to keep track; /// of cached values, and to invalidate caches.; /// @{; // Cache mode optimization (tracks changes & do lazy evaluation vs evaluate always)",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:17,Performance,optimiz,optimization,17,"// constant term optimization",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:15,Security,access,accessor,15,"// Dirty state accessor",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:3,Performance,Cache,Cache,3,"// Cache management",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:291,Safety,avoid,avoided,291,"// We want to support three cases here:; // * passing a RooArgSet; // * passing a RooArgList; // * passing an initializer list; // Before, there was only an overload taking a RooArg set, which caused an; // implicit creation of a RooArgSet when a RooArgList was passed. This needs; // to be avoided, because if the passed RooArgList is owning the arguments,; // this information will be lost with the copy. The solution is to have one; // overload that takes a general RooAbsCollection, and one overload for; // RooArgList that is invoked in the case of passing an initializer list.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:12,Performance,cache,caches,12,"//! list of caches; // Proxy management",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:25,Integrability,interface,interface,25,"// Hooks for RooTreeData interface",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:4,Performance,cache,cache,4,"//! cache of the list of proxies. Avoids type casting.; // Debug stuff",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:34,Safety,Avoid,Avoids,34,"//! cache of the list of proxies. Avoids type casting.; // Debug stuff",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:14,Security,access,access,14,"// Allow fast access mode in getVal() and proxies; // Owned components",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:22,Performance,cache,cache,22,"//! Pointer to global cache manager for any expensive components created by this object",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:4,Performance,Cache,Cached,4,"//! Cached isConstant status",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:80,Performance,Cache,Cached,80,//! Prevent 'AlwaysDirty' mode for this node; /* RooArgSet _leafNodeCache ; //! Cached leaf nodes */; /* RooArgSet _branchNodeCache //! Cached branch nodes */,MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:136,Performance,Cache,Cached,136,//! Prevent 'AlwaysDirty' mode for this node; /* RooArgSet _leafNodeCache ; //! Cached leaf nodes */; /* RooArgSet _branchNodeCache //! Cached branch nodes */,MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:12,Modifiability,variab,variable,12,"// Abstract variable",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsArg.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:280,Performance,perform,performance,280,"/// Returns the bin number corresponding to the value `x`.; ///; /// \note This `inline` function is implemented by calling the vectorized; /// function `RooAbsBinning::binNumbers()`. If you want to calculate; /// the bin indices for multiple values, use that one for better; /// performance.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:12,Integrability,interface,interface,12,"// Printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:4,Integrability,Interface,Interface,4,"/// Interface function. If true, min/max of binning is parameterized by external RooAbsReals.; /// Default to `false`, unless overridden by a sub class.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:55,Modifiability,parameteriz,parameterized,55,"/// Interface function. If true, min/max of binning is parameterized by external RooAbsReals.; /// Default to `false`, unless overridden by a sub class.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:33,Modifiability,parameteriz,parameterized,33,"/// Return pointer to RooAbsReal parameterized lower bound, if any.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:33,Modifiability,parameteriz,parameterized,33,"/// Return pointer to RooAbsReal parameterized upper bound, if any.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:9,Integrability,interface,interface,9,"/// Hook interface function to execute code upon insertion into a RooAbsRealLValue.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h:9,Integrability,interface,interface,9,"/// Hook interface function to execute code upon removal from a RooAbsRealLValue.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsBinning.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:4,Integrability,Interface,Interface,4,"/// Interface for server redirect calls.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:4,Integrability,Interface,Interface,4,"/// Interface for operation mode changes.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:4,Integrability,Interface,Interface,4,"/// Interface for processing of cache mode optimization calls.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:32,Performance,cache,cache,32,"/// Interface for processing of cache mode optimization calls.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:43,Performance,optimiz,optimization,43,"/// Interface for processing of cache mode optimization calls.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:4,Integrability,Interface,Interface,4,"/// Interface for constant term node finding calls.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:4,Integrability,Interface,Interface,4,"/// Interface for printing of cache guts in tree mode printing.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:30,Performance,cache,cache,30,"/// Interface for printing of cache guts in tree mode printing.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h:18,Performance,cache,cache,18,"// Base class for cache managers",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCache.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCache.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:37,Performance,cache,cache,37,"// Return RooHistPdf that represents cache histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:27,Performance,cache,cached,27,"// Return RooDataHist with cached values",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:56,Performance,cache,cached,56,"// Set interpolation order in RooHistPdf that represent cached histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:3,Performance,Cache,Cache,3,"// Cache management functions",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:53,Performance,cache,cache,53,"// Return name of binning to be used for creation of cache histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:10,Performance,cache,cache,10,"// Create cache storage element",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:8,Performance,cache,cache,8,"//! The cache manager",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:27,Performance,cache,cache,27,"// Interpolation order for cache histograms",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:30,Deployability,integrat,integration,30,"///<! Registry for analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:30,Integrability,integrat,integration,30,"///<! Registry for analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:25,Deployability,integrat,integration,25,"///<! Map for analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:25,Integrability,integrat,integration,25,"///<! Map for analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:27,Performance,cache,cached,27,"// Abstract base class for cached p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:58,Performance,cache,cache,58,"// Set interpolation order in RooHistFuncs that represent cache histograms",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:52,Deployability,integrat,integration,52,"// Force all observables to be offered for internal integration",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:52,Integrability,integrat,integration,52,"// Force all observables to be offered for internal integration",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:3,Performance,Cache,Cache,3,"// Cache management functions",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:42,Performance,cache,cache,42,"// Returns name of binning to be used for cache histogram creation",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:10,Performance,cache,cache,10,"///<! The cache manager",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:29,Performance,cache,cache,29,"///< Interpolation order for cache histograms",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:25,Deployability,integrat,integration,25,"///<! Map for analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:25,Integrability,integrat,integration,25,"///<! Map for analytical integration codes",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:27,Performance,cache,cached,27,"// Abstract base class for cached p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCachedReal.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCacheElement.h:4,Integrability,Interface,Interface,4,"/// Interface for changes of operation mode.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCacheElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCacheElement.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCacheElement.h:18,Performance,cache,cache,18,"// Base class for cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCacheElement.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCacheElement.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:42,Deployability,integrat,integration,42,"// Is this l-value object safe for use as integration observable",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCategory.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:42,Integrability,integrat,integration,42,"// Is this l-value object safe for use as integration observable",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCategory.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:26,Safety,safe,safe,26,"// Is this l-value object safe for use as integration observable",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCategory.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:4,Security,Access,Access,4,"/// Access the map of state names to index numbers. Triggers a recomputation; /// if the shape is dirty.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCategory.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:18,Integrability,depend,depends,18,"/// If a category depends on the shape of others, i.e.\ its state numbers or names depend; /// on the states of other categories, this function has to be implemented to recompute; /// _stateNames and _insertionOrder.; /// If one of these two changes, setShapeDirty() has to be called to propagate this information; /// to possible users of this category.",MatchSource.CODE_COMMENT,roofit/roofitcore/inc/RooAbsCategory.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h
