id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/su2code/SU2/issues/805#issuecomment-546279885:43,Modifiability,config,config,43,Use the develop branch of the code and the config file I uploaded before. Heatflux is being outputted.; Please understand that we do not have resources to fix bugs in previous versions of the code.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546279885
https://github.com/su2code/SU2/issues/805#issuecomment-554811138:45,Modifiability,config,config,45,"> Use the develop branch of the code and the config file I uploaded before. Heatflux is being outputted.; > Please understand that we do not have resources to fix bugs in previous versions of the code. Hello. . I read the code. In the file 'solver_direct_mean.cpp', there is a function, 'CNSSolver::Friction_Forces', in which a line of code is wrong. The last parameter of the code, 'HeatFlux[iMarker][iVertex] = -thermal_conductivity*GradTemperature*RefHeatFlux;' is for normalization, but we only declare it before. In another word, 'RefHeatFlux' is forgotten. If I delete 'RefHeatFlux' in this line of code, it works. Certainly, at this moment, heatflux I get is not normalized any more. My version is 6.2.0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-554811138
https://github.com/su2code/SU2/issues/805#issuecomment-554820194:218,Deployability,release,release,218,"Hi @cjz667 : you are correct, the re-dimensionalization of the heat flux was missing in previous versions of the code (prior to v6.2.0, the non-dimensional heat flux was output). We have fixed this for the upcoming v7 release, as @pcarruscag mentioned, which contains the missing reference value. You can already try this version of the code for yourself by checking out the develop branch with the following command:. $ git clone -b develop https://github.com/su2code/SU2.git. Please give that a try, and if it still is not working, we can reopen the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-554820194
https://github.com/su2code/SU2/pull/806#issuecomment-547078034:4,Deployability,pipeline,pipeline,4,The pipeline is ready now. It is possible to have both systems enabled for some time if necessary. They don't interfere with each other at all.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547078034
https://github.com/su2code/SU2/pull/806#issuecomment-547358706:529,Testability,test,test,529,"As it does not interfere with the rest of the code I guess nothing speaks against merging this.; Couple of things though:; - the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. ; - My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. Speeding up ""time-to-finished-regression-test"" is really cool though. 👍 . 🐳 Take these two whales as a sign of gratitude 🐋",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547358706
https://github.com/su2code/SU2/pull/806#issuecomment-547358706:1032,Testability,test,test,1032,"As it does not interfere with the rest of the code I guess nothing speaks against merging this.; Couple of things though:; - the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. ; - My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. Speeding up ""time-to-finished-regression-test"" is really cool though. 👍 . 🐳 Take these two whales as a sign of gratitude 🐋",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547358706
https://github.com/su2code/SU2/pull/806#issuecomment-547363908:213,Testability,test,tests,213,"> * the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. The badge is for the develop branch. But the tests never ran so far for that branch, thats why there is no badge yet. > * My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. I am gonna remove the build_action repo. I created that because I thought it would be needed. But its not anymore. Good point about the files. Actually forgot to add them to the repo :+1: The nice thing is the only thing executed in the container is a bash script that you can run also without docker, in case you need to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547363908
https://github.com/su2code/SU2/pull/806#issuecomment-547363908:526,Testability,test,test,526,"> * the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. The badge is for the develop branch. But the tests never ran so far for that branch, thats why there is no badge yet. > * My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. I am gonna remove the build_action repo. I created that because I thought it would be needed. But its not anymore. Good point about the files. Actually forgot to add them to the repo :+1: The nice thing is the only thing executed in the container is a bash script that you can run also without docker, in case you need to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547363908
https://github.com/su2code/SU2/pull/806#issuecomment-547502029:38,Testability,log,logs,38,"- Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?. `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`; - Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. ; - Sidenote: It is actually quite nice that build and run are in separate logs",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547502029
https://github.com/su2code/SU2/pull/806#issuecomment-547502029:390,Testability,log,logs,390,"- Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?. `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`; - Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. ; - Sidenote: It is actually quite nice that build and run are in separate logs",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547502029
https://github.com/su2code/SU2/pull/806#issuecomment-547509688:384,Performance,concurren,concurrent,384,"> * Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?; > ; > `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`. I don't think so. Maybe they'll add that in the future. > * Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. 20 concurrent jobs. There is no limitation in the time-per-month for public repositories. Every job has 2 cores, 7GB of memory and 14GB of disk space. Source:; https://help.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits; https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#supported-virtual-environments-and-hardware-resources",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547509688
https://github.com/su2code/SU2/pull/806#issuecomment-547509688:40,Testability,log,logs,40,"> * Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?; > ; > `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`. I don't think so. Maybe they'll add that in the future. > * Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. 20 concurrent jobs. There is no limitation in the time-per-month for public repositories. Every job has 2 cores, 7GB of memory and 14GB of disk space. Source:; https://help.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits; https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#supported-virtual-environments-and-hardware-resources",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547509688
https://github.com/su2code/SU2/pull/807#issuecomment-548145692:327,Availability,down,downsides,327,"@pcarruscag I was planning to do all, but I can stick to places that files have already been moved around. Is there a list of future restructuring to happen so I can avoid those files?. Version 7 seems to be a good place to tackle a lot of these small changes. In any case, I can address this in a separate branch to limit any downsides.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/807#issuecomment-548145692
https://github.com/su2code/SU2/pull/807#issuecomment-548145692:166,Safety,avoid,avoid,166,"@pcarruscag I was planning to do all, but I can stick to places that files have already been moved around. Is there a list of future restructuring to happen so I can avoid those files?. Version 7 seems to be a good place to tackle a lot of these small changes. In any case, I can address this in a separate branch to limit any downsides.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/807#issuecomment-548145692
https://github.com/su2code/SU2/pull/808#issuecomment-548465503:663,Integrability,depend,depends,663,"> harder to compare your current work to previous versions. `git diff --ignore-space-change` -> the diff to develop is empty. > Splitting files does a lot more for readability than just removing white spaces. True... removing white spaces actually doesn't do much for readability. And this is not about ""one or the other"". Restructuring files with one class per file + consistent naming + checking comments etc has a lot more value.... and can still be done nonethless. > fixing other (more important) formatting and commenting issues,. New Formatting issues wrt to the tab removal are not introduced, they are just different now ... and consistent. With tabs it depends on the IDE setup whether the formatting for every specific line is ok. Because tabs are prob introduced by people with different space-per-tab ratio. The benefit I see is the possibility of a ""once-and-for-all"" solution of this PR in combination with some kind of trailing-whitespaces+tabs-bot.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-548465503
https://github.com/su2code/SU2/pull/808#issuecomment-550000663:313,Availability,Redundant,Redundant,313,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663
https://github.com/su2code/SU2/pull/808#issuecomment-550000663:162,Deployability,configurat,configuration,162,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663
https://github.com/su2code/SU2/pull/808#issuecomment-550000663:162,Modifiability,config,configuration,162,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663
https://github.com/su2code/SU2/pull/808#issuecomment-550000663:257,Modifiability,config,config,257,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663
https://github.com/su2code/SU2/pull/808#issuecomment-550000663:313,Safety,Redund,Redundant,313,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663
https://github.com/su2code/SU2/pull/808#issuecomment-550471978:293,Testability,test,tests,293,"I am open to this (we have discussed it for a couple of years), and it would be good to put it into a script like externals/fix_line_endings.sh. Could even be automated later somehow with that on PRs, or can at least run manually to appease CodeFactor. I think you guys were going to run some tests on branches.. please let folks know what you see and what the steps should be",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550471978
https://github.com/su2code/SU2/pull/808#issuecomment-551070233:919,Testability,test,tests,919,"Hey @pcarruscag . > What about running the solution you propose only on subfolders. Sure, I would be ok with that. If everyone agrees on this, then it is better to do it in steps than not. And of course If there is good evidence that it messes up peoples merges than we better not do it. > your second command replaces tabs by 4 spaces not 2. oh right, I need to check whether I ran the command with 2 spaces and copied the 4 spaces command over from stack overflow. I changed the command for now. Hmmm...looking at the commit I am rather certain that it is 1tab=2spaces in the commit I did. > I still don't think changing 50k lines in one PR is a good practice. Me neither. It also kindof makes `git blame ` harder to use on those lines. If someone has a nicer way then I am keen to hear that. @economon ; > good to put it into a script like externals/fix_line_endings.sh [...] I think you guys were going to run some tests on branches. I will prepare both over the weekend and commit/report :). Cheers all, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551070233
https://github.com/su2code/SU2/pull/808#issuecomment-551451738:8,Usability,simpl,simply,8,Why not simply use clang-format and have a script to pass files/directories to have formatted? It provides more formatting options than just stripping trailing whitespaces and replacing tabs and does it in a consistent way.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551451738
https://github.com/su2code/SU2/pull/808#issuecomment-551551298:10,Usability,simpl,simply,10,"> Why not simply use clang-format and have a script to pass files/directories to have formatted? It provides more formatting options than just stripping trailing whitespaces and replacing tabs and does it in a consistent way. Tried that on a couple of files out of curiosity, it does not look very good, for example we have the habit of aligning repetitive statements across multiple lines clang-format does not keep that, we have very long lines with chained methods that look awkward when broken up.; Clang probably has a neater architecture of tiny objects where auto formatting works very well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551551298
https://github.com/su2code/SU2/pull/808#issuecomment-553412130:560,Availability,down,down,560,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130
https://github.com/su2code/SU2/pull/808#issuecomment-553412130:486,Modifiability,enhance,enhance,486,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130
https://github.com/su2code/SU2/pull/808#issuecomment-553412130:42,Usability,clear,clearing,42,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130
https://github.com/su2code/SU2/pull/808#issuecomment-553412130:699,Usability,clear,clearing,699,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130
https://github.com/su2code/SU2/pull/810#issuecomment-549881724:64,Testability,test,tests,64,That should not affect anyone (apart from making the regression tests faster). So I am merging this in.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/810#issuecomment-549881724
https://github.com/su2code/SU2/pull/813#issuecomment-551454825:115,Deployability,update,updates,115,"Just FYI: It is also possible to edit title and label after the PR has been merged. The change-log will take these updates into account. I will do that for a couple of older PRs. Nevertheless, make sure to have a proper title and label already while your PR is open.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-551454825
https://github.com/su2code/SU2/pull/813#issuecomment-551454825:95,Testability,log,log,95,"Just FYI: It is also possible to edit title and label after the PR has been merged. The change-log will take these updates into account. I will do that for a couple of older PRs. Nevertheless, make sure to have a proper title and label already while your PR is open.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-551454825
https://github.com/su2code/SU2/pull/813#issuecomment-553524933:261,Availability,error,errors,261,"> Just one comment: I see that you have made some changes so that everything compiles now with meson on Windows, Mac, and Linux. Is it possible to add these as compilation tests to our regression workflow now for Mac and Windows, so we at least catch any build errors on those platforms? This would be a nice feature we do not have yet (and has caused some issues in the past). We could do that. But I don't think that it adds enough value and just increases regression test runtime. I would say for now it is enough that it runs when there is a push to develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-553524933
https://github.com/su2code/SU2/pull/813#issuecomment-553524933:172,Testability,test,tests,172,"> Just one comment: I see that you have made some changes so that everything compiles now with meson on Windows, Mac, and Linux. Is it possible to add these as compilation tests to our regression workflow now for Mac and Windows, so we at least catch any build errors on those platforms? This would be a nice feature we do not have yet (and has caused some issues in the past). We could do that. But I don't think that it adds enough value and just increases regression test runtime. I would say for now it is enough that it runs when there is a push to develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-553524933
https://github.com/su2code/SU2/pull/813#issuecomment-553524933:470,Testability,test,test,470,"> Just one comment: I see that you have made some changes so that everything compiles now with meson on Windows, Mac, and Linux. Is it possible to add these as compilation tests to our regression workflow now for Mac and Windows, so we at least catch any build errors on those platforms? This would be a nice feature we do not have yet (and has caused some issues in the past). We could do that. But I don't think that it adds enough value and just increases regression test runtime. I would say for now it is enough that it runs when there is a push to develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-553524933
https://github.com/su2code/SU2/pull/813#issuecomment-554393825:241,Security,access,access,241,"Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms. Is the aligned_alloc from stdlib OK for Win64?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554393825
https://github.com/su2code/SU2/pull/813#issuecomment-554393825:201,Testability,test,test,201,"Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms. Is the aligned_alloc from stdlib OK for Win64?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554393825
https://github.com/su2code/SU2/pull/813#issuecomment-554401239:253,Security,access,access,253,"> ; > ; > Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; > We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms.; > ; > Is the aligned_alloc from stdlib OK for Win64?. `std::aligned_alloc` is C++17 addition but MSVC does not have it (https://developercommunity.visualstudio.com/solutions/473365/view.html), it didn't work with MinGW as well. Have a look at https://github.com/boostorg/align, in `detail` folder. On windows, the aligned memory has to be freed by `_aligned_free` instead of `free` due to old runtime implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554401239
https://github.com/su2code/SU2/pull/813#issuecomment-554401239:213,Testability,test,test,213,"> ; > ; > Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; > We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms.; > ; > Is the aligned_alloc from stdlib OK for Win64?. `std::aligned_alloc` is C++17 addition but MSVC does not have it (https://developercommunity.visualstudio.com/solutions/473365/view.html), it didn't work with MinGW as well. Have a look at https://github.com/boostorg/align, in `detail` folder. On windows, the aligned memory has to be freed by `_aligned_free` instead of `free` due to old runtime implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554401239
https://github.com/su2code/SU2/pull/813#issuecomment-554786789:123,Deployability,install,installed,123,"Also, don't hardcode `mpi4py` include directory, instead use `import mpi4py; print(mpi4py.get_include())`. I have `mpi4py` installed in user directory and hardcoded path fails to pick it up. Similarly for MKL, it will not always be in a separate directory such as when installing with `apt`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554786789
https://github.com/su2code/SU2/pull/813#issuecomment-554786789:269,Deployability,install,installing,269,"Also, don't hardcode `mpi4py` include directory, instead use `import mpi4py; print(mpi4py.get_include())`. I have `mpi4py` installed in user directory and hardcoded path fails to pick it up. Similarly for MKL, it will not always be in a separate directory such as when installing with `apt`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554786789
https://github.com/su2code/SU2/pull/813#issuecomment-555617400:100,Availability,down,down,100,"@talbring I'll have a look at why Mac compilation is failing, should be an easy fix, I tried to cut down on included headers to (maybe) save a bit on compilation...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-555617400
https://github.com/su2code/SU2/pull/813#issuecomment-557025420:153,Availability,down,download,153,"Thanks @TobiKattmann. Binaries using MPI are now also build and attached to the release. I need some help in testing them, so please if you have 2 mins, download the one appropriate for your machine from the current draft release and try to run them on your machine. If you have done so, let me know the OS and the MPI version (even in case it works!).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557025420
https://github.com/su2code/SU2/pull/813#issuecomment-557025420:80,Deployability,release,release,80,"Thanks @TobiKattmann. Binaries using MPI are now also build and attached to the release. I need some help in testing them, so please if you have 2 mins, download the one appropriate for your machine from the current draft release and try to run them on your machine. If you have done so, let me know the OS and the MPI version (even in case it works!).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557025420
https://github.com/su2code/SU2/pull/813#issuecomment-557025420:222,Deployability,release,release,222,"Thanks @TobiKattmann. Binaries using MPI are now also build and attached to the release. I need some help in testing them, so please if you have 2 mins, download the one appropriate for your machine from the current draft release and try to run them on your machine. If you have done so, let me know the OS and the MPI version (even in case it works!).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557025420
https://github.com/su2code/SU2/pull/813#issuecomment-557025420:109,Testability,test,testing,109,"Thanks @TobiKattmann. Binaries using MPI are now also build and attached to the release. I need some help in testing them, so please if you have 2 mins, download the one appropriate for your machine from the current draft release and try to run them on your machine. If you have done so, let me know the OS and the MPI version (even in case it works!).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557025420
https://github.com/su2code/SU2/pull/813#issuecomment-557060097:132,Deployability,install,install,132,@talbring Tested win64 and win64-mpi and ran the QuickStart for both. In GitBash win64 worked right away and for win64-mpi I had to install the msmpi stuff as described on the [website](https://su2code.github.io/docs_v7/Build-SU2-Windows/ ). linux64 works on our system but for linux64-mpi there are some missing libraries or so which are required ..,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557060097
https://github.com/su2code/SU2/pull/813#issuecomment-557060097:10,Testability,Test,Tested,10,@talbring Tested win64 and win64-mpi and ran the QuickStart for both. In GitBash win64 worked right away and for win64-mpi I had to install the msmpi stuff as described on the [website](https://su2code.github.io/docs_v7/Build-SU2-Windows/ ). linux64 works on our system but for linux64-mpi there are some missing libraries or so which are required ..,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557060097
https://github.com/su2code/SU2/pull/813#issuecomment-557430771:73,Deployability,install,installed,73,Ok thats to be expected (as I learned) because you have probably openmpi installed. The binaries are compiled with mpich.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557430771
https://github.com/su2code/SU2/pull/813#issuecomment-557430771:30,Usability,learn,learned,30,Ok thats to be expected (as I learned) because you have probably openmpi installed. The binaries are compiled with mpich.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557430771
https://github.com/su2code/SU2/pull/813#issuecomment-557528663:107,Testability,test,testing,107,Let's merge this. Thanks to @dkavolis and @pcarruscag for their contributions. Thanks to @TobiKattmann for testing!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557528663
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:504,Availability,avail,available,504,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:869,Availability,down,downloading,869,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:2541,Availability,avail,available,2541,"hing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier C",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1049,Deployability,install,installation,1049,"process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_B",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3098,Deployability,install,install,3098,"ng with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. _________________________",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:7470,Deployability,Patch,Patch,7470,".cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-31> (70); * A externals/tecio/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-32> (36); * M externals/tecio/teciompisrc/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-33> (119); * M externals/tecio/teciosrc/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-34> (264). Patch Links:. * https://github.com/su2code/SU2/pull/814.patch; * https://github.com/su2code/SU2/pull/814.diff. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/814?email_source=notifications&email_token=AA5FFRFS4TZSJGYCKUPXXHTQTBNV7A5CNFSM4JLN2P32YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HYINCSQ>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRBIPVWMMOXUKXI3BZDQTBNV7ANCNFSM4JLN2P3Q>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:7526,Deployability,patch,patch,7526,".cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-31> (70); * A externals/tecio/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-32> (36); * M externals/tecio/teciompisrc/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-33> (119); * M externals/tecio/teciosrc/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-34> (264). Patch Links:. * https://github.com/su2code/SU2/pull/814.patch; * https://github.com/su2code/SU2/pull/814.diff. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/814?email_source=notifications&email_token=AA5FFRFS4TZSJGYCKUPXXHTQTBNV7A5CNFSM4JLN2P32YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HYINCSQ>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRBIPVWMMOXUKXI3BZDQTBNV7ANCNFSM4JLN2P3Q>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:405,Integrability,depend,dependencies,405,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1413,Integrability,wrap,wrapper,1413,"dd dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:2947,Integrability,message,messages,2947,"ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3221,Integrability,wrap,wrapper,3221,"CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1020,Modifiability,config,configurable,1020,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:2853,Modifiability,variab,variable,2853,"ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5332,Modifiability,Config,ConfigureCGNS,5332,ub.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5514,Modifiability,Config,ConfigureCodi,5514,su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5605,Modifiability,Config,ConfigureExternals,5605,de/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/fil,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5701,Modifiability,Config,ConfigureMKL,5701,/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26>,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5791,Modifiability,Config,ConfigureMPI,5791,ll/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5881,Modifiability,Config,ConfigureMetis,5881,4/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5973,Modifiability,Config,ConfigureMutationpp,5973,ff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6070,Modifiability,Config,ConfigureParmetis,6070,> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6165,Modifiability,Config,ConfigureTecio,6165,; * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6257,Modifiability,Config,ConfigureThreads,6257,e/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-31> (70); * A externals/tecio/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3151,Testability,Test,Tested,3151,"_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull requ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3247,Testability,test,tested,3247,"SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.tx",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:4026,Testability,test,test,4026,"es were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1671,Usability,clear,clearer,1671,"ses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3666,Usability,guid,guide,3666," pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380
https://github.com/su2code/SU2/pull/814#issuecomment-552244793:170,Availability,error,errors,170,"In terms of streamlining dev process, `clang-format` would help keep code style consistent and `clang-tidy` - consistent code standard and prevent some common programmer errors. Both need a configuration file each in the root directory and most IDEs have built-in support for them. You might also want to consider `fmt` [library](https://github.com/fmtlib/fmt) for string formatting and output instead of `iostream`s. Using it should improve compile and text output times and make writing/understanding formatted strings much easier compared to the current ""chevron hell"". A subset of `fmt` is also becoming standard in C++20.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552244793
https://github.com/su2code/SU2/pull/814#issuecomment-552244793:190,Deployability,configurat,configuration,190,"In terms of streamlining dev process, `clang-format` would help keep code style consistent and `clang-tidy` - consistent code standard and prevent some common programmer errors. Both need a configuration file each in the root directory and most IDEs have built-in support for them. You might also want to consider `fmt` [library](https://github.com/fmtlib/fmt) for string formatting and output instead of `iostream`s. Using it should improve compile and text output times and make writing/understanding formatted strings much easier compared to the current ""chevron hell"". A subset of `fmt` is also becoming standard in C++20.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552244793
https://github.com/su2code/SU2/pull/814#issuecomment-552244793:190,Modifiability,config,configuration,190,"In terms of streamlining dev process, `clang-format` would help keep code style consistent and `clang-tidy` - consistent code standard and prevent some common programmer errors. Both need a configuration file each in the root directory and most IDEs have built-in support for them. You might also want to consider `fmt` [library](https://github.com/fmtlib/fmt) for string formatting and output instead of `iostream`s. Using it should improve compile and text output times and make writing/understanding formatted strings much easier compared to the current ""chevron hell"". A subset of `fmt` is also becoming standard in C++20.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552244793
https://github.com/su2code/SU2/pull/814#issuecomment-552360147:587,Availability,down,down,587,"Dear Daumantas,. I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs. I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552360147
https://github.com/su2code/SU2/pull/814#issuecomment-552360147:206,Usability,guid,guide,206,"Dear Daumantas,. I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs. I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552360147
https://github.com/su2code/SU2/pull/814#issuecomment-552432172:208,Deployability,install,installed,208,"If this is not going to be merged then consider adding `FindMKL.cmake`, `CheckLinkerFlag.cmake` and `LibraryUtils.cmake` and updating `cmake_module_path` in `meson.build` so that meson can find MKL if it was installed from PPA since includes/libraries are not placed in a common directory. https://mesonbuild.com/Dependencies.html#cmake",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552432172
https://github.com/su2code/SU2/pull/814#issuecomment-552432172:313,Integrability,Depend,Dependencies,313,"If this is not going to be merged then consider adding `FindMKL.cmake`, `CheckLinkerFlag.cmake` and `LibraryUtils.cmake` and updating `cmake_module_path` in `meson.build` so that meson can find MKL if it was installed from PPA since includes/libraries are not placed in a common directory. https://mesonbuild.com/Dependencies.html#cmake",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552432172
https://github.com/su2code/SU2/pull/814#issuecomment-553571450:603,Availability,down,down,603,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450
https://github.com/su2code/SU2/pull/814#issuecomment-553571450:1246,Availability,error,errors,1246,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450
https://github.com/su2code/SU2/pull/814#issuecomment-553571450:1187,Deployability,configurat,configuration,1187,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450
https://github.com/su2code/SU2/pull/814#issuecomment-553571450:1187,Modifiability,config,configuration,1187,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450
https://github.com/su2code/SU2/pull/814#issuecomment-553571450:222,Usability,guid,guide,222,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450
https://github.com/su2code/SU2/pull/814#issuecomment-554002404:57,Availability,error,errors,57,"You might be interested to hear that I fixed some of the errors that occur using VS2019 in #813. Compilation with meson works fine with the visual studio backend and ninja. . Still, MediPack does not support MSMPI officially yet (which is strange because its just MPICH in the end), but I will look into it soon. Maybe it works with IntelMPI, though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554002404
https://github.com/su2code/SU2/pull/814#issuecomment-554043358:480,Availability,error,errors,480,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358
https://github.com/su2code/SU2/pull/814#issuecomment-554043358:581,Availability,error,error,581,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358
https://github.com/su2code/SU2/pull/814#issuecomment-554043358:735,Integrability,message,message,735,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358
https://github.com/su2code/SU2/pull/814#issuecomment-554043358:1101,Integrability,message,message,1101,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358
https://github.com/su2code/SU2/pull/814#issuecomment-554043358:1351,Modifiability,inherit,inherited,1351,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358
https://github.com/su2code/SU2/pull/815#issuecomment-581192013:423,Availability,error,error,423,"Config, mesh and inlet file for anyone who wants to run the code:; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/Ep03wpFrJW1Hvwa73U_Sp6QBaZ_dNyyynRcwWZFCIMF0lQ?e=t5UZb4. @pcarruscag I re-wrote the entire code doing changes as you suggested. The code was working fine standalone as far as creating the CInletInterpolation pointer and interpolation functions are concerned. However, I get a segmentation error and the interpolation fails. I have tried to see if there are any memory issues but couldn't find any (as far as I know). I will appreciate any help. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-581192013
https://github.com/su2code/SU2/pull/815#issuecomment-581192013:0,Modifiability,Config,Config,0,"Config, mesh and inlet file for anyone who wants to run the code:; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/Ep03wpFrJW1Hvwa73U_Sp6QBaZ_dNyyynRcwWZFCIMF0lQ?e=t5UZb4. @pcarruscag I re-wrote the entire code doing changes as you suggested. The code was working fine standalone as far as creating the CInletInterpolation pointer and interpolation functions are concerned. However, I get a segmentation error and the interpolation fails. I have tried to see if there are any memory issues but couldn't find any (as far as I know). I will appreciate any help. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-581192013
https://github.com/su2code/SU2/pull/815#issuecomment-586033819:87,Availability,fault,faults,87,"@pcarruscag Both Akima and Linear capabilities are working totally as expected. No seg faults or any other kind of errors. I have to carry out some regression tests and post processing now to confirm everything is working fine. I am so greatly thankful for your help. I have converted this pull request from Draft to Open. Tests are failing with MPI issues, if you can help me with that it will be great. Although I am running on MPI on my CentOS system on 4 cores it works fine. I would be adding comments with all the methods explaining their purpose plus leveling my branch with most recent develop. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-586033819
https://github.com/su2code/SU2/pull/815#issuecomment-586033819:115,Availability,error,errors,115,"@pcarruscag Both Akima and Linear capabilities are working totally as expected. No seg faults or any other kind of errors. I have to carry out some regression tests and post processing now to confirm everything is working fine. I am so greatly thankful for your help. I have converted this pull request from Draft to Open. Tests are failing with MPI issues, if you can help me with that it will be great. Although I am running on MPI on my CentOS system on 4 cores it works fine. I would be adding comments with all the methods explaining their purpose plus leveling my branch with most recent develop. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-586033819
https://github.com/su2code/SU2/pull/815#issuecomment-586033819:159,Testability,test,tests,159,"@pcarruscag Both Akima and Linear capabilities are working totally as expected. No seg faults or any other kind of errors. I have to carry out some regression tests and post processing now to confirm everything is working fine. I am so greatly thankful for your help. I have converted this pull request from Draft to Open. Tests are failing with MPI issues, if you can help me with that it will be great. Although I am running on MPI on my CentOS system on 4 cores it works fine. I would be adding comments with all the methods explaining their purpose plus leveling my branch with most recent develop. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-586033819
https://github.com/su2code/SU2/pull/815#issuecomment-586033819:323,Testability,Test,Tests,323,"@pcarruscag Both Akima and Linear capabilities are working totally as expected. No seg faults or any other kind of errors. I have to carry out some regression tests and post processing now to confirm everything is working fine. I am so greatly thankful for your help. I have converted this pull request from Draft to Open. Tests are failing with MPI issues, if you can help me with that it will be great. Although I am running on MPI on my CentOS system on 4 cores it works fine. I would be adding comments with all the methods explaining their purpose plus leveling my branch with most recent develop. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-586033819
https://github.com/su2code/SU2/pull/815#issuecomment-589673332:207,Deployability,update,update,207,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332
https://github.com/su2code/SU2/pull/815#issuecomment-589673332:218,Modifiability,config,config,218,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332
https://github.com/su2code/SU2/pull/815#issuecomment-589673332:149,Safety,avoid,avoid,149,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332
https://github.com/su2code/SU2/pull/815#issuecomment-589673332:244,Testability,test,test,244,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332
https://github.com/su2code/SU2/pull/818#issuecomment-555043402:660,Energy Efficiency,green,green,660,"Hi @WallyMaier and @pcarruscag ,. I would like to do a test merge on my branch(es) before this gets merged. I just briefly scrolled through the PR but would like to take a closer look. (As close as it can get for +10.000, -10.000 but a lot of that is copied from A to B as already mentioned); I will report tomorrow (tuesday) evening. One thing ahead: I noticed there are quite some files under `Files changed` which have `No changes. ` ...it is also not a mode change (i.e. change in executable permission) ... so what does that mean? At least that is what github shows me in the `Files changed` tab ... in the `jump to file or symbol` list I get some +<some green number>, -<some red number>... so maybe it is just github messing up. Ok, two things ahead: @pcarruscag I guess I would have preferred to have your contributions split into a separate PR like #821 from the beginning as probably the reviews of each PR would be a bit easier",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555043402
https://github.com/su2code/SU2/pull/818#issuecomment-555043402:55,Testability,test,test,55,"Hi @WallyMaier and @pcarruscag ,. I would like to do a test merge on my branch(es) before this gets merged. I just briefly scrolled through the PR but would like to take a closer look. (As close as it can get for +10.000, -10.000 but a lot of that is copied from A to B as already mentioned); I will report tomorrow (tuesday) evening. One thing ahead: I noticed there are quite some files under `Files changed` which have `No changes. ` ...it is also not a mode change (i.e. change in executable permission) ... so what does that mean? At least that is what github shows me in the `Files changed` tab ... in the `jump to file or symbol` list I get some +<some green number>, -<some red number>... so maybe it is just github messing up. Ok, two things ahead: @pcarruscag I guess I would have preferred to have your contributions split into a separate PR like #821 from the beginning as probably the reviews of each PR would be a bit easier",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555043402
https://github.com/su2code/SU2/pull/818#issuecomment-555052921:239,Testability,test,test,239,"@TobiKattmann you can select the commits for which you want to see changes, if that is not good enough I give you (or anyone else) license to revert my changes here, they'll be carried over to #821 so no problems there :); I did not merge test your PR by the way, this cleanup you started is needed (and it will get done come hell or high water). ""Squash and merge"" and you are done.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555052921
https://github.com/su2code/SU2/pull/818#issuecomment-555443890:310,Deployability,release,release,310,> I wonder why the 'chore' label was removed by @talbring as I would categorize this PR as such?. First of all: the topic should be a little bit more descriptive if it should be listed in the change log. Second: there was already a `no_changelog`. Having both makes no sense and actually I don't know what the release drafter is doing then :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555443890
https://github.com/su2code/SU2/pull/818#issuecomment-555443890:199,Testability,log,log,199,> I wonder why the 'chore' label was removed by @talbring as I would categorize this PR as such?. First of all: the topic should be a little bit more descriptive if it should be listed in the change log. Second: there was already a `no_changelog`. Having both makes no sense and actually I don't know what the release drafter is doing then :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555443890
https://github.com/su2code/SU2/pull/818#issuecomment-555477603:550,Deployability,release,release,550,"The file diffs are also not correct on other PRs, they do display properly; if you look at particular commits it seems. On Tue, 19 Nov 2019, 10:35 Tim Albring, <notifications@github.com> wrote:. > I wonder why the 'chore' label was removed by @talbring; > <https://github.com/talbring> as I would categorize this PR as such?; >; > First of all: the topic should be a little bit more descriptive if it; > should be listed in the change log. Second: there was already a; > no_changelog. Having both makes no sense and actually I don't know what; > the release drafter is doing then :D; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/818?email_source=notifications&email_token=AJCOXN4ZTAKXP56DWBNEBDLQUO6PJA5CNFSM4JN55UV2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEENWNMQ#issuecomment-555443890>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNY5DY2TBI7OSLJI4ADQUO6PJANCNFSM4JN55UVQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555477603
https://github.com/su2code/SU2/pull/818#issuecomment-555477603:435,Testability,log,log,435,"The file diffs are also not correct on other PRs, they do display properly; if you look at particular commits it seems. On Tue, 19 Nov 2019, 10:35 Tim Albring, <notifications@github.com> wrote:. > I wonder why the 'chore' label was removed by @talbring; > <https://github.com/talbring> as I would categorize this PR as such?; >; > First of all: the topic should be a little bit more descriptive if it; > should be listed in the change log. Second: there was already a; > no_changelog. Having both makes no sense and actually I don't know what; > the release drafter is doing then :D; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/818?email_source=notifications&email_token=AJCOXN4ZTAKXP56DWBNEBDLQUO6PJA5CNFSM4JN55UV2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEENWNMQ#issuecomment-555443890>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNY5DY2TBI7OSLJI4ADQUO6PJANCNFSM4JN55UVQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555477603
https://github.com/su2code/SU2/pull/821#issuecomment-555729970:169,Availability,fault,fault,169,"@talbring, @TobiKattmann , looks like squash merge may create more work, #818 did not merge automatically into this branch even though it derived from it (definitely my fault from hijacking xD but I guess its something to keep in mind).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/821#issuecomment-555729970
https://github.com/su2code/SU2/pull/821#issuecomment-557109543:179,Availability,fault,fault,179,"> ; > ; > @talbring, @TobiKattmann , looks like squash merge may create more work, #818 did not merge automatically into this branch even though it derived from it (definitely my fault from hijacking xD but I guess its something to keep in mind). In #808 I basically had a commit that deleted whitespaces +tab2space for the whole repo and a next commit that reverted everything, before I went on to only apply that to certain files. So I thought a squash merge would hinder these huge useless commits to get into the history. ; As this PR does not have this back and forth I guess a squash merge is not necessary 🤷‍♂",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/821#issuecomment-557109543
https://github.com/su2code/SU2/issues/822#issuecomment-555021114:117,Availability,mainten,maintenance,117,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114
https://github.com/su2code/SU2/issues/822#issuecomment-555021114:41,Integrability,depend,depending,41,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114
https://github.com/su2code/SU2/issues/822#issuecomment-555021114:13,Testability,log,log,13,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114
https://github.com/su2code/SU2/issues/823#issuecomment-558107370:223,Security,access,access,223,"Hi @dkavolis,; It seems like you know your stuff about build systems and associated best practices, it would be great if you could open a PR with the fixes for this, I'd be happy to test the MKL stuff on the systems I have access to.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/823#issuecomment-558107370
https://github.com/su2code/SU2/issues/823#issuecomment-558107370:182,Testability,test,test,182,"Hi @dkavolis,; It seems like you know your stuff about build systems and associated best practices, it would be great if you could open a PR with the fixes for this, I'd be happy to test the MKL stuff on the systems I have access to.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/823#issuecomment-558107370
https://github.com/su2code/SU2/pull/824#issuecomment-562651461:137,Testability,test,testing,137,Next work item: **Hybrid parallel limiter and gradient calculation** This will not involve moving any CSolver files.; I may also do some testing on the element colorings on the structural solver.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-562651461
https://github.com/su2code/SU2/pull/824#issuecomment-578308297:407,Energy Efficiency,allocate,allocated,407,"The work item from #789 being worked on at the moment is **colour-based parallel residual loops (at this point we have hybrid parallel!).**; As was done for the FEA solver one numerics instance per thread is required since to use these classes one needs to write data onto them. Similarly we need thread-private copies of the small structures we then write to the residual and Jacobian, these are currently allocated by the solver.; Possible solutions:; - Allocate local temporaries in each edge loop;; - The solver allocates an array of these instead of just one for each thread to use;; - The ownership is transferred into the numerics (as currently done by the FEA classes). I am going with the third option, the solver will call `ComputeResidual` as usual but instead of passing in one array and two small matrices, it will get references to the internally (to CNumerics) allocated ones.; **As part of this I will restructure the CNumerics family**, applying the same cleanups that we have been doing for other classes. No significant code changes are planned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-578308297
https://github.com/su2code/SU2/pull/824#issuecomment-578308297:456,Energy Efficiency,Allocate,Allocate,456,"The work item from #789 being worked on at the moment is **colour-based parallel residual loops (at this point we have hybrid parallel!).**; As was done for the FEA solver one numerics instance per thread is required since to use these classes one needs to write data onto them. Similarly we need thread-private copies of the small structures we then write to the residual and Jacobian, these are currently allocated by the solver.; Possible solutions:; - Allocate local temporaries in each edge loop;; - The solver allocates an array of these instead of just one for each thread to use;; - The ownership is transferred into the numerics (as currently done by the FEA classes). I am going with the third option, the solver will call `ComputeResidual` as usual but instead of passing in one array and two small matrices, it will get references to the internally (to CNumerics) allocated ones.; **As part of this I will restructure the CNumerics family**, applying the same cleanups that we have been doing for other classes. No significant code changes are planned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-578308297
https://github.com/su2code/SU2/pull/824#issuecomment-578308297:516,Energy Efficiency,allocate,allocates,516,"The work item from #789 being worked on at the moment is **colour-based parallel residual loops (at this point we have hybrid parallel!).**; As was done for the FEA solver one numerics instance per thread is required since to use these classes one needs to write data onto them. Similarly we need thread-private copies of the small structures we then write to the residual and Jacobian, these are currently allocated by the solver.; Possible solutions:; - Allocate local temporaries in each edge loop;; - The solver allocates an array of these instead of just one for each thread to use;; - The ownership is transferred into the numerics (as currently done by the FEA classes). I am going with the third option, the solver will call `ComputeResidual` as usual but instead of passing in one array and two small matrices, it will get references to the internally (to CNumerics) allocated ones.; **As part of this I will restructure the CNumerics family**, applying the same cleanups that we have been doing for other classes. No significant code changes are planned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-578308297
https://github.com/su2code/SU2/pull/824#issuecomment-578308297:876,Energy Efficiency,allocate,allocated,876,"The work item from #789 being worked on at the moment is **colour-based parallel residual loops (at this point we have hybrid parallel!).**; As was done for the FEA solver one numerics instance per thread is required since to use these classes one needs to write data onto them. Similarly we need thread-private copies of the small structures we then write to the residual and Jacobian, these are currently allocated by the solver.; Possible solutions:; - Allocate local temporaries in each edge loop;; - The solver allocates an array of these instead of just one for each thread to use;; - The ownership is transferred into the numerics (as currently done by the FEA classes). I am going with the third option, the solver will call `ComputeResidual` as usual but instead of passing in one array and two small matrices, it will get references to the internally (to CNumerics) allocated ones.; **As part of this I will restructure the CNumerics family**, applying the same cleanups that we have been doing for other classes. No significant code changes are planned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-578308297
https://github.com/su2code/SU2/pull/824#issuecomment-583742554:32,Integrability,rout,routines,32,"In the process of making the MG routines OpenMP-friendly, I'll also restructure and clean those files (CIntegration & co).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-583742554
https://github.com/su2code/SU2/pull/827#issuecomment-559492360:58,Testability,test,tests,58,Thanks! Works like it should. Gonna merge that as soon as tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/827#issuecomment-559492360
https://github.com/su2code/SU2/issues/828#issuecomment-559756575:168,Modifiability,config,config,168,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575
https://github.com/su2code/SU2/issues/828#issuecomment-559756575:660,Modifiability,extend,extend,660,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575
https://github.com/su2code/SU2/issues/828#issuecomment-559756575:1144,Modifiability,config,config-files,1144,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575
https://github.com/su2code/SU2/issues/828#issuecomment-559756575:30,Testability,Test,Testcases,30,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:235,Modifiability,config,config,235,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:529,Modifiability,extend,extend,529,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:2163,Modifiability,config,config-files,2163,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:98,Testability,Test,Testcases,98,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:1301,Testability,test,test,1301,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:360,Usability,simpl,simply,360,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-559850074:1751,Usability,clear,clearly,1751,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:989,Availability,recover,recover,989,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2294,Availability,error,errors,2294,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2206,Integrability,Rout,Routine,2206,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:103,Modifiability,config,config-files,103,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:729,Modifiability,rewrite,rewrites,729,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:989,Safety,recover,recover,989,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:696,Testability,test,tests,696,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:1381,Testability,test,test,1381,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:1234,Usability,simpl,simply,1234," of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2218,Usability,simpl,simply,2218,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057
https://github.com/su2code/SU2/issues/828#issuecomment-562931249:1913,Modifiability,variab,variables,1913,"aviour can be seen. The solutions were converged by about 8 orders of magnitude at each time step for both cases. I reran the current develop code with symmetry boundary condition forcing all the way to residual stalling as suggested for a few hundred time steps but I think the case was pretty well converged already and there is no difference with increased convergence. ![image](https://user-images.githubusercontent.com/33747655/70387595-e5412380-199e-11ea-96d2-f7ee447a8131.png); ![image](https://user-images.githubusercontent.com/33747655/70387599-effbb880-199e-11ea-81f4-5fd37ae9ebd8.png). Although it is good that the converged behaviour is similar for both boundary conditions, the difference in transient behaviour will have a large effect for coupled unsteady problems. . About the dynamic grid, the reason I spotted this was because the gradient verification against rigid motion with symmetry plane boundary condition was good but not as good as the gradient verification with Euler wall boundary condition (as well as having slightly different inherent sensitivity magnitudes between the two boundary conditions caused by the difference in transient behaviour). Therefore, this is perhaps missing something as I would have expected to see the same level of agreement in the sensitivities for the symmetry plane boundary condition as is seen for the Euler wall. I’ve added the results using both boundary conditions for a pitching airfoil case using efficiency as the objective function and FFD control points as the design variables. The differences are seen at the trailing edge (points 10, 11, 21, 22). ![image](https://user-images.githubusercontent.com/33747655/70387604-043fb580-199f-11ea-9c5e-08f5feb2d14e.png); ![image](https://user-images.githubusercontent.com/33747655/70387609-0a359680-199f-11ea-91b5-84931b1d7ec0.png). Should the Euler wall boundary condition be replaced by the symmetry plane condition or could we have both as options to choose from?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562931249
https://github.com/su2code/SU2/issues/828#issuecomment-562931249:21,Testability,test,tests,21,"Hi Tobi,. I ran some tests using the latest code in develop, as of Friday 6th December, but swapping between the symmetry plane boundary condition and the previous Euler wall boundary condition. Results are below, where firstly the steady results were very similar as Rocco mentioned. In time-domain, they look to converge to similar values but the difference in transient behaviour can be seen. The solutions were converged by about 8 orders of magnitude at each time step for both cases. I reran the current develop code with symmetry boundary condition forcing all the way to residual stalling as suggested for a few hundred time steps but I think the case was pretty well converged already and there is no difference with increased convergence. ![image](https://user-images.githubusercontent.com/33747655/70387595-e5412380-199e-11ea-96d2-f7ee447a8131.png); ![image](https://user-images.githubusercontent.com/33747655/70387599-effbb880-199e-11ea-81f4-5fd37ae9ebd8.png). Although it is good that the converged behaviour is similar for both boundary conditions, the difference in transient behaviour will have a large effect for coupled unsteady problems. . About the dynamic grid, the reason I spotted this was because the gradient verification against rigid motion with symmetry plane boundary condition was good but not as good as the gradient verification with Euler wall boundary condition (as well as having slightly different inherent sensitivity magnitudes between the two boundary conditions caused by the difference in transient behaviour). Therefore, this is perhaps missing something as I would have expected to see the same level of agreement in the sensitivities for the symmetry plane boundary condition as is seen for the Euler wall. I’ve added the results using both boundary conditions for a pitching airfoil case using efficiency as the objective function and FFD control points as the design variables. The differences are seen at the trailing edge (points 10, 11, 21, 22). ![imag",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562931249
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:295,Availability,down,down,295,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:533,Modifiability,config,config,533,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:333,Testability,test,tests,333,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:411,Testability,test,test,411,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:456,Testability,test,test,456,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:576,Testability,test,test,576,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:1509,Testability,test,test,1509,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563150217:164,Usability,simpl,simply,164,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217
https://github.com/su2code/SU2/issues/828#issuecomment-563292392:538,Availability,down,down,538,"Hi Rocco, . My approach to test with both boundary conditions was rather crude. I just pasted back the Euler wall BC that was removed in #740 . You can see what I did if you look at the change to solver_direct_mean.cpp as part of the draft PR #833 . While debugging, it is easy to rebuild the code with true/false if statement as needed to swap between the two boundary conditions. Thanks for the 2D case with no grid motion comparison you’ve run. The two boundary conditions do seem to give the same result in this case and helps narrow down the search. However, I don’t think the differences are restricted only to 3D cases because with either non-zero rigid motion grid movement or deforming mesh, there are still differences in the 2D solution. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563292392
https://github.com/su2code/SU2/issues/828#issuecomment-563292392:27,Testability,test,test,27,"Hi Rocco, . My approach to test with both boundary conditions was rather crude. I just pasted back the Euler wall BC that was removed in #740 . You can see what I did if you look at the change to solver_direct_mean.cpp as part of the draft PR #833 . While debugging, it is easy to rebuild the code with true/false if statement as needed to swap between the two boundary conditions. Thanks for the 2D case with no grid motion comparison you’ve run. The two boundary conditions do seem to give the same result in this case and helps narrow down the search. However, I don’t think the differences are restricted only to 3D cases because with either non-zero rigid motion grid movement or deforming mesh, there are still differences in the 2D solution. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563292392
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:789,Availability,recover,recovered,789,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:2532,Availability,down,down-movement,2532,"t trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one might end up without fluttering. So based on the flow history there might exist multiple ""stable"" states. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1909,Deployability,integrat,integrated,1909,"both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one mig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1758,Energy Efficiency,reduce,reduced,1758,"dy (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:2786,Energy Efficiency,energy,energy,2786,"t trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one might end up without fluttering. So based on the flow history there might exist multiple ""stable"" states. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1909,Integrability,integrat,integrated,1909,"both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one mig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:789,Safety,recover,recovered,789,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:449,Security,validat,validation,449,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:648,Testability,test,test,648,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-563314747:682,Usability,simpl,simply,682,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747
https://github.com/su2code/SU2/issues/828#issuecomment-565461347:1329,Integrability,Rout,Routine,1329,"a JST scheme without dissipation term on the BC. A ""reflected state"" is created where scalars are copied and velocity is mirrored along the plane. Then the quantities (domain & reflected) are averaged (on the edge) and `CNumerics::GetInviscidProjFlux` is called with these values. The returned Proj_Flux is directly taken as Residual. For JST dissipation would be added in a step afterwards.; -> **new Euler BC**: Here for compressible flow always (!) `CUpwRoe_Flow` is taken as numerical convective scheme. Boundaries have their own numerics container in `CONV_BOUND_TERM`. Look in CDriver.cpp for allocation of `SPACE_CENTERED` compressible schemes (as JST was used in all examples in this issue, but the problem is still there if upwind schemes were taken). And independent of the users choice of `CONV_NUM_METHOD_FLOW`, as said above, `CUpwRoe_Flow` is hard coded as numerical convective scheme for boundary nodes. As in the old Euler BC a ""reflected state"" is created and handed to the `ComputeResidual` Routine of the numerical scheme, together with the boundary vertex state.; -> So one major difference between both formulations is that in the new Euler wall left & right state are created and the respective convective scheme class does the rest via `ComputeResidual`. In the old implementation everything done in the `ComputeResidual` routine is ""copied"" into the BC_Euler_Wall and modified to its needs... and it looks like central convective scheme (JST) without dissipation term. 2. When changing the `CUpwRoe_Flow` scheme, which is used only for convective schemes on boundaries `CONV_BOUND_TERM`, such that it behaves like JST without dissipation term -> then old Euler and new Euler wall BC return the same results in CD and CL. 3. So the Convective Residual is somewhat different on the surface where the Objectives CL and CD are evaluated. JST without dissipation term vs `CUpwRoeBase_Flow::ComputeResidual`. Which (and if) one of both approaches is the ""corect"" is not something I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565461347
https://github.com/su2code/SU2/issues/828#issuecomment-565461347:1665,Integrability,rout,routine,1665,"ssipation would be added in a step afterwards.; -> **new Euler BC**: Here for compressible flow always (!) `CUpwRoe_Flow` is taken as numerical convective scheme. Boundaries have their own numerics container in `CONV_BOUND_TERM`. Look in CDriver.cpp for allocation of `SPACE_CENTERED` compressible schemes (as JST was used in all examples in this issue, but the problem is still there if upwind schemes were taken). And independent of the users choice of `CONV_NUM_METHOD_FLOW`, as said above, `CUpwRoe_Flow` is hard coded as numerical convective scheme for boundary nodes. As in the old Euler BC a ""reflected state"" is created and handed to the `ComputeResidual` Routine of the numerical scheme, together with the boundary vertex state.; -> So one major difference between both formulations is that in the new Euler wall left & right state are created and the respective convective scheme class does the rest via `ComputeResidual`. In the old implementation everything done in the `ComputeResidual` routine is ""copied"" into the BC_Euler_Wall and modified to its needs... and it looks like central convective scheme (JST) without dissipation term. 2. When changing the `CUpwRoe_Flow` scheme, which is used only for convective schemes on boundaries `CONV_BOUND_TERM`, such that it behaves like JST without dissipation term -> then old Euler and new Euler wall BC return the same results in CD and CL. 3. So the Convective Residual is somewhat different on the surface where the Objectives CL and CD are evaluated. JST without dissipation term vs `CUpwRoeBase_Flow::ComputeResidual`. Which (and if) one of both approaches is the ""corect"" is not something I am able to say with great confidence. I tend towards: ""Well, just as you get (slightly) different results if you choose JST or ROE in the domain due to the different residual formulation, you get different results if different convective schemes on the boundary vertices are chosen. In the domain the choice is ~ Upwind if discontinuities like sh",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565461347
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:606,Availability,down,down,606,"Hi Tobi,. Great to see the same dynamic behaviour from both boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynami",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:748,Availability,avail,available,748,"Hi Tobi,. Great to see the same dynamic behaviour from both boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynami",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:2570,Availability,avail,available,2570,"h other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've attached the case files for this as well and it would be interesting to see the results when run with the change you've made to reproduce the same convective flux strategy at the boundary. As a final test I ran the rotating frame case, again from @economon 's thesis which is a steady problem with simulated grid motion. I was able to run and replicate the flow characteristics using the Euler wall boundary condition but with symmetry plane the residuals were straightaway at machine precision and the flow never develops around the airfoil. [rotating_frame.zip](https://github.com/su2code/SU2/files/3963",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:2070,Energy Efficiency,reduce,reduced,2070,"the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've attached the case files for this as well and it would be interesting to see the results when run with the cha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:127,Testability,test,tested,127,"Hi Tobi,. Great to see the same dynamic behaviour from both boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynami",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:898,Testability,test,tests,898,"Hi Tobi,. Great to see the same dynamic behaviour from both boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynami",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:1041,Testability,test,tested,1041,"oth boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:1889,Testability,test,tested,1889,"y conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've att",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-565716260:3150,Testability,test,test,3150," this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've attached the case files for this as well and it would be interesting to see the results when run with the change you've made to reproduce the same convective flux strategy at the boundary. As a final test I ran the rotating frame case, again from @economon 's thesis which is a steady problem with simulated grid motion. I was able to run and replicate the flow characteristics using the Euler wall boundary condition but with symmetry plane the residuals were straightaway at machine precision and the flow never develops around the airfoil. [rotating_frame.zip](https://github.com/su2code/SU2/files/3963763/rotating_frame.zip). Overall from these 2D airfoil cases, there are some unexpected variations between the two boundary conditions. A closer look at grid motion with the symmetry plane is needed. It would also be interesting to run the cases with symmetry plane using the convective flux residuals calculated in the same way as the Euler wall to see if that takes them closer to the original results, similarly as seen in the fixed grid problem. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2482,Energy Efficiency,reduce,reduced,2482,"ped. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:36,Performance,perform,performed,36,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:965,Performance,perform,performed,965,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:51,Security,validat,validation,51,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:258,Security,validat,validation,258,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2666,Security,validat,validated,2666,"ns. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as we already pointed out at the beginning, noticing that both steady and converged values were very very similar for the two boundary conditions) Anyway, by increasing the frequency, we notice that differences increase rapidly pointing out the problem must be somehow related to the rate of unsteadiness of the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:269,Testability,test,test,269,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:354,Testability,test,test,354,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2694,Testability,test,test,2694,"ns. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as we already pointed out at the beginning, noticing that both steady and converged values were very very similar for the two boundary conditions) Anyway, by increasing the frequency, we notice that differences increase rapidly pointing out the problem must be somehow related to the rate of unsteadiness of the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1134,Availability,recover,recovers,1134,"ry_plane) and add the following settings:; ```; % Surf; YES=oldEuler; NO=NewEuler; VISUALIZE_SURFACE_DEF= NO ; % Vol; YES=UpwRoe; NO=JST_BC; VISUALIZE_VOLUME_DEF= NO; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; ```; In that branch I added the possibility to run the old or new Euler_Wall BC on `MARKER_EULER `walls (`MARKER_SYM `always uses the the new implementation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1239,Availability,recover,recovers,1239,"ZE_SURFACE_DEF= NO ; % Vol; YES=UpwRoe; NO=JST_BC; VISUALIZE_VOLUME_DEF= NO; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; ```; In that branch I added the possibility to run the old or new Euler_Wall BC on `MARKER_EULER `walls (`MARKER_SYM `always uses the the new implementation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a47",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:2092,Availability,recover,recovers,2092,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1760,Energy Efficiency,green,green,1760,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1134,Safety,recover,recovers,1134,"ry_plane) and add the following settings:; ```; % Surf; YES=oldEuler; NO=NewEuler; VISUALIZE_SURFACE_DEF= NO ; % Vol; YES=UpwRoe; NO=JST_BC; VISUALIZE_VOLUME_DEF= NO; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; ```; In that branch I added the possibility to run the old or new Euler_Wall BC on `MARKER_EULER `walls (`MARKER_SYM `always uses the the new implementation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1239,Safety,recover,recovers,1239,"ZE_SURFACE_DEF= NO ; % Vol; YES=UpwRoe; NO=JST_BC; VISUALIZE_VOLUME_DEF= NO; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; ```; In that branch I added the possibility to run the old or new Euler_Wall BC on `MARKER_EULER `walls (`MARKER_SYM `always uses the the new implementation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a47",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:2092,Safety,recover,recovers,2092,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578048838:2363,Testability,test,testcase,2363,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838
https://github.com/su2code/SU2/issues/828#issuecomment-578083725:44,Availability,recover,recovered,44,"Hi Tobi,. If the old results can exactly be recovered for the 3D case discussed, then I recommend updating the code with the changes you've made for the JST convective residual as default since those were the original results and they have also been validated in @RoccoBombardieri 's study. I've just tried the branch `testing_symmetry_plane` with the recommended settings for the NACA0012 pitching airfoil case. With the JST convective residual calculation, the results still appear to be different on initial look. Something still appears to be not right when grid motion is included. Can you please also look into this and try the pitching NACA0012 using the case zip I'd attached in my earlier post?. Thanks,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578083725
https://github.com/su2code/SU2/issues/828#issuecomment-578083725:44,Safety,recover,recovered,44,"Hi Tobi,. If the old results can exactly be recovered for the 3D case discussed, then I recommend updating the code with the changes you've made for the JST convective residual as default since those were the original results and they have also been validated in @RoccoBombardieri 's study. I've just tried the branch `testing_symmetry_plane` with the recommended settings for the NACA0012 pitching airfoil case. With the JST convective residual calculation, the results still appear to be different on initial look. Something still appears to be not right when grid motion is included. Can you please also look into this and try the pitching NACA0012 using the case zip I'd attached in my earlier post?. Thanks,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578083725
https://github.com/su2code/SU2/issues/828#issuecomment-578083725:250,Security,validat,validated,250,"Hi Tobi,. If the old results can exactly be recovered for the 3D case discussed, then I recommend updating the code with the changes you've made for the JST convective residual as default since those were the original results and they have also been validated in @RoccoBombardieri 's study. I've just tried the branch `testing_symmetry_plane` with the recommended settings for the NACA0012 pitching airfoil case. With the JST convective residual calculation, the results still appear to be different on initial look. Something still appears to be not right when grid motion is included. Can you please also look into this and try the pitching NACA0012 using the case zip I'd attached in my earlier post?. Thanks,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578083725
https://github.com/su2code/SU2/issues/828#issuecomment-633731665:196,Availability,recover,recovers,196,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665
https://github.com/su2code/SU2/issues/828#issuecomment-633731665:889,Availability,recover,recovers,889,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665
https://github.com/su2code/SU2/issues/828#issuecomment-633731665:255,Energy Efficiency,green,green,255,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665
https://github.com/su2code/SU2/issues/828#issuecomment-633731665:196,Safety,recover,recovers,196,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665
https://github.com/su2code/SU2/issues/828#issuecomment-633731665:889,Safety,recover,recovers,889,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665
https://github.com/su2code/SU2/issues/828#issuecomment-633731665:1194,Testability,test,test,1194,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665
https://github.com/su2code/SU2/issues/828#issuecomment-634591483:156,Modifiability,config,config,156,"Yes I use [`testing_symmetry_plane`](https://github.com/su2code/su2/tree/testing_symmetry_plane) which is up to date with develop otherwise. I used boolean config options to switch between things as follows:; ```; % Surf; YES=oldEuler; NO=NewEuler; VISUALIZE_SURFACE_DEF= YES. % YES=use toms fix; NO=do not use toms fix; (only active if NewEuler wall is used, i.e.VISUALIZE_SURFACE_DEF=NO); DEFORM_CONSOLE_OUTPUT=NO. % the following two are only really active for the NewEuler as there the numerics class is explicitly used; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; % Vol; YES=UpwRoe(default in develop then and now); NO=JST_BC; VISUALIZE_VOLUME_DEF= YES; ```; The most interesting comparison in my opinion is oldEuler (other options shouldnt matter) vs newEuler+JST_BC (with and without Toms fix) as these two should do pretty much the same thing. And now we know now pretty much that Toms fix actually ensures that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634591483
https://github.com/su2code/SU2/issues/828#issuecomment-634597641:136,Testability,test,test,136,"Hello Tobi, Charanya,. thanks for the efforts. Your results are highly encouraging! I'd like to run in the following days the ONERA FSI test case on my framework for a triple check. Only think is that I was working on a branch on Ruben Sanchez's fork of the code. Can some pro git user tell me how to pull from the `fix_gridvel` on the main repo? Otherwise @TobiKattmann, you were mentioning about adding few lines to the CEulerSolver.cpp? Can you be more detailed about that? Of course I guess these changes need to be used without forcing the old BC in solver_direct_mean.cpp as Charanya was doing. Best",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634597641
https://github.com/su2code/SU2/issues/828#issuecomment-634681005:57,Deployability,integrat,integrated,57,I just had a chat with @RoccoBombardieri to get Toms fix integrated in his branch and I hope that results will match the old Implementation 👍,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634681005
https://github.com/su2code/SU2/issues/828#issuecomment-634681005:57,Integrability,integrat,integrated,57,I just had a chat with @RoccoBombardieri to get Toms fix integrated in his branch and I hope that results will match the old Implementation 👍,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634681005
https://github.com/su2code/SU2/issues/828#issuecomment-636327003:818,Energy Efficiency,green,green,818,"Hello Tobi, Charanya, ; I run the simulation with my FSI framework including @economon modifications as suggested by @TobiKattmann. Unfortunately the simulation crashed due to server problems before it was complete but the partial results give us some preliminary information.; ![Comparison](https://user-images.githubusercontent.com/23583209/83328161-42989c00-a281-11ea-8b52-39b1967c1f69.jpg). The figure proposes the same time domain GAF comparison shown in https://github.com/su2code/SU2/issues/828#issuecomment-576826669.; The blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. Here in green I add the solution run with Tom's fix of the BC as discussed with Tobi. You can notice how this new version, while featuring a response similar to the reference response, shows a filtering of the higher frequency dynamics. Can't do yet the Fourier transform of the signal to quantitatively asses at which frequency the results start diverging from the reference, so I don't know how much this discrepancy is, in effect, relevant. ; We are talking about really high frequency dynamics which may be due to the numerical scheme. Certainly, it would be interesting to understand the cause of that.; ; Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-636327003
https://github.com/su2code/SU2/issues/828#issuecomment-636327003:787,Security,validat,validated,787,"Hello Tobi, Charanya, ; I run the simulation with my FSI framework including @economon modifications as suggested by @TobiKattmann. Unfortunately the simulation crashed due to server problems before it was complete but the partial results give us some preliminary information.; ![Comparison](https://user-images.githubusercontent.com/23583209/83328161-42989c00-a281-11ea-8b52-39b1967c1f69.jpg). The figure proposes the same time domain GAF comparison shown in https://github.com/su2code/SU2/issues/828#issuecomment-576826669.; The blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. Here in green I add the solution run with Tom's fix of the BC as discussed with Tobi. You can notice how this new version, while featuring a response similar to the reference response, shows a filtering of the higher frequency dynamics. Can't do yet the Fourier transform of the signal to quantitatively asses at which frequency the results start diverging from the reference, so I don't know how much this discrepancy is, in effect, relevant. ; We are talking about really high frequency dynamics which may be due to the numerical scheme. Certainly, it would be interesting to understand the cause of that.; ; Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-636327003
https://github.com/su2code/SU2/issues/828#issuecomment-639402407:550,Security,validat,validated,550,"Hello,. So, as promised I add the complete results of the simulation which I re-run in the meanwhile (please zoom the image for better details).; ![Comparison](https://user-images.githubusercontent.com/23583209/83864373-efad6180-a724-11ea-9b87-321ac14834b3.jpg). Same as the previous post, the blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. In black the solution run with Tom's fix of the BC as discussed with Tobi. In this case I scaled the response with the dynamic pressure as did in https://github.com/su2code/SU2/issues/828#issuecomment-576826669. I've also made a zoom of the signal at the beginning (when I introduce the blended step in time on the moving boundary) and at the end when all the dynamics is over. As you can see, as previously mentioned, Tom's fix appears to filter some high frequency dynamics but for the rest the trend is very similar to the reference one. In the end , when the steady value is reached, Tom's fix converges to the same value of the blue signal with the bugged BC. It is true anyway that the difference with the reference is very small, which is something we already knew. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-639402407
https://github.com/su2code/SU2/pull/830#issuecomment-560572616:703,Performance,perform,performance,703,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616
https://github.com/su2code/SU2/pull/830#issuecomment-560572616:666,Testability,benchmark,benchmark,666,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616
https://github.com/su2code/SU2/pull/830#issuecomment-560572616:242,Usability,simpl,simple,242,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616
https://github.com/su2code/SU2/pull/830#issuecomment-560572616:717,Usability,simpl,simplicity,717,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1782,Availability,Error,Error,1782," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2240,Energy Efficiency,schedul,scheduling,2240,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:643,Integrability,rout,routines,643,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:805,Integrability,rout,routine,805,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:834,Integrability,rout,routines,834,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1181,Integrability,rout,routines,1181,"olvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call tho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1761,Integrability,rout,routines,1761," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2120,Integrability,rout,routines,2120,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2181,Integrability,rout,routines,2181,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2291,Integrability,rout,routines,2291," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2585,Integrability,rout,routines,2585,"aively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1410,Modifiability,variab,variable,1410,", this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1471,Modifiability,variab,variables,1471,"l Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:3593,Modifiability,variab,variable,3593,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:413,Performance,perform,performance,413,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1087,Performance,concurren,concurrently,1087,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2029,Performance,bottleneck,bottleneck,2029,"w` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear precondition",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2645,Performance,Perform,Performance,2645,"l is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2927,Performance,tune,tune,2927,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:3033,Performance,perform,performance,3033,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:3079,Performance,perform,performance,3079,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:3467,Performance,perform,performance,3467,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:3685,Performance,perform,performance,3685,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:843,Safety,safe,safe,843,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1441,Safety,risk,risk,1441,"l Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2162,Safety,safe,safe,2162,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2405,Safety,risk,risk,2405," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2305,Security,access,access,2305," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1147,Testability,assert,asserting,1147,"olvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call tho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1934,Testability,test,test,1934,"w` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear precondition",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:8,Usability,simpl,simple,8,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1597,Usability,simpl,simply,1597,"he preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1710,Usability,simpl,simple,1710," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766
https://github.com/su2code/SU2/pull/830#issuecomment-566642160:244,Integrability,rout,routines,244,"Following along here.. will you eventually move the parallel section in CSysSolve up to the full application level (in the main() maybe) when you move to the next steps? In the earlier work, we found that, as you have seen in the linear solver routines, spawning parallel sections kernel-wise carried a large overhead. We found that the best performance was given by spawning right at the start and carry the threads through the entire program, just like the MPI ranks. . My only other comments, which it sounds like you are addressing, are to make the threads as transparent as possible to developers (shouldn't need to touch them unless they want to, like the MPI), and to make the compilation painless (disable/enable). Have you connected it to meson somehow yet?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566642160
https://github.com/su2code/SU2/pull/830#issuecomment-566642160:342,Performance,perform,performance,342,"Following along here.. will you eventually move the parallel section in CSysSolve up to the full application level (in the main() maybe) when you move to the next steps? In the earlier work, we found that, as you have seen in the linear solver routines, spawning parallel sections kernel-wise carried a large overhead. We found that the best performance was given by spawning right at the start and carry the threads through the entire program, just like the MPI ranks. . My only other comments, which it sounds like you are addressing, are to make the threads as transparent as possible to developers (shouldn't need to touch them unless they want to, like the MPI), and to make the compilation painless (disable/enable). Have you connected it to meson somehow yet?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566642160
https://github.com/su2code/SU2/pull/830#issuecomment-566654480:225,Availability,error,error-prone,225,"I should also mention though that moving the threading to a single high-level parallel section is also very problematic for readability/development. Folks will have to be aware that the threads are active, and it can be very error-prone. This was one of the major detractors of implementing the OpenMP framework as we had it in the C&F paper into the develop branch, even though the performance was quite good (and also the interoperability of threading and AD at the time). Any clever suggestions/techniques for hiding the threading as much as possible are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566654480
https://github.com/su2code/SU2/pull/830#issuecomment-566654480:424,Integrability,interoperab,interoperability,424,"I should also mention though that moving the threading to a single high-level parallel section is also very problematic for readability/development. Folks will have to be aware that the threads are active, and it can be very error-prone. This was one of the major detractors of implementing the OpenMP framework as we had it in the C&F paper into the develop branch, even though the performance was quite good (and also the interoperability of threading and AD at the time). Any clever suggestions/techniques for hiding the threading as much as possible are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566654480
https://github.com/su2code/SU2/pull/830#issuecomment-566654480:383,Performance,perform,performance,383,"I should also mention though that moving the threading to a single high-level parallel section is also very problematic for readability/development. Folks will have to be aware that the threads are active, and it can be very error-prone. This was one of the major detractors of implementing the OpenMP framework as we had it in the C&F paper into the develop branch, even though the performance was quite good (and also the interoperability of threading and AD at the time). Any clever suggestions/techniques for hiding the threading as much as possible are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566654480
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:322,Energy Efficiency,allocate,allocate,322,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:202,Integrability,rout,routines,202,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:593,Integrability,rout,routines,593,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:474,Modifiability,refactor,refactor,474,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:918,Performance,perform,performance,918,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:78,Safety,detect,detecting,78,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:228,Safety,risk,risk,228,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-566667503:645,Safety,safe,safe,645,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503
https://github.com/su2code/SU2/pull/830#issuecomment-573715803:50,Testability,test,testing,50,"I think this is stable enough to be merged, while testing #834 and #843 I think I went through most combinations of solvers/preconditioners and things seem to work fine, the only source of problems was the dot product (it was locking in some conditions) but all seems fine now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-573715803
https://github.com/su2code/SU2/issues/831#issuecomment-567724290:17,Deployability,update,update,17,@salvovitale any update?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/831#issuecomment-567724290
https://github.com/su2code/SU2/issues/831#issuecomment-570058167:46,Testability,test,test,46,"@auzbaig I put a fix for this in #824, please test it with your cases, if you use harmonic balance test that too as the fix should affect it as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/831#issuecomment-570058167
https://github.com/su2code/SU2/issues/831#issuecomment-570058167:99,Testability,test,test,99,"@auzbaig I put a fix for this in #824, please test it with your cases, if you use harmonic balance test that too as the fix should affect it as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/831#issuecomment-570058167
https://github.com/su2code/SU2/pull/834#issuecomment-573727655:82,Testability,test,test,82,This just turned a month old :) If I could have some reviews please :); I'll post test results by the end of the week for the failing regressions.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573727655
https://github.com/su2code/SU2/pull/834#issuecomment-573929388:770,Integrability,depend,depend,770,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388
https://github.com/su2code/SU2/pull/834#issuecomment-573929388:335,Safety,avoid,avoid,335,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388
https://github.com/su2code/SU2/pull/834#issuecomment-573929388:326,Testability,log,logic,326,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388
https://github.com/su2code/SU2/pull/834#issuecomment-573929388:1747,Testability,test,test,1747,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388
https://github.com/su2code/SU2/pull/834#issuecomment-575310823:263,Deployability,update,updated,263,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823
https://github.com/su2code/SU2/pull/834#issuecomment-575310823:353,Deployability,update,updated,353,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823
https://github.com/su2code/SU2/pull/834#issuecomment-575310823:419,Testability,test,testcases,419,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823
https://github.com/su2code/SU2/pull/834#issuecomment-575310823:537,Testability,test,tests,537,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823
https://github.com/su2code/SU2/pull/834#issuecomment-575310823:657,Testability,test,tests,657,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823
https://github.com/su2code/SU2/pull/834#issuecomment-575310823:256,Usability,simpl,simply,256,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823
https://github.com/su2code/SU2/pull/836#issuecomment-566524740:350,Deployability,update,updated,350,"> Hi @SteffenMath,; > ; > Welcome to SU2 (it seems it is your first PR), it looks like a good generalisation of the moving averages, I leave some small code comments below. As a general point does this averaging rely on fixed timesteps?; > ; > Cheers,; > Pedro. Hi @pcarruscag, . thanks for your quick reply and the usefull comments. I've pushed and updated version, that includes changes to your suggestions. ; Regarding your general question: The windowing approach is in theory not dependent on a fixed time-stepsize, however the current implementation relies on a fixed stepsize. This can be changed quite easily in the CWindowingTools.cpp file and the corresponding class, should there be demand. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/836#issuecomment-566524740
https://github.com/su2code/SU2/pull/836#issuecomment-566524740:485,Integrability,depend,dependent,485,"> Hi @SteffenMath,; > ; > Welcome to SU2 (it seems it is your first PR), it looks like a good generalisation of the moving averages, I leave some small code comments below. As a general point does this averaging rely on fixed timesteps?; > ; > Cheers,; > Pedro. Hi @pcarruscag, . thanks for your quick reply and the usefull comments. I've pushed and updated version, that includes changes to your suggestions. ; Regarding your general question: The windowing approach is in theory not dependent on a fixed time-stepsize, however the current implementation relies on a fixed stepsize. This can be changed quite easily in the CWindowingTools.cpp file and the corresponding class, should there be demand. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/836#issuecomment-566524740
https://github.com/su2code/SU2/issues/838#issuecomment-564970570:76,Availability,error,error,76,"Hi,. thanks for bringing it up here. It seems to be some top-level (merge?) error that occured when putting together v7. ; The interface data exchange apparently is just not called. I'll push a fix for this, open up a draft PR and then we can check if everything is alright again for compressible flows as well. Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-564970570
https://github.com/su2code/SU2/issues/838#issuecomment-564970570:127,Integrability,interface,interface,127,"Hi,. thanks for bringing it up here. It seems to be some top-level (merge?) error that occured when putting together v7. ; The interface data exchange apparently is just not called. I'll push a fix for this, open up a draft PR and then we can check if everything is alright again for compressible flows as well. Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-564970570
https://github.com/su2code/SU2/issues/838#issuecomment-564999020:87,Availability,down,down,87,"Please check with branch `fix_compressible_CHT`. (You can either select it in the drop down menu before downloading or in case you have a repository clone on your machine, you can check it out via; `git fetch`; `git checkout fix_compressible_CHT`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-564999020
https://github.com/su2code/SU2/issues/838#issuecomment-564999020:104,Availability,down,downloading,104,"Please check with branch `fix_compressible_CHT`. (You can either select it in the drop down menu before downloading or in case you have a repository clone on your machine, you can check it out via; `git fetch`; `git checkout fix_compressible_CHT`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-564999020
https://github.com/su2code/SU2/issues/838#issuecomment-565089754:483,Deployability,update,updated,483,"Hi Ole,. Thanks for pushing the fix. It seems that the CHT still may not be working as intended. I changed to the fix_compressible_CHT branch and recompiled SU2 and then ran the same config files as before. These are the resulting volume vtk outputs attached:; [vtk_out.zip](https://github.com/su2code/SU2/files/3956891/vtk_out.zip); It seems to me that the heat fluxes are getting sent from the fluid zone to the solid zone correctly, reducing the temperature of the solid, but the updated plate surface temperature may not be getting set back into the fluid zone. Please let me know if you think the results indicate something else. Jordan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565089754
https://github.com/su2code/SU2/issues/838#issuecomment-565089754:183,Modifiability,config,config,183,"Hi Ole,. Thanks for pushing the fix. It seems that the CHT still may not be working as intended. I changed to the fix_compressible_CHT branch and recompiled SU2 and then ran the same config files as before. These are the resulting volume vtk outputs attached:; [vtk_out.zip](https://github.com/su2code/SU2/files/3956891/vtk_out.zip); It seems to me that the heat fluxes are getting sent from the fluid zone to the solid zone correctly, reducing the temperature of the solid, but the updated plate surface temperature may not be getting set back into the fluid zone. Please let me know if you think the results indicate something else. Jordan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565089754
https://github.com/su2code/SU2/issues/838#issuecomment-565438939:79,Availability,error,error,79,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939
https://github.com/su2code/SU2/issues/838#issuecomment-565438939:204,Integrability,interface,interface,204,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939
https://github.com/su2code/SU2/issues/838#issuecomment-565438939:157,Testability,test,test,157,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939
https://github.com/su2code/SU2/pull/839#issuecomment-567479668:301,Testability,test,test,301,"> LGTM, I think what is proposed in #770 could help prevent this kind of bugs. Probably it could help as one could painlessly add special entries to such a bit field that will remove the `||`'s from the code, even for minor examples like this. I'll leave this as draft for a while because I'd like to test some more compressible stuff in terms of reference values, non-dimensionalization and so on. It's a good opportunity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-567479668
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:29,Deployability,integrat,integrated,29,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:29,Integrability,integrat,integrated,29,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:412,Modifiability,config,config,412,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:639,Security,validat,validated,639,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:744,Testability,test,test,744,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:54,Usability,clear,clear,54,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:580,Usability,simpl,simply,580,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577108935:1027,Usability,clear,cleared,1027,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935
https://github.com/su2code/SU2/pull/839#issuecomment-577167743:186,Testability,test,testing,186,"> I'd prefer to have DIRECT_TEMPERATURE_ROBIN_HEATFLUX as the default and ""hide"" the rest as developer's options for the moment. Ok, makes sense if the results differ and need some more testing to not add it to the config_template. . > you're very welcome to have a look over it! :-). I'll do my very best 👴",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577167743
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:267,Availability,error,error,267,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:273,Integrability,message,message,273,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:769,Integrability,message,messages,769,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:325,Modifiability,config,config,325,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:473,Modifiability,config,config,473,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:591,Modifiability,config,config,591,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:404,Testability,test,test,404,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-566642727:33,Usability,feedback,feedback,33,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727
https://github.com/su2code/SU2/issues/842#issuecomment-567588529:254,Availability,error,error,254,"In CDriver::Numerics_Preprocessing(...), around line 2030, begins a (large) switch `switch (config->GetKind_ConvNumScheme_Flow()) {` which is where the numerics classes get instantiated, there is a check there for `NO_CONVECTIVE` which should trigger an error (´SU2_MPI::Error(...)´).; But it appears that the error is not triggered, I would start by checking what value CConfig::GetKind_ConvNumScheme_Flow returns when the option is not present in the config, possibly the default value (set somewhere in CConfig) is not `NO_CONVECTIVE`.; If you look for `CONV_NUM_METHOD_FLOW` in config_structure.cpp you will find the line that tries to read that option. The definition for `NO_CONVECTIVE` and all common enumerators is in option_structure.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-567588529
https://github.com/su2code/SU2/issues/842#issuecomment-567588529:271,Availability,Error,Error,271,"In CDriver::Numerics_Preprocessing(...), around line 2030, begins a (large) switch `switch (config->GetKind_ConvNumScheme_Flow()) {` which is where the numerics classes get instantiated, there is a check there for `NO_CONVECTIVE` which should trigger an error (´SU2_MPI::Error(...)´).; But it appears that the error is not triggered, I would start by checking what value CConfig::GetKind_ConvNumScheme_Flow returns when the option is not present in the config, possibly the default value (set somewhere in CConfig) is not `NO_CONVECTIVE`.; If you look for `CONV_NUM_METHOD_FLOW` in config_structure.cpp you will find the line that tries to read that option. The definition for `NO_CONVECTIVE` and all common enumerators is in option_structure.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-567588529
https://github.com/su2code/SU2/issues/842#issuecomment-567588529:310,Availability,error,error,310,"In CDriver::Numerics_Preprocessing(...), around line 2030, begins a (large) switch `switch (config->GetKind_ConvNumScheme_Flow()) {` which is where the numerics classes get instantiated, there is a check there for `NO_CONVECTIVE` which should trigger an error (´SU2_MPI::Error(...)´).; But it appears that the error is not triggered, I would start by checking what value CConfig::GetKind_ConvNumScheme_Flow returns when the option is not present in the config, possibly the default value (set somewhere in CConfig) is not `NO_CONVECTIVE`.; If you look for `CONV_NUM_METHOD_FLOW` in config_structure.cpp you will find the line that tries to read that option. The definition for `NO_CONVECTIVE` and all common enumerators is in option_structure.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-567588529
https://github.com/su2code/SU2/issues/842#issuecomment-567588529:92,Modifiability,config,config,92,"In CDriver::Numerics_Preprocessing(...), around line 2030, begins a (large) switch `switch (config->GetKind_ConvNumScheme_Flow()) {` which is where the numerics classes get instantiated, there is a check there for `NO_CONVECTIVE` which should trigger an error (´SU2_MPI::Error(...)´).; But it appears that the error is not triggered, I would start by checking what value CConfig::GetKind_ConvNumScheme_Flow returns when the option is not present in the config, possibly the default value (set somewhere in CConfig) is not `NO_CONVECTIVE`.; If you look for `CONV_NUM_METHOD_FLOW` in config_structure.cpp you will find the line that tries to read that option. The definition for `NO_CONVECTIVE` and all common enumerators is in option_structure.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-567588529
https://github.com/su2code/SU2/issues/842#issuecomment-567588529:453,Modifiability,config,config,453,"In CDriver::Numerics_Preprocessing(...), around line 2030, begins a (large) switch `switch (config->GetKind_ConvNumScheme_Flow()) {` which is where the numerics classes get instantiated, there is a check there for `NO_CONVECTIVE` which should trigger an error (´SU2_MPI::Error(...)´).; But it appears that the error is not triggered, I would start by checking what value CConfig::GetKind_ConvNumScheme_Flow returns when the option is not present in the config, possibly the default value (set somewhere in CConfig) is not `NO_CONVECTIVE`.; If you look for `CONV_NUM_METHOD_FLOW` in config_structure.cpp you will find the line that tries to read that option. The definition for `NO_CONVECTIVE` and all common enumerators is in option_structure.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-567588529
https://github.com/su2code/SU2/issues/842#issuecomment-568280604:198,Availability,error,error,198,Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-568280604
https://github.com/su2code/SU2/issues/842#issuecomment-568280604:204,Integrability,message,message,204,Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-568280604
https://github.com/su2code/SU2/issues/842#issuecomment-569149689:200,Availability,error,error,200,"> Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it. Thank you for having a look at the code, I am sure your skills are fine, this area of the code is just horribly complex. It is fixed in #824, it should have been a separate PR but I had changes to the NumericsPreprocessing in that PR already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-569149689
https://github.com/su2code/SU2/issues/842#issuecomment-569149689:206,Integrability,message,message,206,"> Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it. Thank you for having a look at the code, I am sure your skills are fine, this area of the code is just horribly complex. It is fixed in #824, it should have been a separate PR but I had changes to the NumericsPreprocessing in that PR already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-569149689
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:490,Deployability,configurat,configuration,490,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:611,Deployability,install,installation,611,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5176,Deployability,update,updated,5176,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2062,Energy Efficiency,allocate,allocate,2062,"cally equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they beco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:490,Modifiability,config,configuration,490,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:1558,Modifiability,extend,extended,1558,"testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watche",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2333,Modifiability,variab,variables,2333,"ing them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopeful",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2870,Modifiability,variab,variables,2870,"ead_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3115,Modifiability,variab,variable,3115," container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been poi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5095,Modifiability,refactor,refactor,5095,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2965,Performance,concurren,concurrent,2965,"ead_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3469,Performance,perform,performance,3469,"everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:229,Safety,safe,safe,229,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2224,Security,access,access,2224,"cally equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they beco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3892,Security,access,accessible,3892,"ike we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, tha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:193,Testability,test,test,193,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:322,Testability,test,testcases,322,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:538,Testability,test,testcase,538,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:4580,Usability,learn,learning,4580,"anced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, goo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5261,Usability,clear,clearly,5261,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728
https://github.com/su2code/SU2/pull/845#issuecomment-571701938:77,Modifiability,config,config,77,"The vtm file and the folder where the data is stored are now called like the config file (called ""case name""). Futhermore the files inside of the folder are organized like the data. That means after a successful run, the working directory looks like that (omitting history files):; ```; ├── cht_2d_3cylinders; │   ├── zone_0; │   │   ├── cylinder_outer1.vtu; │   │   ├── cylinder_outer2.vtu; │   │   ├── cylinder_outer3.vtu; │   │   ├── farfield.vtu; │   │   └── Internal.vtu; │   ├── zone_1; │   │   ├── core1.vtu; │   │   ├── cylinder_inner1.vtu; │   │   └── Internal.vtu; │   ├── zone_2; │   │   ├── core2.vtu; │   │   ├── cylinder_inner2.vtu; │   │   └── Internal.vtu; │   └── zone_3; │   ├── core3.vtu; │   ├── cylinder_inner3.vtu; │   └── Internal.vtu; ├── cht_2d_3cylinders.cfg; ├── cht_2d_3cylinders.vtm; ├── solid_cylinder1.cfg; ├── solid_cylinder2.cfg; └── solid_cylinder3.cfg. ```. And the structure in Paraview:. ![cht_example](https://user-images.githubusercontent.com/4933860/71916713-d6f14d80-317e-11ea-9b78-8592d633a067.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-571701938
https://github.com/su2code/SU2/pull/845#issuecomment-572996083:275,Modifiability,config,config,275,Thanks @pcarruscag for your comments. As always very valuable! I think I have addressed all of them. Some other things I have changed:. - The history files per zone are disabled by default when running a multizone problem; - The multizone history file is now named after the config file (i.e. case name).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-572996083
https://github.com/su2code/SU2/pull/845#issuecomment-576388025:163,Testability,test,test,163,"Found a bug where I get a deadlock for a big case while writing. Have to look into it to see whether its a problem on our cluster or in the code. If someone could test the vtu/vtm output on a big case (> 32 cores), that would be also very helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-576388025
https://github.com/su2code/SU2/pull/845#issuecomment-576555730:173,Testability,test,test,173,"> ; > ; > Found a bug where I get a deadlock for a big case while writing. Have to look into it to see whether its a problem on our cluster or in the code. If someone could test the vtu/vtm output on a big case (> 32 cores), that would be also very helpful. I don't have these problems. I ran the coupled_cht/incomp_2d case on 32 and 56 cores (28 cores/node) without any issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-576555730
https://github.com/su2code/SU2/issues/846#issuecomment-586692534:60,Testability,log,logic,60,"You are right, this used to be covered by the `Kind_Regime` logic but it is broken now...; (One more example where #770 would help)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/846#issuecomment-586692534
https://github.com/su2code/SU2/pull/847#issuecomment-576190513:383,Deployability,release,release,383,Thanks a lot for the reviews and comments @WallyMaier @pcarruscag @economon @talbring !; I highly appreciate you taking the time of working through the code to make it better (and hopefully these improvements sticks to my brain 💡 ). If no comments are left unaddressed (I think so) I would be happy to get this merged 🐘 . Edit: Changed PR title to sth more descriptive for automatic release,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847#issuecomment-576190513
https://github.com/su2code/SU2/pull/849#issuecomment-573749755:592,Availability,error,errors,592,"> Nice work @jayantmukho, I hope that script helped with moving the inlines. Yes! It did. I was able to build off the script you gave me to enable moving multi-line inlines. Now it only fails when the function signatures don't match up (because of different variable names). I've attached it here:; [split_inlines.txt](https://github.com/su2code/SU2/files/4054552/split_inlines.txt); [merge_inlines.txt](https://github.com/su2code/SU2/files/4054551/merge_inlines.txt). > General question, did you update the `#include ""solver_structure.hpp""` automatically or manually (fixing the compilation errors one by one)? I ask because this kind of file restructuring gives us a good opportunity to make sure we are including files only where needed, which helps with build times. I replaced the solver_structure.hpp files with just CSolver.hpp first. Then quashed errors by specific solver includes when needed. But its a good point. I will go through it again to remove any unnecessary includes that might have crept in. . > Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. Ah yes, this is a good time to do this. Will do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-573749755
https://github.com/su2code/SU2/pull/849#issuecomment-573749755:855,Availability,error,errors,855,"> Nice work @jayantmukho, I hope that script helped with moving the inlines. Yes! It did. I was able to build off the script you gave me to enable moving multi-line inlines. Now it only fails when the function signatures don't match up (because of different variable names). I've attached it here:; [split_inlines.txt](https://github.com/su2code/SU2/files/4054552/split_inlines.txt); [merge_inlines.txt](https://github.com/su2code/SU2/files/4054551/merge_inlines.txt). > General question, did you update the `#include ""solver_structure.hpp""` automatically or manually (fixing the compilation errors one by one)? I ask because this kind of file restructuring gives us a good opportunity to make sure we are including files only where needed, which helps with build times. I replaced the solver_structure.hpp files with just CSolver.hpp first. Then quashed errors by specific solver includes when needed. But its a good point. I will go through it again to remove any unnecessary includes that might have crept in. . > Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. Ah yes, this is a good time to do this. Will do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-573749755
https://github.com/su2code/SU2/pull/849#issuecomment-573749755:497,Deployability,update,update,497,"> Nice work @jayantmukho, I hope that script helped with moving the inlines. Yes! It did. I was able to build off the script you gave me to enable moving multi-line inlines. Now it only fails when the function signatures don't match up (because of different variable names). I've attached it here:; [split_inlines.txt](https://github.com/su2code/SU2/files/4054552/split_inlines.txt); [merge_inlines.txt](https://github.com/su2code/SU2/files/4054551/merge_inlines.txt). > General question, did you update the `#include ""solver_structure.hpp""` automatically or manually (fixing the compilation errors one by one)? I ask because this kind of file restructuring gives us a good opportunity to make sure we are including files only where needed, which helps with build times. I replaced the solver_structure.hpp files with just CSolver.hpp first. Then quashed errors by specific solver includes when needed. But its a good point. I will go through it again to remove any unnecessary includes that might have crept in. . > Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. Ah yes, this is a good time to do this. Will do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-573749755
https://github.com/su2code/SU2/pull/849#issuecomment-573749755:258,Modifiability,variab,variable,258,"> Nice work @jayantmukho, I hope that script helped with moving the inlines. Yes! It did. I was able to build off the script you gave me to enable moving multi-line inlines. Now it only fails when the function signatures don't match up (because of different variable names). I've attached it here:; [split_inlines.txt](https://github.com/su2code/SU2/files/4054552/split_inlines.txt); [merge_inlines.txt](https://github.com/su2code/SU2/files/4054551/merge_inlines.txt). > General question, did you update the `#include ""solver_structure.hpp""` automatically or manually (fixing the compilation errors one by one)? I ask because this kind of file restructuring gives us a good opportunity to make sure we are including files only where needed, which helps with build times. I replaced the solver_structure.hpp files with just CSolver.hpp first. Then quashed errors by specific solver includes when needed. But its a good point. I will go through it again to remove any unnecessary includes that might have crept in. . > Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. Ah yes, this is a good time to do this. Will do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-573749755
https://github.com/su2code/SU2/pull/849#issuecomment-575799066:612,Modifiability,variab,variables,612,"> Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. I am in the process of doing this. There are a large number of `virtual` functions in the solvers. . I wanted to verify how I am thinking about using `final`, `override`, and `const`:. 1) Any virtual class that is overridden by a child class should have the `override` specifier; 2) If the function is not overriden further in another child class, should have the `final` specifier. ; 3) Any functions that don't change any variables should be declared `const` (mostly getter functions); 4) Any function arguments that are passed by reference and should not be changed during the execution of the function, should be declared `const`. Is there any case I am missing? Is there a reason why I don't see any functions with the `override final` specification?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-575799066
https://github.com/su2code/SU2/pull/849#issuecomment-578283139:86,Usability,simpl,simple,86,"Thanks for taking care of the merge with develop @pcarruscag, I am going to make some simple formatting changes to the `CFEASolver` and `CMeshSolver` so that they conform to the rest of the solver files",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-578283139
https://github.com/su2code/SU2/pull/850#issuecomment-579140739:55,Testability,test,tests,55,Thanks @clarkpede for setting this up! I will add some tests by myself and see how its gonna work out.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-579140739
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:144,Deployability,install,install,144,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:184,Deployability,install,installed,184,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:13,Testability,test,testing,13,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:100,Testability,test,testing,100,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:156,Testability,test,test,156,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:234,Testability,test,tests,234,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:301,Testability,test,tests,301,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:317,Testability,test,testing,317,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-581889375:349,Testability,test,test,349,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:23,Testability,test,tests,23,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:165,Testability,test,test,165,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:197,Testability,test,test,197,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:224,Testability,test,test,224,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:257,Testability,test,test,257,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:296,Testability,test,tests,296,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:326,Testability,test,test,326,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-594779356:345,Testability,test,tests,345,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356
https://github.com/su2code/SU2/pull/850#issuecomment-620382001:184,Testability,test,tests,184,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001
https://github.com/su2code/SU2/pull/850#issuecomment-620382001:268,Testability,test,tests,268,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001
https://github.com/su2code/SU2/pull/850#issuecomment-620382001:145,Usability,simpl,simple,145,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001
https://github.com/su2code/SU2/pull/850#issuecomment-620948043:97,Usability,clear,clear,97,"Hi @clarkpede ,. Thanks for the contribution. The example of the central/upwind blending is very clear. Ready to merge. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620948043
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:290,Modifiability,variab,variables,290,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:41,Testability,mock,mocking,41,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:140,Testability,mock,mocking,140,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:373,Testability,mock,mocking,373,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:429,Testability,Mock,Mocking,429,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:468,Testability,test,testing,468,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:499,Testability,test,testing-on-toilet-dont-overuse-mocks,499,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:552,Testability,mock,mocking,552,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:660,Testability,mock,mocksArentStubs,660,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:727,Testability,mock,mocking,727,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:820,Testability,test,tests,820,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:973,Testability,mock,mockist,973,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:981,Testability,test,testing,981,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/pull/850#issuecomment-621842313:1142,Testability,mock,mocking,1142,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313
https://github.com/su2code/SU2/issues/852#issuecomment-578428526:28,Performance,optimiz,optimization,28,"Are you talking about shape optimization with re-meshing?; If yes, people are already working on restart with interpolation (@jayantmukho @bmunguia ); Otherwise, SU2 already restarts when doing shape optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578428526
https://github.com/su2code/SU2/issues/852#issuecomment-578428526:200,Performance,optimiz,optimization,200,"Are you talking about shape optimization with re-meshing?; If yes, people are already working on restart with interpolation (@jayantmukho @bmunguia ); Otherwise, SU2 already restarts when doing shape optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578428526
https://github.com/su2code/SU2/issues/852#issuecomment-578454512:30,Performance,optimiz,optimization,30,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (jayantmukho bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Yes, but also for other cases where some small modification on the geometry were made, it wouldn't be necessary to simulate from scratch, since the flow should have almost the same behavior. I modificated the @EduardoMolina's script in order to add interpolation and some other modifications. It resulted in a much faster convergence in a simulation of a 2D nozzle, with a reduction of about 1000 iterations. However, the script wrote in Python is very slow, probably rewriting it on c/c++ would give a much better performance. Pastebin of the script: [https://pastebin.com/LyWSp85U](https://pastebin.com/LyWSp85U); [SU2_initial_guess.zip](https://github.com/su2code/SU2/files/4113038/SU2_initial_guess.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578454512
https://github.com/su2code/SU2/issues/852#issuecomment-578454512:204,Performance,optimiz,optimization,204,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (jayantmukho bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Yes, but also for other cases where some small modification on the geometry were made, it wouldn't be necessary to simulate from scratch, since the flow should have almost the same behavior. I modificated the @EduardoMolina's script in order to add interpolation and some other modifications. It resulted in a much faster convergence in a simulation of a 2D nozzle, with a reduction of about 1000 iterations. However, the script wrote in Python is very slow, probably rewriting it on c/c++ would give a much better performance. Pastebin of the script: [https://pastebin.com/LyWSp85U](https://pastebin.com/LyWSp85U); [SU2_initial_guess.zip](https://github.com/su2code/SU2/files/4113038/SU2_initial_guess.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578454512
https://github.com/su2code/SU2/issues/852#issuecomment-578454512:733,Performance,perform,performance,733,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (jayantmukho bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Yes, but also for other cases where some small modification on the geometry were made, it wouldn't be necessary to simulate from scratch, since the flow should have almost the same behavior. I modificated the @EduardoMolina's script in order to add interpolation and some other modifications. It resulted in a much faster convergence in a simulation of a 2D nozzle, with a reduction of about 1000 iterations. However, the script wrote in Python is very slow, probably rewriting it on c/c++ would give a much better performance. Pastebin of the script: [https://pastebin.com/LyWSp85U](https://pastebin.com/LyWSp85U); [SU2_initial_guess.zip](https://github.com/su2code/SU2/files/4113038/SU2_initial_guess.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578454512
https://github.com/su2code/SU2/issues/852#issuecomment-578516517:234,Modifiability,parameteriz,parameterize,234,"You can restart after a small (or large) geometric change so long as the mesh topology is the same (the minimum requirement is probably that the number of points in the file be the same).; This is what happens when you use SU2_DEF to parameterize / deform the mesh. Yes one does need to be careful with the interpolation methods used for this, e.g. use the connectivity information of both meshes when looking for nearest neighbors to keep the runtime O(N).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578516517
https://github.com/su2code/SU2/issues/852#issuecomment-586816457:30,Performance,optimiz,optimization,30,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (@jayantmukho @bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Is restart with interpolation already in the latest repo? It would be very useful for running remeshed but roughly similar cases! Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-586816457
https://github.com/su2code/SU2/issues/852#issuecomment-586816457:206,Performance,optimiz,optimization,206,"> Are you talking about shape optimization with re-meshing?; > If yes, people are already working on restart with interpolation (@jayantmukho @bmunguia ); > Otherwise, SU2 already restarts when doing shape optimization. Is restart with interpolation already in the latest repo? It would be very useful for running remeshed but roughly similar cases! Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-586816457
https://github.com/su2code/SU2/pull/854#issuecomment-590808122:281,Testability,log,logic,281,"I don't know what option that warning is included with, or if the behaviour is different across compiler versions.; I compile with with -Wall -Wextra, nevertheless please check the line I pointed to in your previous PR, I would gladly silence the warning but I don't know how that logic is supposed to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/854#issuecomment-590808122
https://github.com/su2code/SU2/issues/855#issuecomment-581453436:180,Availability,avail,available,180,"Sure; If you want to install Su2 version 7.0.0 from scratch, you need python 3.5; atleast; The installation guide says just python 3; One of the functions used in meson.py is only available in python 3.5. On Mon, Feb 3, 2020, 12:51 AM Tim Albring <notifications@github.com> wrote:. > Thanks for opening the issue. Can you give a little bit more details on; > what you mean exactly ?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/855?email_source=notifications&email_token=AIENZ3WCJDNJV4LP655MB33RA7LI5A5CNFSM4KNO4QLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKS7V6I#issuecomment-581303033>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AIENZ3TDY7ZCOS27JO7IYXTRA7LI5ANCNFSM4KNO4QLA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855#issuecomment-581453436
https://github.com/su2code/SU2/issues/855#issuecomment-581453436:21,Deployability,install,install,21,"Sure; If you want to install Su2 version 7.0.0 from scratch, you need python 3.5; atleast; The installation guide says just python 3; One of the functions used in meson.py is only available in python 3.5. On Mon, Feb 3, 2020, 12:51 AM Tim Albring <notifications@github.com> wrote:. > Thanks for opening the issue. Can you give a little bit more details on; > what you mean exactly ?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/855?email_source=notifications&email_token=AIENZ3WCJDNJV4LP655MB33RA7LI5A5CNFSM4KNO4QLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKS7V6I#issuecomment-581303033>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AIENZ3TDY7ZCOS27JO7IYXTRA7LI5ANCNFSM4KNO4QLA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855#issuecomment-581453436
https://github.com/su2code/SU2/issues/855#issuecomment-581453436:95,Deployability,install,installation,95,"Sure; If you want to install Su2 version 7.0.0 from scratch, you need python 3.5; atleast; The installation guide says just python 3; One of the functions used in meson.py is only available in python 3.5. On Mon, Feb 3, 2020, 12:51 AM Tim Albring <notifications@github.com> wrote:. > Thanks for opening the issue. Can you give a little bit more details on; > what you mean exactly ?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/855?email_source=notifications&email_token=AIENZ3WCJDNJV4LP655MB33RA7LI5A5CNFSM4KNO4QLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKS7V6I#issuecomment-581303033>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AIENZ3TDY7ZCOS27JO7IYXTRA7LI5ANCNFSM4KNO4QLA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855#issuecomment-581453436
https://github.com/su2code/SU2/issues/855#issuecomment-581453436:108,Usability,guid,guide,108,"Sure; If you want to install Su2 version 7.0.0 from scratch, you need python 3.5; atleast; The installation guide says just python 3; One of the functions used in meson.py is only available in python 3.5. On Mon, Feb 3, 2020, 12:51 AM Tim Albring <notifications@github.com> wrote:. > Thanks for opening the issue. Can you give a little bit more details on; > what you mean exactly ?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/855?email_source=notifications&email_token=AIENZ3WCJDNJV4LP655MB33RA7LI5A5CNFSM4KNO4QLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKS7V6I#issuecomment-581303033>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AIENZ3TDY7ZCOS27JO7IYXTRA7LI5ANCNFSM4KNO4QLA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855#issuecomment-581453436
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:190,Availability,error,error,190,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:861,Availability,fault,fault,861,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1400,Availability,error,error,1400,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1432,Availability,fault,fault,1432,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1663,Availability,avail,available,1663,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1701,Availability,avail,available,1701,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1961,Availability,error,error,1961,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:733,Integrability,interface,interface,733,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1406,Integrability,message,message,1406,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1967,Integrability,message,message,1967,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1594,Modifiability,variab,variables,1594,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:597,Performance,perform,performance,597,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1951,Safety,avoid,avoid,1951,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:205,Testability,Test,Testcases,205,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119
https://github.com/su2code/SU2/issues/857#issuecomment-1624316996:100,Availability,error,error,100,"Will look into it, there's a known issue fixed in #2011 that also throws a segfault where the above error occurs. It could already be fixed, if not I will fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1624316996
https://github.com/su2code/SU2/issues/857#issuecomment-1701148094:0,Deployability,Update,Update,0,"Update: This should be fixed in #2011, apologies this took so long to get round it in what is a very simple fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094
https://github.com/su2code/SU2/issues/857#issuecomment-1701148094:101,Usability,simpl,simple,101,"Update: This should be fixed in #2011, apologies this took so long to get round it in what is a very simple fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:85,Testability,test,test,85,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:128,Testability,test,tests,128,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:166,Testability,test,tests,166,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:239,Testability,test,tests,239,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:276,Testability,test,tests,276,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:317,Testability,test,tests,317,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:356,Testability,test,test,356,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:38,Usability,simpl,simply,38,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581945210:172,Usability,simpl,simply,172,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210
https://github.com/su2code/SU2/pull/858#issuecomment-581957725:97,Availability,avail,available,97,"@clarkpede We could add use that feature probably. But we have to check that essentially for all available solvers, so maybe it makes more sense to put it to the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581957725
https://github.com/su2code/SU2/pull/858#issuecomment-581957725:173,Testability,test,tests,173,"@clarkpede We could add use that feature probably. But we have to check that essentially for all available solvers, so maybe it makes more sense to put it to the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581957725
https://github.com/su2code/SU2/pull/858#issuecomment-582469516:26,Testability,test,tests,26,"Concerning the Regression tests: @talbring added a check for every testcase whether it exits successfully. Like this, `SU2_CFD -d` passes succesfully when it exits with `EXIT_SUCCESS` (i.e. returns 0). That is the only check, the actual output is not checked.; For quite some reg-tests e.g. with parallel_computation.py the SU2_SOL part silently failed which then causes the particular reg-test to fail. ""Silently"" because the test_values from the successful SU2_CFD match and that was the only criteria until now. Additionally we found a little bug where steady primal multizone restarts wouldn't work. That is fixed as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-582469516
https://github.com/su2code/SU2/pull/858#issuecomment-582469516:67,Testability,test,testcase,67,"Concerning the Regression tests: @talbring added a check for every testcase whether it exits successfully. Like this, `SU2_CFD -d` passes succesfully when it exits with `EXIT_SUCCESS` (i.e. returns 0). That is the only check, the actual output is not checked.; For quite some reg-tests e.g. with parallel_computation.py the SU2_SOL part silently failed which then causes the particular reg-test to fail. ""Silently"" because the test_values from the successful SU2_CFD match and that was the only criteria until now. Additionally we found a little bug where steady primal multizone restarts wouldn't work. That is fixed as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-582469516
https://github.com/su2code/SU2/pull/858#issuecomment-582469516:280,Testability,test,tests,280,"Concerning the Regression tests: @talbring added a check for every testcase whether it exits successfully. Like this, `SU2_CFD -d` passes succesfully when it exits with `EXIT_SUCCESS` (i.e. returns 0). That is the only check, the actual output is not checked.; For quite some reg-tests e.g. with parallel_computation.py the SU2_SOL part silently failed which then causes the particular reg-test to fail. ""Silently"" because the test_values from the successful SU2_CFD match and that was the only criteria until now. Additionally we found a little bug where steady primal multizone restarts wouldn't work. That is fixed as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-582469516
https://github.com/su2code/SU2/pull/858#issuecomment-582469516:390,Testability,test,test,390,"Concerning the Regression tests: @talbring added a check for every testcase whether it exits successfully. Like this, `SU2_CFD -d` passes succesfully when it exits with `EXIT_SUCCESS` (i.e. returns 0). That is the only check, the actual output is not checked.; For quite some reg-tests e.g. with parallel_computation.py the SU2_SOL part silently failed which then causes the particular reg-test to fail. ""Silently"" because the test_values from the successful SU2_CFD match and that was the only criteria until now. Additionally we found a little bug where steady primal multizone restarts wouldn't work. That is fixed as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-582469516
https://github.com/su2code/SU2/issues/860#issuecomment-582340873:196,Testability,test,test,196,"Hi Akshay,. Yes this is a simple fix and it could go in quickly on it's own or as part of another PR. I have this fix already modified in the draft PR #833 which is just pending the addition of a test case. I can add that and move to a PR soon if you are happy to wait?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860#issuecomment-582340873
https://github.com/su2code/SU2/issues/860#issuecomment-582340873:26,Usability,simpl,simple,26,"Hi Akshay,. Yes this is a simple fix and it could go in quickly on it's own or as part of another PR. I have this fix already modified in the draft PR #833 which is just pending the addition of a test case. I can add that and move to a PR soon if you are happy to wait?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860#issuecomment-582340873
https://github.com/su2code/SU2/issues/867#issuecomment-583904096:45,Modifiability,variab,variable,45,"BTW, can I add any parameter (or environment variable) to the `meson.py` line (or to the `ninja` invocation) in order to force linking with `-lopen-pal -lopen-rte -lz`, as a temporary workaround to this problem? Note that I cannot use LDFLAGS because its contents would be put **before** libmpi.a so the link would fail anyway... Is there any other environment variable I can set for adding libraries **at the end** of the link line?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904096
https://github.com/su2code/SU2/issues/867#issuecomment-583904096:361,Modifiability,variab,variable,361,"BTW, can I add any parameter (or environment variable) to the `meson.py` line (or to the `ninja` invocation) in order to force linking with `-lopen-pal -lopen-rte -lz`, as a temporary workaround to this problem? Note that I cannot use LDFLAGS because its contents would be put **before** libmpi.a so the link would fail anyway... Is there any other environment variable I can set for adding libraries **at the end** of the link line?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904096
https://github.com/su2code/SU2/issues/867#issuecomment-583904437:102,Integrability,depend,dependencies,102,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437
https://github.com/su2code/SU2/issues/867#issuecomment-583904437:719,Integrability,depend,dependencies,719,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437
https://github.com/su2code/SU2/issues/867#issuecomment-583904437:329,Modifiability,Portab,Portable,329,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437
https://github.com/su2code/SU2/issues/867#issuecomment-583904437:343,Performance,perform,performance,343,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437
https://github.com/su2code/SU2/issues/867#issuecomment-583985541:224,Modifiability,variab,variables,224,"Hi @cesss ,. you can use the option `-Dcustom-mpi=true`. This will tell meson to not look for MPI (but still set all preprocessor flags) so that you can provide all necessary linker/compiler flags manually using environment variables. Let me know if it works for you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583985541
https://github.com/su2code/SU2/issues/867#issuecomment-584151705:272,Availability,error,error,272,"Thanks a lot @talbring !!. What would be the environment variable that Meson would honor for libraries? (LDFLAGS is for linker flags rather than libraries, and if the linker line puts the LDFLAGS before the object files, you'd get the libs before the objects, so a linker error). Maybe something like LIBS? However, looking at [the variables that the Meson docs say it supports](https://github.com/mesonbuild/meson/blob/8c1221b437b2930fa64d78517337293e8a0e079f/docs/markdown/Reference-tables.md#compiler-and-linker-flag-environment-variables), I don't see any LIBS-like variable...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584151705
https://github.com/su2code/SU2/issues/867#issuecomment-584151705:57,Modifiability,variab,variable,57,"Thanks a lot @talbring !!. What would be the environment variable that Meson would honor for libraries? (LDFLAGS is for linker flags rather than libraries, and if the linker line puts the LDFLAGS before the object files, you'd get the libs before the objects, so a linker error). Maybe something like LIBS? However, looking at [the variables that the Meson docs say it supports](https://github.com/mesonbuild/meson/blob/8c1221b437b2930fa64d78517337293e8a0e079f/docs/markdown/Reference-tables.md#compiler-and-linker-flag-environment-variables), I don't see any LIBS-like variable...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584151705
https://github.com/su2code/SU2/issues/867#issuecomment-584151705:332,Modifiability,variab,variables,332,"Thanks a lot @talbring !!. What would be the environment variable that Meson would honor for libraries? (LDFLAGS is for linker flags rather than libraries, and if the linker line puts the LDFLAGS before the object files, you'd get the libs before the objects, so a linker error). Maybe something like LIBS? However, looking at [the variables that the Meson docs say it supports](https://github.com/mesonbuild/meson/blob/8c1221b437b2930fa64d78517337293e8a0e079f/docs/markdown/Reference-tables.md#compiler-and-linker-flag-environment-variables), I don't see any LIBS-like variable...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584151705
https://github.com/su2code/SU2/issues/867#issuecomment-584151705:532,Modifiability,variab,variables,532,"Thanks a lot @talbring !!. What would be the environment variable that Meson would honor for libraries? (LDFLAGS is for linker flags rather than libraries, and if the linker line puts the LDFLAGS before the object files, you'd get the libs before the objects, so a linker error). Maybe something like LIBS? However, looking at [the variables that the Meson docs say it supports](https://github.com/mesonbuild/meson/blob/8c1221b437b2930fa64d78517337293e8a0e079f/docs/markdown/Reference-tables.md#compiler-and-linker-flag-environment-variables), I don't see any LIBS-like variable...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584151705
https://github.com/su2code/SU2/issues/867#issuecomment-584151705:570,Modifiability,variab,variable,570,"Thanks a lot @talbring !!. What would be the environment variable that Meson would honor for libraries? (LDFLAGS is for linker flags rather than libraries, and if the linker line puts the LDFLAGS before the object files, you'd get the libs before the objects, so a linker error). Maybe something like LIBS? However, looking at [the variables that the Meson docs say it supports](https://github.com/mesonbuild/meson/blob/8c1221b437b2930fa64d78517337293e8a0e079f/docs/markdown/Reference-tables.md#compiler-and-linker-flag-environment-variables), I don't see any LIBS-like variable...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584151705
https://github.com/su2code/SU2/issues/867#issuecomment-584160090:229,Availability,error,error,229,"~~@cesss I have a little bit of a confusion here, why is it necessary to link with `-lopen-rte -lopen-pal -lm -lz ` ? Its in Libs.private because it should only be needed in case you want to link SU2 statically. Can you give the error that you get when compiling ?~~ Forget that :-1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584160090
https://github.com/su2code/SU2/issues/867#issuecomment-584169812:598,Modifiability,config,config,598,"alternatively you can use a hostfile. Below is an example that is used to statically link SU2 and include a statically linked MPICH library. . You can set the hostfile with `--hostfile=<path_to_hostfile>` in the meson call. `-Dcustom-mpi=true` must be also set in that case. I never ran into problems with the order and I think that `LDFLAGS` and the hostfile approach are equivalent in your case, but anyway, its worth a try. ```; [binaries]; c = 'x86_64-linux-gnu-gcc'; cpp = 'x86_64-linux-gnu-g++'; ar = 'x86_64-linux-gnu-ar'; strip = 'x86_64-linux-gnu-strip'; pkgconfig = 'x86_64-linux-gnu-pkg-config'. [host_machine]; system ='linux'; cpu_family = 'x86_64'; cpu = 'x86_64'; endian = 'little'. [properties]; cpp_link_args = ['-static', '-static-libstdc++', '-static-libgcc', '-L/mpich-x86_64-linux-gnu/lib', '-lmpi', '-lxml2', '-lbacktrace', '-lz', '-lpthread', '-lrt']; c_link_args = ['-static', '-static-libstdc++', '-static-libgcc', '-L/mpich-x86_64-linux-gnu/lib', '-lmpi', '-lxml2', '-lbacktrace', '-lz', '-lpthread', '-lrt']; cpp_args = ['-Wno-inconsistent-missing-override', '-I/mpich-x86_64-linux-gnu/include']; c_args = ['-I/mpich-x86_64-linux-gnu/include']; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584169812
https://github.com/su2code/SU2/issues/867#issuecomment-584199364:181,Availability,error,error,181,"Thanks a lot @talbring !! Yes, with LDFLAGS it worked, although I believe it's not failsafe because the order of elements in the link line usually has an effect. BTW, I got another error later in the build, this time due to libpython3.8.a not being added to the link line (I don't know why --in fact Meson says it found python 3.8 when configuring SU2). I'm rebuilding again, this time adding -lpython3.8 to LDFLAGS. I'm closing the issue because I believe it's solved 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584199364
https://github.com/su2code/SU2/issues/867#issuecomment-584199364:336,Modifiability,config,configuring,336,"Thanks a lot @talbring !! Yes, with LDFLAGS it worked, although I believe it's not failsafe because the order of elements in the link line usually has an effect. BTW, I got another error later in the build, this time due to libpython3.8.a not being added to the link line (I don't know why --in fact Meson says it found python 3.8 when configuring SU2). I'm rebuilding again, this time adding -lpython3.8 to LDFLAGS. I'm closing the issue because I believe it's solved 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-584199364
https://github.com/su2code/SU2/issues/869#issuecomment-584254305:67,Modifiability,variab,variable,67,"I build mine for parallel with OpenMP and then use the environment variable; OMP_NUM_THREADS. On Mon, 10 Feb 2020, 14:41 cesss, <notifications@github.com> wrote:. > *Is your feature request related to a problem? Please describe.*; > I'm going to build SU2 with PaStiX, which requires BLAS built in serial; > mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX.; >; > However, SU2 also makes use of BLAS... but... what kind of build for; > OpenBLAS, sequential or parallel?; >; > It's not a subtle thing, because things can go wrong (or lose a lot of; > performance) if it's built in a way different to what SU2 expects.; >; > *Describe the solution you'd like*; > Just mention it in the build instructions where you mention that OpenBLAS; > can be used by SU2.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/869?email_source=notifications&email_token=AJCOXN5ODRHEGDIWPFF6YITRCFRS3A5CNFSM4KSPLSO2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMIWASA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN7HGYWRNCWPPNOLHKTRCFRS3ANCNFSM4KSPLSOQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/869#issuecomment-584254305
https://github.com/su2code/SU2/issues/869#issuecomment-584254305:573,Performance,perform,performance,573,"I build mine for parallel with OpenMP and then use the environment variable; OMP_NUM_THREADS. On Mon, 10 Feb 2020, 14:41 cesss, <notifications@github.com> wrote:. > *Is your feature request related to a problem? Please describe.*; > I'm going to build SU2 with PaStiX, which requires BLAS built in serial; > mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX.; >; > However, SU2 also makes use of BLAS... but... what kind of build for; > OpenBLAS, sequential or parallel?; >; > It's not a subtle thing, because things can go wrong (or lose a lot of; > performance) if it's built in a way different to what SU2 expects.; >; > *Describe the solution you'd like*; > Just mention it in the build instructions where you mention that OpenBLAS; > can be used by SU2.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/869?email_source=notifications&email_token=AJCOXN5ODRHEGDIWPFF6YITRCFRS3A5CNFSM4KSPLSO2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMIWASA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN7HGYWRNCWPPNOLHKTRCFRS3ANCNFSM4KSPLSOQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/869#issuecomment-584254305
https://github.com/su2code/SU2/issues/869#issuecomment-592052653:14,Deployability,update,updated,14,Documentation updated.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/869#issuecomment-592052653
https://github.com/su2code/SU2/pull/872#issuecomment-591881962:345,Deployability,release,release,345,"Hi @pcarruscag,; thanks so much for all your effort in adapting the PR. As usual, great improvements to the feature from your review. Sorry for the radio silence, as I told you I was away due to unforeseen personal circumstances and I'm only back to office today.; Hopefully it's all ready now, I think this feature is ready to go into the next release. If there are no further comments I'll merge it later today.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872#issuecomment-591881962
https://github.com/su2code/SU2/pull/872#issuecomment-591881962:55,Energy Efficiency,adapt,adapting,55,"Hi @pcarruscag,; thanks so much for all your effort in adapting the PR. As usual, great improvements to the feature from your review. Sorry for the radio silence, as I told you I was away due to unforeseen personal circumstances and I'm only back to office today.; Hopefully it's all ready now, I think this feature is ready to go into the next release. If there are no further comments I'll merge it later today.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872#issuecomment-591881962
https://github.com/su2code/SU2/pull/872#issuecomment-591881962:55,Modifiability,adapt,adapting,55,"Hi @pcarruscag,; thanks so much for all your effort in adapting the PR. As usual, great improvements to the feature from your review. Sorry for the radio silence, as I told you I was away due to unforeseen personal circumstances and I'm only back to office today.; Hopefully it's all ready now, I think this feature is ready to go into the next release. If there are no further comments I'll merge it later today.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872#issuecomment-591881962
https://github.com/su2code/SU2/pull/874#issuecomment-592552725:74,Deployability,release,release,74,I am gonna use my executive power to merge this in. I have to prepare the release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/874#issuecomment-592552725
https://github.com/su2code/SU2/pull/874#issuecomment-592552725:28,Energy Efficiency,power,power,28,I am gonna use my executive power to merge this in. I have to prepare the release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/874#issuecomment-592552725
https://github.com/su2code/SU2/pull/877#issuecomment-595197305:474,Security,access,access,474,"@koodlyakshay I was looking at the ADT modifications that you mention.; Do I understand correctly that the roughness height does not influence the wall distance calculation itself? But that you simply need to know what is the roughness height associated with the closest wall point? If this is the case you can probably just use the markerId returned by the wall distance function?; As for mpi aspects, each rank sees the same ADT and I recall that we do have mechanisms to access global marker information.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-595197305
https://github.com/su2code/SU2/pull/877#issuecomment-595197305:194,Usability,simpl,simply,194,"@koodlyakshay I was looking at the ADT modifications that you mention.; Do I understand correctly that the roughness height does not influence the wall distance calculation itself? But that you simply need to know what is the roughness height associated with the closest wall point? If this is the case you can probably just use the markerId returned by the wall distance function?; As for mpi aspects, each rank sees the same ADT and I recall that we do have mechanisms to access global marker information.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-595197305
https://github.com/su2code/SU2/pull/877#issuecomment-596708744:358,Modifiability,config,config,358,">Do I understand correctly that the roughness height does not influence the wall distance calculation itself?... @pcarruscag , Yes. I can use the markerID to find the corresponding roughness as long as the field element and the nearest wall marker are on the same rank. I was not sure how to relate the markerID on rankID from a different rank to the global config list, hence the current implementation. I am open to fixing it with a different implementation if I can figure out how to actually do it. The few things I tried all ended up causing problems and this was one way to avoid them (also my inexperience with MPI did not help).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-596708744
https://github.com/su2code/SU2/pull/877#issuecomment-596708744:580,Safety,avoid,avoid,580,">Do I understand correctly that the roughness height does not influence the wall distance calculation itself?... @pcarruscag , Yes. I can use the markerID to find the corresponding roughness as long as the field element and the nearest wall marker are on the same rank. I was not sure how to relate the markerID on rankID from a different rank to the global config list, hence the current implementation. I am open to fixing it with a different implementation if I can figure out how to actually do it. The few things I tried all ended up causing problems and this was one way to avoid them (also my inexperience with MPI did not help).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-596708744
https://github.com/su2code/SU2/pull/877#issuecomment-597205550:718,Modifiability,config,config,718,"If I recall correctly @tobikattman was dealing with a similar issue; (relating local markers to global ones) on his symmetry boundary condition; pull request. I think it would be worth keeping the ADT as clean and; generic as possible. On Mon, 9 Mar 2020, 19:32 Akshay.K.R, <notifications@github.com> wrote:. > Do I understand correctly that the roughness height does not influence the; > wall distance calculation itself?...; >; > @pcarruscag <https://github.com/pcarruscag> , Yes. I can use the markerID; > to find the corresponding roughness as long as the field element and the; > nearest wall marker are on the same rank. I was not sure how to relate the; > markerID on rankID from a different rank to the global config list, hence; > the current implementation. I am open to fixing it with a different; > implementation if I can figure out how to actually do it. The few things I; > tried all ended up causing problems and this was one way to avoid them; > (also my inexperience with MPI did not help).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/877?email_source=notifications&email_token=AJCOXNZA5Z2CBAXSTXG7BTTRGUY3XA5CNFSM4KVE7ON2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEOIQ3CA#issuecomment-596708744>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2KX3BY5CXBZFKIMM3RGUY3XANCNFSM4KVE7ONQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-597205550
https://github.com/su2code/SU2/pull/877#issuecomment-597205550:949,Safety,avoid,avoid,949,"If I recall correctly @tobikattman was dealing with a similar issue; (relating local markers to global ones) on his symmetry boundary condition; pull request. I think it would be worth keeping the ADT as clean and; generic as possible. On Mon, 9 Mar 2020, 19:32 Akshay.K.R, <notifications@github.com> wrote:. > Do I understand correctly that the roughness height does not influence the; > wall distance calculation itself?...; >; > @pcarruscag <https://github.com/pcarruscag> , Yes. I can use the markerID; > to find the corresponding roughness as long as the field element and the; > nearest wall marker are on the same rank. I was not sure how to relate the; > markerID on rankID from a different rank to the global config list, hence; > the current implementation. I am open to fixing it with a different; > implementation if I can figure out how to actually do it. The few things I; > tried all ended up causing problems and this was one way to avoid them; > (also my inexperience with MPI did not help).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/877?email_source=notifications&email_token=AJCOXNZA5Z2CBAXSTXG7BTTRGUY3XA5CNFSM4KVE7ON2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEOIQ3CA#issuecomment-596708744>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2KX3BY5CXBZFKIMM3RGUY3XANCNFSM4KVE7ONQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-597205550
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:887,Availability,avail,available,887,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:118,Integrability,rout,routines,118,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:142,Integrability,synchroniz,synchronization,142,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:216,Integrability,rout,routine,216,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:807,Integrability,interface,interface,807,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:629,Testability,log,logic,629,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:356,Usability,simpl,simpler,356,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630788337:616,Usability,simpl,simplify,616,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337
https://github.com/su2code/SU2/pull/877#issuecomment-630819942:94,Availability,avail,available,94,">Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?. No, I am not really familiar with the CHT part, but If it is same as an isothermal boundary, I can add this feature there as well. . Are you suggesting I make an option say MARKER_ROUGH and read in roughness values only for the corresponding marker? I went with the current input method to make sure only wall boundaries were given roughness heights but I suppose that can be ensured in other ways too. I will experiment with a few things and see which works the best. I will wait to see if there any suggestions in the meeting and then fix all the MPI stuff. . Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630819942
https://github.com/su2code/SU2/pull/877#issuecomment-630819942:14,Integrability,interface,interface,14,">Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?. No, I am not really familiar with the CHT part, but If it is same as an isothermal boundary, I can add this feature there as well. . Are you suggesting I make an option say MARKER_ROUGH and read in roughness values only for the corresponding marker? I went with the current input method to make sure only wall boundaries were given roughness heights but I suppose that can be ensured in other ways too. I will experiment with a few things and see which works the best. I will wait to see if there any suggestions in the meeting and then fix all the MPI stuff. . Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630819942
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:980,Integrability,rout,routines,980,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:878,Modifiability,config,config,878,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:950,Modifiability,config,config,950,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:933,Safety,avoid,avoids,933,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:1301,Safety,avoid,avoid,1301,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:49,Usability,clear,clearer,49,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-630861158:1036,Usability,simpl,simpler,1036,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158
https://github.com/su2code/SU2/pull/877#issuecomment-642800393:7,Usability,simpl,simplified,7,"I have simplified the input method now. Users need to simply add a line; ; MARKER_ROUGHWALL = (marker_name_1, k_1, marker_name_2, k_2, ..). By default all walls are smooth and only the rough walls need to be listed and the order shouldn't matter. . Edit: Just realized you asked me to use a different name. Will fix it in the next commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-642800393
https://github.com/su2code/SU2/pull/877#issuecomment-642800393:54,Usability,simpl,simply,54,"I have simplified the input method now. Users need to simply add a line; ; MARKER_ROUGHWALL = (marker_name_1, k_1, marker_name_2, k_2, ..). By default all walls are smooth and only the rough walls need to be listed and the order shouldn't matter. . Edit: Just realized you asked me to use a different name. Will fix it in the next commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-642800393
https://github.com/su2code/SU2/pull/877#issuecomment-652641123:96,Modifiability,config,config,96,MARKER_ROUGHWALL is fine too. Do you want some help with the MPI to avoid setting data into the config? (I don't want to create too much friction but that is something that should really be avoided).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-652641123
https://github.com/su2code/SU2/pull/877#issuecomment-652641123:68,Safety,avoid,avoid,68,MARKER_ROUGHWALL is fine too. Do you want some help with the MPI to avoid setting data into the config? (I don't want to create too much friction but that is something that should really be avoided).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-652641123
https://github.com/su2code/SU2/pull/877#issuecomment-652641123:190,Safety,avoid,avoided,190,MARKER_ROUGHWALL is fine too. Do you want some help with the MPI to avoid setting data into the config? (I don't want to create too much friction but that is something that should really be avoided).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-652641123
https://github.com/su2code/SU2/pull/877#issuecomment-653064740:187,Deployability,update,update,187,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740
https://github.com/su2code/SU2/pull/877#issuecomment-653064740:298,Integrability,rout,routines,298,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740
https://github.com/su2code/SU2/pull/877#issuecomment-653064740:405,Integrability,rout,routine,405,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740
https://github.com/su2code/SU2/pull/877#issuecomment-653064740:272,Modifiability,config,config,272,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740
https://github.com/su2code/SU2/pull/877#issuecomment-653064740:428,Modifiability,config,config,428,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740
https://github.com/su2code/SU2/pull/877#issuecomment-653157902:196,Energy Efficiency,efficient,efficient,196,"Hey Akshay,; I found out the other day that this: `unordered_map<pair<int,int>, su2double>` does not work without extra tricks, and the alternative `map<pair<int,int>, su2double>` may not be very efficient, so if you have it out of the config in some matrix format it is probably better.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653157902
https://github.com/su2code/SU2/pull/877#issuecomment-653157902:236,Modifiability,config,config,236,"Hey Akshay,; I found out the other day that this: `unordered_map<pair<int,int>, su2double>` does not work without extra tricks, and the alternative `map<pair<int,int>, su2double>` may not be very efficient, so if you have it out of the config in some matrix format it is probably better.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653157902
https://github.com/su2code/SU2/pull/877#issuecomment-653479936:288,Modifiability,config,config,288,">I found out the other day that this: unordered_map<pair<int,int>, su2double> does not work without extra tricks,. Yes, I found some examples to do it. But I was not quite understanding what are the sizes of local maps or how to communicate them over MPI. . >so if you have it out of the config in some matrix format it is probably better. In that case, I can just move the current global arrays to physical geometry class and simplify some of the function calls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653479936
https://github.com/su2code/SU2/pull/877#issuecomment-653479936:427,Usability,simpl,simplify,427,">I found out the other day that this: unordered_map<pair<int,int>, su2double> does not work without extra tricks,. Yes, I found some examples to do it. But I was not quite understanding what are the sizes of local maps or how to communicate them over MPI. . >so if you have it out of the config in some matrix format it is probably better. In that case, I can just move the current global arrays to physical geometry class and simplify some of the function calls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653479936
https://github.com/su2code/SU2/pull/877#issuecomment-655174580:151,Testability,test,test,151,"@pcarruscag thanks for the comments. I have fixed most of them I think. . In general, I think the PR is ready to be reviewed. I will think of a decent test case and add it soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-655174580
https://github.com/su2code/SU2/pull/881#issuecomment-587440604:138,Deployability,integrat,integration,138,"Since I am already at it, I am gonna add factory classes for numerics (we can use them even if we move the allocation to the solvers) and integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881#issuecomment-587440604
https://github.com/su2code/SU2/pull/881#issuecomment-587440604:138,Integrability,integrat,integration,138,"Since I am already at it, I am gonna add factory classes for numerics (we can use them even if we move the allocation to the solvers) and integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881#issuecomment-587440604
https://github.com/su2code/SU2/pull/884#issuecomment-588153738:572,Availability,avail,available,572,@economon There is nothing new in v4 as you have noticed. Some parallelization issue in CGNS library are being investigated and I hope it can be fixed in 4.1 to get CGNS parallel writing in SU2 at some point. Thus no new feature to take advantage from. I think that CGNS multizone was desactivated for the 7.0 release but could be reenabled since the issue was on the ParaView parallel writer. It would be helpful for turbomachinery cases but will require an additional test. ( [This one](https://drive.google.com/drive/folders/1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a) is still available but may need an update ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884#issuecomment-588153738
https://github.com/su2code/SU2/pull/884#issuecomment-588153738:310,Deployability,release,release,310,@economon There is nothing new in v4 as you have noticed. Some parallelization issue in CGNS library are being investigated and I hope it can be fixed in 4.1 to get CGNS parallel writing in SU2 at some point. Thus no new feature to take advantage from. I think that CGNS multizone was desactivated for the 7.0 release but could be reenabled since the issue was on the ParaView parallel writer. It would be helpful for turbomachinery cases but will require an additional test. ( [This one](https://drive.google.com/drive/folders/1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a) is still available but may need an update ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884#issuecomment-588153738
https://github.com/su2code/SU2/pull/884#issuecomment-588153738:598,Deployability,update,update,598,@economon There is nothing new in v4 as you have noticed. Some parallelization issue in CGNS library are being investigated and I hope it can be fixed in 4.1 to get CGNS parallel writing in SU2 at some point. Thus no new feature to take advantage from. I think that CGNS multizone was desactivated for the 7.0 release but could be reenabled since the issue was on the ParaView parallel writer. It would be helpful for turbomachinery cases but will require an additional test. ( [This one](https://drive.google.com/drive/folders/1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a) is still available but may need an update ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884#issuecomment-588153738
https://github.com/su2code/SU2/pull/884#issuecomment-588153738:470,Testability,test,test,470,@economon There is nothing new in v4 as you have noticed. Some parallelization issue in CGNS library are being investigated and I hope it can be fixed in 4.1 to get CGNS parallel writing in SU2 at some point. Thus no new feature to take advantage from. I think that CGNS multizone was desactivated for the 7.0 release but could be reenabled since the issue was on the ParaView parallel writer. It would be helpful for turbomachinery cases but will require an additional test. ( [This one](https://drive.google.com/drive/folders/1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a) is still available but may need an update ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884#issuecomment-588153738
https://github.com/su2code/SU2/issues/888#issuecomment-591585356:131,Availability,avail,available,131,"Hi, . just remove the mpi option from the meson command. Otherwise, meson tries to also find the cpp bindings of MPI which are not available in MSMPI. The c bindings however should be found automatically. Let me know if it works. . Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-591585356
https://github.com/su2code/SU2/issues/888#issuecomment-591628235:179,Availability,error,error,179,"Hi Tim,. thanks for you help.; without -Dwith-mpi=enabled meson works. But now i have a new problem. If i run ninja.exe -C build install i got some warnings.; At the end i got an error! Following i show the last two comments of the installing!. In file included from ..\externals/medi/include/medi/ampi/ampi.hpp:41,; from ..\externals/medi/include/medi/medi.hpp:33,; from D:/Programs/SU2 CFD/SU2-7.0.1/Common/include/mpi_structure.hpp:50,; from ../SU2_DOT/src/../include/SU2_DOT.hpp:32,; from ../SU2_DOT/src/SU2_DOT.cpp:29:; ..\externals/medi/include/medi/ampi/../../../generated/medi/ampiFunctions.hpp:12188:47: warning: 'int MPI_Errhandler_set(MPI_Comm, MPI_Errhandler)' is deprecated: Deprecated in MPI 2.0, use 'MPI_Comm_set_errhandler'. To disable deprecation, define MSMPI_NO_DEPRECATE_20. [-Wdeprecated-declarations]; return MPI_Errhandler_set(comm, errhandler);; ^; In file included from D:/Programs/SU2 CFD/SU2-7.0.1/Common/include/mpi_structure.hpp:32,; from ../SU2_DOT/src/../include/SU2_DOT.hpp:32,; from ../SU2_DOT/src/SU2_DOT.cpp:29:; D:\Programs\Microsoft\Microsoft SDKs\MPI\Include/mpi.h:6741:1: note: declared here; MPI_Errhandler_set(; ^~~~~~~~~~~~~~~~~~; ninja: build stopped: subcommand failed. Thanks a lot!. KleineKampfzwergin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-591628235
https://github.com/su2code/SU2/issues/888#issuecomment-591628235:129,Deployability,install,install,129,"Hi Tim,. thanks for you help.; without -Dwith-mpi=enabled meson works. But now i have a new problem. If i run ninja.exe -C build install i got some warnings.; At the end i got an error! Following i show the last two comments of the installing!. In file included from ..\externals/medi/include/medi/ampi/ampi.hpp:41,; from ..\externals/medi/include/medi/medi.hpp:33,; from D:/Programs/SU2 CFD/SU2-7.0.1/Common/include/mpi_structure.hpp:50,; from ../SU2_DOT/src/../include/SU2_DOT.hpp:32,; from ../SU2_DOT/src/SU2_DOT.cpp:29:; ..\externals/medi/include/medi/ampi/../../../generated/medi/ampiFunctions.hpp:12188:47: warning: 'int MPI_Errhandler_set(MPI_Comm, MPI_Errhandler)' is deprecated: Deprecated in MPI 2.0, use 'MPI_Comm_set_errhandler'. To disable deprecation, define MSMPI_NO_DEPRECATE_20. [-Wdeprecated-declarations]; return MPI_Errhandler_set(comm, errhandler);; ^; In file included from D:/Programs/SU2 CFD/SU2-7.0.1/Common/include/mpi_structure.hpp:32,; from ../SU2_DOT/src/../include/SU2_DOT.hpp:32,; from ../SU2_DOT/src/SU2_DOT.cpp:29:; D:\Programs\Microsoft\Microsoft SDKs\MPI\Include/mpi.h:6741:1: note: declared here; MPI_Errhandler_set(; ^~~~~~~~~~~~~~~~~~; ninja: build stopped: subcommand failed. Thanks a lot!. KleineKampfzwergin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-591628235
https://github.com/su2code/SU2/issues/888#issuecomment-591628235:232,Deployability,install,installing,232,"Hi Tim,. thanks for you help.; without -Dwith-mpi=enabled meson works. But now i have a new problem. If i run ninja.exe -C build install i got some warnings.; At the end i got an error! Following i show the last two comments of the installing!. In file included from ..\externals/medi/include/medi/ampi/ampi.hpp:41,; from ..\externals/medi/include/medi/medi.hpp:33,; from D:/Programs/SU2 CFD/SU2-7.0.1/Common/include/mpi_structure.hpp:50,; from ../SU2_DOT/src/../include/SU2_DOT.hpp:32,; from ../SU2_DOT/src/SU2_DOT.cpp:29:; ..\externals/medi/include/medi/ampi/../../../generated/medi/ampiFunctions.hpp:12188:47: warning: 'int MPI_Errhandler_set(MPI_Comm, MPI_Errhandler)' is deprecated: Deprecated in MPI 2.0, use 'MPI_Comm_set_errhandler'. To disable deprecation, define MSMPI_NO_DEPRECATE_20. [-Wdeprecated-declarations]; return MPI_Errhandler_set(comm, errhandler);; ^; In file included from D:/Programs/SU2 CFD/SU2-7.0.1/Common/include/mpi_structure.hpp:32,; from ../SU2_DOT/src/../include/SU2_DOT.hpp:32,; from ../SU2_DOT/src/SU2_DOT.cpp:29:; D:\Programs\Microsoft\Microsoft SDKs\MPI\Include/mpi.h:6741:1: note: declared here; MPI_Errhandler_set(; ^~~~~~~~~~~~~~~~~~; ninja: build stopped: subcommand failed. Thanks a lot!. KleineKampfzwergin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-591628235
https://github.com/su2code/SU2/issues/888#issuecomment-592028930:27,Availability,error,error,27,Hmm I don't really see the error in that output. Can you make sure to post the part where the error occurs?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-592028930
https://github.com/su2code/SU2/issues/888#issuecomment-592028930:94,Availability,error,error,94,Hmm I don't really see the error in that output. Can you make sure to post the part where the error occurs?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-592028930
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:15375,Availability,error,error,15375,"s\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2571, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2453, in guess_external_link_dependencies; staticlibs = self.guess_library_absolute_path(linker, libname,; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2395, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 922, in _get_file_from_list; if f.is_file():; File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1439, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1221, in stat; return self._accessor.stat(self); OSError: [WinError 123] Die Syntax für den Dateinamen, Verzeichnisnamen oder die Datenträgerbezeichnung ist falsch: 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I saw this problem in error #1047 and #1048 but ther is no solution. Maybe you can help me, how i can solve this problem. Thank you very much.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7774,Deployability,install,installation,7774,".; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; Te",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8344,Deployability,install,install,8344,"gin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8406,Deployability,install,install,8406,"lude()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in proje",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8537,Deployability,Release,Release,8537,"thon\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8610,Deployability,Configurat,Configuration,8610,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8990,Deployability,update,update,8990,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9084,Deployability,configurat,configuration,9084,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9342,Deployability,install,install,9342,"mme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9366,Deployability,install,install,9366,"mme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:10162,Deployability,install,install,10162,rt SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/; libraries: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12276,Deployability,Release,Release,12276,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12349,Deployability,Configurat,Configuration,12349,"6_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Progra",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12725,Deployability,update,update,12725,"810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\ex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12817,Deployability,configurat,configuration,12817,"6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File """,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:13071,Deployability,install,install,13071,"mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:13095,Deployability,install,install,13095,"mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5872,Integrability,depend,dependency,5872," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6298,Integrability,depend,dependency,6298,"9\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\Kle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6396,Integrability,depend,dependency,6396,"ging global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\U",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6917,Integrability,depend,dependency,6917,"le 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7175,Integrability,Message,Message,7175,"binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7550,Integrability,Message,Message,7550,"PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Relea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7853,Integrability,depend,dependency,7853,"default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8294,Integrability,Depend,Dependency,8294,"gin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8419,Integrability,Message,Message,8419,"thon\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8826,Integrability,Wrap,Wrapper,8826,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12148,Integrability,message,message,12148,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12158,Integrability,Message,Message,12158,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12563,Integrability,Wrap,Wrapper,12563,"w64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5316,Modifiability,config,config,5316,"n the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: Y",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5454,Modifiability,config,config,5454,"t changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5547,Modifiability,config,config,5547,"eson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5570,Modifiability,config,config,5570,"eson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5589,Modifiability,config,config,5589,"eson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5607,Modifiability,config,config,5607,"eson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5669,Modifiability,config,config-lite-,5669,"nitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5703,Modifiability,config,config-lite-,5703,"mpile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5732,Modifiability,config,config,5732,"ty check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or nativ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5756,Modifiability,config,config,5756,"ing test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5781,Modifiability,config,config-lite-,5781,"ing test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5814,Modifiability,config,config-lite-,5814,"1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5841,Modifiability,config,config,5841,"itycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5901,Modifiability,config,config,5901," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5939,Modifiability,config,config-lite-,5939," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5973,Modifiability,config,config-lite-,5973," C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6002,Modifiability,config,config,6002,"hine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running comma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6059,Modifiability,config,config-lite-,6059,"mily: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Loc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6092,Modifiability,config,config-lite-,6092,"chine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Program",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6119,Modifiability,config,config,6119,"ost machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6335,Modifiability,config,config,6335,"9\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\Kle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6427,Modifiability,config,config,6427,"ging global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\U",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6465,Modifiability,config,config-lite-,6465,"ging global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\U",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6499,Modifiability,config,config-lite-,6499," file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\li",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6528,Modifiability,config,config,6528,"; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\inclu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6585,Modifiability,config,config-lite-,6585,"kg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6618,Modifiability,config,config-lite-,6618,"or machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Loc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6645,Modifiability,config,config,6645,"ST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6971,Modifiability,config,config-tool,6971,"le 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7792,Modifiability,config,config,7792,".; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; Te",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7892,Modifiability,config,config,7892,"un-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7930,Modifiability,config,config-lite-,7930,"un-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7964,Modifiability,config,config-lite-,7964,"onfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7993,Modifiability,config,config,7993,"ing command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8050,Modifiability,config,config-lite-,8050,"pData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if appl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8083,Modifiability,config,config-lite-,8083,"D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8110,Modifiability,config,config,8110,"n_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add thes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8610,Modifiability,Config,Configuration,8610,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8974,Modifiability,variab,variables,8974,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9084,Modifiability,config,configuration,9084,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12349,Modifiability,Config,Configuration,12349,"6_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Progra",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12709,Modifiability,variab,variables,12709,"810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\ex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12817,Modifiability,config,configuration,12817,"6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File """,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:14152,Modifiability,extend,extend,14152,"0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2571, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2453, in guess_external_link_dependencies; staticlibs = self.guess_library_absolute_path(linker, libname,; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2395, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 922, in _get_file_from_list; if f.is_file():; File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1439, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1221, in stat; return self._accessor.stat(self); OSError: [WinError 123] Die Syntax für den Dateinamen, Verzeichnisnamen oder die Datenträgerbezeichnung ist fal",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5360,Performance,cache,cached,5360,"g global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for Machi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6375,Performance,cache,cached,6375,"of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7832,Performance,cache,cached,7832,"back at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrappe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1289,Safety,Sanity check,Sanity check,1289,"Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1457,Safety,Sanity check,Sanity check,1457,"ld; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\b",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1496,Safety,Sanity check,Sanity check,1496,"ld; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\b",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2387,Safety,Sanity check,Sanity check,2387,"ild\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2560,Safety,Sanity check,Sanity check,2560,"kc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; --",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2599,Safety,Sanity check,Sanity check,2599,"kc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; --",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3416,Safety,Sanity check,Sanity check,3416,"7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'C",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3584,Safety,Sanity check,Sanity check,3584,"ning test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\bui",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3623,Safety,Sanity check,Sanity check,3623,"ning test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\bui",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4512,Safety,Sanity check,Sanity check,4512,"build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a defaul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4685,Safety,Sanity check,Sanity check,4685,"eckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4724,Safety,Sanity check,Sanity check,4724,"eckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:75,Testability,log,log,75,"Hi,. for my late answer.; i can't solve the problem yet. here is the meson-log.txt output:; Build started at 2021-04-17T15:34:44.243386; Main binary: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe; Build Options: -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1161,Testability,test,testing,1161,"Data\Local\Programs\Python\Python39\python.exe; Build Options: -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'C",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1543,Testability,test,test,1543,"ld; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\b",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2256,Testability,test,testing,2256,"bal flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2646,Testability,test,test,2646,"kc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; --",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3288,Testability,test,testing,3288,"; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3670,Testability,test,test,3670,"ning test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\bui",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4381,Testability,test,testing,4381,"lobal flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4771,Testability,test,test,4771,"eckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9626,Testability,test,testfile,9626,"""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/888#issuecomment-821840286:10003,Testability,test,testfile,10003,"update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/; libraries: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286
https://github.com/su2code/SU2/issues/889#issuecomment-602328589:590,Availability,avail,available,590,"@auzbaig : sorry that this has been giving you issues. I think there are a couple of things happening here. First, there were important changes when all of the output was rewritten for v7, including a change in how the output fields are recognized by the python framework. In this commit (https://github.com/su2code/SU2/commit/39dbebc574a0886fa7c165d342dce8490947dbbe), a new history mapping capability was added, so that, rather than hard-coding the possible types of output/objective fields, the list can be updated automatically using updateHistoryMap.py, which parses the C++ files for available fields. You can see the available output fields for your problem by executing the dry run mode. The second thing is that updateHistoryMap.py only parses a set list of files (you can find the list at the top of the file), and at the moment, the turbomachinery-specific outputs are not included. The turbomachinery features are being restructured currently in #866, which includes connecting it to the new output classes. @talbring @salvovitale : please correct me if I am missing anything",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602328589
https://github.com/su2code/SU2/issues/889#issuecomment-602328589:624,Availability,avail,available,624,"@auzbaig : sorry that this has been giving you issues. I think there are a couple of things happening here. First, there were important changes when all of the output was rewritten for v7, including a change in how the output fields are recognized by the python framework. In this commit (https://github.com/su2code/SU2/commit/39dbebc574a0886fa7c165d342dce8490947dbbe), a new history mapping capability was added, so that, rather than hard-coding the possible types of output/objective fields, the list can be updated automatically using updateHistoryMap.py, which parses the C++ files for available fields. You can see the available output fields for your problem by executing the dry run mode. The second thing is that updateHistoryMap.py only parses a set list of files (you can find the list at the top of the file), and at the moment, the turbomachinery-specific outputs are not included. The turbomachinery features are being restructured currently in #866, which includes connecting it to the new output classes. @talbring @salvovitale : please correct me if I am missing anything",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602328589
https://github.com/su2code/SU2/issues/889#issuecomment-602328589:510,Deployability,update,updated,510,"@auzbaig : sorry that this has been giving you issues. I think there are a couple of things happening here. First, there were important changes when all of the output was rewritten for v7, including a change in how the output fields are recognized by the python framework. In this commit (https://github.com/su2code/SU2/commit/39dbebc574a0886fa7c165d342dce8490947dbbe), a new history mapping capability was added, so that, rather than hard-coding the possible types of output/objective fields, the list can be updated automatically using updateHistoryMap.py, which parses the C++ files for available fields. You can see the available output fields for your problem by executing the dry run mode. The second thing is that updateHistoryMap.py only parses a set list of files (you can find the list at the top of the file), and at the moment, the turbomachinery-specific outputs are not included. The turbomachinery features are being restructured currently in #866, which includes connecting it to the new output classes. @talbring @salvovitale : please correct me if I am missing anything",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602328589
https://github.com/su2code/SU2/issues/889#issuecomment-602328589:538,Deployability,update,updateHistoryMap,538,"@auzbaig : sorry that this has been giving you issues. I think there are a couple of things happening here. First, there were important changes when all of the output was rewritten for v7, including a change in how the output fields are recognized by the python framework. In this commit (https://github.com/su2code/SU2/commit/39dbebc574a0886fa7c165d342dce8490947dbbe), a new history mapping capability was added, so that, rather than hard-coding the possible types of output/objective fields, the list can be updated automatically using updateHistoryMap.py, which parses the C++ files for available fields. You can see the available output fields for your problem by executing the dry run mode. The second thing is that updateHistoryMap.py only parses a set list of files (you can find the list at the top of the file), and at the moment, the turbomachinery-specific outputs are not included. The turbomachinery features are being restructured currently in #866, which includes connecting it to the new output classes. @talbring @salvovitale : please correct me if I am missing anything",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602328589
https://github.com/su2code/SU2/issues/889#issuecomment-602328589:721,Deployability,update,updateHistoryMap,721,"@auzbaig : sorry that this has been giving you issues. I think there are a couple of things happening here. First, there were important changes when all of the output was rewritten for v7, including a change in how the output fields are recognized by the python framework. In this commit (https://github.com/su2code/SU2/commit/39dbebc574a0886fa7c165d342dce8490947dbbe), a new history mapping capability was added, so that, rather than hard-coding the possible types of output/objective fields, the list can be updated automatically using updateHistoryMap.py, which parses the C++ files for available fields. You can see the available output fields for your problem by executing the dry run mode. The second thing is that updateHistoryMap.py only parses a set list of files (you can find the list at the top of the file), and at the moment, the turbomachinery-specific outputs are not included. The turbomachinery features are being restructured currently in #866, which includes connecting it to the new output classes. @talbring @salvovitale : please correct me if I am missing anything",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602328589
https://github.com/su2code/SU2/issues/889#issuecomment-602776476:80,Availability,avail,available,80,"In short, it means that the particular objective that you are requesting is not available in the python framework at this time. You can run. ```; $ SU2_CFD your_config.cfg -d; ```. to see the list of possible outputs that can be used as objectives for your particular problem currently. There are some objectives that have not been moved to the new output structure yet (but they are coming). In the meantime, you can add new custom history outputs for the flow solver (see CFlowCompOutput.cpp for instance) and then use them for objectives during shape optimization (you will likely need to run updateHistoryMap.py to register the new outputs with python).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602776476
https://github.com/su2code/SU2/issues/889#issuecomment-602776476:596,Deployability,update,updateHistoryMap,596,"In short, it means that the particular objective that you are requesting is not available in the python framework at this time. You can run. ```; $ SU2_CFD your_config.cfg -d; ```. to see the list of possible outputs that can be used as objectives for your particular problem currently. There are some objectives that have not been moved to the new output structure yet (but they are coming). In the meantime, you can add new custom history outputs for the flow solver (see CFlowCompOutput.cpp for instance) and then use them for objectives during shape optimization (you will likely need to run updateHistoryMap.py to register the new outputs with python).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602776476
https://github.com/su2code/SU2/issues/889#issuecomment-602776476:554,Performance,optimiz,optimization,554,"In short, it means that the particular objective that you are requesting is not available in the python framework at this time. You can run. ```; $ SU2_CFD your_config.cfg -d; ```. to see the list of possible outputs that can be used as objectives for your particular problem currently. There are some objectives that have not been moved to the new output structure yet (but they are coming). In the meantime, you can add new custom history outputs for the flow solver (see CFlowCompOutput.cpp for instance) and then use them for objectives during shape optimization (you will likely need to run updateHistoryMap.py to register the new outputs with python).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602776476
https://github.com/su2code/SU2/issues/889#issuecomment-606328715:268,Performance,optimiz,optimization,268,"@economon Thanks for your answer. I have a couple more queries if you won't mind. When you say that the objective functions are not defined for the problem do you mean that I cannot solve the adjoint equations with that objective or just not yet use it with the shape optimization script as that data is not in the history output?. Secondly, how would I see how an objective function is defined? I have tried to see definitions for ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, etc but couldn't find through a keyword search. Although it is solving the adjoint equations with these objectives, I don't know what they really mean. Third, I see there is an obj function: CUSTOM_OBJFUNC. How do I define a custom objective function in SU2?. Thanks,; Aman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-606328715
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:989,Deployability,update,updateHistoryMap,989,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:1039,Deployability,update,update,1039,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:1529,Deployability,update,updated,1529,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:594,Integrability,rout,routine,594,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:856,Integrability,rout,routine,856,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:1132,Modifiability,variab,variable,1132,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:421,Performance,optimiz,optimization,421,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609959747:1574,Performance,optimiz,optimization,1574,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747
https://github.com/su2code/SU2/issues/889#issuecomment-609967142:8,Integrability,depend,dependent,8,"That is dependent on #866, which is still in progress",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609967142
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:80,Availability,error,error,80,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:1004,Availability,avail,available,1004,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:699,Deployability,update,updateHistoryMap,699,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:86,Integrability,message,message,86,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:379,Modifiability,config,config,379,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:1603,Modifiability,variab,variables,1603,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:162,Performance,optimiz,optimization,162,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:275,Performance,optimiz,optimization,275,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:336,Performance,optimiz,optimization,336,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:612,Performance,perform,performance,612,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:853,Performance,optimiz,optimization,853,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:1343,Testability,Test,TestCases,1343,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:787,Usability,simpl,simply,787,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:1856,Usability,guid,guidance,1856,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133
https://github.com/su2code/SU2/issues/894#issuecomment-593003762:53,Deployability,update,updated,53,"Thanks for the response and pointing me to the PR. I updated gcc version 9 and open mpi to version 4.02. It slightly improved speed but the behavior is still the same. . I don’t understand mpi well enough to understand the implications of that PR, but I guess that maybe it’s doing more communication at some level that causes it to be much more sensitive to network performance making 1G Ethernet inadequate. . I will try and upgrade my networking and see if that resolves the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593003762
https://github.com/su2code/SU2/issues/894#issuecomment-593003762:427,Deployability,upgrade,upgrade,427,"Thanks for the response and pointing me to the PR. I updated gcc version 9 and open mpi to version 4.02. It slightly improved speed but the behavior is still the same. . I don’t understand mpi well enough to understand the implications of that PR, but I guess that maybe it’s doing more communication at some level that causes it to be much more sensitive to network performance making 1G Ethernet inadequate. . I will try and upgrade my networking and see if that resolves the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593003762
https://github.com/su2code/SU2/issues/894#issuecomment-593003762:367,Performance,perform,performance,367,"Thanks for the response and pointing me to the PR. I updated gcc version 9 and open mpi to version 4.02. It slightly improved speed but the behavior is still the same. . I don’t understand mpi well enough to understand the implications of that PR, but I guess that maybe it’s doing more communication at some level that causes it to be much more sensitive to network performance making 1G Ethernet inadequate. . I will try and upgrade my networking and see if that resolves the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593003762
https://github.com/su2code/SU2/issues/894#issuecomment-593073686:395,Performance,scalab,scalability,395,"Ok one issue out of the way.; After reading your first post again, it is a bit suspicious that the iteration time is ""exactly"" the same, can you post the preprocessing part of the output for:; 16 cores on one node; 16 total cores on 2 nodes (8+8); 8 cores on one node.; If b)==c) you are running identical simulations on each node (i.e. not distributing over nodes).; If a)==b) can you test the scalability with fewer cores (2 on one node Vs 1+1).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593073686
https://github.com/su2code/SU2/issues/894#issuecomment-593073686:386,Testability,test,test,386,"Ok one issue out of the way.; After reading your first post again, it is a bit suspicious that the iteration time is ""exactly"" the same, can you post the preprocessing part of the output for:; 16 cores on one node; 16 total cores on 2 nodes (8+8); 8 cores on one node.; If b)==c) you are running identical simulations on each node (i.e. not distributing over nodes).; If a)==b) can you test the scalability with fewer cores (2 on one node Vs 1+1).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593073686
https://github.com/su2code/SU2/issues/894#issuecomment-593123594:710,Integrability,bridg,bridge,710,"I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. [output_1.txt](https://github.com/su2code/SU2/files/4272178/output_1.txt). Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. . Mesh 1 (6.8e6 cells); - 8 processes (1 machine x 8 cores) => 13s/iteration; - 8 processes (2 machine x 4 cores) => 18.4s/iteration; - 16 processes (1 machine x 16 cores) => 8.5s/iteration; - 16 processes (2 machines x 8 cores) => 17s/iteration; - 16 processes (4 machines x 4 cores) => 15.8s/iteration; - 32 processes (2 machines x 16 cores) => 18.1s/iteration; - 64 processes (4 machines x 16 cores) => 21.9s/iteration. Mesh 2 (27e6 cells); - 8 processes (1 machine x 8 cores) => 50s/iteration; - 16 processes (1 machine x 16 cores) => 32s/iteration; - 16 processes (2 machines x 8 cores) => 32s/iteration; - 16 processes (4 machines x 4 cores) => 31s/iteration; - 32 processes (2 machines x 16 cores) => 34s/iteration; - 64 processes (4 machines x 16 cores) => 40s/iteration. A final set of timings for Mesh 1 with SU2 v6.2 for reference; - 8 processes (1 machine x 8 cores) => 26s/iteration; - 8 processes (2 machine x 4 cores) => 25s/iteration; - 16 processes (1 machine x 16 cores) => 15s/iteration; - 16 processes (2 machines x 8 cores) => 14s/iteration; - 16 processes (4 machines x 4 cores) => 13s/iteration; - 32 processes (2 machines x 16 cores) => 9.8s/iteration; - 64 processes (4 machines x 16 cores) => 6.2s/iteration. Thank",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593123594
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:2402,Integrability,bridg,bridge,2402,"tiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. Mesh 1 (6.8e6 cells). * 8 processes (1 machine x 8 cores) => 13s/iteration; * 8 processes (2 machine x 4 cores) => 18.4s/iteration; * 16 processes (1 machine x 16 cores) => 8.5s/iteration; * 16 processes (2 machines x 8 cores) => 17s/iteration; * 16 processes (4 machines x 4 cores) => 15.8s/iteration; * 32 processes (2 machines x 16 cores) => 18.1s/iteration; * 64 processes (4 machines x 16 cores) => 21.9s/iteration. Mesh 2 (27e6 cells). * 8 processes (1 machine x 8 cores) => 50s/iteration; * 16 processes (1 machine x 16 cores) => 32s/iteration; * 16 processes (2 machines x 8 cores) => 32s/iteration; * 16 processes (4 machines x 4 cores) => 31s/iteration; * 32 processes (2 machines x 16 cores) => 34s/iteration; * 64 processes (4 machines x 16 cores) => 40s/iteration. A final set of timings for Mesh 1 with SU2 v6.2 for reference. * 8 processes (1 machine x 8 cores) => 26s/iteration; * 8 processes (2 machine x 4 cores) => 25s/iteration; *",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:92,Performance,perform,perform,92,"Well, the good news is that, when staying within a single node (up to 16 cores) v7 seems to perform significantly better for you than v6.2. The bad news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:468,Performance,scalab,scalability,468,"Well, the good news is that, when staying within a single node (up to 16 cores) v7 seems to perform significantly better for you than v6.2. The bad news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:816,Performance,scalab,scalability,816,"Well, the good news is that, when staying within a single node (up to 16 cores) v7 seems to perform significantly better for you than v6.2. The bad news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:867,Performance,perform,performance,867,"Well, the good news is that, when staying within a single node (up to 16 cores) v7 seems to perform significantly better for you than v6.2. The bad news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:1026,Performance,latency,latency,1026,"Well, the good news is that, when staying within a single node (up to 16 cores) v7 seems to perform significantly better for you than v6.2. The bad news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:1072,Performance,perform,performance,1072,"d news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593127059:1461,Testability,log,log,1461,"calability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. Mesh 1 (6.8e6 cel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059
https://github.com/su2code/SU2/issues/894#issuecomment-593130929:323,Performance,scalab,scalability,323,"The primary changes in #652 were related to replacing legacy blocking send/receive calls with non-blocking versions (with the receives accepted in a first-come manner using WaitAny()) for all of the point-to-point communications. At the time, I saw modest time/iteration improvements (10-20%) across the board when testing scalability on a fairly large cluster (Xeon nodes with Infiniband). Can you check if there's anything in your network setup that would render the non-blocking communications ineffective? That would be my best guess since it was the major change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593130929
https://github.com/su2code/SU2/issues/894#issuecomment-593130929:315,Testability,test,testing,315,"The primary changes in #652 were related to replacing legacy blocking send/receive calls with non-blocking versions (with the receives accepted in a first-come manner using WaitAny()) for all of the point-to-point communications. At the time, I saw modest time/iteration improvements (10-20%) across the board when testing scalability on a fairly large cluster (Xeon nodes with Infiniband). Can you check if there's anything in your network setup that would render the non-blocking communications ineffective? That would be my best guess since it was the major change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593130929
https://github.com/su2code/SU2/issues/894#issuecomment-593144776:722,Availability,down,download,722,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776
https://github.com/su2code/SU2/issues/894#issuecomment-593144776:102,Performance,latency,latency,102,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776
https://github.com/su2code/SU2/issues/894#issuecomment-593144776:372,Testability,log,logged,372,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776
https://github.com/su2code/SU2/issues/894#issuecomment-593144776:955,Usability,simpl,simple,955,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776
https://github.com/su2code/SU2/issues/894#issuecomment-593162200:1211,Availability,error,error,1211,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200
https://github.com/su2code/SU2/issues/894#issuecomment-593162200:243,Integrability,message,message,243,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200
https://github.com/su2code/SU2/issues/894#issuecomment-593162200:1311,Integrability,message,message,1311,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200
https://github.com/su2code/SU2/issues/894#issuecomment-593162200:1098,Modifiability,config,config,1098,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200
https://github.com/su2code/SU2/issues/894#issuecomment-593162200:359,Performance,perform,performance,359,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200
https://github.com/su2code/SU2/issues/894#issuecomment-593162200:823,Testability,test,tested,823,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200
https://github.com/su2code/SU2/issues/894#issuecomment-593174003:66,Integrability,message,message,66,"We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593174003
https://github.com/su2code/SU2/issues/894#issuecomment-593174003:474,Integrability,message,message,474,"We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593174003
https://github.com/su2code/SU2/issues/894#issuecomment-593186725:283,Energy Efficiency,schedul,schedule,283,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725
https://github.com/su2code/SU2/issues/894#issuecomment-593186725:613,Integrability,message,message,613,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725
https://github.com/su2code/SU2/issues/894#issuecomment-593186725:1021,Integrability,message,message,1021,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725
https://github.com/su2code/SU2/issues/894#issuecomment-593186725:153,Performance,perform,performance,153,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725
https://github.com/su2code/SU2/issues/894#issuecomment-593186725:169,Performance,scalab,scalability,169,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725
https://github.com/su2code/SU2/issues/894#issuecomment-593186725:310,Testability,test,tests,310,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725
https://github.com/su2code/SU2/issues/894#issuecomment-593201405:110,Deployability,install,installed,110,"@pcarruscag I do run compressible RANS typically. And it is an unstructured mesh. I tried your suggestion and installed 7.0.2 with omp. The preprocessing seemed like it wasn't using multiple threads, but then it did fail with `edge coloring failed`. I've attached the output if you want to take a look. [output.txt](https://github.com/su2code/SU2/files/4273217/output.txt). I'll update this issue if I do get faster networking working and post the same timings for the same cases. I did a little bit of searching regarding mpi tuning parameters, but the only thing I can find to try at the moment is to use mpich in lieu of openmpi. I will try that next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593201405
https://github.com/su2code/SU2/issues/894#issuecomment-593201405:379,Deployability,update,update,379,"@pcarruscag I do run compressible RANS typically. And it is an unstructured mesh. I tried your suggestion and installed 7.0.2 with omp. The preprocessing seemed like it wasn't using multiple threads, but then it did fail with `edge coloring failed`. I've attached the output if you want to take a look. [output.txt](https://github.com/su2code/SU2/files/4273217/output.txt). I'll update this issue if I do get faster networking working and post the same timings for the same cases. I did a little bit of searching regarding mpi tuning parameters, but the only thing I can find to try at the moment is to use mpich in lieu of openmpi. I will try that next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593201405
https://github.com/su2code/SU2/issues/894#issuecomment-593291846:240,Modifiability,config,config,240,"I was not suggesting a ""reversion"" Juan, just a compatibility mode. But from what Tom wrote it would not be trivial (nor worth doing since it is just speculation at this point). @drewkett you can try to get past the coloring issue with the config option `EDGE_COLORING_GROUP_SIZE= X`, try X=1 and if that fails X=1024,2048,4096,... (with large enough value the coloring will eventually work but the parallelism won't be great).; The algorithm is a bit primitive but it does work for the unstructured Onera M6 grid in the repo.; Indeed the preprocessing is not hybrid parallel yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593291846
https://github.com/su2code/SU2/issues/894#issuecomment-593573398:664,Deployability,release,release,664,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398
https://github.com/su2code/SU2/issues/894#issuecomment-593573398:487,Energy Efficiency,adapt,adaptive,487,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398
https://github.com/su2code/SU2/issues/894#issuecomment-593573398:487,Modifiability,adapt,adaptive,487,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398
https://github.com/su2code/SU2/issues/894#issuecomment-593573398:142,Performance,load,load,142,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398
https://github.com/su2code/SU2/issues/894#issuecomment-593573398:421,Performance,load,load,421,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398
https://github.com/su2code/SU2/issues/894#issuecomment-593605149:407,Availability,down,down,407,"@pcarruscag Thanks for the help. I'll update this when I get some faster networking. One other data point that I'm not sure if its helpful. But I've also been running openfoam a bit recently and I noticed that at the start of the run it says its using non-blocking mpi comms. For a mesh size of 18e6 in openfoam i'm getting pretty good scaling at least up to 64 processes (where the per iteration time gets down to 7.5s). I recognize its a completely different solver so its probably not meaningful, but thought I'd share in case its helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593605149
https://github.com/su2code/SU2/issues/894#issuecomment-593605149:38,Deployability,update,update,38,"@pcarruscag Thanks for the help. I'll update this when I get some faster networking. One other data point that I'm not sure if its helpful. But I've also been running openfoam a bit recently and I noticed that at the start of the run it says its using non-blocking mpi comms. For a mesh size of 18e6 in openfoam i'm getting pretty good scaling at least up to 64 processes (where the per iteration time gets down to 7.5s). I recognize its a completely different solver so its probably not meaningful, but thought I'd share in case its helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593605149
https://github.com/su2code/SU2/issues/894#issuecomment-593638807:187,Deployability,release,releases,187,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807
https://github.com/su2code/SU2/issues/894#issuecomment-593638807:362,Energy Efficiency,reduce,reduce,362,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807
https://github.com/su2code/SU2/issues/894#issuecomment-593638807:492,Integrability,message,messages,492,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807
https://github.com/su2code/SU2/issues/894#issuecomment-593638807:584,Performance,perform,performance,584,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:3,Deployability,update,update,3,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:1361,Deployability,update,update,1361,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:165,Performance,latency,latency,165,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:217,Performance,latency,latency,217,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:941,Performance,scalab,scalability,941,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:1136,Performance,bottleneck,bottleneck,1136,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-594201448:129,Testability,test,tested,129,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448
https://github.com/su2code/SU2/issues/894#issuecomment-606535236:531,Availability,down,down,531,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236
https://github.com/su2code/SU2/issues/894#issuecomment-606535236:716,Availability,down,down,716,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236
https://github.com/su2code/SU2/issues/894#issuecomment-606535236:190,Integrability,message,message,190,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236
https://github.com/su2code/SU2/issues/894#issuecomment-606535236:74,Safety,detect,detects,74,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236
https://github.com/su2code/SU2/issues/894#issuecomment-606535236:591,Security,access,access,591,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236
https://github.com/su2code/SU2/issues/894#issuecomment-606535236:658,Testability,benchmark,benchmark,658,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236
https://github.com/su2code/SU2/issues/894#issuecomment-615329675:15,Deployability,update,update,15,"Thanks for the update. I gave the new version a try. Unfortunately one of my machines is acting up and i can't go to the office to fix it so I ran the tests on 3 machines using the 10G ethernet. I saw the warning about a backup strategy for edge coloring, but it ran just fine. The performance for 3 nodes was about 30% faster than 2 nodes (compared to ideal of 50% faster). Whenever my office opens back up, I'll get the 4th machine back online and i can try the 4 node version, which is the one that required 8192 for edge coloring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-615329675
https://github.com/su2code/SU2/issues/894#issuecomment-615329675:282,Performance,perform,performance,282,"Thanks for the update. I gave the new version a try. Unfortunately one of my machines is acting up and i can't go to the office to fix it so I ran the tests on 3 machines using the 10G ethernet. I saw the warning about a backup strategy for edge coloring, but it ran just fine. The performance for 3 nodes was about 30% faster than 2 nodes (compared to ideal of 50% faster). Whenever my office opens back up, I'll get the 4th machine back online and i can try the 4 node version, which is the one that required 8192 for edge coloring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-615329675
https://github.com/su2code/SU2/issues/894#issuecomment-615329675:151,Testability,test,tests,151,"Thanks for the update. I gave the new version a try. Unfortunately one of my machines is acting up and i can't go to the office to fix it so I ran the tests on 3 machines using the 10G ethernet. I saw the warning about a backup strategy for edge coloring, but it ran just fine. The performance for 3 nodes was about 30% faster than 2 nodes (compared to ideal of 50% faster). Whenever my office opens back up, I'll get the 4th machine back online and i can try the 4 node version, which is the one that required 8192 for edge coloring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-615329675
https://github.com/su2code/SU2/issues/894#issuecomment-643831225:80,Energy Efficiency,reduce,reduced,80,"In version v7.0.5 we made the communications hybrid parallel (to an extent) and reduced the communication overhead noticeably, that is probably as ethernet friendly as the code can reasonably be made.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-643831225
https://github.com/su2code/SU2/pull/897#issuecomment-594013467:0,Testability,Test,Tests,0,"Tests are passing, so this wasn't covered. I will make sure it's covered via the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897#issuecomment-594013467
https://github.com/su2code/SU2/pull/902#issuecomment-630327081:145,Deployability,update,update,145,"Hi guys,; this has been sitting here for some time, and I just noticed there are some conflicts, etc. I'm very sorry that I haven't been able to update it, and I can't promise I will be able to look into it soon enough, but maybe @RoccoBombardieri could have a look into it? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-630327081
https://github.com/su2code/SU2/pull/902#issuecomment-743400230:479,Modifiability,extend,extend,479,"Hello @pcarruscag,. I've been following the conversation about #1124 and the possible conflicts with this PR. I wanted to say that, with respect to this specific PR I kept working on a different branch lately (**feature_pyBeam_ShapeDesignV2**) which, is currently the most advanced version of the project. How to conciliate? Shall we pull from feature_pyBeam_ShapeDesignV2 directly here? . One issue of that version is that I had to introduce some changes into the CFD solver to extend to FSI the fixed Cl design feature. I thought the mods where general but that actually broke something within SU2 CFD AD. . Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743400230
https://github.com/su2code/SU2/pull/902#issuecomment-743422907:761,Modifiability,refactor,refactoring,761,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907
https://github.com/su2code/SU2/pull/902#issuecomment-743422907:718,Safety,avoid,avoid,718,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907
https://github.com/su2code/SU2/pull/902#issuecomment-743422907:620,Testability,test,testcases,620,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:23,Deployability,install,installed,23,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:187,Deployability,install,install,187,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:233,Deployability,install,install,233,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:314,Deployability,install,installed,314,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:69,Integrability,depend,dependencies,69,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:16,Modifiability,config,config,16,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:46,Modifiability,config,config,46,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:125,Modifiability,config,config,125,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:148,Modifiability,config,config,148,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:245,Modifiability,config,config,245,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:307,Modifiability,config,config,307,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:369,Modifiability,config,config,369,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595955473:433,Modifiability,variab,variable,433,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473
https://github.com/su2code/SU2/issues/903#issuecomment-595963233:75,Deployability,install,install,75,@jayantmukho Uh no I didn't have pkg-config before. Problem solved after I install it. Thank you so much!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595963233
https://github.com/su2code/SU2/issues/903#issuecomment-595963233:37,Modifiability,config,config,37,@jayantmukho Uh no I didn't have pkg-config before. Problem solved after I install it. Thank you so much!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595963233
https://github.com/su2code/SU2/pull/905#issuecomment-596023239:78,Availability,robust,robust,78,"@jayantmukho LGTM. I'm also in favor of moving to SST-2003 if it means a more robust SST solver. This might also be a good time to continue to look into other issues with SST, e.g. some TKE terms mentioned in #797. Another possible discrepancy I noticed is that in CTurbSSTVariable we have; ```; CDkw(iPoint) = 0.0;; for (unsigned long iDim = 0; iDim < nDim; iDim++); CDkw(iPoint) += Gradient(iPoint,0,iDim)*Gradient(iPoint,1,iDim);; CDkw(iPoint) *= 2.0*val_density*sigma_om2/Solution(iPoint,1);; CDkw(iPoint) = max(CDkw(iPoint), pow(10.0, -20.0));; ...; arg1 = min(arg2, 4.0*val_density*sigma_om2*Solution(iPoint,0) / (CDkw(iPoint)*val_dist*val_dist+EPS*EPS));; F1(iPoint) = tanh(pow(arg1, 4.0));; ```; which is consistent with TMR, but when computing the cross diffusion residual we have; ```; val_residual[1] += (1.0 - F1_i)*CDkw_i*Volume;; ```; However, here TMR (as well as both SST-1993 and SST-2003) has; <img width=""162"" alt=""Screen Shot 2020-03-06 at 4 44 14 PM"" src=""https://user-images.githubusercontent.com/19416354/76132834-cff18a80-5fc9-11ea-9a72-8e4ab524e8dc.png"">; So to be consistent with TMR, would it make more sense to have e.g.; ```; CDkw(iPoint) = 0.0;; for (unsigned long iDim = 0; iDim < nDim; iDim++); CDkw(iPoint) += Gradient(iPoint,0,iDim)*Gradient(iPoint,1,iDim);; CDkw(iPoint) *= 2.0*val_density*sigma_om2/Solution(iPoint,1);; ...; arg1 = min(arg2, 4.0*val_density*sigma_om2*Solution(iPoint,0) / (max(CDkw(iPoint),pow(10.0,-10.0))*val_dist*val_dist+EPS*EPS));; F1(iPoint) = tanh(pow(arg1, 4.0));; ```; so we don't clip the cross diffusion residual? Not sure how much of a difference this makes (or other discrepenacies like the TKE issue).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-596023239
https://github.com/su2code/SU2/pull/905#issuecomment-597519318:49,Deployability,release,release,49,"Just a couple of non scientific comments.; - The release after this kind of change should get more than a minor version increase, so if the changes are localized it may be worth waiting and bundling them with other significant ones (e.g. removing some legacy features).; - If you guys add more SST variants let's please do it in a smarter way than `case SST: case SST_2003: ...` as we are still seeing bug fixes from the last time we changed that kind of enum... I'm happy to help implement something like #770.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-597519318
https://github.com/su2code/SU2/pull/905#issuecomment-598280668:73,Security,validat,validation,73,"Sorry took a while to get around to it but here are the results from the validation cases that were requested. Turns out, this change is minimal in its effect to the overall simulation (at least for the two cases I have run). ## Flatplate; For the flatplate case, there was no difference in the C_D calculation so the lines mesh convergence were on top of each other. But while I was doing that, I was playing around with the solver parameters and there was an interesting difference between simulations run with `WEIGHTED_LEAST_SQUARES` and those run with `GREEN_GAUSS`. I have included them here:. ![force_convergence_flatplate_SA](https://user-images.githubusercontent.com/30271435/76541252-83320780-6440-11ea-9678-bd3a10e47436.png); ![force_convergence_flatplate_SST](https://user-images.githubusercontent.com/30271435/76541258-84633480-6440-11ea-9624-93bde157fbb8.png). This shows interesting parallels between `WEIGHTED_LEAST_SQUARES` results and CFL3D results vs `GREEN_GAUSS` and FUN3D. Also interesting the SU2 with both gradient methods converges to a slightly different C_f value than CFL3D and FUN3D. Not really connected with this PR but interesting results that can be uploaded to the VandV section of the website. . ## RAE 2822. Luckily I have been working on the RAE2822 as a validation case so I already had a family of grids that worked for this case. Again seems like the change didn't make much of a difference. dev_SST refers to the current SST implementation in develop. SST refers to the results from this PR. ![force_convergence_rae2822_SST](https://user-images.githubusercontent.com/30271435/76541879-76fa7a00-6441-11ea-911d-29ccffc81677.png). Consequently, the C_P plots are also identical; ![cp_rae2822_SST](https://user-images.githubusercontent.com/30271435/76543047-28e67600-6443-11ea-8a8e-6ca8ff62098d.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-598280668
https://github.com/su2code/SU2/pull/905#issuecomment-598280668:1292,Security,validat,validation,1292,"Sorry took a while to get around to it but here are the results from the validation cases that were requested. Turns out, this change is minimal in its effect to the overall simulation (at least for the two cases I have run). ## Flatplate; For the flatplate case, there was no difference in the C_D calculation so the lines mesh convergence were on top of each other. But while I was doing that, I was playing around with the solver parameters and there was an interesting difference between simulations run with `WEIGHTED_LEAST_SQUARES` and those run with `GREEN_GAUSS`. I have included them here:. ![force_convergence_flatplate_SA](https://user-images.githubusercontent.com/30271435/76541252-83320780-6440-11ea-9678-bd3a10e47436.png); ![force_convergence_flatplate_SST](https://user-images.githubusercontent.com/30271435/76541258-84633480-6440-11ea-9624-93bde157fbb8.png). This shows interesting parallels between `WEIGHTED_LEAST_SQUARES` results and CFL3D results vs `GREEN_GAUSS` and FUN3D. Also interesting the SU2 with both gradient methods converges to a slightly different C_f value than CFL3D and FUN3D. Not really connected with this PR but interesting results that can be uploaded to the VandV section of the website. . ## RAE 2822. Luckily I have been working on the RAE2822 as a validation case so I already had a family of grids that worked for this case. Again seems like the change didn't make much of a difference. dev_SST refers to the current SST implementation in develop. SST refers to the results from this PR. ![force_convergence_rae2822_SST](https://user-images.githubusercontent.com/30271435/76541879-76fa7a00-6441-11ea-911d-29ccffc81677.png). Consequently, the C_P plots are also identical; ![cp_rae2822_SST](https://user-images.githubusercontent.com/30271435/76543047-28e67600-6443-11ea-8a8e-6ca8ff62098d.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-598280668
https://github.com/su2code/SU2/pull/905#issuecomment-598288334:74,Testability,test,test,74,"Ok. Unless there's significant differences in any of the other regression test cases, then this PR looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-598288334
https://github.com/su2code/SU2/pull/905#issuecomment-599241140:164,Deployability,configurat,configuration,164,"Hmm.. you are right that the Cf results look a little different than the ones posted on the V&V page (for both SA and SST). Is there anything else different in the configuration for those cases from the set up for the cases on the V&V page? For the flat plate, I may have used unweighted LSQ for the posted V&V results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599241140
https://github.com/su2code/SU2/pull/905#issuecomment-599241140:164,Modifiability,config,configuration,164,"Hmm.. you are right that the Cf results look a little different than the ones posted on the V&V page (for both SA and SST). Is there anything else different in the configuration for those cases from the set up for the cases on the V&V page? For the flat plate, I may have used unweighted LSQ for the posted V&V results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599241140
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:527,Availability,error,error,527,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:797,Availability,error,error,797,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:82,Energy Efficiency,adapt,adaptive,82,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:345,Energy Efficiency,adapt,adaptive,345,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:20,Modifiability,config,config,20,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:82,Modifiability,adapt,adaptive,82,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:345,Modifiability,adapt,adaptive,345,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:1323,Modifiability,config,config,1323,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-599337194:1396,Testability,test,tests,1396,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:0,Deployability,Update,Updated,0,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:97,Deployability,integrat,integrated,97,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:534,Deployability,update,update,534,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:594,Energy Efficiency,adapt,adaptive,594,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:628,Energy Efficiency,monitor,monitoring,628,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:97,Integrability,integrat,integrated,97,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:368,Modifiability,config,configs,368,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:414,Modifiability,config,configs,414,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:558,Modifiability,config,configs,558,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:594,Modifiability,adapt,adaptive,594,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:713,Modifiability,config,config,713,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:27,Testability,test,test,27,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:210,Testability,test,tests,210,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:678,Testability,test,tests,678,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/pull/905#issuecomment-600991354:779,Testability,test,test,779,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354
https://github.com/su2code/SU2/issues/906#issuecomment-602097912:248,Availability,error,errors,248,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912
https://github.com/su2code/SU2/issues/906#issuecomment-602097912:75,Modifiability,rewrite,rewrites,75,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912
https://github.com/su2code/SU2/issues/906#issuecomment-602097912:172,Modifiability,config,config,172,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912
https://github.com/su2code/SU2/issues/906#issuecomment-602097912:11,Testability,test,test,11,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912
https://github.com/su2code/SU2/issues/907#issuecomment-596654031:260,Integrability,Interface,Interface,260,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031
https://github.com/su2code/SU2/issues/907#issuecomment-596654031:583,Usability,simpl,simple,583,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031
https://github.com/su2code/SU2/issues/907#issuecomment-596654031:695,Usability,guid,guidance,695,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031
https://github.com/su2code/SU2/issues/907#issuecomment-597483239:171,Deployability,update,update,171,"Hi, is this a known bug with v6.2? I saw that some people seemed to be having issues with results reproducibility after going up a version - was this fixed? I did plan to update but since I'm halfway through a case study, I originally wanted to complete my outstanding cases using the same solver. If v7.0.2 will produce the same results, then I guess I will try to update.; Thanks and regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-597483239
https://github.com/su2code/SU2/issues/907#issuecomment-597483239:366,Deployability,update,update,366,"Hi, is this a known bug with v6.2? I saw that some people seemed to be having issues with results reproducibility after going up a version - was this fixed? I did plan to update but since I'm halfway through a case study, I originally wanted to complete my outstanding cases using the same solver. If v7.0.2 will produce the same results, then I guess I will try to update.; Thanks and regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-597483239
https://github.com/su2code/SU2/issues/909#issuecomment-603370840:89,Performance,optimiz,optimization,89,"Thanks for the issue @Eduardo-Carvalho. If anyone working in an area related to unsteady optimization has a moment to take a look at this (maybe @TobiKattmann or @ScSteffen?), I'd appreciate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-603370840
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:142,Deployability,release,releases,142,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:394,Deployability,integrat,integration,394,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:394,Integrability,integrat,integration,394,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:243,Modifiability,config,config,243,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:436,Modifiability,config,config,436,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:87,Testability,test,test,87,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:456,Testability,test,test,456,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/909#issuecomment-630289600:193,Usability,intuit,intuitive,193,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600
https://github.com/su2code/SU2/issues/910#issuecomment-598352171:110,Testability,test,testing,110,"Hi Eran, please see #898, a few of us still keep the old build system up to date, but because it is not under testing it is often broken. If this is critical to you I recommend checking which PR's introduce changes to meson.build files and if so request corresponding changes to the MakeFiles.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598352171
https://github.com/su2code/SU2/issues/910#issuecomment-598386726:373,Modifiability,config,configure,373,"Thanks for this PR; I think it is critical since our main working clusters are disconnected from the web. ; Meson/ninja work like a charm but only on my web-connected laptop.; I believe that this is not a singular case. ; However, the PR that you have mentioned was already merged into develop branch, but from a fresh clone of develop I had 2 problems (at least):; 1. the configure script was missing (I have copied it from a previous version); 2. The make failed due to missing reference to CHeatSolverFVP.cpp which actually; doesn't exist. So some work is still needed here. I shall try to see also what I can find out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598386726
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1867,Availability,error,error,1867,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2030,Availability,Error,Error,2030,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:433,Deployability,Release,Release,433,"Naturally, I was using preconfig.py; However, while running it complained that it can't find configure: here is the printout; ----------------------; export CXXFLAGS=""-O3 -Wall -std=c++11 "" && ./preconfigure.py --enable-autodiff --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:503,Deployability,configurat,configuration,503,"Naturally, I was using preconfig.py; However, while running it complained that it can't find configure: here is the printout; ----------------------; export CXXFLAGS=""-O3 -Wall -std=c++11 "" && ./preconfigure.py --enable-autodiff --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2167,Deployability,install,installations,2167,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:93,Modifiability,config,configure,93,"Naturally, I was using preconfig.py; However, while running it complained that it can't find configure: here is the printout; ----------------------; export CXXFLAGS=""-O3 -Wall -std=c++11 "" && ./preconfigure.py --enable-autodiff --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:503,Modifiability,config,configuration,503,"Naturally, I was using preconfig.py; However, while running it complained that it can't find configure: here is the printout; ----------------------; export CXXFLAGS=""-O3 -Wall -std=c++11 "" && ./preconfigure.py --enable-autodiff --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1607,Modifiability,config,configure,1607,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1729,Modifiability,config,configure,1729,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1899,Modifiability,config,configure,1899,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2060,Modifiability,config,configure,2060,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2143,Modifiability,config,configure,2143,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2206,Safety,abort,aborted,2206,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1565,Testability,Log,Logfile,1565,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1594,Testability,log,log,1594,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2036,Testability,Log,Log,2036,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170
https://github.com/su2code/SU2/issues/910#issuecomment-598733874:40,Deployability,Release,Release,40,"That looks a bit strange, you still get Release 6.2.0 but in the aforementioned PR @jayantmukho clearly updated the version to 7.0.2, I use the old build system in an old computer and it is currently working...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598733874
https://github.com/su2code/SU2/issues/910#issuecomment-598733874:104,Deployability,update,updated,104,"That looks a bit strange, you still get Release 6.2.0 but in the aforementioned PR @jayantmukho clearly updated the version to 7.0.2, I use the old build system in an old computer and it is currently working...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598733874
https://github.com/su2code/SU2/issues/910#issuecomment-598733874:96,Usability,clear,clearly,96,"That looks a bit strange, you still get Release 6.2.0 but in the aforementioned PR @jayantmukho clearly updated the version to 7.0.2, I use the old build system in an old computer and it is currently working...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598733874
https://github.com/su2code/SU2/issues/910#issuecomment-598824144:172,Deployability,configurat,configuration,172,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144
https://github.com/su2code/SU2/issues/910#issuecomment-598824144:137,Modifiability,config,configure,137,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144
https://github.com/su2code/SU2/issues/910#issuecomment-598824144:163,Modifiability,extend,extended,163,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144
https://github.com/su2code/SU2/issues/910#issuecomment-598824144:172,Modifiability,config,configuration,172,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144
https://github.com/su2code/SU2/issues/910#issuecomment-598824144:454,Usability,Clear,Clearly,454,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:399,Availability,repair,repair,399,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:176,Deployability,patch,patch,176,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:364,Deployability,install,install,364,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:388,Deployability,patch,patch,388,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:581,Deployability,Release,Release,581,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:194,Integrability,rout,routines,194,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:449,Integrability,rout,routines,449,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:688,Integrability,message,message,688,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:284,Modifiability,variab,variables,284,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600786911:547,Modifiability,config,configure,547,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911
https://github.com/su2code/SU2/issues/910#issuecomment-600828306:110,Integrability,rout,routines,110,"Sorry but I don't follow your suggestion:; The .deps folders in SU2_BASE (where the linkage to the CHeaterFVM routines exist) are; created during the preconfigure.py step, related to the codi part. There you can find ; pointers with DIRECTDIFF (like libSU2Core_DIRECTDIFF_a-CHeatFVMVariable.Po).; Can you clarify?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600828306
https://github.com/su2code/SU2/issues/910#issuecomment-600837563:199,Modifiability,layers,layers,199,"I'm doing my tests on a fresh clone from the git.; None of the folders that you menthoned exist after cloning. They are created during; the preconfigure run. The wrong naming does not originate from layers of history in ; the git folder.; And yes, adding no debug flag makes sense.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600837563
https://github.com/su2code/SU2/issues/910#issuecomment-600837563:13,Testability,test,tests,13,"I'm doing my tests on a fresh clone from the git.; None of the folders that you menthoned exist after cloning. They are created during; the preconfigure run. The wrong naming does not originate from layers of history in ; the git folder.; And yes, adding no debug flag makes sense.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600837563
https://github.com/su2code/SU2/issues/910#issuecomment-600843376:41,Integrability,message,message,41,"If you type ""git log"", is this the first message you see?; ```; commit 3f9402f499dfba9b5a7f633fda1e452e48722e40; Merge: c0867da 4f9bc2f; Author: Jessie Lauzon <jtlau@users.noreply.github.com>; Date: Fri Mar 6 13:52:14 2020 -0800; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600843376
https://github.com/su2code/SU2/issues/910#issuecomment-600843376:17,Testability,log,log,17,"If you type ""git log"", is this the first message you see?; ```; commit 3f9402f499dfba9b5a7f633fda1e452e48722e40; Merge: c0867da 4f9bc2f; Author: Jessie Lauzon <jtlau@users.noreply.github.com>; Date: Fri Mar 6 13:52:14 2020 -0800; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600843376
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:337,Deployability,install,install,337,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:362,Deployability,patch,patches,362,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:464,Deployability,update,update,464,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:268,Integrability,message,message,268,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:46,Testability,test,tests,46,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:187,Testability,log,log,187,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601077460:264,Testability,log,log,264,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460
https://github.com/su2code/SU2/issues/910#issuecomment-601083184:8,Deployability,release,releases,8,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184
https://github.com/su2code/SU2/issues/910#issuecomment-601083184:221,Deployability,release,release,221,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184
https://github.com/su2code/SU2/issues/910#issuecomment-601083184:183,Testability,test,test,183,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184
https://github.com/su2code/SU2/issues/911#issuecomment-598376736:234,Deployability,install,installed,234,"Also, this might be more of a question I guess, why does this `meson.py` script exist/why isn't the normal way of using meson (simply running `meson <builddir>`) used?. [edit] Just noticed `meson build` also works and uses the system installed `ninja` as expected. Still not really sure what the script is for.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598376736
https://github.com/su2code/SU2/issues/911#issuecomment-598376736:127,Usability,simpl,simply,127,"Also, this might be more of a question I guess, why does this `meson.py` script exist/why isn't the normal way of using meson (simply running `meson <builddir>`) used?. [edit] Just noticed `meson build` also works and uses the system installed `ninja` as expected. Still not really sure what the script is for.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598376736
https://github.com/su2code/SU2/issues/911#issuecomment-598496636:159,Deployability,install,installed,159,Hi @simonvanderveldt. Thanks for the questions. The custom meson.py script shipped with su2 also initializes the git submodules. You can of course also use an installed version of meson/ninja for building (should be also noted in the documentation on the website) by simply replacing `./meson.py` with `meson`.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598496636
https://github.com/su2code/SU2/issues/911#issuecomment-598496636:267,Usability,simpl,simply,267,Hi @simonvanderveldt. Thanks for the questions. The custom meson.py script shipped with su2 also initializes the git submodules. You can of course also use an installed version of meson/ninja for building (should be also noted in the documentation on the website) by simply replacing `./meson.py` with `meson`.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598496636
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:1242,Availability,down,downloads,1242,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:434,Deployability,configurat,configuration-and-compilation,434,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:484,Deployability,install,installed,484,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:637,Deployability,install,installed,637,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:685,Deployability,configurat,configuration,685,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:862,Deployability,configurat,configuration,862,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:1105,Deployability,release,releases,1105,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:494,Integrability,depend,dependencies,494,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:955,Integrability,depend,dependencies,955,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:434,Modifiability,config,configuration-and-compilation,434,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:685,Modifiability,config,configuration,685,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:862,Modifiability,config,configuration,862,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:126,Usability,simpl,simpler,126,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/911#issuecomment-598751341:750,Usability,clear,clear,750,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341
https://github.com/su2code/SU2/issues/912#issuecomment-600274648:205,Security,expose,expose,205,"Hi @jatrin - glad to hear that the incompressible RANS solver is working well for you! . Thanks for the feature request. We have worked on this a little in the past, although there is no general method to expose any desired option for multipoint yet. However, in the past, we implemented the same concept for mass flow outlets with the incompressible solver. You might check the commit here to see the changes, and perhaps you can apply them to your own situation: . https://github.com/su2code/SU2/commit/541cae41c2ed5dc47ff1ce8a5ee5f7aff9c5fbf1#diff-e344798f2c0e495f61cf1e9a773e4257",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-600274648
https://github.com/su2code/SU2/issues/912#issuecomment-604543256:259,Modifiability,config,config,259,"Great! Thanks @economon for the link. I have 2 main questions after reading through those changes:. 1. Would the custom objective function below need to modified for a velocity init/pressure outlet instead of a mass flow outlet?. `Total_Custom_ObjFunc = pow((config->GetSurface_MassFlow(0)/config->GetSurface_MassFlow(1) - 0.046),2.0)`. 2. This question needs a bit of context. A summary of the issues I see in the deformed mesh:. a. ~1.04M (out of ~4.2M) elements are missing:; <img width=""713"" alt=""Screen Shot 2020-03-18 at 10 39 32 AM"" src=""https://user-images.githubusercontent.com/62301101/77670983-ed749d00-6f54-11ea-86ee-6a49c0003f84.png"">; b. Sequences of elements interleaved at irregular intervals:; <img width=""714"" alt=""Screen Shot 2020-03-18 at 10 40 10 AM"" src=""https://user-images.githubusercontent.com/62301101/77671352-7ee40f00-6f55-11ea-91b8-ed13178139db.png"">; c. The NPOIN= declaration is missing, and points also interleaved at irregular intervals:; <img width=""884"" alt=""Screen Shot 2020-03-18 at 10 37 14 AM"" src=""https://user-images.githubusercontent.com/62301101/77671853-29f4c880-6f56-11ea-9061-046d690ab42f.png"">. To me it almost seems as if different processes are trying to write to the file at the same time and overwriting each other. Could this be caused by my using the DRAG objective function with my hardcoded initial velocity values? If so, could a custom objective function solve this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-604543256
https://github.com/su2code/SU2/issues/912#issuecomment-604543256:290,Modifiability,config,config,290,"Great! Thanks @economon for the link. I have 2 main questions after reading through those changes:. 1. Would the custom objective function below need to modified for a velocity init/pressure outlet instead of a mass flow outlet?. `Total_Custom_ObjFunc = pow((config->GetSurface_MassFlow(0)/config->GetSurface_MassFlow(1) - 0.046),2.0)`. 2. This question needs a bit of context. A summary of the issues I see in the deformed mesh:. a. ~1.04M (out of ~4.2M) elements are missing:; <img width=""713"" alt=""Screen Shot 2020-03-18 at 10 39 32 AM"" src=""https://user-images.githubusercontent.com/62301101/77670983-ed749d00-6f54-11ea-86ee-6a49c0003f84.png"">; b. Sequences of elements interleaved at irregular intervals:; <img width=""714"" alt=""Screen Shot 2020-03-18 at 10 40 10 AM"" src=""https://user-images.githubusercontent.com/62301101/77671352-7ee40f00-6f55-11ea-91b8-ed13178139db.png"">; c. The NPOIN= declaration is missing, and points also interleaved at irregular intervals:; <img width=""884"" alt=""Screen Shot 2020-03-18 at 10 37 14 AM"" src=""https://user-images.githubusercontent.com/62301101/77671853-29f4c880-6f56-11ea-9061-046d690ab42f.png"">. To me it almost seems as if different processes are trying to write to the file at the same time and overwriting each other. Could this be caused by my using the DRAG objective function with my hardcoded initial velocity values? If so, could a custom objective function solve this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-604543256
https://github.com/su2code/SU2/issues/912#issuecomment-605275594:112,Performance,optimiz,optimization,112,"Concerning your first question.. that was an old example of using the custom objective option for running shape optimization (it was hard-coded for a particular problem - I do not recommend doing it that way). This is only necessary if you would like to include what is happening at the boundaries as part of the objective function or as a constraint. . If your sweep over the inlet velocity is not part of the objective/constrain definition, then you do not need to do this. For example, if you are minimizing drag by changing the shape of a solid boundary given multiple inlet conditions, you can use the normal drag objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-605275594
https://github.com/su2code/SU2/issues/912#issuecomment-609554540:456,Performance,optimiz,optimization,456,"Ok, I think the mesh file issue may have been due to the file system. The mesh file issue happened when I ran the simulation across three nodes on the cluster I was using. I tested on a single high memory node instead and the issue went away. It looks like problem solved! . The drag objective also seems to be working. One thing I noticed is that GNORM and OBJFUN values are not being listed in the output for each design as they were in the single point optimization. I'm not sure what that's about, but the drag values are decreasing!. Thanks again for the responses!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-609554540
https://github.com/su2code/SU2/issues/912#issuecomment-609554540:174,Testability,test,tested,174,"Ok, I think the mesh file issue may have been due to the file system. The mesh file issue happened when I ran the simulation across three nodes on the cluster I was using. I tested on a single high memory node instead and the issue went away. It looks like problem solved! . The drag objective also seems to be working. One thing I noticed is that GNORM and OBJFUN values are not being listed in the output for each design as they were in the single point optimization. I'm not sure what that's about, but the drag values are decreasing!. Thanks again for the responses!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-609554540
https://github.com/su2code/SU2/pull/913#issuecomment-602276632:410,Availability,avail,available,410,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632
https://github.com/su2code/SU2/pull/913#issuecomment-602276632:75,Modifiability,config,config,75,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632
https://github.com/su2code/SU2/pull/913#issuecomment-602276632:317,Modifiability,config,config,317,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632
https://github.com/su2code/SU2/pull/913#issuecomment-602276632:15,Testability,test,testing,15,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632
https://github.com/su2code/SU2/pull/913#issuecomment-602785986:61,Modifiability,extend,extended,61,"@pcarruscag Thanks. I already incorporated your comments!. I extended the expressions to the volume output fields. Similar to the `SCREEN_OUTPUT` you can now define custom volume field variables directly in the `VOLUME_OUTPUT` option, e.g,. `VOLUME_OUTPUT= COORDINATES, SOLUTION, {MOMENTUM_X/DENSITY}`. This required to remove all `-` in the field names for obvious reasons. Note that at the moment it is required that all fields used in the expression are also added manually to the output. I will probably make that automatic soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602785986
https://github.com/su2code/SU2/pull/913#issuecomment-602785986:185,Modifiability,variab,variables,185,"@pcarruscag Thanks. I already incorporated your comments!. I extended the expressions to the volume output fields. Similar to the `SCREEN_OUTPUT` you can now define custom volume field variables directly in the `VOLUME_OUTPUT` option, e.g,. `VOLUME_OUTPUT= COORDINATES, SOLUTION, {MOMENTUM_X/DENSITY}`. This required to remove all `-` in the field names for obvious reasons. Note that at the moment it is required that all fields used in the expression are also added manually to the output. I will probably make that automatic soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602785986
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:128,Availability,avail,available,128,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:276,Availability,avail,available,276,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:327,Availability,avail,available,327,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:337,Integrability,depend,depends,337,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:313,Modifiability,variab,variables,313,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:584,Modifiability,config,config,584,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-605486038:766,Modifiability,flexible,flexible,766,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038
https://github.com/su2code/SU2/pull/913#issuecomment-607959681:28,Modifiability,flexible,flexible,28,"> The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later. This could be useful even for general outputs. One example that comes to mind is if you wanted to calculate the momentum/pressure loss due to a shock. Excited for these new features!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-607959681
https://github.com/su2code/SU2/pull/913#issuecomment-609965745:174,Modifiability,flexible,flexible,174,"@talbring : great progress! As previously discussed, I think this goes in the correct direction.. I would love to see completely customizable obj/constraints/parameters in a flexible way, for any problem a user can dream up. Like @clarkpede says, sometimes the objectives can require some heavy lifting (and require many local solution variables), and this thing is quite difficult to implement currently (it would be great if things like #889 were made easier). Do you think the language parser can eventually be used for this, or do you think we should just stick to writing those implementations in the COutput classes for each problem type (flow, elasticity, heat, etc).?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-609965745
https://github.com/su2code/SU2/pull/913#issuecomment-609965745:336,Modifiability,variab,variables,336,"@talbring : great progress! As previously discussed, I think this goes in the correct direction.. I would love to see completely customizable obj/constraints/parameters in a flexible way, for any problem a user can dream up. Like @clarkpede says, sometimes the objectives can require some heavy lifting (and require many local solution variables), and this thing is quite difficult to implement currently (it would be great if things like #889 were made easier). Do you think the language parser can eventually be used for this, or do you think we should just stick to writing those implementations in the COutput classes for each problem type (flow, elasticity, heat, etc).?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-609965745
https://github.com/su2code/SU2/pull/913#issuecomment-626229423:511,Modifiability,config,config,511,"> @talbring : since you are already working on the output here and if you agree, can you please add the sensitivities as a required output for adjoint runs even if the volume fields are customized (like we do for coords/conservatives for the primal)? I have gotten several reports that this is tripping up some folks, e.g., see #964 . In fact I already deactivated it in this branch. It makes no sense to allow customizable output for the adjoint anyway and it was giving troubles when you want to use the same config for primal and adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-626229423
https://github.com/su2code/SU2/pull/913#issuecomment-634295529:5,Deployability,update,update,5,"Some update here: I had to get rid of the CParse library ... It was too slow since it is based solely on RTTI. I replaced it with [exprtk](https://github.com/ArashPartow/exprtk). This is a fast and widely used expression library. The only drawback is that it is a header-only file with ~40k(!) lines of code. Compilation takes quite long, so I am using pimpl approach to interface it with SU2 in order not to recompile it for every compilation target. Furthermore I added the exprtk code as an archive (similar to what we do with the tecplot IO library).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-634295529
https://github.com/su2code/SU2/pull/913#issuecomment-634295529:371,Integrability,interface,interface,371,"Some update here: I had to get rid of the CParse library ... It was too slow since it is based solely on RTTI. I replaced it with [exprtk](https://github.com/ArashPartow/exprtk). This is a fast and widely used expression library. The only drawback is that it is a header-only file with ~40k(!) lines of code. Compilation takes quite long, so I am using pimpl approach to interface it with SU2 in order not to recompile it for every compilation target. Furthermore I added the exprtk code as an archive (similar to what we do with the tecplot IO library).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-634295529
https://github.com/su2code/SU2/issues/915#issuecomment-606618221:162,Availability,recover,recover,162,Hmm but why would they need to? Dynamic FSI cases restart just fine...; I have not looked into this further (been fixing other bugs). But since the case does not recover after the first iteration it seems that the grid velocities are not computed at all.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/915#issuecomment-606618221
https://github.com/su2code/SU2/issues/915#issuecomment-606618221:162,Safety,recover,recover,162,Hmm but why would they need to? Dynamic FSI cases restart just fine...; I have not looked into this further (been fixing other bugs). But since the case does not recover after the first iteration it seems that the grid velocities are not computed at all.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/915#issuecomment-606618221
https://github.com/su2code/SU2/issues/917#issuecomment-603787485:365,Availability,reliab,reliable,365,"Hi @aeroamit ; I have encountered that problem before (in previous releases) using the Venkatakrishnan-Wang limiter for high Mach number cases. Had similar experience like yours, where Van Albada performed better. I think theoretically the Venkatakrishnan-Wang limiter should be better and this is why, to my opinion, it is the default option. Van Albada is a good reliable old work horse, also in other codes. Still, we might have some problem in the implementation of the Venkatakrishnan-Wang limiter,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-603787485
https://github.com/su2code/SU2/issues/917#issuecomment-603787485:67,Deployability,release,releases,67,"Hi @aeroamit ; I have encountered that problem before (in previous releases) using the Venkatakrishnan-Wang limiter for high Mach number cases. Had similar experience like yours, where Van Albada performed better. I think theoretically the Venkatakrishnan-Wang limiter should be better and this is why, to my opinion, it is the default option. Van Albada is a good reliable old work horse, also in other codes. Still, we might have some problem in the implementation of the Venkatakrishnan-Wang limiter,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-603787485
https://github.com/su2code/SU2/issues/917#issuecomment-603787485:196,Performance,perform,performed,196,"Hi @aeroamit ; I have encountered that problem before (in previous releases) using the Venkatakrishnan-Wang limiter for high Mach number cases. Had similar experience like yours, where Van Albada performed better. I think theoretically the Venkatakrishnan-Wang limiter should be better and this is why, to my opinion, it is the default option. Van Albada is a good reliable old work horse, also in other codes. Still, we might have some problem in the implementation of the Venkatakrishnan-Wang limiter,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-603787485
https://github.com/su2code/SU2/issues/917#issuecomment-604495790:819,Testability,test,tests,819,"The limiters were re-implemented in #834, if anything pops up do let me know.; The current (and previous) implementation just consists of taking the minimum value of the limiter function over all edges connected to a vertex...; For your specific case the limiters are active in the regions with oscillations.; Curiously if you run first order the oscillations do not disappear completely (but they are smaller) so I think you are mostly seeing artifacts of AUSM (or the mesh since the oscillations align with the grid lines).; There are not-so-subtle differences between how AUSM and AUSM+UP combine the left and right states (especially on coarse grids), it could be worth trying to convert AUSM to the general formulation of AUSM+UP(1/2) and SLAU(1/2) we currently have. I can help, but I do not have time to run the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-604495790
https://github.com/su2code/SU2/issues/917#issuecomment-643830700:99,Testability,test,testing,99,"A similar issue was mentioned during the conference (Van-Albada behaving better), having done some testing recently my opinion is the following:; - Contrary to Venkatakrishnan, the Van-Albada limiter is always ""active"" even in relatively smooth regions.; - Node-based limiters take the minimum value over neighbors, whereas edge-based limiters use two limiter values per edge. Therefore Van-Albada is more conservative and also more differentiable (no min function).; One could experiment with:; - Computing the minimum value over neighbors using a differentiable function.; - Trying the edge-based approach with the Venkatakrishnan-type limiter functions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-643830700
https://github.com/su2code/SU2/issues/918#issuecomment-603929367:204,Energy Efficiency,adapt,adaptive,204,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367
https://github.com/su2code/SU2/issues/918#issuecomment-603929367:279,Energy Efficiency,Adapt,AdaptCFLNumber,279,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367
https://github.com/su2code/SU2/issues/918#issuecomment-603929367:204,Modifiability,adapt,adaptive,204,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367
https://github.com/su2code/SU2/issues/918#issuecomment-603929367:279,Modifiability,Adapt,AdaptCFLNumber,279,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367
https://github.com/su2code/SU2/issues/918#issuecomment-603929367:388,Modifiability,config,config,388,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367
https://github.com/su2code/SU2/issues/918#issuecomment-603929367:733,Modifiability,config,config,733,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367
https://github.com/su2code/SU2/issues/918#issuecomment-603938171:55,Energy Efficiency,reduce,reduce,55,"I recently (yesterday) found that that option does not reduce anything at the moment.; I've re-enabled it, the fix will be in one of my ignored PR's.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603938171
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:206,Energy Efficiency,adapt,adaptive,206,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:281,Energy Efficiency,Adapt,AdaptCFLNumber,281,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:859,Energy Efficiency,adapt,adapting,859,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:206,Modifiability,adapt,adaptive,206,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:281,Modifiability,Adapt,AdaptCFLNumber,281,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:400,Modifiability,config,config,400,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:757,Modifiability,config,config,757,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/issues/918#issuecomment-603980676:859,Modifiability,adapt,adapting,859,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676
https://github.com/su2code/SU2/pull/921#issuecomment-607356102:18,Testability,test,testing,18,"Usually when I am testing and changing shape_optimization features, I use the `TestCases/optimization_euler/steady_naca0012` case. It's quick and you can make it faster by specifying a better convergence characteristic (currently it runs until density residual is < -13)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-607356102
https://github.com/su2code/SU2/pull/921#issuecomment-607356102:79,Testability,Test,TestCases,79,"Usually when I am testing and changing shape_optimization features, I use the `TestCases/optimization_euler/steady_naca0012` case. It's quick and you can make it faster by specifying a better convergence characteristic (currently it runs until density residual is < -13)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-607356102
https://github.com/su2code/SU2/pull/921#issuecomment-620698943:69,Deployability,release,release,69,Even without regression I suggest we merge this for now for the next release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-620698943
https://github.com/su2code/SU2/pull/921#issuecomment-620730868:46,Testability,test,test,46,"Yeah, sorry. I still plan to add a regression test sometime in the future. But I've been swamped this past month.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-620730868
https://github.com/su2code/SU2/pull/923#issuecomment-607605381:110,Performance,optimiz,optimization,110,"A question and a comment:. 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?; 2. Both Beckett Zhou and I have performed shape optimization with objective functions computed as a post-processing step. From my (admittedly biased) perspective, I would like to have this sort of capability built into SU2. You can reference one of Beckett's papers ([\[1\]](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3355) or [\[2\]](https://arc.aiaa.org/doi/abs/10.2514/6.2017-3658)) to see the sort of framework I'm talking about.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607605381
https://github.com/su2code/SU2/pull/923#issuecomment-607605381:191,Performance,perform,performed,191,"A question and a comment:. 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?; 2. Both Beckett Zhou and I have performed shape optimization with objective functions computed as a post-processing step. From my (admittedly biased) perspective, I would like to have this sort of capability built into SU2. You can reference one of Beckett's papers ([\[1\]](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3355) or [\[2\]](https://arc.aiaa.org/doi/abs/10.2514/6.2017-3658)) to see the sort of framework I'm talking about.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607605381
https://github.com/su2code/SU2/pull/923#issuecomment-607605381:207,Performance,optimiz,optimization,207,"A question and a comment:. 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?; 2. Both Beckett Zhou and I have performed shape optimization with objective functions computed as a post-processing step. From my (admittedly biased) perspective, I would like to have this sort of capability built into SU2. You can reference one of Beckett's papers ([\[1\]](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3355) or [\[2\]](https://arc.aiaa.org/doi/abs/10.2514/6.2017-3658)) to see the sort of framework I'm talking about.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607605381
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:561,Deployability,integrat,integrate,561,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:241,Integrability,wrap,wrapper,241,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:561,Integrability,integrat,integrate,561,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:706,Integrability,interface,interface,706,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:462,Modifiability,parameteriz,parameterization,462,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:1157,Modifiability,config,config,1157,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:424,Performance,optimiz,optimization,424,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607708376:1097,Security,expose,expose,1097,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376
https://github.com/su2code/SU2/pull/923#issuecomment-607953901:583,Modifiability,variab,variables,583,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901
https://github.com/su2code/SU2/pull/923#issuecomment-607953901:1228,Modifiability,refactor,refactoring,1228,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901
https://github.com/su2code/SU2/pull/923#issuecomment-607953901:85,Performance,optimiz,optimization,85,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901
https://github.com/su2code/SU2/pull/923#issuecomment-607953901:1053,Performance,Optimiz,Optimization,1053,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901
https://github.com/su2code/SU2/pull/923#issuecomment-607953901:912,Security,expose,expose,912,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:526,Deployability,update,updated,526,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:534,Deployability,continuous,continuously,534,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:682,Integrability,wrap,wrappers,682,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:318,Modifiability,refactor,refactoring,318,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:733,Modifiability,refactor,refactoring,733,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:62,Performance,optimiz,optimization,62,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:142,Testability,test,test,142,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/923#issuecomment-607975492:203,Testability,test,test,203,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492
https://github.com/su2code/SU2/pull/924#issuecomment-608335718:72,Availability,error,error,72,"Well it already communicates marker ID's and so on, it is probably less error prone for the user to map their information to those indices (type punning structs for global communication sounds a bit meh).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/924#issuecomment-608335718
https://github.com/su2code/SU2/pull/927#issuecomment-611106724:7,Integrability,depend,depends,7,Yes it depends on the order of the grid points but it will give the correct y-coordinate whenever the previous vertex in the loop is the one adjacent to the y=0 vertex on the marker or if the loop starts at y=0 it works if the next one in the loop which is adjacent on the marker. It seems to be the case for my examples but I don't think it always is. . I don't like it but I can't find a Get which returns the index of the adjacent node on the marker when passing the index of the current vertex or node in the loop. . ` geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor() ` does not return the right one . ` geometry->node[iPoint]->GetPoint(index) ` with some `index` should return the right one but the index where it is stored varies so I need to look into the logic behind that,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611106724
https://github.com/su2code/SU2/pull/927#issuecomment-611106724:771,Testability,log,logic,771,Yes it depends on the order of the grid points but it will give the correct y-coordinate whenever the previous vertex in the loop is the one adjacent to the y=0 vertex on the marker or if the loop starts at y=0 it works if the next one in the loop which is adjacent on the marker. It seems to be the case for my examples but I don't think it always is. . I don't like it but I can't find a Get which returns the index of the adjacent node on the marker when passing the index of the current vertex or node in the loop. . ` geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor() ` does not return the right one . ` geometry->node[iPoint]->GetPoint(index) ` with some `index` should return the right one but the index where it is stored varies so I need to look into the logic behind that,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611106724
https://github.com/su2code/SU2/pull/927#issuecomment-611266566:282,Usability,simpl,simple,282,"Thanks @FlorianDm for putting in the fix!. Although, it sound like we still need something more general.. I think the normal neighbor concept could still work, it's just that you need to be starting from the vertex list on the axis (not the inlet or the outlet) to find it. Another simple thing to try is just setting AxiFactor = 0.0 if the y coord = 0.0, instead of 1.0. If this grid is stretched with small spacing near the wall, the contribution from the dual CV on the axis could be very small.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611266566
https://github.com/su2code/SU2/pull/927#issuecomment-611625225:371,Availability,error,error,371,This is now completely general I believe. `geometry->node[iPoint]->GetPoint(index)` always returns the right point either for index 0 or 1 at least in a quad mesh (there are only two neighbours at the corner) and the wrong one equals the normal neighbour. I tried it on a triangular mesh and it worked as well but perhaps it won't always be correct. The worst case is an error equal to the one of setting it to 0.0 and it's just as safe. Setting it to 0.0 is what I did at first but the axis is not a wall in general so it's usually the point with the largest cells and the highest velocities unless it's an Euler case. If there are very few nodes overall on the marker the contribution may not be that small. I suppose looking for the vertices on the axis marker here would be more messy and prone to bugs (and much more work for me),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611625225
https://github.com/su2code/SU2/pull/927#issuecomment-611625225:432,Safety,safe,safe,432,This is now completely general I believe. `geometry->node[iPoint]->GetPoint(index)` always returns the right point either for index 0 or 1 at least in a quad mesh (there are only two neighbours at the corner) and the wrong one equals the normal neighbour. I tried it on a triangular mesh and it worked as well but perhaps it won't always be correct. The worst case is an error equal to the one of setting it to 0.0 and it's just as safe. Setting it to 0.0 is what I did at first but the axis is not a wall in general so it's usually the point with the largest cells and the highest velocities unless it's an Euler case. If there are very few nodes overall on the marker the contribution may not be that small. I suppose looking for the vertices on the axis marker here would be more messy and prone to bugs (and much more work for me),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611625225
https://github.com/su2code/SU2/pull/927#issuecomment-612613571:767,Energy Efficiency,adapt,adapt,767,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571
https://github.com/su2code/SU2/pull/927#issuecomment-612613571:767,Modifiability,adapt,adapt,767,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571
https://github.com/su2code/SU2/pull/927#issuecomment-612613571:272,Safety,abort,aborted,272,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571
https://github.com/su2code/SU2/pull/929#issuecomment-611838976:106,Availability,down,down,106,"The output isn't leak-free otherwise. Those were just a couple of the bigger ones that were easy to track down. I think the rest are mainly CoDi/MeDi-related leaks, though. Keep in mind I ran this on feature_adap_sst (the line numbers below are for this branch though) so some of these might be resolved:; - A leak in C2DContainers that Pedro already fixed in #895 so I was gonna leave it alone; - Probably the largest remaining leak is from the calls to `AD::StartExtFunc()`, `AD::SetExtFuncIn()`, and `AD::SetExtFuncOut()` in CSysSolve.cpp during `DirectRun()`. These are all related to CoDi's ExternalFunctionHelper; - Line 537 in adt_structure.cpp (`CADTElemClass::CADTElemClass()`). This seems to be related to various functions in MeDi including `createLinearIndexCounts()`, `AMPI_Allgatherv()` (might be a false positive), and `ADToolImplCommon()`; ```; SU2_MPI::Allgatherv(val_coor.data(), sizeLocal, MPI_DOUBLE, coorPoints.data(),; recvCounts.data(), displs.data(), MPI_DOUBLE, MPI_COMM_WORLD);; ```; - Line 715 in CGeometry.cpp (`CGeometry::PostP2PSends()`). This is only called when val_reverse is false, which is during`SetDependencies()` and `DirectRun()`. These all seem to be related to `ADToolImplCommon()`; ```; SU2_MPI::Isend(&(bufD_P2PSend[offset]), count, MPI_DOUBLE,; dest, tag, MPI_COMM_WORLD, &(req_P2PSend[iMessage]));; ```; I've attached the valgrind log from one of the cores below, in case anyone really wants to parse it; [vg.txt](https://github.com/su2code/SU2/files/4459485/vg.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-611838976
https://github.com/su2code/SU2/pull/929#issuecomment-611838976:1376,Testability,log,log,1376,"The output isn't leak-free otherwise. Those were just a couple of the bigger ones that were easy to track down. I think the rest are mainly CoDi/MeDi-related leaks, though. Keep in mind I ran this on feature_adap_sst (the line numbers below are for this branch though) so some of these might be resolved:; - A leak in C2DContainers that Pedro already fixed in #895 so I was gonna leave it alone; - Probably the largest remaining leak is from the calls to `AD::StartExtFunc()`, `AD::SetExtFuncIn()`, and `AD::SetExtFuncOut()` in CSysSolve.cpp during `DirectRun()`. These are all related to CoDi's ExternalFunctionHelper; - Line 537 in adt_structure.cpp (`CADTElemClass::CADTElemClass()`). This seems to be related to various functions in MeDi including `createLinearIndexCounts()`, `AMPI_Allgatherv()` (might be a false positive), and `ADToolImplCommon()`; ```; SU2_MPI::Allgatherv(val_coor.data(), sizeLocal, MPI_DOUBLE, coorPoints.data(),; recvCounts.data(), displs.data(), MPI_DOUBLE, MPI_COMM_WORLD);; ```; - Line 715 in CGeometry.cpp (`CGeometry::PostP2PSends()`). This is only called when val_reverse is false, which is during`SetDependencies()` and `DirectRun()`. These all seem to be related to `ADToolImplCommon()`; ```; SU2_MPI::Isend(&(bufD_P2PSend[offset]), count, MPI_DOUBLE,; dest, tag, MPI_COMM_WORLD, &(req_P2PSend[iMessage]));; ```; I've attached the valgrind log from one of the cores below, in case anyone really wants to parse it; [vg.txt](https://github.com/su2code/SU2/files/4459485/vg.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-611838976
https://github.com/su2code/SU2/pull/929#issuecomment-612122738:276,Integrability,interface,interface,276,"@pcarruscag just to clarify, are you suggesting switching some of the containers, e.g. `direct_iteration` and `direct_output`, to `unique_ptr`, or some of the vars causing the remaining leaks? Because for some of the remaining leaks, I think it's more of an issue with how we interface with CoDi/MeDi, or maybe even the tools themselves. For example, the destructor for `ExternalFunctionHelper` is; ```; ~ExternalFunctionHelper() {; if(!isTapeActive) {; delete data;; }; }; ```; but we only call `AD::EndExtFunc()` (which deletes `FuncHelper`) when the tape is active. Maybe there's a reason for this that @talbring can explain.; The leaks in MeDi all seem to stem from lines like; ```; h = new AMPI_Allgatherv_AdjointHandle<SENDTYPE, RECVTYPE>();; ```; and; ```; WaitHandle* waitH = new WaitHandle((ReverseFunction)AMPI_Isend_b_finish<DATATYPE>,; (ForwardFunction)AMPI_Isend_d<DATATYPE>, h);; ```; in ampiFunctions.hpp, where `h` and `waitH` seem to be defined locally and are never freed (at least from what I see, but @talbring can correct me if I'm wrong).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-612122738
https://github.com/su2code/SU2/pull/932#issuecomment-612463518:51,Availability,redundant,redundant,51,I suppose when #913 and #923 are done this will be redundant (?),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/932#issuecomment-612463518
https://github.com/su2code/SU2/pull/932#issuecomment-612463518:51,Safety,redund,redundant,51,I suppose when #913 and #923 are done this will be redundant (?),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/932#issuecomment-612463518
https://github.com/su2code/SU2/pull/935#issuecomment-613544012:54,Security,access,access,54,"Also, we're happy to give regular contributors direct access to the repository (easier to collaborate and participate in reviews, etc.). Just let me know if you would like to be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/935#issuecomment-613544012
https://github.com/su2code/SU2/issues/936#issuecomment-613013547:23,Deployability,install,installation,23,You need to specify an installation direction for which you have permissions via meson option `--prefix`; Further information here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; In the SU2 section of CFD Online (https://www.cfd-online.com/Forums/su2/) you can find a lot of useful info about compiling / installing / running SU2 on clusters.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936#issuecomment-613013547
https://github.com/su2code/SU2/issues/936#issuecomment-613013547:316,Deployability,install,installing,316,You need to specify an installation direction for which you have permissions via meson option `--prefix`; Further information here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; In the SU2 section of CFD Online (https://www.cfd-online.com/Forums/su2/) you can find a lot of useful info about compiling / installing / running SU2 on clusters.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936#issuecomment-613013547
https://github.com/su2code/SU2/issues/937#issuecomment-613323540:227,Deployability,install,installed,227,"Hmm this seems to be a bug in python. It seems like in python 3.7 this problem is solved:; https://bugs.python.org/issue24564. Maybe use [conda](https://docs.conda.io/en/latest/) to change the python environment, if 3.7 is not installed on the cluster.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937#issuecomment-613323540
https://github.com/su2code/SU2/issues/937#issuecomment-613571585:49,Deployability,update,update,49,"Yeah, looks like python 3.7 did the trick. I can update the installation documentation. The init.py script checks that the python version is at least. Should we have it check that it's at least 3.7 instead?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937#issuecomment-613571585
https://github.com/su2code/SU2/issues/937#issuecomment-613571585:60,Deployability,install,installation,60,"Yeah, looks like python 3.7 did the trick. I can update the installation documentation. The init.py script checks that the python version is at least. Should we have it check that it's at least 3.7 instead?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937#issuecomment-613571585
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:43,Deployability,install,install,43,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:189,Deployability,Install,Installed,189,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:256,Deployability,install,installed,256,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:551,Integrability,message,message,551,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:991,Integrability,interface,interface,991,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:1119,Integrability,interface,interface,1119,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:1209,Integrability,interface,interface,1209,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:1260,Integrability,interface,interface,1260,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614081827:944,Modifiability,config,config,944,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827
https://github.com/su2code/SU2/issues/938#issuecomment-614085923:72,Availability,down,downloaded,72,"Hi Eran,; Thank you.; I am not sure I understand your question.; I have downloaded the parallel version. What do you mean exactly by ""installing with mpi""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614085923
https://github.com/su2code/SU2/issues/938#issuecomment-614085923:134,Deployability,install,installing,134,"Hi Eran,; Thank you.; I am not sure I understand your question.; I have downloaded the parallel version. What do you mean exactly by ""installing with mpi""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614085923
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:563,Availability,down,downloaded,563,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:8,Deployability,install,install,8,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:60,Deployability,install,install,60,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:304,Deployability,install,installation,304,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:628,Deployability,install,installing,628,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:129,Integrability,message,message,129,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:154,Integrability,depend,dependency,154,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:202,Integrability,depend,dependency,202,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614093500:258,Integrability,message,messages,258,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500
https://github.com/su2code/SU2/issues/938#issuecomment-614096383:24,Availability,down,downloaded,24,I didn't compile it.; I downloaded the complied version for mac.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614096383
https://github.com/su2code/SU2/issues/938#issuecomment-614191731:163,Deployability,install,installation,163,"Hi @mottiadar : can you please check that you can find mpirun (or mpiexec) in your path with. ```; $ which mpirun; ```. if that returns empty, then check your MPI installation. If that returns the expected mpich version of mpirun, try running SU2 without python, e.g.,. ```; cd SU2/QuickStart/; $ mpirun -n 2 SU2_CFD inv_naca0012.cfg; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614191731
https://github.com/su2code/SU2/issues/938#issuecomment-617582095:193,Deployability,install,installation,193,"You could try making a soft link (ln -s) in that directory for mpirun that points to the mpirun-mpich-mp (does it work if you call that directly btw?). Otherwise, you could try a different MPI installation, e.g., openmpi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-617582095
https://github.com/su2code/SU2/issues/940#issuecomment-644868893:194,Modifiability,config,config,194,@ScSteffen : you might try to revert the Jacobian fix factor to the previous value since you are using JST (and perhaps it is not converging with the new setting). Try adding this option to the config (the default is currently 4.0):. CENTRAL_JACOBIAN_FIX_FACTOR= 1.0,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/940#issuecomment-644868893
https://github.com/su2code/SU2/issues/942#issuecomment-646635198:82,Integrability,depend,depend,82,"Another option mentioned by @talbring is MATH_PROBLEM for which the default could depend on the code being used, i.e. for SU2_CFD_AD and SU2_DOT_AD the default should be DISCRETE_ADJOINT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/942#issuecomment-646635198
https://github.com/su2code/SU2/issues/944#issuecomment-616367257:398,Performance,race condition,race condition,398,"At some point the marker starts being partitioned, some of it is in one rank, some in other(s).; Your print function truncates the file when it opens it, and so you only get the output from the last rank that opened the file.; You could make the file a member of the class, so that you can guarantee it is only opened once (other ranks would need to open in append mode), but then you still have a race condition when multiple ranks try to write simultaneously to the file (the result might be mixed lines, especially when `endl` is used to terminate lines because it forces a flush, maybe with ""\n"" and some luck it would be ok, but the order of the lines is still unpredictable).; To my knowledge mpi does not have simple ways to guarantee ordered execution of certain code regions. So unless you want to get knee deep in mpi, I recommend you keep this file output as a debug feature (that works on a single core) and use the normal surface output files (paraview, tecplot, etc.) for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/944#issuecomment-616367257
https://github.com/su2code/SU2/issues/944#issuecomment-616367257:717,Usability,simpl,simple,717,"At some point the marker starts being partitioned, some of it is in one rank, some in other(s).; Your print function truncates the file when it opens it, and so you only get the output from the last rank that opened the file.; You could make the file a member of the class, so that you can guarantee it is only opened once (other ranks would need to open in append mode), but then you still have a race condition when multiple ranks try to write simultaneously to the file (the result might be mixed lines, especially when `endl` is used to terminate lines because it forces a flush, maybe with ""\n"" and some luck it would be ok, but the order of the lines is still unpredictable).; To my knowledge mpi does not have simple ways to guarantee ordered execution of certain code regions. So unless you want to get knee deep in mpi, I recommend you keep this file output as a debug feature (that works on a single core) and use the normal surface output files (paraview, tecplot, etc.) for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/944#issuecomment-616367257
https://github.com/su2code/SU2/issues/946#issuecomment-617585567:117,Deployability,update,update,117,"Thanks for posting @MiGaff! This issue is similar to #889, and it sounds like you have the fix, including the python update. If you have a moment, could you please submit your changes via PR to the develop branch? It would be great to have your contribution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/946#issuecomment-617585567
https://github.com/su2code/SU2/issues/948#issuecomment-619145189:201,Deployability,install,installation,201,"Hi Mirac,. The pyamg website is based on an fork of Vic's that's very out of date. The branch [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) handles all the pyamg and GMF I/O library installation if you just follow the usual installation instructions (either using preconfigure.py or the meson scripts) in the v7 instructions. Just keep in mind that it's a bit experimental still. The most up-to-date version of pyamg is included, but note that it requires python 3.7 or greater. Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619145189
https://github.com/su2code/SU2/issues/948#issuecomment-619145189:243,Deployability,install,installation,243,"Hi Mirac,. The pyamg website is based on an fork of Vic's that's very out of date. The branch [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) handles all the pyamg and GMF I/O library installation if you just follow the usual installation instructions (either using preconfigure.py or the meson scripts) in the v7 instructions. Just keep in mind that it's a bit experimental still. The most up-to-date version of pyamg is included, but note that it requires python 3.7 or greater. Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619145189
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:180,Availability,down,downloaded,180,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:506,Availability,error,errors,506,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:828,Availability,error,error,828,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:156,Deployability,install,install,156,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:470,Deployability,install,install,470,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:1463,Deployability,install,installed,1463,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:1179,Integrability,interface,interface,1179,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:1236,Integrability,interface,interface,1236,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:1357,Integrability,depend,dependencies,1357,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:295,Modifiability,config,configure,295,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:409,Modifiability,variab,variables,409,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619332650:697,Usability,simpl,simply,697,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650
https://github.com/su2code/SU2/issues/948#issuecomment-619334494:434,Deployability,install,installed,434,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494
https://github.com/su2code/SU2/issues/948#issuecomment-619334494:546,Deployability,install,install,546,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494
https://github.com/su2code/SU2/issues/948#issuecomment-619334494:657,Deployability,install,install,657,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494
https://github.com/su2code/SU2/issues/948#issuecomment-619334494:687,Deployability,install,install,687,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494
https://github.com/su2code/SU2/issues/948#issuecomment-619334494:318,Modifiability,variab,variables,318,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494
https://github.com/su2code/SU2/issues/948#issuecomment-619334494:132,Usability,feedback,feedback,132,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:235,Availability,error,error,235,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:449,Availability,error,error,449,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:1170,Availability,error,error,1170,"l, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:1272,Availability,error,error,1272," extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:84,Deployability,install,installed,84,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:436,Deployability,install,install,436,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2449,Deployability,Install,Installing,2449,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2469,Deployability,Install,Installation,2469,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2580,Deployability,Install,Installing,2580,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2600,Deployability,Install,Installing,2600,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2635,Deployability,install,installation,2635,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:1094,Modifiability,variab,variable,1094,".7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:828,Security,secur,security,828,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:904,Security,secur,security,904,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2432,Security,password,password,2432,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758
https://github.com/su2code/SU2/issues/948#issuecomment-619400317:7,Deployability,update,updated,7,"I just updated the build to use the --user flag so it shouldn't require permissions. Can you pull and try installing again? Just run the same meson command as before with --reconfigure. As for the missing header, I think that's an issue with your python setup. Don't remove python2.7 from your system, since a lot of packages still depend on it. How did you install python? If you run `locate Python.h` does it return anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619400317
https://github.com/su2code/SU2/issues/948#issuecomment-619400317:106,Deployability,install,installing,106,"I just updated the build to use the --user flag so it shouldn't require permissions. Can you pull and try installing again? Just run the same meson command as before with --reconfigure. As for the missing header, I think that's an issue with your python setup. Don't remove python2.7 from your system, since a lot of packages still depend on it. How did you install python? If you run `locate Python.h` does it return anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619400317
https://github.com/su2code/SU2/issues/948#issuecomment-619400317:358,Deployability,install,install,358,"I just updated the build to use the --user flag so it shouldn't require permissions. Can you pull and try installing again? Just run the same meson command as before with --reconfigure. As for the missing header, I think that's an issue with your python setup. Don't remove python2.7 from your system, since a lot of packages still depend on it. How did you install python? If you run `locate Python.h` does it return anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619400317
https://github.com/su2code/SU2/issues/948#issuecomment-619400317:332,Integrability,depend,depend,332,"I just updated the build to use the --user flag so it shouldn't require permissions. Can you pull and try installing again? Just run the same meson command as before with --reconfigure. As for the missing header, I think that's an issue with your python setup. Don't remove python2.7 from your system, since a lot of packages still depend on it. How did you install python? If you run `locate Python.h` does it return anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619400317
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:479,Availability,Down,Downloads,479,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:588,Availability,Down,Downloads,588,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:689,Availability,Down,Downloads,689,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:783,Availability,Down,Downloads,783,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:886,Availability,Down,Downloads,886,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:28,Deployability,install,installed,28,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619409024:848,Usability,simpl,simpleFunctionPython,848,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:531,Availability,error,error,531,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:742,Energy Efficiency,sensor,sensor,742,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:758,Energy Efficiency,adapt,adaptation,758,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:887,Energy Efficiency,adapt,adaptation,887,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:949,Energy Efficiency,adapt,adaptation,949,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1005,Energy Efficiency,adapt,adaptation,1005,"fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % In",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1111,Energy Efficiency,adapt,adaptation,1111,"nts to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1316,Energy Efficiency,adapt,adaptations,1316,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1476,Energy Efficiency,adapt,adaptation,1476,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1505,Energy Efficiency,Green,Green-Gauss,1505,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:758,Modifiability,adapt,adaptation,758,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:887,Modifiability,adapt,adaptation,887,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:949,Modifiability,adapt,adaptation,949,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1005,Modifiability,adapt,adaptation,1005,"fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % In",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1111,Modifiability,adapt,adaptation,1111,"nts to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1316,Modifiability,adapt,adaptations,1316,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1476,Modifiability,adapt,adaptation,1476,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:346,Performance,perform,performs,346,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1328,Performance,perform,performed,1328,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:2115,Performance,perform,perform,2115,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:361,Safety,detect,detection,361,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:2244,Safety,detect,detection,2244,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:153,Testability,test,test,153,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619412341:714,Testability,test,test,714,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341
https://github.com/su2code/SU2/issues/948#issuecomment-619421429:43,Energy Efficiency,adapt,adaptation,43,"FYI, just so I can keep debugging the RANS adaptation in feature_adap_sst, I've merged it into [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). You should use feature_adap instead from here on out since feature_adap_sst will be pretty volatile. I'll modify my comment above in case anybody references this thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619421429
https://github.com/su2code/SU2/issues/948#issuecomment-619421429:43,Modifiability,adapt,adaptation,43,"FYI, just so I can keep debugging the RANS adaptation in feature_adap_sst, I've merged it into [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). You should use feature_adap instead from here on out since feature_adap_sst will be pretty volatile. I'll modify my comment above in case anybody references this thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619421429
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:184,Availability,error,error,184,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:171,Energy Efficiency,adapt,adaption,171,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:375,Energy Efficiency,adapt,adaption,375,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:430,Energy Efficiency,adapt,adaption,430,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:624,Energy Efficiency,adapt,adapt,624,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:666,Energy Efficiency,adapt,adapt,666,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:678,Energy Efficiency,adapt,adapt,678,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:721,Energy Efficiency,adapt,adapt,721,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:171,Modifiability,adapt,adaption,171,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:375,Modifiability,adapt,adaption,375,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:430,Modifiability,adapt,adaption,430,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:624,Modifiability,adapt,adapt,624,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:666,Modifiability,adapt,adapt,666,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:678,Modifiability,adapt,adapt,678,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:721,Modifiability,adapt,adapt,721,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:408,Performance,optimiz,optimization,408,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:307,Testability,test,testing,307,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619502763:731,Testability,log,log,731,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:948,Availability,error,error,948,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:749,Deployability,update,updated,749,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:223,Energy Efficiency,adapt,adaptations,223,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:437,Energy Efficiency,adapt,adaptation,437,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:679,Energy Efficiency,adapt,adaptation,679,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:9,Modifiability,config,config,9,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:223,Modifiability,adapt,adaptations,223,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:437,Modifiability,adapt,adaptation,437,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:679,Modifiability,adapt,adaptation,679,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:451,Performance,perform,performed,451,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-619584815:1132,Testability,log,log,1132,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815
https://github.com/su2code/SU2/issues/948#issuecomment-620780878:71,Deployability,update,updated,71,"Sorry for the delay, I managed to clone the `feature_adap` branch, and updated it. . Now during the computation I think it manages to go through the `first adap`, and creates the `ite0` folder so basically my understanding is that right now it is working (still have some convergence problems). Is this branch providing similar convergence rates as SU2 7.0.3 ?. Thank you very much for the support!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-620780878
https://github.com/su2code/SU2/issues/948#issuecomment-621450497:229,Energy Efficiency,adapt,adaption,229,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497
https://github.com/su2code/SU2/issues/948#issuecomment-621450497:229,Modifiability,adapt,adaption,229,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497
https://github.com/su2code/SU2/issues/948#issuecomment-621450497:54,Testability,log,logs,54,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497
https://github.com/su2code/SU2/issues/948#issuecomment-621450497:91,Testability,test,test,91,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497
https://github.com/su2code/SU2/issues/948#issuecomment-621450497:106,Usability,simpl,simple,106,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497
https://github.com/su2code/SU2/issues/948#issuecomment-621483859:1058,Energy Efficiency,adapt,adaption,1058,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859
https://github.com/su2code/SU2/issues/948#issuecomment-621483859:1058,Modifiability,adapt,adaption,1058,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859
https://github.com/su2code/SU2/issues/948#issuecomment-621483859:883,Testability,log,logs,883,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859
https://github.com/su2code/SU2/issues/948#issuecomment-621483859:920,Testability,test,test,920,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859
https://github.com/su2code/SU2/issues/948#issuecomment-621483859:935,Usability,simpl,simple,935,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:1749,Availability,ERROR,ERROR,1749,"G DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/loca",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:1808,Availability,ERROR,ERROR,1808,"G DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/loca",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:1875,Availability,ERROR,ERROR,1875,"G DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/loca",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:1953,Availability,ERROR,ERROR,1953,"58 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2152,Availability,fault,fault,2152,"CATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2556,Availability,error,error,2556,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:60,Energy Efficiency,adapt,adaption,60,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:595,Energy Efficiency,Allocate,Allocated,595,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:60,Modifiability,adapt,adaption,60,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2939,Modifiability,config,config,2939,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2217,Testability,log,log,2217,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:95,Usability,simpl,simple,95,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2200,Usability,simpl,simple,2200,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280
https://github.com/su2code/SU2/issues/948#issuecomment-624894422:263,Deployability,update,updated,263,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422
https://github.com/su2code/SU2/issues/948#issuecomment-624894422:380,Deployability,update,updated,380,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422
https://github.com/su2code/SU2/issues/948#issuecomment-624894422:21,Energy Efficiency,adapt,adaptation,21,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422
https://github.com/su2code/SU2/issues/948#issuecomment-624894422:21,Modifiability,adapt,adaptation,21,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422
https://github.com/su2code/SU2/issues/948#issuecomment-624894422:7,Testability,test,tested,7,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422
https://github.com/su2code/SU2/issues/948#issuecomment-637328023:394,Energy Efficiency,adapt,adaption,394,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023
https://github.com/su2code/SU2/issues/948#issuecomment-637328023:698,Energy Efficiency,adapt,adaption,698,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023
https://github.com/su2code/SU2/issues/948#issuecomment-637328023:798,Integrability,interface,interface,798,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023
https://github.com/su2code/SU2/issues/948#issuecomment-637328023:394,Modifiability,adapt,adaption,394,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023
https://github.com/su2code/SU2/issues/948#issuecomment-637328023:698,Modifiability,adapt,adaption,698,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023
https://github.com/su2code/SU2/issues/948#issuecomment-637328023:414,Performance,tune,tuned,414,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:148,Availability,down,downloaded,148,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:190,Availability,down,downloaded,190,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:42,Energy Efficiency,adapt,adaptation,42,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:205,Energy Efficiency,Adapt,Adaptive,205,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:420,Energy Efficiency,sensor,sensor,420,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:436,Energy Efficiency,adapt,adaptation,436,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:565,Energy Efficiency,adapt,adaptation,565,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:627,Energy Efficiency,adapt,adaptation,627,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:683,Energy Efficiency,adapt,adaptation,683,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:789,Energy Efficiency,adapt,adaptation,789,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:994,Energy Efficiency,adapt,adaptations,994,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1239,Energy Efficiency,Adapt,Adaptation,1239,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1256,Energy Efficiency,adapt,adaptation,1256,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:2072,Energy Efficiency,adapt,adaptive,2072,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:42,Modifiability,adapt,adaptation,42,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:205,Modifiability,Adapt,Adaptive,205,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:396,Modifiability,config,config,396,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:436,Modifiability,adapt,adaptation,436,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:565,Modifiability,adapt,adaptation,565,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:627,Modifiability,adapt,adaptation,627,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:683,Modifiability,adapt,adaptation,683,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:789,Modifiability,adapt,adaptation,789,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:994,Modifiability,adapt,adaptations,994,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1239,Modifiability,Adapt,Adaptation,1239,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1256,Modifiability,adapt,adaptation,1256,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:2072,Modifiability,adapt,adaptive,2072,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1006,Performance,perform,performed,1006,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1958,Performance,perform,perform,1958,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1829,Testability,log,log,1829,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1840,Testability,log,log,1840,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-737134105:92,Usability,clear,clear,92,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:1475,Deployability,configurat,configuration,1475,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:289,Energy Efficiency,adapt,adaptation,289,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:448,Energy Efficiency,adapt,adaptation,448,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:698,Energy Efficiency,adapt,adapts,698,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:1352,Energy Efficiency,adapt,adaptation,1352,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:1457,Energy Efficiency,adapt,adapted,1457,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:289,Modifiability,adapt,adaptation,289,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:448,Modifiability,adapt,adaptation,448,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:698,Modifiability,adapt,adapts,698,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:1352,Modifiability,adapt,adaptation,1352,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:1457,Modifiability,adapt,adapted,1457,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:1475,Modifiability,config,configuration,1475,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-750490818:878,Testability,log,log,878,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:89,Deployability,install,installing,89,"Thanks for the walkthrough, @antares190 ! Actually, I also seem to be having some issues installing this branch successfully (but I'm not sure if it is also present in v7.0.8). When I try to `import pyamg` it crashes with:; ```; In [1]: import pyamg; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-1160da809073> in <module>(); ----> 1 import pyamg. ImportError: libpython3.7m.so.1.0: cannot open shared object file: No such file or directory; ```. @bmunguia I realised that when I try to compile this branch, it seems to pick up the wrong python paths. (Though I'm not 100% sure if this is the cause.). i.e. running:; `CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:984,Deployability,Install,Installing,984,"Thanks for the walkthrough, @antares190 ! Actually, I also seem to be having some issues installing this branch successfully (but I'm not sure if it is also present in v7.0.8). When I try to `import pyamg` it crashes with:; ```; In [1]: import pyamg; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-1160da809073> in <module>(); ----> 1 import pyamg. ImportError: libpython3.7m.so.1.0: cannot open shared object file: No such file or directory; ```. @bmunguia I realised that when I try to compile this branch, it seems to pick up the wrong python paths. (Though I'm not 100% sure if this is the cause.). i.e. running:; `CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1935,Deployability,Update,Update,1935,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2168,Deployability,install,install,2168,"ersion: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2229,Deployability,install,install,2229,"r the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2360,Deployability,Release,Release,2360,"3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2433,Deployability,Configurat,Configuration,2433,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2790,Deployability,update,update,2790,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2882,Deployability,configurat,configuration,2882,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:3100,Deployability,install,install,3100,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:3124,Deployability,install,install,3124,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:3345,Deployability,install,installed,3345,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1681,Integrability,depend,dependency,1681,"he wrong python paths. (Though I'm not 100% sure if this is the cause.). i.e. running:; `CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1729,Integrability,depend,dependency,1729,"h mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1848,Integrability,Message,Message,1848,"le-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1888,Integrability,depend,dependency,1888,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2013,Integrability,Message,Message,2013,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2125,Integrability,depend,dependency,2125,"pe: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2242,Integrability,Message,Message,2242,"3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2649,Integrability,Wrap,Wrapper,2649,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:3242,Integrability,depend,dependency,3242,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2433,Modifiability,Config,Configuration,2433,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2774,Modifiability,variab,variables,2774,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2882,Modifiability,config,configuration,2882,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:275,Availability,error,error,275,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1210,Availability,avail,available,1210," (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1517,Availability,down,download,1517,"/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1871,Availability,error,error,1871,"t involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful informat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:324,Deployability,install,installed,324,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:359,Deployability,install,installed,359,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:910,Deployability,install,installing,910,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:991,Deployability,install,install,991,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1088,Deployability,install,install,1088,"erify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1154,Deployability,install,installation,1154," (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1338,Deployability,install,installation,1338,"t means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1369,Deployability,install,install,1369," can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1492,Deployability,install,install,1492,"To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access eithe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1689,Deployability,update,update,1689,"f the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1799,Deployability,install,install,1799,"w, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything ha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1831,Deployability,install,install,1831,"t involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful informat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1889,Deployability,install,installation,1889,"t involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful informat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2010,Deployability,install,installation,2010,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2033,Deployability,install,installation-failed-due-insufficient-permissions,2033,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2605,Deployability,update,updated,2605,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2156,Energy Efficiency,adapt,adaptation,2156,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2520,Integrability,Depend,Depending,2520,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2659,Integrability,depend,dependency,2659,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:422,Modifiability,config,configured,422,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1258,Modifiability,variab,variables,1258,"t means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1633,Modifiability,config,configure,1633," sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1712,Modifiability,variab,variables,1712,"f the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2156,Modifiability,adapt,adaptation,2156,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2450,Security,access,access,2450,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2192,Testability,test,tests,2192,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2732,Testability,log,logs,2732,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2745,Testability,log,log,2745,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2759,Testability,log,log,2759,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130
https://github.com/su2code/SU2/issues/948#issuecomment-752694678:72,Deployability,configurat,configuration,72,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678
https://github.com/su2code/SU2/issues/948#issuecomment-752694678:265,Deployability,install,installed,265,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678
https://github.com/su2code/SU2/issues/948#issuecomment-752694678:149,Integrability,depend,dependency,149,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678
https://github.com/su2code/SU2/issues/948#issuecomment-752694678:72,Modifiability,config,configuration,72,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1634,Availability,error,error,1634,"SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume el",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:3406,Availability,error,error,3406,"minated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Key 0 not found!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[54379,1],4]; Exit code: 254; ---",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1272,Integrability,interface,interface,1272,"first. (I'm not sure if this is really a great workaround since the whole Python environment lib directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; ------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1371,Integrability,interface,interface,1371,"b directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1428,Integrability,message,message,1428,"; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process na",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1139,Modifiability,config,config,1139,"uded but aren't on the `LD_LIBRARY_PATH` by default, so one has to export first. (I'm not sure if this is really a great workaround since the whole Python environment lib directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2178,Safety,abort,aborted,2178,"SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency stru",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2347,Safety,detect,detected,2347,"the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:4089,Safety,abort,aborted,4089,"---------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Key 0 not found!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[54379,1],4]; Exit code: 254; --------------------------------------------------------------------------; ``` . Do you know what `Key 0` might be referring to? Thanks and regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:4258,Safety,detect,detected,4258,"---------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Key 0 not found!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[54379,1],4]; Exit code: 254; --------------------------------------------------------------------------; ``` . Do you know what `Key 0` might be referring to? Thanks and regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2630,Testability,log,log,2630,"ss returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2685,Testability,log,log,2685," -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in inde",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:667,Availability,error,error,667,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:1383,Availability,ERROR,ERROR,1383,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:268,Energy Efficiency,adapt,adaptation-options,268,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:505,Energy Efficiency,adapt,adaptation,505,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:268,Modifiability,adapt,adaptation-options,268,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:505,Modifiability,adapt,adaptation,505,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:78,Testability,Test,TestCases,78,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:693,Testability,log,log,693,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:1177,Testability,ASSERT,ASSERTION,1177,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754686447:58,Usability,simpl,simple,58,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:758,Availability,ERROR,ERROR,758,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:850,Availability,ERROR,ERROR,850,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:955,Availability,ERROR,ERROR,955,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1132,Availability,error,error,1132,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1656,Availability,ERROR,ERROR,1656,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1761,Availability,ERROR,ERROR,1761,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1008,Deployability,UPDATE,UPDATE,1008,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1834,Deployability,UPDATE,UPDATE,1834,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1051,Energy Efficiency,adapt,adaptation,1051,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1051,Modifiability,adapt,adaptation,1051,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-754746706:270,Testability,log,log,270,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:269,Energy Efficiency,ADAPT,ADAPTATION,269,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:318,Energy Efficiency,sensor,sensor,318,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:334,Energy Efficiency,adapt,adaptation,334,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:443,Energy Efficiency,adapt,adaptation,443,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:499,Energy Efficiency,adapt,adaptation,499,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:605,Energy Efficiency,adapt,adaptation,605,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:815,Energy Efficiency,adapt,adaptations,815,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:269,Modifiability,ADAPT,ADAPTATION,269,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:334,Modifiability,adapt,adaptation,334,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:443,Modifiability,adapt,adaptation,443,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:499,Modifiability,adapt,adaptation,499,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:605,Modifiability,adapt,adaptation,605,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:815,Modifiability,adapt,adaptations,815,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:827,Performance,perform,performed,827,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:193,Safety,avoid,avoid,193,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:19,Testability,test,tests,19,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761751741:33,Usability,simpl,simple,33,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741
https://github.com/su2code/SU2/issues/948#issuecomment-761773094:340,Energy Efficiency,adapt,adaptation,340,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094
https://github.com/su2code/SU2/issues/948#issuecomment-761773094:469,Energy Efficiency,adapt,adapted,469,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094
https://github.com/su2code/SU2/issues/948#issuecomment-761773094:766,Energy Efficiency,adapt,adaptation,766,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094
https://github.com/su2code/SU2/issues/948#issuecomment-761773094:340,Modifiability,adapt,adaptation,340,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094
https://github.com/su2code/SU2/issues/948#issuecomment-761773094:469,Modifiability,adapt,adapted,469,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094
https://github.com/su2code/SU2/issues/948#issuecomment-761773094:766,Modifiability,adapt,adaptation,766,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094
https://github.com/su2code/SU2/issues/948#issuecomment-764777223:59,Energy Efficiency,adapt,adapted,59,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223
https://github.com/su2code/SU2/issues/948#issuecomment-764777223:59,Modifiability,adapt,adapted,59,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223
https://github.com/su2code/SU2/issues/948#issuecomment-764777223:30,Testability,test,tests,30,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223
https://github.com/su2code/SU2/issues/948#issuecomment-764779915:40,Deployability,patch,patch,40,"Also, @bmunguia - how should I submit a patch to amg.py? I have a fix for it not working with meshes placed in relative paths. Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764779915
https://github.com/su2code/SU2/issues/948#issuecomment-764800900:244,Energy Efficiency,adapt,adaptation,244,"@TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764800900
https://github.com/su2code/SU2/issues/948#issuecomment-764800900:244,Modifiability,adapt,adaptation,244,"@TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764800900
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:61,Energy Efficiency,adapt,adapted,61,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:918,Energy Efficiency,adapt,adaptation,918,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:1179,Energy Efficiency,adapt,adaptation,1179,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:1290,Energy Efficiency,reduce,reduce,1290,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:61,Modifiability,adapt,adapted,61,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:918,Modifiability,adapt,adaptation,918,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:1179,Modifiability,adapt,adaptation,1179,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764812340:32,Testability,test,tests,32,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340
https://github.com/su2code/SU2/issues/948#issuecomment-764836923:239,Energy Efficiency,reduce,reduce,239,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923
https://github.com/su2code/SU2/issues/948#issuecomment-764836923:595,Energy Efficiency,adapt,adapted,595,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923
https://github.com/su2code/SU2/issues/948#issuecomment-764836923:1001,Energy Efficiency,adapt,adaptation,1001,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923
https://github.com/su2code/SU2/issues/948#issuecomment-764836923:153,Integrability,interface,interface,153,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923
https://github.com/su2code/SU2/issues/948#issuecomment-764836923:595,Modifiability,adapt,adapted,595,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923
https://github.com/su2code/SU2/issues/948#issuecomment-764836923:1001,Modifiability,adapt,adaptation,1001,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923
https://github.com/su2code/SU2/issues/948#issuecomment-764931621:365,Energy Efficiency,reduce,reduce,365,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621
https://github.com/su2code/SU2/issues/948#issuecomment-764931621:750,Energy Efficiency,adapt,adaptation,750,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621
https://github.com/su2code/SU2/issues/948#issuecomment-764931621:750,Modifiability,adapt,adaptation,750,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621
https://github.com/su2code/SU2/issues/948#issuecomment-764931621:919,Modifiability,config,config,919,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621
https://github.com/su2code/SU2/issues/948#issuecomment-765021250:254,Energy Efficiency,adapt,adaptation,254,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not 😉) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250
https://github.com/su2code/SU2/issues/948#issuecomment-765021250:389,Energy Efficiency,adapt,adaption,389,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not 😉) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250
https://github.com/su2code/SU2/issues/948#issuecomment-765021250:254,Modifiability,adapt,adaptation,254,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not 😉) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250
https://github.com/su2code/SU2/issues/948#issuecomment-765021250:389,Modifiability,adapt,adaption,389,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not 😉) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250
https://github.com/su2code/SU2/issues/948#issuecomment-846093123:242,Energy Efficiency,adapt,adaptation,242,"Hi @timjim333, any luck with the surface mesh deterioration issue? ; I've managed to successfully run the Onera M6 case, with a sufficiently refined volume mesh around the shock wave region, however the wing surface mesh does not follow this adaptation. Does anyone by any chance have a working .cfg file for the M6 case? I may be setting something up incorrectly.; Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846093123
https://github.com/su2code/SU2/issues/948#issuecomment-846093123:242,Modifiability,adapt,adaptation,242,"Hi @timjim333, any luck with the surface mesh deterioration issue? ; I've managed to successfully run the Onera M6 case, with a sufficiently refined volume mesh around the shock wave region, however the wing surface mesh does not follow this adaptation. Does anyone by any chance have a working .cfg file for the M6 case? I may be setting something up incorrectly.; Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846093123
https://github.com/su2code/SU2/issues/948#issuecomment-846386250:107,Energy Efficiency,adapt,adaptation,107,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250
https://github.com/su2code/SU2/issues/948#issuecomment-846386250:48,Integrability,message,message,48,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250
https://github.com/su2code/SU2/issues/948#issuecomment-846386250:107,Modifiability,adapt,adaptation,107,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250
https://github.com/su2code/SU2/issues/948#issuecomment-846597057:80,Testability,test,testing,80,"@fredericodpc if you find a way I'd be interested to hear how you did it! In my testing, it seems to work for 2D but not 3D.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846597057
https://github.com/su2code/SU2/issues/948#issuecomment-1224179553:109,Availability,alive,alive,109,"Hi everyone,; I'm really interesting by the adaptitve mesh feature and i am wondering if the branch is still alive or if anyone have done any progress before starting to play with this branch; regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553
https://github.com/su2code/SU2/issues/948#issuecomment-1224179553:44,Energy Efficiency,adapt,adaptitve,44,"Hi everyone,; I'm really interesting by the adaptitve mesh feature and i am wondering if the branch is still alive or if anyone have done any progress before starting to play with this branch; regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553
https://github.com/su2code/SU2/issues/948#issuecomment-1224179553:44,Modifiability,adapt,adaptitve,44,"Hi everyone,; I'm really interesting by the adaptitve mesh feature and i am wondering if the branch is still alive or if anyone have done any progress before starting to play with this branch; regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:204,Availability,error,errors,204,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:320,Availability,error,error,320,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:842,Availability,error,error,842,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:851,Availability,ERROR,ERROR,851,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:23,Deployability,install,install,23,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:168,Deployability,install,installed,168,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:333,Deployability,Install,Installing,333,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:353,Deployability,Install,Installing,353,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:388,Deployability,install,installation,388,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:444,Deployability,install,installing,444,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:482,Deployability,install,installed,482,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:520,Deployability,install,install,520,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:713,Deployability,install,install,713,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1586573466:782,Deployability,install,install,782,"Hi all,; I'm trying to install the `SU2_feature_adap` branch. I'm working on WSL 2 with Ubuntu 20.04.; I have also tried the entire procedure on a PC with Ubuntu 20.04 installed, but I'm getting the same errors. I'm following the procedure described in comments above, but when I try to run `./meson.py build`, I get an error:; ```; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed.; ```. In fact, I'm having problems installing pyamg. (_amgio seems to be installed correctly).; So, I tried to install it manually to understand what the problem might be. Moving to the subdirectory ""/externals/AMGIO/pyamg/Python3"", there are two .whl files (one for Linux and one for macOS). I tried to install the Linux version with the following command:; `sudo pip3.11 install pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl`; I get the error:; `ERROR: pyamg-1.0.0-cp37-cp37m-linux_x86_64.whl is not a supported wheel on this platform.`. I have also tried Python 3.7 and 3.8 versions without success. ; This is the output of the command `uname -a`:. `Linux DESKTOP-3OCOBTM 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux`. I seem to meet the requirements of the .whl file. Does anyone have any ideas on what the problem might be?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1586573466
https://github.com/su2code/SU2/issues/948#issuecomment-1673116005:772,Energy Efficiency,adapt,adaptation,772,"It looks like pointwise Mesh Link frame have a support for both mesh link and database (CAD) and it includes both edge data and corners (""Edge2"" for edges and begining and end vertices of each edge data set corresponds to corner data.); https://www.pointwise.com/doc/user-manual/file/export/cae/kestrel.html ; https://github.com/pointwise/MeshLink library also provides some info for mesh to CAD projection. . Therefore adap_back mesh file can be prepared in GAMMA mesh file format including corners, edges, triangles, tets and vertices. But l am not sure about the correctness of su2 files created at each refinement level since corner and edge data will be lost when they are written in su2 format. It may be a good idea to use the GAMMA mesh file format for pyamg mesh adaptation levels and use su2 mesh file format only when it is needed for SU2 runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005
https://github.com/su2code/SU2/issues/948#issuecomment-1673116005:772,Modifiability,adapt,adaptation,772,"It looks like pointwise Mesh Link frame have a support for both mesh link and database (CAD) and it includes both edge data and corners (""Edge2"" for edges and begining and end vertices of each edge data set corresponds to corner data.); https://www.pointwise.com/doc/user-manual/file/export/cae/kestrel.html ; https://github.com/pointwise/MeshLink library also provides some info for mesh to CAD projection. . Therefore adap_back mesh file can be prepared in GAMMA mesh file format including corners, edges, triangles, tets and vertices. But l am not sure about the correctness of su2 files created at each refinement level since corner and edge data will be lost when they are written in su2 format. It may be a good idea to use the GAMMA mesh file format for pyamg mesh adaptation levels and use su2 mesh file format only when it is needed for SU2 runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005
https://github.com/su2code/SU2/issues/948#issuecomment-1673134144:202,Availability,error,errors,202,"Also pyamg.write_mesh correctly write the mesh file but when l convert its solution file to ascii,with libmesh there are excessively large numbers inside the file. It is most likely that there are some errors with it (solve part).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1673134144
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1164,Availability,Error,Error,1164,"ing the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Underst",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1426,Availability,error,error,1426,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1448,Availability,Error,Error,1448,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1545,Availability,error,error,1545,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1817,Availability,error,error,1817,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:2029,Availability,error,error,2029,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:176,Deployability,install,installation,176,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:217,Deployability,install,installation,217,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1237,Deployability,configurat,configuration,1237,"ing the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Underst",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1520,Deployability,configurat,configuration,1520,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1871,Deployability,configurat,configuration,1871,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:2220,Deployability,configurat,configuration,2220,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:128,Energy Efficiency,adapt,adaptation,128,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:476,Energy Efficiency,adapt,adaptation,476,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:566,Energy Efficiency,Adapt,Adaptation,566,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:583,Energy Efficiency,adapt,adaptation,583,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:791,Energy Efficiency,adapt,adaptation,791,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1474,Integrability,message,message,1474,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:128,Modifiability,adapt,adaptation,128,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:476,Modifiability,adapt,adaptation,476,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:566,Modifiability,Adapt,Adaptation,566,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:583,Modifiability,adapt,adaptation,583,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:791,Modifiability,adapt,adaptation,791,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1237,Modifiability,config,configuration,1237,"ing the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Underst",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1520,Modifiability,config,configuration,1520,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1871,Modifiability,config,configuration,1871,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:2220,Modifiability,config,configuration,2220,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1358,Safety,Abort,Aborted,1358,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:974,Testability,log,log,974,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1771,Usability,clear,clearly,1771,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1992,Usability,guid,guidance,1992,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809
https://github.com/su2code/SU2/issues/948#issuecomment-1850026668:31,Availability,error,error,31,"Hi, ; I never experienced that error, at least I don't recall anything similar. The file I share below is a ""config_CFD.cfg"" taken from from the adap/ini/ folder. I hope it helps. . ```; SOLVER= EULER; KIND_TURB_MODEL= NONE; MATH_PROBLEM= DIRECT; RESTART_SOL= NO; AXISYMMETRIC= NO; MACH_NUMBER= 2.0; AOA= 0.0; SIDESLIP_ANGLE= 0.0; FREESTREAM_OPTION= TEMPERATURE_FS; FREESTREAM_TEMPERATURE= 185; FREESTREAM_PRESSURE= 2000.; REF_ORIGIN_MOMENT_X= 0.00; REF_ORIGIN_MOMENT_Y= 0.00; REF_ORIGIN_MOMENT_Z= 0.00; REF_LENGTH= 1; REF_AREA= 1; REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_ONE; MARKER_EULER= ( Body, FarField ); MARKER_SUPERSONIC_INLET= ( Inlet, 185, 2000, 550, 0.0, 0 ); MARKER_OUTLET= ( Outlet, 2000 ); MARKER_PLOTTING= ( Body ); MARKER_MONITORING= ( Body ); NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES; CFL_NUMBER= 0.75; CFL_ADAPT= NO; CFL_ADAPT_PARAM= ( 0.1, 2.0, 0.5, 5 ); RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 ); ITER= 5000; VENKAT_LIMITER_COEFF= 0.1; ADJ_SHARP_LIMITER_COEFF= 3.0; REF_SHARP_EDGES= 3.0; SENS_REMOVE_SHARP= NO; LINEAR_SOLVER= BCGSTAB; LINEAR_SOLVER_PREC= ILU; LINEAR_SOLVER_ERROR= 1E-6; LINEAR_SOLVER_ITER= 10; MGLEVEL= 0; MGCYCLE= W_CYCLE % was V_CYCLE; MG_PRE_SMOOTH= ( 1, 2, 2, 3 ); MG_POST_SMOOTH= ( 0, 0, 0, 0 ); MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); MG_DAMP_RESTRICTION= .7 % was 0.7; MG_DAMP_PROLONGATION= .7 % was 0.7; CONV_NUM_METHOD_FLOW= AUSM; MUSCL_FLOW= YES; SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; JST_SENSOR_COEFF= ( 0.5, 0.02 ); TIME_DISCRE_FLOW= EULER_IMPLICIT; CONV_NUM_METHOD_TURB= SCALAR_UPWIND; MUSCL_TURB= NO; SLOPE_LIMITER_TURB= VENKATAKRISHNAN; TIME_DISCRE_TURB= EULER_IMPLICIT; MESH_FILENAME= MyMesh.su2; MESH_FORMAT= SU2; MESH_OUT_FILENAME= mesh_out.su2; OUTPUT_FILES= (RESTART_ASCII, PARAVIEW, SURFACE_PARAVIEW); SOLUTION_FILENAME= restart_flow.dat; SOLUTION_ADJ_FILENAME= solution_adj.dat; TABULAR_FORMAT= CSV; CONV_FILENAME= history; HISTORY_OUTPUT= ITER, RMS_RES, AERO_COEFF, FLOW_COEFF; RESTART_FILENAME= restart_flow.csv; RESTART_ADJ_FILENAME= re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1850026668
https://github.com/su2code/SU2/issues/948#issuecomment-1850026668:3327,Deployability,install,installed,3327,"; JST_SENSOR_COEFF= ( 0.5, 0.02 ); TIME_DISCRE_FLOW= EULER_IMPLICIT; CONV_NUM_METHOD_TURB= SCALAR_UPWIND; MUSCL_TURB= NO; SLOPE_LIMITER_TURB= VENKATAKRISHNAN; TIME_DISCRE_TURB= EULER_IMPLICIT; MESH_FILENAME= MyMesh.su2; MESH_FORMAT= SU2; MESH_OUT_FILENAME= mesh_out.su2; OUTPUT_FILES= (RESTART_ASCII, PARAVIEW, SURFACE_PARAVIEW); SOLUTION_FILENAME= restart_flow.dat; SOLUTION_ADJ_FILENAME= solution_adj.dat; TABULAR_FORMAT= CSV; CONV_FILENAME= history; HISTORY_OUTPUT= ITER, RMS_RES, AERO_COEFF, FLOW_COEFF; RESTART_FILENAME= restart_flow.csv; RESTART_ADJ_FILENAME= restart_adj.dat; VOLUME_FILENAME= flow; VOLUME_ADJ_FILENAME= adjoint; GRAD_OBJFUNC_FILENAME= of_grad.dat; SURFACE_FILENAME= surface_flow; SURFACE_ADJ_FILENAME= surface_adjoint; WRT_SOL_FREQ= 50.0; WRT_CON_FREQ= 1; SCREEN_OUTPUT= (INNER_ITER, WALL_TIME, RMS_DENSITY, LIFT, DRAG); ADAP_NORM= 1.5; WRT_BINARY_RESTART= NO; READ_BINARY_RESTART= NO; NUM_METHOD_HESS= GREEN_GAUSS; PYADAP_INV_BACK= YES; DV_VALUE_NEW= 0; DV_VALUE_OLD= 0; OPT_ITERATIONS= 100; OPT_ACCURACY= 1e-10; OPT_RELAX_FACTOR= 1.0; OPT_GRADIENT_FACTOR= 1.0; OPT_BOUND_UPPER= 10000000000.0; OPT_BOUND_LOWER= -10000000000.0; OPT_COMBINE_OBJECTIVE= NO; OPT_CONSTRAINT= NONE; VALUE_OBJFUNC_FILENAME= of_eval.dat; BREAKDOWN_FILENAME= forces_breakdown.dat; REYNOLDS_NUMBER= 0.0; TARGET_CL= 0.0; MULTIPOINT_WEIGHT= (1.0); MULTIPOINT_MACH_NUMBER= (2.0); MULTIPOINT_AOA= (0.0); MULTIPOINT_SIDESLIP_ANGLE= (0.0); MULTIPOINT_REYNOLDS_NUMBER= (0.0); MULTIPOINT_TARGET_CL= (0.0); MULTIPOINT_FREESTREAM_PRESSURE= (2000.); MULTIPOINT_FREESTREAM_TEMPERATURE= (185); MULTIPOINT_OUTLET_VALUE= ( 2000 ); MULTIPOINT_MESH_FILENAME= (MyMesh.su2); OBJECTIVE_FUNCTION= DRAG; DV_KIND= FFD_SETTING; DV_PARAM= ( 1, 0.5) ; DEFINITION_DV= ( 30 , 1.0 | WING | 0.0 , 0.05 ); NUMBER_PART= 64; VOLUME_OUTPUT= COORDINATES, SOLUTION, PRIMITIVE; COMPUTE_METRIC= NO; DV_VALUE= 0. ```. I understand you installed it on the version 7.0.3 (to my knowledge it is the latest supported by the feature_adap branch).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1850026668
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:354,Availability,error,error,354,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1005,Deployability,install,install,1005,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1092,Deployability,install,install,1092,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1186,Deployability,install,install,1186,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1297,Deployability,install,install,1297,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:186,Energy Efficiency,adapt,adaptation,186,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:390,Energy Efficiency,Adapt,Adaptation,390,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:407,Energy Efficiency,adapt,adaptation,407,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:681,Energy Efficiency,adapt,adaptation,681,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:821,Energy Efficiency,adapt,adaptation,821,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:901,Energy Efficiency,adapt,adapted,901,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:186,Modifiability,adapt,adaptation,186,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:390,Modifiability,Adapt,Adaptation,390,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:407,Modifiability,adapt,adaptation,407,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:681,Modifiability,adapt,adaptation,681,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:821,Modifiability,adapt,adaptation,821,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:901,Modifiability,adapt,adapted,901,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1269,Modifiability,config,config,1269,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1505,Testability,log,log,1505,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1517,Testability,log,log,1517,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1571,Usability,guid,guidance,1571,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105
https://github.com/su2code/SU2/issues/949#issuecomment-620258270:598,Performance,load,loading,598,"Hey Paul! Sorry to hear this is an issue for you. ~180 mio cells is quite large... any chance you can recreate on something much smaller? If you roll back some commits, does it work again? If you can find the exact commit, that would be helpful. On a smaller case, you might check whether the time averaged data is being written as you expect to the restart file by using an ASCII file and viewing it (add RESTART_ASCII to your OUTPUT_FILES). It is just a normal CSV. Might give you some clues. . If the number of columns in the restart is incorrect, or not what you expect, then I am guessing the loading of the restart is to blame and some quantities are not getting initialized correctly. That is done in CEulerSolver::LoadRestart() for the compressible code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620258270
https://github.com/su2code/SU2/issues/949#issuecomment-620258270:722,Performance,Load,LoadRestart,722,"Hey Paul! Sorry to hear this is an issue for you. ~180 mio cells is quite large... any chance you can recreate on something much smaller? If you roll back some commits, does it work again? If you can find the exact commit, that would be helpful. On a smaller case, you might check whether the time averaged data is being written as you expect to the restart file by using an ASCII file and viewing it (add RESTART_ASCII to your OUTPUT_FILES). It is just a normal CSV. Might give you some clues. . If the number of columns in the restart is incorrect, or not what you expect, then I am guessing the loading of the restart is to blame and some quantities are not getting initialized correctly. That is done in CEulerSolver::LoadRestart() for the compressible code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620258270
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:428,Availability,fault,faults,428,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1372,Availability,error,errors,1372,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:304,Deployability,release,release,304,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:401,Deployability,release,release,401,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1423,Modifiability,config,configure,1423,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:920,Security,Access,AccessorImpl,920,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1111,Testability,Assert,Assertion,1111,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725
https://github.com/su2code/SU2/issues/949#issuecomment-620923199:3,Deployability,update,update,3,"An update to the issue mentioned above... I was able to attach debuggers to a 4-core run of the case I posted yesterday. The code runs fine until it gets into CEulerSolver::SetUpwind_Ducros_Sensor. At some point in this method, during a loop through points, an invalid number is returned by the call to:; `geometry->node[iPoint]->GetPoint(iNeigh)`; (line 3759 of CEulerSolver.cpp). I have attached backtraces from each of the processes I was running. In each case, you can see that ""jPoint"" gets assigned a value here that looks to me like garbage (for example jPoint=18,446,744,073,709,551,615). This value is then passed to `nodes->GetGradient_Primitive(jPoint,iDim+1,iDim)`. I have no idea why a number like this would be returned... Any ideas?. Thanks!. -Paul; [backtrace_1.txt](https://github.com/su2code/SU2/files/4549208/backtrace_1.txt); [backtrace_2.txt](https://github.com/su2code/SU2/files/4549209/backtrace_2.txt); [backtrace_3.txt](https://github.com/su2code/SU2/files/4549210/backtrace_3.txt); [backtrace_4.txt](https://github.com/su2code/SU2/files/4549211/backtrace_4.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620923199
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:111,Availability,failure,failure,111,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:279,Availability,failure,failure,279,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:772,Integrability,rout,routines,772,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:957,Modifiability,variab,variable,957,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:101,Testability,assert,assertion,101,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:269,Testability,assert,assertion,269,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622026420:1909,Usability,simpl,simply,1909,"p, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `MPI_Type_indexed(...)` is `int`. It may be that, given the limitations of MPI here, reading such large restart information requires the restart file to be read serially by one rank, and the data split and broadcast to the other ranks?. I am not an MPI expert, so there may be another way to do this. Thoughts?. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420
https://github.com/su2code/SU2/issues/949#issuecomment-622031229:116,Modifiability,variab,variables,116,How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622031229
https://github.com/su2code/SU2/issues/949#issuecomment-622035489:729,Availability,down,down,729,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489
https://github.com/su2code/SU2/issues/949#issuecomment-622035489:1173,Availability,Failure,Failure,1173,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489
https://github.com/su2code/SU2/issues/949#issuecomment-622035489:62,Modifiability,variab,variables,62,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489
https://github.com/su2code/SU2/issues/949#issuecomment-622035489:178,Modifiability,variab,variables,178,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489
https://github.com/su2code/SU2/issues/949#issuecomment-622035489:309,Modifiability,variab,variables,309,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489
https://github.com/su2code/SU2/issues/949#issuecomment-622035489:1356,Modifiability,variab,variables,1356,"Hi Tom,. Yes, we can temporarily strip off some of the excess variables, and we may just do that in the short-term to continue the simulation. In fact, I'm not sure the averaged variables are used (is the time-averaging continued from restart, or is it started from scratch at restart?). If the time-averaged variables from the restart aren't used, then another fix would be to change what is output in the restart file vs. what is output in the visualization files (vtu, szplt, etc). Regardless, in an earlier simulation, we were attempting to run a 450 million cell mesh, which would have probably caused the same overrun with just the conservatives, so I agree that we'll have to start planning on how to deal with this issue down the road when larger meshes become more commonplace. Not sure the best forum to discuss this kind of thing. Github? Slack? Email?. Hope you are well,. Paul. ________________________________; From: Thomas D. Economon <notifications@github.com>; Sent: Thursday, April 30, 2020 11:41 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Paul Stephen Urbanczyk <gomer@stanford.edu>; Author <author@noreply.github.com>; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). How about a quick fix like removing some fields from the output if possible (39 is a lot)? Are there some auxiliary variables apart from the conservatives and time averages that you don't need?. We'll have to look into the MPI issue with INT_MAX.. we will probably hit other snags like this throughout the code as we keep increasing mesh size. I bet there are some int vs. long issues hidden. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-622031229>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABU42SSQMUXG36DWEIWFNZ3RPHA6ZANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622035489
https://github.com/su2code/SU2/issues/949#issuecomment-622151435:19,Safety,predict,predicted,19,"Actually, @vdweide predicted exactly this issue in #696. I can report that, after updating the CGNS reader in #728, it is possible to run the solver on meshes with over 1 billion grid points (it was a hex cube, so also roughly 1 billion cells). I did not go much beyond that or try to do a restart, but I am certain we will uncover additional issues like this. @talbring, good ideas for the restart, we should start there. I am fine with keeping this issue (maybe pin it if necessary), or we can reopen #696.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622151435
https://github.com/su2code/SU2/issues/949#issuecomment-622319245:354,Usability,simpl,simply,354,"The MPI_Type_create_hindexed will indeed solve the integer overflow encountered in MPI_Type_indexed, as the former uses MPI_Aint (8 byte integers) for the the displacements and the latter regular 4 byte integers. However, as @GomerOfDoom mentioned, there may be issues for the discrete adjoint (I saw that Type_indexed is actually present in medi) if we simply replace MPI_Type_indexed by MPI_Type_create_hindexed. So @talbring, @MaxSagebaum and @economon, do you foresee any problems here? If not, then it is a very simple change of a couple of lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622319245
https://github.com/su2code/SU2/issues/949#issuecomment-622319245:517,Usability,simpl,simple,517,"The MPI_Type_create_hindexed will indeed solve the integer overflow encountered in MPI_Type_indexed, as the former uses MPI_Aint (8 byte integers) for the the displacements and the latter regular 4 byte integers. However, as @GomerOfDoom mentioned, there may be issues for the discrete adjoint (I saw that Type_indexed is actually present in medi) if we simply replace MPI_Type_indexed by MPI_Type_create_hindexed. So @talbring, @MaxSagebaum and @economon, do you foresee any problems here? If not, then it is a very simple change of a couple of lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622319245
https://github.com/su2code/SU2/issues/949#issuecomment-622511555:317,Modifiability,refactor,refactoring,317,"> The solution to (2) appears to be to change geometry->node[iPoint]->GetnNeighbor() to geometry->node[iPoint]->GetnPoint() at line 3759 of CEulerSolver.cpp, in the CEulerSolver::SetUpwind_Ducros_Sensor() method. @GomerOfDoom thanks for tracking that, I fixed the exit condition on that method, but only now that I'm refactoring CPoint in #966 have I realized the difference between nPoint and nNeighbor... Does your case have periodicity?; I will fix incorrect uses of nNeighbor in other areas of the code as part of #966, time domain with moving grids will have similar issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622511555
https://github.com/su2code/SU2/issues/949#issuecomment-622562807:99,Testability,test,testing,99,"I have created a branch ""fix_large_mesh"" in which I am changing those MPI_Type_indexed calls. I am testing the changes now on our large case. Will let you all know how it goes, and then submit a pull request. As for the node[...]->GetnNeighbor issue, the case I have been working on does not have periodicity, but other cases may. Can you clarify the difference between nNeighbor and nPoint? Also, note that this issue *could* have been caused by an incorrect setting of nNeighbor due to the MPI_Type_indexed bug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622562807
https://github.com/su2code/SU2/issues/949#issuecomment-625322105:166,Modifiability,variab,variable,166,"This one is related to the integer overflow problem for very large meshes when writing paraview XML files. In the function CParaviewXMLFileWriter::WriteDataArray the variable totalByteSize is defined as an integer. When writing lots of data, especially the connectivity data, this variable overflows, as @GomerOfDoom experienced. Is it possible to define this byte size to be of type Int64 in paraview instead of Int32?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625322105
https://github.com/su2code/SU2/issues/949#issuecomment-625322105:281,Modifiability,variab,variable,281,"This one is related to the integer overflow problem for very large meshes when writing paraview XML files. In the function CParaviewXMLFileWriter::WriteDataArray the variable totalByteSize is defined as an integer. When writing lots of data, especially the connectivity data, this variable overflows, as @GomerOfDoom experienced. Is it possible to define this byte size to be of type Int64 in paraview instead of Int32?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625322105
https://github.com/su2code/SU2/issues/949#issuecomment-625381735:824,Availability,error,error,824,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735
https://github.com/su2code/SU2/issues/949#issuecomment-625381735:848,Availability,ERROR,ERROR,848,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735
https://github.com/su2code/SU2/issues/949#issuecomment-625381735:1092,Availability,error,error,1092,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735
https://github.com/su2code/SU2/issues/949#issuecomment-625381735:578,Modifiability,variab,variable,578,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735
https://github.com/su2code/SU2/issues/949#issuecomment-625381735:1187,Testability,test,test,1187,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735
https://github.com/su2code/SU2/issues/949#issuecomment-625433096:524,Availability,Failure,Failure,524,"Hi Edwin, . I agree -- the fact that it hangs for 20 nodes but not 15 nodes for the exact same mesh indicate this is not related to the integer overflow issue. . Best,; Beckett . Dr. -Ing. Beckett Y. Zhou; Scientific Computing Group, TU Kaiserslautern; Bldg/Geb 34, Paul-Ehrlich-Strasse; 67663 Kaiserslautern, Germany; ________________________________________; From: Edwin van der Weide [notifications@github.com]; Sent: Thursday, May 07, 2020 8:47 PM; To: su2code/SU2; Cc: Yuxiang Zhou; Mention; Subject: Re: [su2code/SU2] Failure to Restart on Large Meshes with Time-Averaged Data (#949). @talbring<https://github.com/talbring>, so far we used a standard integer for this size, while apparently it has to be a unsigned int according to the paraview mailing list. So maybe those integers may not be used at all by the actual reader in paraview and only the offsets in the header are used. @GomerOfDoom<https://github.com/GomerOfDoom>, could you change the type of totalByteSize to an unsigned int and try again? For this particular case an unsigned int is just fine. If the problem still shows up when reading the file in paraview, then it is something else. @BeckettZhou<https://github.com/BeckettZhou>, I think that for 65M elements you should not run into integer overflow issues. Hence that is most likely a different problem. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/949#issuecomment-625432063>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADXOST6LJQLCEIO55DMGOXLRQL63FANCNFSM4MQLQFFQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625433096
https://github.com/su2code/SU2/issues/949#issuecomment-626225756:58,Testability,test,tests,58,I already changed it in the branch fix_large_mesh. If the tests of @GomerOfDoom are successful it can be merged into develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-626225756
https://github.com/su2code/SU2/issues/953#issuecomment-619939943:49,Availability,down,downloaded,49,"Nope, there is nothing wrong. All submodules are downloaded, even if you don't need them. Feel free to reopen the issue in case this doesn't answer your question.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953#issuecomment-619939943
https://github.com/su2code/SU2/issues/955#issuecomment-619937697:29,Availability,avail,available,29,"If no internet connection is available, you have to download the appropriate submodules manually and place them in the root folder:. https://github.com/scicompkl/CoDiPack/archive/501dcf0305df147481630f20ce37c2e624fb351f.zip ; https://github.com/scicompkl/MeDiPack/archive/edde14f9ac4026b72b1e130f61c0a78e8652afa5.zip; https://github.com/mesonbuild/meson/archive/0435691e83fb7172e2a9635d2eb32d5521089916.zip; https://github.com/ninja-build/ninja/archive/2d15b04e411229cb902332957281622119025e77.zip . This information should be printed when no internet connection is detected, unfortunately there is a small bug in the current master branch that prevents that. A fix will be included in the next release. . Otherwise, you can also just run meson.py once on a computer with internet and then copy it to the other machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619937697
https://github.com/su2code/SU2/issues/955#issuecomment-619937697:52,Availability,down,download,52,"If no internet connection is available, you have to download the appropriate submodules manually and place them in the root folder:. https://github.com/scicompkl/CoDiPack/archive/501dcf0305df147481630f20ce37c2e624fb351f.zip ; https://github.com/scicompkl/MeDiPack/archive/edde14f9ac4026b72b1e130f61c0a78e8652afa5.zip; https://github.com/mesonbuild/meson/archive/0435691e83fb7172e2a9635d2eb32d5521089916.zip; https://github.com/ninja-build/ninja/archive/2d15b04e411229cb902332957281622119025e77.zip . This information should be printed when no internet connection is detected, unfortunately there is a small bug in the current master branch that prevents that. A fix will be included in the next release. . Otherwise, you can also just run meson.py once on a computer with internet and then copy it to the other machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619937697
https://github.com/su2code/SU2/issues/955#issuecomment-619937697:695,Deployability,release,release,695,"If no internet connection is available, you have to download the appropriate submodules manually and place them in the root folder:. https://github.com/scicompkl/CoDiPack/archive/501dcf0305df147481630f20ce37c2e624fb351f.zip ; https://github.com/scicompkl/MeDiPack/archive/edde14f9ac4026b72b1e130f61c0a78e8652afa5.zip; https://github.com/mesonbuild/meson/archive/0435691e83fb7172e2a9635d2eb32d5521089916.zip; https://github.com/ninja-build/ninja/archive/2d15b04e411229cb902332957281622119025e77.zip . This information should be printed when no internet connection is detected, unfortunately there is a small bug in the current master branch that prevents that. A fix will be included in the next release. . Otherwise, you can also just run meson.py once on a computer with internet and then copy it to the other machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619937697
https://github.com/su2code/SU2/issues/955#issuecomment-619937697:566,Safety,detect,detected,566,"If no internet connection is available, you have to download the appropriate submodules manually and place them in the root folder:. https://github.com/scicompkl/CoDiPack/archive/501dcf0305df147481630f20ce37c2e624fb351f.zip ; https://github.com/scicompkl/MeDiPack/archive/edde14f9ac4026b72b1e130f61c0a78e8652afa5.zip; https://github.com/mesonbuild/meson/archive/0435691e83fb7172e2a9635d2eb32d5521089916.zip; https://github.com/ninja-build/ninja/archive/2d15b04e411229cb902332957281622119025e77.zip . This information should be printed when no internet connection is detected, unfortunately there is a small bug in the current master branch that prevents that. A fix will be included in the next release. . Otherwise, you can also just run meson.py once on a computer with internet and then copy it to the other machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619937697
https://github.com/su2code/SU2/issues/955#issuecomment-619940115:53,Availability,down,downloading,53,"Hello @talbring. Thank you for the suggestion. After downloading the submodules manually, should I run meson.py or a different script? And when you mean the root folder, do you mean ""externals"" folder or the system's root folder? If you mean the latter, then I don't have root access. Is this necessary for installation? ; Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619940115
https://github.com/su2code/SU2/issues/955#issuecomment-619940115:307,Deployability,install,installation,307,"Hello @talbring. Thank you for the suggestion. After downloading the submodules manually, should I run meson.py or a different script? And when you mean the root folder, do you mean ""externals"" folder or the system's root folder? If you mean the latter, then I don't have root access. Is this necessary for installation? ; Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619940115
https://github.com/su2code/SU2/issues/955#issuecomment-619940115:277,Security,access,access,277,"Hello @talbring. Thank you for the suggestion. After downloading the submodules manually, should I run meson.py or a different script? And when you mean the root folder, do you mean ""externals"" folder or the system's root folder? If you mean the latter, then I don't have root access. Is this necessary for installation? ; Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619940115
https://github.com/su2code/SU2/issues/955#issuecomment-619956807:41,Deployability,configurat,configuration,41,@talbring How do I clean and rebuild the configuration?. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619956807
https://github.com/su2code/SU2/issues/955#issuecomment-619956807:41,Modifiability,config,configuration,41,@talbring How do I clean and rebuild the configuration?. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619956807
https://github.com/su2code/SU2/issues/955#issuecomment-619964844:16,Deployability,configurat,configuration,16,"Just delete the configuration folder that you used in the meson call (probably ""build"" if you followed the documentation).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619964844
https://github.com/su2code/SU2/issues/955#issuecomment-619964844:16,Modifiability,config,configuration,16,"Just delete the configuration folder that you used in the meson call (probably ""build"" if you followed the documentation).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619964844
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:121,Availability,error,error,121,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:2341,Availability,error,error,2341,"/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from ../externals/tecio/teciompisrc/ZoneHeaderWriterAbstract.h(3),; from ../externals/tecio/teciompisrc/ClassicZoneHeaderWriter.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp(1):; /usr/local/include/boost/type_traits/is_function.hpp(23): catastrophic error: cannot open source file ""boost/type_traits/detail/is_function_cxx_03.hpp""; #include <boost/type_traits/detail/is_function_cxx_03.hpp>; ^; Is boost required for installing SU2? I have compiled this using Intel parallel studio 2018. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:78,Deployability,install,installing,78,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:2508,Deployability,install,installing,2508,"/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from ../externals/tecio/teciompisrc/ZoneHeaderWriterAbstract.h(3),; from ../externals/tecio/teciompisrc/ClassicZoneHeaderWriter.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp(1):; /usr/local/include/boost/type_traits/is_function.hpp(23): catastrophic error: cannot open source file ""boost/type_traits/detail/is_function_cxx_03.hpp""; #include <boost/type_traits/detail/is_function_cxx_03.hpp>; ^; Is boost required for installing SU2? I have compiled this using Intel parallel studio 2018. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:1579,Integrability,interoperab,interoperable,1579,"cio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from ../externals/tecio/teciompisrc/ZoneHeaderWriterAbstract.h(3),; from ../externals/tecio/teciompisrc/ClassicZoneHeaderWriter.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp(1):; /usr/local/include/boost/type_traits/is_function.hpp(23): catastrophic error: cannot open source file ""boost/type_traits/detail/is_function_cxx_03.hpp""; #include <boost/type_traits/detail/is_function_cxx_03.hpp>; ^; Is boost required for installing SU2? I have compiled this using Intel parallel studio 2018.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:31,Modifiability,config,configuring,31,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-619968113:752,Security,secur,security,752,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113
https://github.com/su2code/SU2/issues/955#issuecomment-620027674:42,Availability,error,error,42,@talbring It doesn't work. I still get an error with the boost library during TECIO installation. What do you suggest I do?. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620027674
https://github.com/su2code/SU2/issues/955#issuecomment-620027674:84,Deployability,install,installation,84,@talbring It doesn't work. I still get an error with the boost library during TECIO installation. What do you suggest I do?. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620027674
https://github.com/su2code/SU2/issues/955#issuecomment-620044512:131,Deployability,install,installed,131,There seems to be a strange problem with finding some of the shipped boost headers. For some of them it only finds the system-wide installed boost headers ... actually I have no idea at the moment why this is the case. Can you check whether the file. `externals/tecio/boost/range/iterator_range.hpp` . exists ? Thats the first occurence where it uses the system installed version ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620044512
https://github.com/su2code/SU2/issues/955#issuecomment-620044512:362,Deployability,install,installed,362,There seems to be a strange problem with finding some of the shipped boost headers. For some of them it only finds the system-wide installed boost headers ... actually I have no idea at the moment why this is the case. Can you check whether the file. `externals/tecio/boost/range/iterator_range.hpp` . exists ? Thats the first occurence where it uses the system installed version ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620044512
https://github.com/su2code/SU2/issues/955#issuecomment-620066614:1182,Availability,error,error,1182,"I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=Storage",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614
https://github.com/su2code/SU2/issues/955#issuecomment-620066614:1276,Safety,detect,detected,1276,"I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=Storage",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614
https://github.com/su2code/SU2/issues/955#issuecomment-620066614:2571,Safety,abort,aborted,2571,"2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 63 of; ""../SU2_CFD/src/output/../../include/solvers/../../../Common/include/geometry/elements/CGaussVariable.hpp"". compilation aborted for ../SU2_CFD/src/output/CHeatOutput.cpp (code 2). Could the issue be because of C++-11 features not being supported by the compiler I am using? I am using Intel Parallel Studio 2017. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614
https://github.com/su2code/SU2/issues/955#issuecomment-620066614:658,Security,secur,security,658,"@talbring I have found other issues now (disabled tecio,cgns). [87/331] Compiling C++ object 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o'.; FAILED: SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o; icpc -ISU2_CFD/src/37e1b17@@SU2_CFD@exe -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614
https://github.com/su2code/SU2/issues/955#issuecomment-620066614:1336,Security,Access,AccessorImpl,1336,"I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=Storage",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614
https://github.com/su2code/SU2/issues/955#issuecomment-620086431:283,Deployability,install,installation,283,"Can't you use gcc? You will get worse performance with any version of the intel compilers prior to 2019 than with even gcc 5.4...; If this is because you need intel MPI you can do:; export CC=gcc; export CXX=g++; export I_MPI_CC=gcc; export I_MPI_CXX=g++; And then follow the normal installation procedure (meson ninja). These problems you are running into with boost also have a ""half baked c++11 compiler support"" smell to them, namely the 03 suffix to that file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620086431
https://github.com/su2code/SU2/issues/955#issuecomment-620086431:38,Performance,perform,performance,38,"Can't you use gcc? You will get worse performance with any version of the intel compilers prior to 2019 than with even gcc 5.4...; If this is because you need intel MPI you can do:; export CC=gcc; export CXX=g++; export I_MPI_CC=gcc; export I_MPI_CXX=g++; And then follow the normal installation procedure (meson ninja). These problems you are running into with boost also have a ""half baked c++11 compiler support"" smell to them, namely the 03 suffix to that file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620086431
https://github.com/su2code/SU2/issues/955#issuecomment-620486002:92,Availability,error,error,92,"@pcarruscag @talbring I am using gcc 5.5.0 and mpich3.2.1 for compilation. I still get this error. [107/846] Compiling C++ object 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o'.; FAILED: Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o ; c++ -ICommon/src/9e112f9@@SU2Common@sta -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns/./ -I../externals/cgns/./ -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -c ../Common/src/linear_algebra/CSysVector.cpp; In file included from ../Common/src/linear_algebra/CSysVector.cpp:31:0:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alignment, size);; ^; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: note: suggested alternative:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:61:11: no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002
https://github.com/su2code/SU2/issues/955#issuecomment-620486002:1712,Availability,error,error,1712," -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -c ../Common/src/linear_algebra/CSysVector.cpp; In file included from ../Common/src/linear_algebra/CSysVector.cpp:31:0:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alignment, size);; ^; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: note: suggested alternative:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:61:11: note: ‘MemoryAllocation::aligned_alloc’; inline T* aligned_alloc(size_t alignment, size_t size) noexcept; ^; [111/846] Compiling C++ object 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o'.; FAILED: Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o ; c++ -ICommon/src/9e112f9@@SU2Common@sta -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns/./ -I../externals/cgns/./ -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002
https://github.com/su2code/SU2/issues/955#issuecomment-620486002:3999,Availability,error,error,3999,"isrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -c ../Common/src/linear_algebra/CSysSolve.cpp; In file included from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/C2DContainer.hpp:30:0,; from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/graph_toolbox.hpp:30,; from ../Common/src/linear_algebra/../../include/geometry/CGeometry.hpp:61,; from ../Common/src/linear_algebra/CSysSolve.cpp:33:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alignment, size);; ^; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:79:9: note: suggested alternative:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:61:11: note: ‘MemoryAllocation::aligned_alloc’; inline T* aligned_alloc(size_t alignment, size_t size) noexcept; ^; [124/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/importSzPltFile.cpp.o'.; ninja: build stopped: subcommand failed. Looks like the aligned_alloc is causing this issue. Please suggest what I need to do to get past this error. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002
https://github.com/su2code/SU2/issues/955#issuecomment-620486002:4669,Availability,error,error,4669,"isrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -c ../Common/src/linear_algebra/CSysSolve.cpp; In file included from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/C2DContainer.hpp:30:0,; from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/graph_toolbox.hpp:30,; from ../Common/src/linear_algebra/../../include/geometry/CGeometry.hpp:61,; from ../Common/src/linear_algebra/CSysSolve.cpp:33:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alignment, size);; ^; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:79:9: note: suggested alternative:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:61:11: note: ‘MemoryAllocation::aligned_alloc’; inline T* aligned_alloc(size_t alignment, size_t size) noexcept; ^; [124/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/importSzPltFile.cpp.o'.; ninja: build stopped: subcommand failed. Looks like the aligned_alloc is causing this issue. Please suggest what I need to do to get past this error. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002
https://github.com/su2code/SU2/issues/955#issuecomment-620486002:999,Security,secur,security,999,"ilation. I still get this error. [107/846] Compiling C++ object 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o'.; FAILED: Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o ; c++ -ICommon/src/9e112f9@@SU2Common@sta -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns/./ -I../externals/cgns/./ -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -c ../Common/src/linear_algebra/CSysVector.cpp; In file included from ../Common/src/linear_algebra/CSysVector.cpp:31:0:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alignment, size);; ^; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: note: suggested alternative:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:61:11: note: ‘MemoryAllocation::aligned_alloc’; inline T* aligned_alloc(siz",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002
https://github.com/su2code/SU2/issues/955#issuecomment-620486002:3006,Security,secur,security,3006,"ignment, size_t size) noexcept; ^; [111/846] Compiling C++ object 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o'.; FAILED: Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o ; c++ -ICommon/src/9e112f9@@SU2Common@sta -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns/./ -I../externals/cgns/./ -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -c ../Common/src/linear_algebra/CSysSolve.cpp; In file included from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/C2DContainer.hpp:30:0,; from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/graph_toolbox.hpp:30,; from ../Common/src/linear_algebra/../../include/geometry/CGeometry.hpp:61,; from ../Common/src/linear_algebra/CSysSolve.cpp:33:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002
https://github.com/su2code/SU2/issues/955#issuecomment-620546862:188,Availability,down,download,188,"I have no idea, that function is not a problem even with gcc 4.7.3, and I also use a similar version of mpich on some machines.; a) Clean the code directory, delete the whole thing and re-download the code just to be sure.; b) What OS are you on?; c) Run mpirun --version, mpicxx --version post the output here.; d) Run the configuration with meson, post the output here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620546862
https://github.com/su2code/SU2/issues/955#issuecomment-620546862:324,Deployability,configurat,configuration,324,"I have no idea, that function is not a problem even with gcc 4.7.3, and I also use a similar version of mpich on some machines.; a) Clean the code directory, delete the whole thing and re-download the code just to be sure.; b) What OS are you on?; c) Run mpirun --version, mpicxx --version post the output here.; d) Run the configuration with meson, post the output here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620546862
https://github.com/su2code/SU2/issues/955#issuecomment-620546862:324,Modifiability,config,configuration,324,"I have no idea, that function is not a problem even with gcc 4.7.3, and I also use a similar version of mpich on some machines.; a) Clean the code directory, delete the whole thing and re-download the code just to be sure.; b) What OS are you on?; c) Run mpirun --version, mpicxx --version post the output here.; d) Run the configuration with meson, post the output here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620546862
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:50,Availability,error,error,50,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:705,Availability,avail,available,705,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:781,Availability,avail,available,781,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:827,Availability,avail,available,827,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:872,Availability,Checkpoint,Checkpointing,872,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:896,Availability,avail,available,896,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:923,Availability,avail,available,923,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:154,Deployability,Release,Release,154,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:1208,Deployability,configurat,configuration,1208," ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2469,Deployability,Release,Release,2469,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2542,Deployability,Configurat,Configuration,2542,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2903,Deployability,update,update,2903,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2995,Deployability,configurat,configuration,2995,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:3244,Deployability,install,install,3244,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:3268,Deployability,install,install,3268,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2249,Integrability,Depend,Dependency,2249,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2300,Integrability,Depend,Dependency,2300,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2351,Integrability,Message,Message,2351,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2760,Integrability,Wrap,Wrapper,2760,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:251,Modifiability,Config,Configure,251,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:1208,Modifiability,config,configuration,1208," ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2542,Modifiability,Config,Configuration,2542,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2887,Modifiability,variab,variables,2887,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2995,Modifiability,config,configuration,2995,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620552610:329,Performance,cache,cache-file,329,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610
https://github.com/su2code/SU2/issues/955#issuecomment-620554072:118,Availability,down,downloaded,118,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072
https://github.com/su2code/SU2/issues/955#issuecomment-620554072:294,Availability,down,downloaded,294,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072
https://github.com/su2code/SU2/issues/955#issuecomment-620554072:369,Availability,down,download,369,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072
https://github.com/su2code/SU2/issues/955#issuecomment-620554072:17,Deployability,install,installing,17,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072
https://github.com/su2code/SU2/issues/955#issuecomment-620554072:63,Security,access,access,63,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072
https://github.com/su2code/SU2/issues/955#issuecomment-620554072:205,Security,access,access,205,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072
https://github.com/su2code/SU2/issues/955#issuecomment-620583495:63,Deployability,install,installation,63,"I see... well maybe there is something wrong with the compiler installation, or how the default include directories are setup, gcc 5.5 has no problems finding aligned_alloc : https://gcc.godbolt.org/z/GGYrft; If that cluster is managed by someone, your best option is to get support from them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620583495
https://github.com/su2code/SU2/issues/955#issuecomment-620724039:28,Deployability,install,installed,28,@economon I have personally installed SU2 software (from versions 3 to 6) in our cluster without problems. I think the issues could be because of lack of C11 features. I tried to run a sample code with aligned_alloc and I had problems with both Intel and GCC compilers. I'll test this again. I think I'll have to install gcc myself. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620724039
https://github.com/su2code/SU2/issues/955#issuecomment-620724039:313,Deployability,install,install,313,@economon I have personally installed SU2 software (from versions 3 to 6) in our cluster without problems. I think the issues could be because of lack of C11 features. I tried to run a sample code with aligned_alloc and I had problems with both Intel and GCC compilers. I'll test this again. I think I'll have to install gcc myself. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620724039
https://github.com/su2code/SU2/issues/955#issuecomment-620724039:275,Testability,test,test,275,@economon I have personally installed SU2 software (from versions 3 to 6) in our cluster without problems. I think the issues could be because of lack of C11 features. I tried to run a sample code with aligned_alloc and I had problems with both Intel and GCC compilers. I'll test this again. I think I'll have to install gcc myself. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620724039
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:360,Availability,down,down,360,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:571,Availability,down,down,571,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:73,Deployability,install,install,73,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:221,Deployability,update,updated,221,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:417,Deployability,install,install,417,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:667,Deployability,install,install,667,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:736,Deployability,install,installation,736,"@SumanVajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H55",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:945,Deployability,install,installation,945,"Vajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPB",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1379,Deployability,install,installed,1379,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1676,Deployability,install,install,1676,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:981,Energy Efficiency,efficient,efficient,981,"Vajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPB",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1115,Integrability,message,messages,1115,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1638,Testability,test,test,1638,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198
https://github.com/su2code/SU2/issues/955#issuecomment-621090526:205,Deployability,install,installed,205,"@SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621090526
https://github.com/su2code/SU2/issues/955#issuecomment-621090526:158,Usability,simpl,simpler,158,"@SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621090526
https://github.com/su2code/SU2/issues/955#issuecomment-621164605:207,Deployability,install,installed,207,"> @SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; > [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt). @pcarruscag Thank you very much. This works. I have installed a sequential version and a parallel version with tecio,codipack and medipack enabled. I will try the same with Intel compilers and see if it works. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621164605
https://github.com/su2code/SU2/issues/955#issuecomment-621164605:477,Deployability,install,installed,477,"> @SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; > [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt). @pcarruscag Thank you very much. This works. I have installed a sequential version and a parallel version with tecio,codipack and medipack enabled. I will try the same with Intel compilers and see if it works. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621164605
https://github.com/su2code/SU2/issues/955#issuecomment-621164605:160,Usability,simpl,simpler,160,"> @SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; > [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt). @pcarruscag Thank you very much. This works. I have installed a sequential version and a parallel version with tecio,codipack and medipack enabled. I will try the same with Intel compilers and see if it works. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621164605
https://github.com/su2code/SU2/issues/955#issuecomment-760580247:261,Deployability,install,install,261,"I realize this is closed, but I encountered the same issue where aligned_alloc is not declared in the global namespace. I'm writing this post just in case anyone else runs into this problem on a cluster computer where they may not have the ability to change or install different compilers or c/c++ libraries. The problem stems from the version of cstdlib (or stdlib.h) and the c++ (or c) standard that is specified. alligned_alloc was not introduced in c++11, it was introduced in c11, and didn't make it into the c++ standard until c++17. My understanding is that basically, if stdlib.h is used, and the c (not c++) standard is set to 2011 or greater, aligned_alloc should appear in the global namespace. If cstdlib is used and the c++ standard is set to 2017 or greater, then aligned_alloc will appear in the std namespace. Also, I believe if the c++ standard is set to 2017 or greater, and stdlib.h is used, aligned_alloc will also appear in the global namespace. However, there were several gcc compiler releases (including up to 7.3) that did not have aligned_alloc as part of the std:: namespace. Apparently, this bug was fixed in gcc 7.4 and up. I was also able to work around this problem by using the allocation_toolbox_PATCH.txt that @pcarruscag provided, above, as well. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-760580247
https://github.com/su2code/SU2/issues/955#issuecomment-760580247:1008,Deployability,release,releases,1008,"I realize this is closed, but I encountered the same issue where aligned_alloc is not declared in the global namespace. I'm writing this post just in case anyone else runs into this problem on a cluster computer where they may not have the ability to change or install different compilers or c/c++ libraries. The problem stems from the version of cstdlib (or stdlib.h) and the c++ (or c) standard that is specified. alligned_alloc was not introduced in c++11, it was introduced in c11, and didn't make it into the c++ standard until c++17. My understanding is that basically, if stdlib.h is used, and the c (not c++) standard is set to 2011 or greater, aligned_alloc should appear in the global namespace. If cstdlib is used and the c++ standard is set to 2017 or greater, then aligned_alloc will appear in the std namespace. Also, I believe if the c++ standard is set to 2017 or greater, and stdlib.h is used, aligned_alloc will also appear in the global namespace. However, there were several gcc compiler releases (including up to 7.3) that did not have aligned_alloc as part of the std:: namespace. Apparently, this bug was fixed in gcc 7.4 and up. I was also able to work around this problem by using the allocation_toolbox_PATCH.txt that @pcarruscag provided, above, as well. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-760580247
https://github.com/su2code/SU2/issues/955#issuecomment-761011723:178,Availability,avail,available,178,"Hi Paul, indeed when I introduced aligned allocation I took for granted that it was a c++11 feature.; Did you come across any programmatic way to detect whether aligned_alloc is available? We could have a graceful fallback to normal new/delete, no part of the code strictly relies on alignment (yet).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-761011723
https://github.com/su2code/SU2/issues/955#issuecomment-761011723:146,Safety,detect,detect,146,"Hi Paul, indeed when I introduced aligned allocation I took for granted that it was a c++11 feature.; Did you come across any programmatic way to detect whether aligned_alloc is available? We could have a graceful fallback to normal new/delete, no part of the code strictly relies on alignment (yet).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-761011723
https://github.com/su2code/SU2/issues/955#issuecomment-778501880:67,Safety,detect,detect,67,"Realized I never followed up. I did not find a programmatic way to detect this. I think the best solution is to have people use your work-around file if they are stuck with an old compiler. When aligned_alloc becomes a required part of SU2, we may need to include a minimum compiler version requirement for the code. IMO, it is too much to continually write code that supports ancient compiler versions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-778501880
https://github.com/su2code/SU2/issues/955#issuecomment-886202450:42,Deployability,PATCH,PATCH,42,"HI ; This issue was closed, but while the PATCH from April 29, 2020, was effective on disconnected machines with compilers (GCC) that are not fully updated, it stopped working on the develop branch (a few months ago it did the work). It should be said that on updated GCC (Ubuntu), with a network connection, the patch is not needed. Any idea how to update the PATCH or a different solution?; Thnx, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-886202450
https://github.com/su2code/SU2/issues/955#issuecomment-886202450:148,Deployability,update,updated,148,"HI ; This issue was closed, but while the PATCH from April 29, 2020, was effective on disconnected machines with compilers (GCC) that are not fully updated, it stopped working on the develop branch (a few months ago it did the work). It should be said that on updated GCC (Ubuntu), with a network connection, the patch is not needed. Any idea how to update the PATCH or a different solution?; Thnx, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-886202450
https://github.com/su2code/SU2/issues/955#issuecomment-886202450:260,Deployability,update,updated,260,"HI ; This issue was closed, but while the PATCH from April 29, 2020, was effective on disconnected machines with compilers (GCC) that are not fully updated, it stopped working on the develop branch (a few months ago it did the work). It should be said that on updated GCC (Ubuntu), with a network connection, the patch is not needed. Any idea how to update the PATCH or a different solution?; Thnx, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-886202450
https://github.com/su2code/SU2/issues/955#issuecomment-886202450:313,Deployability,patch,patch,313,"HI ; This issue was closed, but while the PATCH from April 29, 2020, was effective on disconnected machines with compilers (GCC) that are not fully updated, it stopped working on the develop branch (a few months ago it did the work). It should be said that on updated GCC (Ubuntu), with a network connection, the patch is not needed. Any idea how to update the PATCH or a different solution?; Thnx, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-886202450
https://github.com/su2code/SU2/issues/955#issuecomment-886202450:350,Deployability,update,update,350,"HI ; This issue was closed, but while the PATCH from April 29, 2020, was effective on disconnected machines with compilers (GCC) that are not fully updated, it stopped working on the develop branch (a few months ago it did the work). It should be said that on updated GCC (Ubuntu), with a network connection, the patch is not needed. Any idea how to update the PATCH or a different solution?; Thnx, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-886202450
https://github.com/su2code/SU2/issues/955#issuecomment-886202450:361,Deployability,PATCH,PATCH,361,"HI ; This issue was closed, but while the PATCH from April 29, 2020, was effective on disconnected machines with compilers (GCC) that are not fully updated, it stopped working on the develop branch (a few months ago it did the work). It should be said that on updated GCC (Ubuntu), with a network connection, the patch is not needed. Any idea how to update the PATCH or a different solution?; Thnx, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-886202450
https://github.com/su2code/SU2/issues/955#issuecomment-889076412:0,Availability,error,errors,0,"errors, compiler errors",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-889076412
https://github.com/su2code/SU2/issues/955#issuecomment-889076412:17,Availability,error,errors,17,"errors, compiler errors",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-889076412
https://github.com/su2code/SU2/issues/955#issuecomment-890774781:119,Availability,error,errors,119,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781
https://github.com/su2code/SU2/issues/955#issuecomment-890774781:390,Availability,down,downloaded,390,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781
https://github.com/su2code/SU2/issues/955#issuecomment-890774781:430,Availability,error,errors,430,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781
https://github.com/su2code/SU2/issues/955#issuecomment-890774781:238,Deployability,patch,patch,238,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781
https://github.com/su2code/SU2/issues/955#issuecomment-890774781:346,Deployability,patch,patch,346,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781
https://github.com/su2code/SU2/issues/955#issuecomment-890929479:136,Deployability,update,updated,136,"4.8.5 ; Yep, that is pretty old (got 7.5.0 on my Laptop). However, till a month or two ago it did the work. We are also compiling other updated codes (like CharLES) with it without problem",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890929479
https://github.com/su2code/SU2/issues/955#issuecomment-890952642:90,Availability,error,errors,90,"Have you tried adding this ""-fabi-version=6"" to the CXXFLAGS? I was able to reproduce the errors you shared and this flag seems to fix it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890952642
https://github.com/su2code/SU2/issues/956#issuecomment-620127214:143,Integrability,wrap,wrapper,143,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214
https://github.com/su2code/SU2/issues/956#issuecomment-620127214:301,Integrability,wrap,wrapper,301,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214
https://github.com/su2code/SU2/issues/956#issuecomment-620127214:22,Performance,optimiz,optimizations,22,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214
https://github.com/su2code/SU2/issues/956#issuecomment-620127214:59,Performance,optimiz,optimizes,59,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214
https://github.com/su2code/SU2/issues/956#issuecomment-620130177:78,Deployability,release,release,78,I will put a fix in a small PR for bug fixes that I want to open for the next release anyway.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620130177
https://github.com/su2code/SU2/issues/956#issuecomment-620142891:82,Usability,clear,cleared,82,"Sounds good. I applied Pedro's fix to my code (temporarily), and it seems to have cleared up the problem. Thanks guys! Do you want me to close this now, or wait until the PRs are applied to develop?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620142891
https://github.com/su2code/SU2/issues/957#issuecomment-621662776:373,Integrability,rout,routine,373,"You are right. Even though we compute these quantities inside the solver, they have not been added to the output classes yet. This should be straightforward though now in the new structure. Take a look at CFlowOutput::SetAerodynamicCoefficients(), for example, and try to pattern match to add these along with the others since we already have a ```solver->GetTotal_CQ()``` routine (and CT and CMerit) to access the computed value. Probably also need to add to the AddAerodynamicCoefficients() routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/957#issuecomment-621662776
https://github.com/su2code/SU2/issues/957#issuecomment-621662776:493,Integrability,rout,routine,493,"You are right. Even though we compute these quantities inside the solver, they have not been added to the output classes yet. This should be straightforward though now in the new structure. Take a look at CFlowOutput::SetAerodynamicCoefficients(), for example, and try to pattern match to add these along with the others since we already have a ```solver->GetTotal_CQ()``` routine (and CT and CMerit) to access the computed value. Probably also need to add to the AddAerodynamicCoefficients() routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/957#issuecomment-621662776
https://github.com/su2code/SU2/issues/957#issuecomment-621662776:404,Security,access,access,404,"You are right. Even though we compute these quantities inside the solver, they have not been added to the output classes yet. This should be straightforward though now in the new structure. Take a look at CFlowOutput::SetAerodynamicCoefficients(), for example, and try to pattern match to add these along with the others since we already have a ```solver->GetTotal_CQ()``` routine (and CT and CMerit) to access the computed value. Probably also need to add to the AddAerodynamicCoefficients() routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/957#issuecomment-621662776
https://github.com/su2code/SU2/pull/959#issuecomment-622496979:161,Safety,safe,safe,161,"I'll merge this one to make the diff on my other PR's cleaner, but feel free to comment if you see something that does not look right.; I think these are fairly safe changes bug-wise, CEdge does not have a lot of methods and so I did this almost manually.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/959#issuecomment-622496979
https://github.com/su2code/SU2/pull/964#issuecomment-625996332:16,Availability,error,error,16,"Concerning this error (I am glad you brought it up): . Error in ""virtual void CPhysicalGeometry::SetSensitivity(CConfig*)"": ; ----------------------------------------; Sensitivity x not found in file. ; ------------------------------ Error Exit -------------------------------. Did you solve this issue? I think that the problem is related to specifying VOLUME_OUTPUT fields different than the default (or at least I have had one other person report this to me). When you put in custom fields, the sensitivities are not also added by automatically. . I think that we should enforce that the sensitivities are always written to the adjoint restart files, like we do with the coords and conservatives for the primal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-625996332
https://github.com/su2code/SU2/pull/964#issuecomment-625996332:55,Availability,Error,Error,55,"Concerning this error (I am glad you brought it up): . Error in ""virtual void CPhysicalGeometry::SetSensitivity(CConfig*)"": ; ----------------------------------------; Sensitivity x not found in file. ; ------------------------------ Error Exit -------------------------------. Did you solve this issue? I think that the problem is related to specifying VOLUME_OUTPUT fields different than the default (or at least I have had one other person report this to me). When you put in custom fields, the sensitivities are not also added by automatically. . I think that we should enforce that the sensitivities are always written to the adjoint restart files, like we do with the coords and conservatives for the primal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-625996332
https://github.com/su2code/SU2/pull/964#issuecomment-625996332:234,Availability,Error,Error,234,"Concerning this error (I am glad you brought it up): . Error in ""virtual void CPhysicalGeometry::SetSensitivity(CConfig*)"": ; ----------------------------------------; Sensitivity x not found in file. ; ------------------------------ Error Exit -------------------------------. Did you solve this issue? I think that the problem is related to specifying VOLUME_OUTPUT fields different than the default (or at least I have had one other person report this to me). When you put in custom fields, the sensitivities are not also added by automatically. . I think that we should enforce that the sensitivities are always written to the adjoint restart files, like we do with the coords and conservatives for the primal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-625996332
https://github.com/su2code/SU2/pull/964#issuecomment-626029155:451,Safety,avoid,avoid,451,"Hi @economon . > Did you solve this issue? I think that the problem is related to specifying VOLUME_OUTPUT fields different than the default (or at least I have had one other person report this to me). When you put in custom fields, the sensitivities are not also added by automatically. yes I noticed that adding sensitivity in the output solves the issue. ; I agree, it makes sense to put `SENSITIVITY` as a default entry in the case of adjoints to avoid this problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626029155
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:84,Modifiability,config,config,84,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:138,Modifiability,config,config,138,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:39,Testability,test,test,39,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:273,Testability,test,test,273,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:318,Testability,test,test,318,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:400,Testability,test,test,400,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-626120951:435,Testability,test,test,435,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951
https://github.com/su2code/SU2/pull/964#issuecomment-627498661:57,Performance,optimiz,optimization,57,"I'm wondering, if a test case for unsteady restart shape optimization would be computationally too expensive for the test system. ; Please let me know you opinion on that. ; Otherwise this request is complete. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627498661
https://github.com/su2code/SU2/pull/964#issuecomment-627498661:20,Testability,test,test,20,"I'm wondering, if a test case for unsteady restart shape optimization would be computationally too expensive for the test system. ; Please let me know you opinion on that. ; Otherwise this request is complete. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627498661
https://github.com/su2code/SU2/pull/964#issuecomment-627498661:117,Testability,test,test,117,"I'm wondering, if a test case for unsteady restart shape optimization would be computationally too expensive for the test system. ; Please let me know you opinion on that. ; Otherwise this request is complete. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627498661
https://github.com/su2code/SU2/pull/964#issuecomment-627509834:31,Testability,test,test,31,"If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Out of curiosity, do you use the windowing feature to discard a few initial time steps?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627509834
https://github.com/su2code/SU2/pull/964#issuecomment-627769844:604,Safety,safe,safe,604,"> If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Ok!. ; > Out of curiosity, do you use the windowing feature to discard a few initial time steps?. No not directly. The idea and motivation was, that I didn't want to wait until the transient phase of the flow field is computed. So I use a precomputed restart file, which serves as a better ""inital guess"" than freestream values. Then, so the idea, the transient phase is skipped for the first design, and it is at least shortened for other designs. This way, we safe CPU time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627769844
https://github.com/su2code/SU2/pull/964#issuecomment-627769844:33,Testability,test,test,33,"> If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Ok!. ; > Out of curiosity, do you use the windowing feature to discard a few initial time steps?. No not directly. The idea and motivation was, that I didn't want to wait until the transient phase of the flow field is computed. So I use a precomputed restart file, which serves as a better ""inital guess"" than freestream values. Then, so the idea, the transient phase is skipped for the first design, and it is at least shortened for other designs. This way, we safe CPU time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627769844
https://github.com/su2code/SU2/issues/968#issuecomment-623100302:21,Availability,down,downloaded,21,"Hello,; Probably you downloaded the pre-compiled binaries and you don't have MPI installed on your machine (run ""which mpirun"" if it is empty you don't have it). ; Please use CFD online for this kind of question, as this is not really a code issue.; Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/968#issuecomment-623100302
https://github.com/su2code/SU2/issues/968#issuecomment-623100302:81,Deployability,install,installed,81,"Hello,; Probably you downloaded the pre-compiled binaries and you don't have MPI installed on your machine (run ""which mpirun"" if it is empty you don't have it). ; Please use CFD online for this kind of question, as this is not really a code issue.; Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/968#issuecomment-623100302
https://github.com/su2code/SU2/pull/969#issuecomment-625329082:298,Deployability,install,install,298,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082
https://github.com/su2code/SU2/pull/969#issuecomment-625329082:483,Deployability,install,install,483,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082
https://github.com/su2code/SU2/pull/969#issuecomment-625329082:150,Energy Efficiency,sustainab,sustainable,150,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082
https://github.com/su2code/SU2/pull/969#issuecomment-625329082:561,Modifiability,config,configure,561,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082
https://github.com/su2code/SU2/pull/969#issuecomment-625436086:798,Availability,mainten,maintenance,798,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086
https://github.com/su2code/SU2/pull/969#issuecomment-625436086:270,Integrability,rout,routines,270,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086
https://github.com/su2code/SU2/pull/969#issuecomment-625436086:171,Performance,load,loads,171,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086
https://github.com/su2code/SU2/pull/969#issuecomment-625436086:707,Performance,optimiz,optimization,707,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086
https://github.com/su2code/SU2/pull/969#issuecomment-625440605:67,Integrability,wrap,wrapping,67,"I understand.. some of the lines are going to look very ugly after wrapping to 80 column widths, etc, but it will also highlight these trouble spots. I see it as two orthogonal issues: (1) fix the formatting problems once and for all and have them automatically fixed in the future so we stop wasting time on it, and (2) we continue to fix the problem areas in the code structure as we go, which we will need to do anyway, regardless. For me, I think the benefits of (1) outweigh the negative of seeing some ugly code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625440605
https://github.com/su2code/SU2/issues/970#issuecomment-623585831:73,Performance,optimiz,optimization,73,I can submit a PR later this week addressing this issue. I've done shape optimization with inlet profiles before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-623585831
https://github.com/su2code/SU2/issues/970#issuecomment-623591047:55,Performance,optimiz,optimizations,55,"That will be great. Although I have been restarting my optimizations to work around this, I feel this fix is important.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-623591047
https://github.com/su2code/SU2/issues/970#issuecomment-626908235:84,Deployability,update,update,84,This works for a single case. I will try running a shape optimization with this and update this thread. It was a smart way of setting this. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-626908235
https://github.com/su2code/SU2/issues/970#issuecomment-626908235:57,Performance,optimiz,optimization,57,This works for a single case. I will try running a shape optimization with this and update this thread. It was a smart way of setting this. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-626908235
https://github.com/su2code/SU2/issues/970#issuecomment-627095055:207,Testability,test,tested,207,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055
https://github.com/su2code/SU2/issues/970#issuecomment-627095055:292,Testability,test,test,292,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055
https://github.com/su2code/SU2/issues/970#issuecomment-627095055:306,Testability,test,test,306,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055
https://github.com/su2code/SU2/issues/970#issuecomment-627095055:335,Testability,test,test,335,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055
https://github.com/su2code/SU2/issues/970#issuecomment-627095055:222,Usability,simpl,simple,222,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055
https://github.com/su2code/SU2/issues/970#issuecomment-628674077:86,Testability,test,test,86,@clarkpede Thanks for the fix. It is working as expected. I don't think any 'complex' test is required to test this. It is reading the inlet file name and linking it to all the desired folders. That's all that's required. Maybe you can open a pull request into develop for this.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628674077
https://github.com/su2code/SU2/issues/970#issuecomment-628674077:106,Testability,test,test,106,@clarkpede Thanks for the fix. It is working as expected. I don't think any 'complex' test is required to test this. It is reading the inlet file name and linking it to all the desired folders. That's all that's required. Maybe you can open a pull request into develop for this.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628674077
https://github.com/su2code/SU2/issues/970#issuecomment-628681947:41,Usability,simpl,simple,41,"By complex, I meant more complex than my simple toy problem. So if it's working for you, then that's what I was aiming for. I'll open a PR shortly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628681947
https://github.com/su2code/SU2/issues/971#issuecomment-623634949:45,Modifiability,config,config,45,"Hi, can you share the testcase? At least the config so we can try to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623634949
https://github.com/su2code/SU2/issues/971#issuecomment-623634949:22,Testability,test,testcase,22,"Hi, can you share the testcase? At least the config so we can try to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623634949
https://github.com/su2code/SU2/issues/971#issuecomment-623639143:129,Integrability,depend,dependent,129,"Thanks, looks like a straight forward setup (I was hoping for obscure features that do not get used often).; Is the problem case dependent (e.g. does it also happen with the quickstart case)? Or number of cores dependent?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623639143
https://github.com/su2code/SU2/issues/971#issuecomment-623639143:211,Integrability,depend,dependent,211,"Thanks, looks like a straight forward setup (I was hoping for obscure features that do not get used often).; Is the problem case dependent (e.g. does it also happen with the quickstart case)? Or number of cores dependent?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623639143
https://github.com/su2code/SU2/issues/971#issuecomment-623648419:84,Availability,error,error,84,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419
https://github.com/su2code/SU2/issues/971#issuecomment-623648419:182,Availability,error,error,182,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419
https://github.com/su2code/SU2/issues/971#issuecomment-623648419:15,Integrability,depend,dependent,15,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419
https://github.com/su2code/SU2/issues/971#issuecomment-623648419:90,Integrability,message,message,90,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419
https://github.com/su2code/SU2/issues/971#issuecomment-623648419:33,Testability,test,tested,33,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419
https://github.com/su2code/SU2/issues/971#issuecomment-623648419:188,Testability,log,log,188,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419
https://github.com/su2code/SU2/issues/971#issuecomment-623655467:82,Availability,error,error,82,"Thanks for checking, I'll try to get access to a machine with CentOS 8.; But that error seems to come from somewhere deep in the MPI... so not sure how much we can do about it. In the meantime you can always try different MPI version maybe 3.1.4?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623655467
https://github.com/su2code/SU2/issues/971#issuecomment-623655467:37,Security,access,access,37,"Thanks for checking, I'll try to get access to a machine with CentOS 8.; But that error seems to come from somewhere deep in the MPI... so not sure how much we can do about it. In the meantime you can always try different MPI version maybe 3.1.4?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623655467
https://github.com/su2code/SU2/issues/971#issuecomment-623656920:423,Availability,fault,fault,423,"I have not used ninja and meson in the past for building. As such, I should mention that there is a difference between the mpi implentations on the Cent7 (normal) and Cent8 (requires load) machines. On the Cent8 machines, the mpi implementation does require a load command prior to compilation; none of the other codes I work with have an issue with running post-compile (or they state that it is a missing file, not a seg fault). I'll check on library names etc to ensure nothing conflicts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623656920
https://github.com/su2code/SU2/issues/971#issuecomment-623656920:183,Performance,load,load,183,"I have not used ninja and meson in the past for building. As such, I should mention that there is a difference between the mpi implentations on the Cent7 (normal) and Cent8 (requires load) machines. On the Cent8 machines, the mpi implementation does require a load command prior to compilation; none of the other codes I work with have an issue with running post-compile (or they state that it is a missing file, not a seg fault). I'll check on library names etc to ensure nothing conflicts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623656920
https://github.com/su2code/SU2/issues/971#issuecomment-623656920:260,Performance,load,load,260,"I have not used ninja and meson in the past for building. As such, I should mention that there is a difference between the mpi implentations on the Cent7 (normal) and Cent8 (requires load) machines. On the Cent8 machines, the mpi implementation does require a load command prior to compilation; none of the other codes I work with have an issue with running post-compile (or they state that it is a missing file, not a seg fault). I'll check on library names etc to ensure nothing conflicts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623656920
https://github.com/su2code/SU2/issues/971#issuecomment-623657896:43,Security,sanitiz,sanitizer,43,Can you run it through valgrind or address sanitizer (with debug symbols) to give us more info about where the segfault occurs?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623657896
https://github.com/su2code/SU2/issues/971#issuecomment-623683360:438,Integrability,interface,interface,438,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360
https://github.com/su2code/SU2/issues/971#issuecomment-623683360:528,Integrability,interface,interface,528,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360
https://github.com/su2code/SU2/issues/971#issuecomment-623683360:400,Modifiability,config,config,400,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360
https://github.com/su2code/SU2/issues/971#issuecomment-623683360:17,Security,sanitiz,sanitizer,17,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360
https://github.com/su2code/SU2/issues/971#issuecomment-624211172:253,Testability,test,test,253,"It looks to me that in order to use Python 3.x on your machine, you need to use the command ""python3"", instead of just ""python."" In other words, on your system, the default ""python"" appears to point to Python 2.7, rather than Python 3.x. An easy way to test this is to just type ""python --version"" at your command prompt. If the result is Python 2.7.x, then try typing ""python3 --version""... If this is indeed the case, then try changing the first line of parallel_computation.py from:; `#!/usr/bin/env python`; to:; `#!/usr/bin/env python3`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624211172
https://github.com/su2code/SU2/issues/971#issuecomment-624222314:173,Availability,failure,failure,173,That did resolve the issue with it calling python2; I'm surprised there isn't a little compile-time check for that. Thank you. Unfortunately that has no effect on the write failure issue (as expected). It is quite odd that the ASCII write works correctly while the binary fails. It is also odd that no error information is given during the freeze while address sanitation is active.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624222314
https://github.com/su2code/SU2/issues/971#issuecomment-624222314:302,Availability,error,error,302,That did resolve the issue with it calling python2; I'm surprised there isn't a little compile-time check for that. Thank you. Unfortunately that has no effect on the write failure issue (as expected). It is quite odd that the ASCII write works correctly while the binary fails. It is also odd that no error information is given during the freeze while address sanitation is active.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624222314
https://github.com/su2code/SU2/issues/971#issuecomment-624226325:136,Availability,error,error,136,"Can you compile SU2 with debug flags (when using meson, specify ""--buildtype=debug"") and run without using the python wrapper? Does the error change?. Other quick questions, which I may have missed:. 1) How large is your case? What is the mesh size? ; 2) What are the specs of the machine(s) you're running on? How much RAM on each node, etc?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624226325
https://github.com/su2code/SU2/issues/971#issuecomment-624226325:118,Integrability,wrap,wrapper,118,"Can you compile SU2 with debug flags (when using meson, specify ""--buildtype=debug"") and run without using the python wrapper? Does the error change?. Other quick questions, which I may have missed:. 1) How large is your case? What is the mesh size? ; 2) What are the specs of the machine(s) you're running on? How much RAM on each node, etc?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624226325
https://github.com/su2code/SU2/issues/971#issuecomment-624242391:81,Integrability,wrap,wrapper,81,"Here's the crash info for the build with debug flags. No difference with/out the wrapper.; [QuickStartLog_Debug.txt](https://github.com/su2code/SU2/files/4583003/QuickStartLog_Debug.txt); I'm currently testing on the QuickStart case. I have 2 different types of machines which exhibit the same behavior. They are both using mellanox interconnects using their hpcx package and openmpi 4.0.2 (another system without mellanox but with openmpi 4.0.2 works fine; though that's also on Cent7 instead of Cent8). For the two types of systems with issues, one set is running with Intel Golds and 92GB/node and the other set is running on AMD EPYCs with 256GB/node. Interesting point; I can check with the OpenMPI folks on what might cause an external library (mellanox libraries) to cause file opening to fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624242391
https://github.com/su2code/SU2/issues/971#issuecomment-624242391:202,Testability,test,testing,202,"Here's the crash info for the build with debug flags. No difference with/out the wrapper.; [QuickStartLog_Debug.txt](https://github.com/su2code/SU2/files/4583003/QuickStartLog_Debug.txt); I'm currently testing on the QuickStart case. I have 2 different types of machines which exhibit the same behavior. They are both using mellanox interconnects using their hpcx package and openmpi 4.0.2 (another system without mellanox but with openmpi 4.0.2 works fine; though that's also on Cent7 instead of Cent8). For the two types of systems with issues, one set is running with Intel Golds and 92GB/node and the other set is running on AMD EPYCs with 256GB/node. Interesting point; I can check with the OpenMPI folks on what might cause an external library (mellanox libraries) to cause file opening to fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624242391
https://github.com/su2code/SU2/issues/971#issuecomment-624243375:133,Deployability,install,installing,133,"Yep, I think there is something going on with MPI-IO. Check if any special flags are necessary to enable MPI-IO for your system when installing the flavor of MPI that you are using.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624243375
https://github.com/su2code/SU2/issues/971#issuecomment-624457511:190,Deployability,configurat,configuration,190,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511
https://github.com/su2code/SU2/issues/971#issuecomment-624457511:134,Integrability,protocol,protocol,134,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511
https://github.com/su2code/SU2/issues/971#issuecomment-624457511:190,Modifiability,config,configuration,190,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511
https://github.com/su2code/SU2/issues/971#issuecomment-624457511:314,Safety,abort,aborts,314,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511
https://github.com/su2code/SU2/issues/971#issuecomment-624457511:460,Safety,abort,aborts,460,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511
https://github.com/su2code/SU2/issues/971#issuecomment-624645764:161,Testability,benchmark,benchmarks,161,"@erangit That agrees with my setup; the computational interconnect is rdma and the file systems are a mix of NFS and FUSE (issue on both). I have run additional benchmarks to ensure that MPI-IO is functional, it is. I ran NPB3.4 BT-IO and encountered no issues (utilizes MPI_File_open etc; link: https://www.nas.nasa.gov/publications/npb.html).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624645764
https://github.com/su2code/SU2/issues/971#issuecomment-627446658:29,Availability,avail,available,29,Would it be possible to make available the grid as well? Then we can try to reproduce the problem.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-627446658
https://github.com/su2code/SU2/issues/971#issuecomment-644788621:81,Testability,test,test,81,"As it appears that the developer group does not have a Cent8 cluster on which to test, is there a particular set of compiler inputs you would like me to use so that this issue can be resolved?; Reminder, no other code has any issues with our MPI setup, this includes benchmarks, other CFD codes, and mellanox test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644788621
https://github.com/su2code/SU2/issues/971#issuecomment-644788621:267,Testability,benchmark,benchmarks,267,"As it appears that the developer group does not have a Cent8 cluster on which to test, is there a particular set of compiler inputs you would like me to use so that this issue can be resolved?; Reminder, no other code has any issues with our MPI setup, this includes benchmarks, other CFD codes, and mellanox test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644788621
https://github.com/su2code/SU2/issues/971#issuecomment-644788621:309,Testability,test,test,309,"As it appears that the developer group does not have a Cent8 cluster on which to test, is there a particular set of compiler inputs you would like me to use so that this issue can be resolved?; Reminder, no other code has any issues with our MPI setup, this includes benchmarks, other CFD codes, and mellanox test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644788621
https://github.com/su2code/SU2/issues/971#issuecomment-644882758:566,Availability,error,error,566,"Similar to what @talbring mentions above, my guess is that it is having trouble opening a new file, which results in ierr != MPI_SUCCESS and trying to close the file again here:. https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_CFD/src/output/filewriter/CParallelFileWriter.cpp#L223. Can you try to comment out that line and run it again? That section of code is checking whether there are already files with the same name on the system and deleting them before writing a fresh copy. . Ideally, we would catch that ierr and check the error code from within MPI, since it might be a different issue entirely that is not allowing it to open new files. You can use something like the following to report the error (pseudo code - did not test):. ```; char err_string[MPI_MAX_ERROR_STRING];; int size_err_string, err_class;; MPI_Error_class(ierr, &err_class);; MPI_Error_string(err_class, err_string, &size_err_string);; cout << err_string << endl;; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644882758
https://github.com/su2code/SU2/issues/971#issuecomment-644882758:737,Availability,error,error,737,"Similar to what @talbring mentions above, my guess is that it is having trouble opening a new file, which results in ierr != MPI_SUCCESS and trying to close the file again here:. https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_CFD/src/output/filewriter/CParallelFileWriter.cpp#L223. Can you try to comment out that line and run it again? That section of code is checking whether there are already files with the same name on the system and deleting them before writing a fresh copy. . Ideally, we would catch that ierr and check the error code from within MPI, since it might be a different issue entirely that is not allowing it to open new files. You can use something like the following to report the error (pseudo code - did not test):. ```; char err_string[MPI_MAX_ERROR_STRING];; int size_err_string, err_class;; MPI_Error_class(ierr, &err_class);; MPI_Error_string(err_class, err_string, &size_err_string);; cout << err_string << endl;; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644882758
https://github.com/su2code/SU2/issues/971#issuecomment-644882758:766,Testability,test,test,766,"Similar to what @talbring mentions above, my guess is that it is having trouble opening a new file, which results in ierr != MPI_SUCCESS and trying to close the file again here:. https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_CFD/src/output/filewriter/CParallelFileWriter.cpp#L223. Can you try to comment out that line and run it again? That section of code is checking whether there are already files with the same name on the system and deleting them before writing a fresh copy. . Ideally, we would catch that ierr and check the error code from within MPI, since it might be a different issue entirely that is not allowing it to open new files. You can use something like the following to report the error (pseudo code - did not test):. ```; char err_string[MPI_MAX_ERROR_STRING];; int size_err_string, err_class;; MPI_Error_class(ierr, &err_class);; MPI_Error_string(err_class, err_string, &size_err_string);; cout << err_string << endl;; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644882758
https://github.com/su2code/SU2/issues/971#issuecomment-644968380:73,Deployability,update,updated,73,"Thank you, @economon. It turns out, that does indeed remove the issue. I updated to the latest version (7.0.5) at the same time. When checking the default behavior, the QuickStart case would run correctly the 1st time then it would fail if the restart file was not removed prior to the output stage of subsequent runs. Commenting out line 223 does appear to resolve the issues we have been encountering. Original:; Now it seems to get stuck (simply freezes for >60 sec) when writing surface_flow.vtu (from QuickStart). I don't suppose there's another flag like this in that code vicinity?. Update: This issue resolved itself. The file system was being taxed by other runs. Thank you all for your time!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644968380
https://github.com/su2code/SU2/issues/971#issuecomment-644968380:590,Deployability,Update,Update,590,"Thank you, @economon. It turns out, that does indeed remove the issue. I updated to the latest version (7.0.5) at the same time. When checking the default behavior, the QuickStart case would run correctly the 1st time then it would fail if the restart file was not removed prior to the output stage of subsequent runs. Commenting out line 223 does appear to resolve the issues we have been encountering. Original:; Now it seems to get stuck (simply freezes for >60 sec) when writing surface_flow.vtu (from QuickStart). I don't suppose there's another flag like this in that code vicinity?. Update: This issue resolved itself. The file system was being taxed by other runs. Thank you all for your time!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644968380
https://github.com/su2code/SU2/issues/971#issuecomment-644968380:442,Usability,simpl,simply,442,"Thank you, @economon. It turns out, that does indeed remove the issue. I updated to the latest version (7.0.5) at the same time. When checking the default behavior, the QuickStart case would run correctly the 1st time then it would fail if the restart file was not removed prior to the output stage of subsequent runs. Commenting out line 223 does appear to resolve the issues we have been encountering. Original:; Now it seems to get stuck (simply freezes for >60 sec) when writing surface_flow.vtu (from QuickStart). I don't suppose there's another flag like this in that code vicinity?. Update: This issue resolved itself. The file system was being taxed by other runs. Thank you all for your time!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644968380
https://github.com/su2code/SU2/issues/971#issuecomment-645563508:203,Availability,error,error,203,"Wonderful! Thanks for letting us know. It would be really great to understand what the underlying issue was, in case there is something we can do to improve SU2. If you have a minute and can get the MPI error string you were receiving before commenting the close command using the pseudocode above and post here, we would appreciate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-645563508
https://github.com/su2code/SU2/issues/971#issuecomment-645565897:26,Availability,error,error,26,"Sure thing! I believe the error strings you're asking for are those in contained in my posts on the 4th of May and the file included on May 5th. If you're looking for something else, please let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-645565897
https://github.com/su2code/SU2/issues/971#issuecomment-645749945:118,Availability,error,error,118,"If you could paste this code right before the MPI_File_close() that you commented and see if MPI reports a particular error before crashing, that would be helpful:; ```; char err_string[MPI_MAX_ERROR_STRING];; int size_err_string, err_class;; MPI_Error_class(ierr, &err_class);; MPI_Error_string(err_class, err_string, &size_err_string);; cout << err_string << endl;; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-645749945
https://github.com/su2code/SU2/issues/971#issuecomment-646020733:4,Availability,error,error,4,"The error is:; MPI_ERR_FILE_EXISTS: file exists alreay. and I just checked, the typo is exactly what it reported.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-646020733
https://github.com/su2code/SU2/issues/971#issuecomment-847891725:59,Safety,safe,safest,59,"Hmmm ok, indeed that region of code does not look like the safest thing in the world...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-847891725
https://github.com/su2code/SU2/issues/971#issuecomment-888494154:81,Deployability,update,updates,81,"adding a comment to prevent ""stale"" and ""closed"" status. I look forward to these updates being made; thank you",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-888494154
https://github.com/su2code/SU2/issues/971#issuecomment-894821584:200,Safety,risk,risk,200,"Right there seems to be no way to reproduce this, and I don't see anything inherently wrong with the code.; No one else has reported any similar issue.; I am glad you have a workaround but I will not risk applying it to the code because it does not sound safe (to delete without calling close).; I'm closing this, if you ever get to the root of what's going on please let us now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-894821584
https://github.com/su2code/SU2/issues/971#issuecomment-894821584:255,Safety,safe,safe,255,"Right there seems to be no way to reproduce this, and I don't see anything inherently wrong with the code.; No one else has reported any similar issue.; I am glad you have a workaround but I will not risk applying it to the code because it does not sound safe (to delete without calling close).; I'm closing this, if you ever get to the root of what's going on please let us now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-894821584
https://github.com/su2code/SU2/issues/971#issuecomment-1013138302:83,Availability,down,down,83,"To fill in more information in case anyone comes in from google (or wants to chase down a seemingly very rare problem):; The issue appears to be related to Mnlx_ofed and/or gluster. It has spanned two different OSes (Cent8 and Ubuntu 20) with the associated updates to the entire software stack.; As this fix works (despite how cringy it is to remove a ""close"" call), I will keep using that on our systems as it allows SU2 to function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-1013138302
https://github.com/su2code/SU2/issues/971#issuecomment-1013138302:258,Deployability,update,updates,258,"To fill in more information in case anyone comes in from google (or wants to chase down a seemingly very rare problem):; The issue appears to be related to Mnlx_ofed and/or gluster. It has spanned two different OSes (Cent8 and Ubuntu 20) with the associated updates to the entire software stack.; As this fix works (despite how cringy it is to remove a ""close"" call), I will keep using that on our systems as it allows SU2 to function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-1013138302
https://github.com/su2code/SU2/issues/972#issuecomment-624216670:54,Deployability,update,update,54,This bug should already be solved in 7.0.2 ... please update your branch.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972#issuecomment-624216670
https://github.com/su2code/SU2/issues/973#issuecomment-626357981:71,Usability,simpl,simple,71,"Hi,; So far as I can tell from the code, no.; It would however be very simple to hack that kind of feature, I can point you to the right places if you want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/973#issuecomment-626357981
https://github.com/su2code/SU2/issues/973#issuecomment-626360321:162,Usability,simpl,simple,162,"Thanks a lot @pcarruscag but for the moment I decided to use [NaSt3DGP](https://ins.uni-bonn.de/media/public/u/griebel/NaSt3DGP/index.html) instead. It is a very simple code that implements 3D incompressible NS with natural convection, and it can be very easily understood because it's really a very minimal implementation (parallelized, though). I'm closing this, although if you consider this feature would be of interest for SU2, don't hesitate to open this issue again, as a feature request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/973#issuecomment-626360321
https://github.com/su2code/SU2/issues/976#issuecomment-626400442:445,Modifiability,config,config,445,"In `CVolumetricMovement::SetBoundaryDisplacements` the periodic boundaries are left free, and so there is no guarantee that periodicity will be preserved. I don't use the optimization framework, but the default formulation is usually to minimize, i.e. you use a negative weight if you want to maximize, have you tried not setting the weight to -1?. If you want to perturb a single parameter you change one of the values in DV_VALUE. Attach your config...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626400442
https://github.com/su2code/SU2/issues/976#issuecomment-626400442:171,Performance,optimiz,optimization,171,"In `CVolumetricMovement::SetBoundaryDisplacements` the periodic boundaries are left free, and so there is no guarantee that periodicity will be preserved. I don't use the optimization framework, but the default formulation is usually to minimize, i.e. you use a negative weight if you want to maximize, have you tried not setting the weight to -1?. If you want to perturb a single parameter you change one of the values in DV_VALUE. Attach your config...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626400442
https://github.com/su2code/SU2/issues/976#issuecomment-626404968:438,Integrability,depend,depend,438,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968
https://github.com/su2code/SU2/issues/976#issuecomment-626404968:183,Modifiability,config,configs,183,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968
https://github.com/su2code/SU2/issues/976#issuecomment-626404968:485,Modifiability,config,config,485,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968
https://github.com/su2code/SU2/issues/976#issuecomment-626404968:42,Performance,optimiz,optimization,42,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968
https://github.com/su2code/SU2/issues/976#issuecomment-626404968:208,Performance,optimiz,optimization,208,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968
https://github.com/su2code/SU2/issues/976#issuecomment-626404968:400,Performance,optimiz,optimization,400,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968
https://github.com/su2code/SU2/issues/976#issuecomment-626799862:741,Integrability,depend,depends,741,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862
https://github.com/su2code/SU2/issues/976#issuecomment-626799862:836,Performance,perform,performing,836,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862
https://github.com/su2code/SU2/issues/976#issuecomment-626799862:853,Performance,optimiz,optimization,853,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862
https://github.com/su2code/SU2/issues/976#issuecomment-626799862:969,Performance,optimiz,optimization,969,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862
https://github.com/su2code/SU2/issues/976#issuecomment-626799862:138,Usability,simpl,simple,138,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862
https://github.com/su2code/SU2/issues/976#issuecomment-626855754:25,Usability,simpl,simpler,25,"@clarkpede I think it is simpler to lock the periodic boundaries. I can look into that if you can point me to it. I have been using BFGS but the DV_VALUE is always 0.001 in the config_DOT_AD files, even after 25 design iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626855754
https://github.com/su2code/SU2/issues/976#issuecomment-626856238:111,Modifiability,config,config,111,I don't have any geometric constraints (or definitions) hence SU2_GEO is not being called. You can look at the config file.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626856238
https://github.com/su2code/SU2/issues/976#issuecomment-628724163:384,Energy Efficiency,reduce,reduce,384,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163
https://github.com/su2code/SU2/issues/976#issuecomment-628724163:1013,Modifiability,variab,variable,1013,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163
https://github.com/su2code/SU2/issues/976#issuecomment-628724163:353,Performance,optimiz,optimizer,353,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163
https://github.com/su2code/SU2/issues/976#issuecomment-628724163:591,Usability,intuit,intuitive,591,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163
https://github.com/su2code/SU2/issues/977#issuecomment-626871785:67,Integrability,depend,depends,67,"The degrees are specified by ""logic"" axis (i j k), i.e. the result depends in the order you specify the corners in FFD_DEFINITION, e.g. your geometry has the span aligned with X, whereas in the first image the span is aligned with Y. Personally I find it confusing too, I just end up swapping things around until I get what I want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626871785
https://github.com/su2code/SU2/issues/977#issuecomment-626871785:30,Testability,log,logic,30,"The degrees are specified by ""logic"" axis (i j k), i.e. the result depends in the order you specify the corners in FFD_DEFINITION, e.g. your geometry has the span aligned with X, whereas in the first image the span is aligned with Y. Personally I find it confusing too, I just end up swapping things around until I get what I want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626871785
https://github.com/su2code/SU2/issues/977#issuecomment-626875076:148,Deployability,update,updated,148,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076
https://github.com/su2code/SU2/issues/977#issuecomment-626875076:222,Testability,log,logic,222,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076
https://github.com/su2code/SU2/issues/977#issuecomment-626875076:243,Usability,simpl,simple,243,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076
https://github.com/su2code/SU2/issues/977#issuecomment-626875076:275,Usability,simpl,simpler,275,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076
https://github.com/su2code/SU2/issues/977#issuecomment-626881321:303,Usability,Simpl,Simpler,303,"If the box is axis aligned the following mnemonic works:; ""i"" is the ""fast"" coordinate, if X is the coordinate that changes in FFD_DEFINITION between the first and second corner points then ""i"" : ""X"";; ""k"" is the ""slow"" coordinate, it maps to the direction between the first 4 and last 4 corner points. Simpler yes, versatile not so much, what would you do if your geometry was not aligned?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626881321
https://github.com/su2code/SU2/issues/977#issuecomment-628732284:321,Performance,optimiz,optimizer,321,"Looking at `CSurfaceMovement::SetFFDCPChange` in `Common/src/grid_movement_structure.cpp`, it looks like it would move by 0.001 in all directions. The movement vector would be [0.001, 0.001, 0.001]. . Like @pcarruscag said, we usually only move in one of the directions. If you want to move in all directions and let the optimizer control them independently, you could define multiple DVs for the same control point: . DEFINITION_DV= ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 0.0, 0.0, 1.0 ). But I would be careful when doing this. It can cause some wonky-looking deformations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628732284
https://github.com/su2code/SU2/issues/977#issuecomment-628737617:470,Performance,optimiz,optimizer,470,"> `DEFINITION_DV= ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 1.0, 1.0, 1.0 )`. This constrains the control point to move in a direction such that `dx = dy = dz` since the `DV_VALUE` would be applied to all directions equally. It will also project the adjoint gradients along that direction. . If you specify it as 3 different DVs, they will have three different `DV_VALUE`s, one for each direction. The gradients would be projected in each direction individually, giving the optimizer more freedom to move the point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628737617
https://github.com/su2code/SU2/issues/977#issuecomment-628743170:88,Performance,optimiz,optimizer,88,The `DV_VALUE` should be different across design iterations since this is determined by optimizer. . Is this the case in the config_DEF.cfg in the DEFORM folder?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628743170
https://github.com/su2code/SU2/issues/977#issuecomment-628744629:102,Modifiability,variab,variables,102,Oh yes you are right. I was looking in ADJOINT_/config_DOT_AD.cfg. That shows as 0.001 for all design variables.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628744629
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:234,Deployability,install,installing,234,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:278,Deployability,update,update,278,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:301,Deployability,install,installation,301,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:404,Deployability,install,installed,404,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:465,Deployability,install,installation,465,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:625,Deployability,install,installed,625,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:104,Modifiability,portab,portable,104,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:891,Modifiability,variab,variables,891,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:453,Security,access,access,453,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626952122:540,Security,password,password,540,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122
https://github.com/su2code/SU2/issues/979#issuecomment-626970877:39,Modifiability,portab,portable,39,"Hello @pcarruscag, what do you mean by portable name? Do you mean a variable on Linux to determine the user name? If so, then it is `$USER`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626970877
https://github.com/su2code/SU2/issues/979#issuecomment-626970877:68,Modifiability,variab,variable,68,"Hello @pcarruscag, what do you mean by portable name? Do you mean a variable on Linux to determine the user name? If so, then it is `$USER`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626970877
https://github.com/su2code/SU2/pull/981#issuecomment-627125934:113,Availability,avail,available,113,"> And #include <array> worked for me. Didn't think too much of it, but I also don't have a PC or; >Linux readily available to test on another OS. I assumed it's a clang thing. As far as I can tell, the only place were the #include <array> statement is found is in CConfig.hpp. And that include file is not included directly in adt_structure.hpp, so it seems logical that you get this warning. However, it compiles just fine on Linux, so maybe that is done implicitly? Anyway, it does not hurt to add the #include <array> statement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981#issuecomment-627125934
https://github.com/su2code/SU2/pull/981#issuecomment-627125934:126,Testability,test,test,126,"> And #include <array> worked for me. Didn't think too much of it, but I also don't have a PC or; >Linux readily available to test on another OS. I assumed it's a clang thing. As far as I can tell, the only place were the #include <array> statement is found is in CConfig.hpp. And that include file is not included directly in adt_structure.hpp, so it seems logical that you get this warning. However, it compiles just fine on Linux, so maybe that is done implicitly? Anyway, it does not hurt to add the #include <array> statement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981#issuecomment-627125934
https://github.com/su2code/SU2/pull/981#issuecomment-627125934:358,Testability,log,logical,358,"> And #include <array> worked for me. Didn't think too much of it, but I also don't have a PC or; >Linux readily available to test on another OS. I assumed it's a clang thing. As far as I can tell, the only place were the #include <array> statement is found is in CConfig.hpp. And that include file is not included directly in adt_structure.hpp, so it seems logical that you get this warning. However, it compiles just fine on Linux, so maybe that is done implicitly? Anyway, it does not hurt to add the #include <array> statement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981#issuecomment-627125934
https://github.com/su2code/SU2/pull/983#issuecomment-629117883:142,Safety,avoid,avoid,142,"Welcome to SU2 and thank you for fixing these issues :+1: . Some of the files you changed are removed in #902, please revert those changes to avoid merge conflicts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-629117883
https://github.com/su2code/SU2/pull/983#issuecomment-629634439:288,Safety,safe,safe,288,"I removed from pull request the files removed in another pull request. I also tried to fix some PEP8 issues including ""useless `return`"" in one function.; The remain CodeFactor issues:; * `Use of eval (eval-used)` - there is check for `window` is presented in allowed value list, ; so it safe to eval this value currently.; * `Wildcard import math (wildcard-import)` - I have no idea what math expressions are used in this file. ; Maybe it could be removed. As I don't know if it will brake something in case of replacing it with `import math` instead of `from math import *`.; * `Redefining built-in 'pow' (redefined-builtin)` - is related to previous issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-629634439
https://github.com/su2code/SU2/pull/983#issuecomment-660351424:48,Availability,error,errors,48,"@talbring any way to bypass codefactor when the errors are not due to the changes introduced in the PR?. Edit: Nevermind, it's passing now, you should be able to merge after the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-660351424
https://github.com/su2code/SU2/pull/983#issuecomment-660351424:178,Testability,test,tests,178,"@talbring any way to bypass codefactor when the errors are not due to the changes introduced in the PR?. Edit: Nevermind, it's passing now, you should be able to merge after the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-660351424
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:783,Deployability,update,updated,783,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:232,Modifiability,variab,variables,232,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:390,Modifiability,variab,variables,390,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:42,Performance,optimiz,optimization,42,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:205,Performance,optimiz,optimizer,205,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:303,Performance,optimiz,optimization,303,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:455,Performance,optimiz,optimizer,455,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:574,Performance,optimiz,optimizer,574,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628714360:1103,Performance,optimiz,optimization,1103,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360
https://github.com/su2code/SU2/issues/984#issuecomment-628725910:309,Energy Efficiency,reduce,reduce,309,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910
https://github.com/su2code/SU2/issues/984#issuecomment-628725910:134,Modifiability,variab,variables,134,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910
https://github.com/su2code/SU2/issues/984#issuecomment-628725910:175,Modifiability,variab,variables,175,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910
https://github.com/su2code/SU2/issues/984#issuecomment-628725910:226,Performance,optimiz,optimization,226,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910
https://github.com/su2code/SU2/issues/984#issuecomment-628727533:109,Performance,optimiz,optimizer,109,"Nah, I usually put in all the control points. It doesn't increase the computation time significantly and the optimizer should be able to handle that many control points.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628727533
https://github.com/su2code/SU2/issues/984#issuecomment-628729111:31,Performance,optimiz,optimizer,31,"I always fix one point, so the optimizer doesn't take the geometry for a walk.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628729111
https://github.com/su2code/SU2/issues/984#issuecomment-628759102:27,Energy Efficiency,reduce,reduces,27,"Not sure what you mean. It reduces the objective function. This could be by small values, or by orders of magnitude, if such a reduction is possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628759102
https://github.com/su2code/SU2/issues/986#issuecomment-628700251:234,Availability,toler,tolerance,234,"You should be able to link the two faces in Pointwise. Then Pointwise will make a connection for you and you won't have to name an extra unspecified marker. Usually Pointwise does this automatically, make sure you have the sufficient tolerance set in Pointwise if you are importing your mesh from somewhere else.; You do not need to name the connections.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-628700251
https://github.com/su2code/SU2/issues/986#issuecomment-628770758:57,Safety,avoid,avoid,57,"Why are you defining an internal marker? I always try to avoid having undefined faces in my mesh. If you are linking the face your connectivity will be different than when you are not linking the faces. I don't know how Pointwise does it, but that's my guess.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-628770758
https://github.com/su2code/SU2/issues/986#issuecomment-628781294:416,Usability,simpl,simply,416,">Why are you defining an internal marker?. Haha. Initially, I thought by creating a dummy marker inside my domain and calling it ""INTERNAL"", I can output solution at any desired face in the solution_flow file without having to deal with post processing software. This is of course possible in Paraview or Tecplot, but I figured this may be more automatic and perhaps easier especially with curved surfaces. Now I am simply curious as to what is happening with the internal markers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-628781294
https://github.com/su2code/SU2/issues/986#issuecomment-629166352:247,Availability,toler,tolerance,247,"I tried the case from @pcarruscag and it indeed works. However, when I extrude the same mesh to 3-D by 5 cells in Pointwise I don't see the correct solution. I created the new interior face by dividing the existing mesh in the middle to avoid any tolerance issues when joining two disjoint meshes. I don't see any issues with mesh quality. Even though only one surface exists. the nodes are duplicated, but that is how Pointwise writes the mesh file when creating an internal face in 3D. If I try to avoid this duplication, there is an additional unspecified marker written. This duplication happens only on the interior of the face and not on the perimeter of the marker. . Also, I found this forum post about nodes being written twice(https://www.cfd-online.com/Forums/pointwise/171862-excluding-domain-boundaries-getting-written-twice.html) and it appears that Pointwise always writes duplicate nodes when exporting meshes with internal boundary markers. I am not quite sure if this now a Pointwise issue or SU2 one anymore.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629166352
https://github.com/su2code/SU2/issues/986#issuecomment-629166352:237,Safety,avoid,avoid,237,"I tried the case from @pcarruscag and it indeed works. However, when I extrude the same mesh to 3-D by 5 cells in Pointwise I don't see the correct solution. I created the new interior face by dividing the existing mesh in the middle to avoid any tolerance issues when joining two disjoint meshes. I don't see any issues with mesh quality. Even though only one surface exists. the nodes are duplicated, but that is how Pointwise writes the mesh file when creating an internal face in 3D. If I try to avoid this duplication, there is an additional unspecified marker written. This duplication happens only on the interior of the face and not on the perimeter of the marker. . Also, I found this forum post about nodes being written twice(https://www.cfd-online.com/Forums/pointwise/171862-excluding-domain-boundaries-getting-written-twice.html) and it appears that Pointwise always writes duplicate nodes when exporting meshes with internal boundary markers. I am not quite sure if this now a Pointwise issue or SU2 one anymore.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629166352
https://github.com/su2code/SU2/issues/986#issuecomment-629166352:500,Safety,avoid,avoid,500,"I tried the case from @pcarruscag and it indeed works. However, when I extrude the same mesh to 3-D by 5 cells in Pointwise I don't see the correct solution. I created the new interior face by dividing the existing mesh in the middle to avoid any tolerance issues when joining two disjoint meshes. I don't see any issues with mesh quality. Even though only one surface exists. the nodes are duplicated, but that is how Pointwise writes the mesh file when creating an internal face in 3D. If I try to avoid this duplication, there is an additional unspecified marker written. This duplication happens only on the interior of the face and not on the perimeter of the marker. . Also, I found this forum post about nodes being written twice(https://www.cfd-online.com/Forums/pointwise/171862-excluding-domain-boundaries-getting-written-twice.html) and it appears that Pointwise always writes duplicate nodes when exporting meshes with internal boundary markers. I am not quite sure if this now a Pointwise issue or SU2 one anymore.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629166352
https://github.com/su2code/SU2/issues/986#issuecomment-629171020:190,Integrability,interface,interface,190,"When you create another boundary do you create a new unspecified marker or do you use the connections as a marker? In the former case, the connectivity will be affected, as the nodes at the interface should be linked. However, if you use the connection as an additional marker, it should work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629171020
https://github.com/su2code/SU2/issues/986#issuecomment-629182862:628,Usability,simpl,simply,628,"I use the connection as the additional marker. Since the connection is two sided, nodes are duplicated. This is quote from the forum post I linked earlier . >....creates unique (yet coincident) points for each ""side"" of the domain.... The quote was about Gmsh exporter and not SU2, but later on they say this is the case for all exporters except Fluent. These duplicated nodes affect the mass and momentum balance because they each carry information about the neighbors on their respective side only. . This might not be a problem if we were to apply a strong boundary condition like a wall because the dirichlet condition will simply overwrite any residuals and apply the appropriate value to both the nodes. However when used as an internal marker or any other weak boundary condition, the duplicate nodes each carry part of the residuals and if they don't communicate with each other an imbalance will occur. At the moment, it appears they do not communicate with each other.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629182862
https://github.com/su2code/SU2/issues/986#issuecomment-1029888609:529,Availability,error,error,529,No. I tried a couple of things but ran into problems with both of them and I haven't done anything about it since. The first was to use one of the old MPI routines (like Set_MPI_ActDisk) to couple the two faces so they can communicate the residuals with each other. This was quite cumbersome and I did not want to copy paste large chunks of code. The other one was to set the two faces as periodic boundaries with zero distance between them but if I remember correctly this did not work because the MatchPeriodic routine gave an error back then. Maybe I am misremembering and it might work now or maybe we need to create a new MatchInternal routine to make it work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609
https://github.com/su2code/SU2/issues/986#issuecomment-1029888609:155,Integrability,rout,routines,155,No. I tried a couple of things but ran into problems with both of them and I haven't done anything about it since. The first was to use one of the old MPI routines (like Set_MPI_ActDisk) to couple the two faces so they can communicate the residuals with each other. This was quite cumbersome and I did not want to copy paste large chunks of code. The other one was to set the two faces as periodic boundaries with zero distance between them but if I remember correctly this did not work because the MatchPeriodic routine gave an error back then. Maybe I am misremembering and it might work now or maybe we need to create a new MatchInternal routine to make it work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609
https://github.com/su2code/SU2/issues/986#issuecomment-1029888609:513,Integrability,rout,routine,513,No. I tried a couple of things but ran into problems with both of them and I haven't done anything about it since. The first was to use one of the old MPI routines (like Set_MPI_ActDisk) to couple the two faces so they can communicate the residuals with each other. This was quite cumbersome and I did not want to copy paste large chunks of code. The other one was to set the two faces as periodic boundaries with zero distance between them but if I remember correctly this did not work because the MatchPeriodic routine gave an error back then. Maybe I am misremembering and it might work now or maybe we need to create a new MatchInternal routine to make it work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609
https://github.com/su2code/SU2/issues/986#issuecomment-1029888609:641,Integrability,rout,routine,641,No. I tried a couple of things but ran into problems with both of them and I haven't done anything about it since. The first was to use one of the old MPI routines (like Set_MPI_ActDisk) to couple the two faces so they can communicate the residuals with each other. This was quite cumbersome and I did not want to copy paste large chunks of code. The other one was to set the two faces as periodic boundaries with zero distance between them but if I remember correctly this did not work because the MatchPeriodic routine gave an error back then. Maybe I am misremembering and it might work now or maybe we need to create a new MatchInternal routine to make it work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609
https://github.com/su2code/SU2/issues/990#issuecomment-630388452:32,Integrability,rout,routine,32,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452
https://github.com/su2code/SU2/issues/990#issuecomment-630388452:181,Integrability,rout,routine,181,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452
https://github.com/su2code/SU2/issues/990#issuecomment-630388452:319,Testability,test,test,319,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452
https://github.com/su2code/SU2/issues/990#issuecomment-630388452:337,Testability,Test,TestCases,337,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452
https://github.com/su2code/SU2/issues/990#issuecomment-630394537:277,Availability,fault,fault,277,"Yes, I am using periodic boundaries. However, the points are matched without any issue during initialization so I don't think the issue is there. Turbomachinery cases are working but the issue is with MPI where after a certain number of cores a case may encounter segmentation fault. I cannot predict beforehand at what number of cores it will fail, or if it will even fail or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630394537
https://github.com/su2code/SU2/issues/990#issuecomment-630394537:293,Safety,predict,predict,293,"Yes, I am using periodic boundaries. However, the points are matched without any issue during initialization so I don't think the issue is there. Turbomachinery cases are working but the issue is with MPI where after a certain number of cores a case may encounter segmentation fault. I cannot predict beforehand at what number of cores it will fail, or if it will even fail or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630394537
https://github.com/su2code/SU2/issues/990#issuecomment-630646560:83,Availability,error,error,83,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560
https://github.com/su2code/SU2/issues/990#issuecomment-630646560:471,Availability,error,errors,471,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560
https://github.com/su2code/SU2/issues/990#issuecomment-630646560:26,Integrability,depend,depended,26,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560
https://github.com/su2code/SU2/issues/990#issuecomment-630646560:286,Modifiability,config,config,286,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560
https://github.com/su2code/SU2/issues/990#issuecomment-630646560:345,Testability,test,testcases,345,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560
https://github.com/su2code/SU2/issues/990#issuecomment-641611543:208,Availability,down,down,208,"@stephansmit Is it possible for you to share what you did? I looked at the code and don't want to mess with the MPI stuff as I don't know about it. Currently, I am limited to 3 cores which is greatly slowing down the optimizations. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-641611543
https://github.com/su2code/SU2/issues/990#issuecomment-641611543:217,Performance,optimiz,optimizations,217,"@stephansmit Is it possible for you to share what you did? I looked at the code and don't want to mess with the MPI stuff as I don't know about it. Currently, I am limited to 3 cores which is greatly slowing down the optimizations. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-641611543
https://github.com/su2code/SU2/issues/990#issuecomment-643408835:91,Availability,down,downstream,91,I didn't want to dive into hardcoding nSpan that is related to the MPI and have unintended downstream effects.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-643408835
https://github.com/su2code/SU2/issues/990#issuecomment-645074820:66,Availability,down,downgraded,66,I was having several other issues with optimization in v7. I have downgraded to v6 where none of these issues are there. I will not need a resolution for this at the moment. Thanks! @stephansmit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-645074820
https://github.com/su2code/SU2/issues/990#issuecomment-645074820:39,Performance,optimiz,optimization,39,I was having several other issues with optimization in v7. I have downgraded to v6 where none of these issues are there. I will not need a resolution for this at the moment. Thanks! @stephansmit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-645074820
https://github.com/su2code/SU2/issues/990#issuecomment-789951580:211,Availability,fault,fault,211,"I am having a similar issue with V71 where in the turbo-machinery pre-processing part it incorrectly calculates the number of spanwise sections when I use more than 6 processors and then it gives a segmentation fault. I can run it for less than 6 processors, but when I increase the processor (> 6) count I notice the incorrect spanwise sections and then there is segmentation fault or MPI fatal error. ; Is there any solution to this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-789951580
https://github.com/su2code/SU2/issues/990#issuecomment-789951580:377,Availability,fault,fault,377,"I am having a similar issue with V71 where in the turbo-machinery pre-processing part it incorrectly calculates the number of spanwise sections when I use more than 6 processors and then it gives a segmentation fault. I can run it for less than 6 processors, but when I increase the processor (> 6) count I notice the incorrect spanwise sections and then there is segmentation fault or MPI fatal error. ; Is there any solution to this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-789951580
https://github.com/su2code/SU2/issues/990#issuecomment-789951580:396,Availability,error,error,396,"I am having a similar issue with V71 where in the turbo-machinery pre-processing part it incorrectly calculates the number of spanwise sections when I use more than 6 processors and then it gives a segmentation fault. I can run it for less than 6 processors, but when I increase the processor (> 6) count I notice the incorrect spanwise sections and then there is segmentation fault or MPI fatal error. ; Is there any solution to this problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-789951580
https://github.com/su2code/SU2/issues/991#issuecomment-630316097:286,Deployability,install,install,286,"Hello @aditya12398,. I'm running an almost identical system as you (Arch Linux, gcc, openmpi, su2 v 7.0.4), and I do not have issues. I suspect the problem may be with your use of the `-Denable-openblas=true` flag. Can you try compiling without this? If you don't specify Openblas, the install will use the standard blas/lapack libraries. Also, can you post the output of `pacman -Qi blas lapack openblas`, just to make sure those packages are installed correctly on your machine?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-630316097
https://github.com/su2code/SU2/issues/991#issuecomment-630316097:444,Deployability,install,installed,444,"Hello @aditya12398,. I'm running an almost identical system as you (Arch Linux, gcc, openmpi, su2 v 7.0.4), and I do not have issues. I suspect the problem may be with your use of the `-Denable-openblas=true` flag. Can you try compiling without this? If you don't specify Openblas, the install will use the standard blas/lapack libraries. Also, can you post the output of `pacman -Qi blas lapack openblas`, just to make sure those packages are installed correctly on your machine?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-630316097
https://github.com/su2code/SU2/issues/991#issuecomment-630345385:163,Deployability,install,installed,163,"@pcarruscag, Thanks for clarifying! @aditya12398, it will still be useful to see whether SU2 compiles without `-Denable-openblas=true`, and what packages you have installed on your system. Also, an aside, you should be able to fix the warning about re2c by installing that package from the arch repositories: `pacman -S re2c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-630345385
https://github.com/su2code/SU2/issues/991#issuecomment-630345385:257,Deployability,install,installing,257,"@pcarruscag, Thanks for clarifying! @aditya12398, it will still be useful to see whether SU2 compiles without `-Denable-openblas=true`, and what packages you have installed on your system. Also, an aside, you should be able to fix the warning about re2c by installing that package from the arch repositories: `pacman -S re2c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-630345385
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2309,Availability,error,error,2309,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2608,Availability,avail,available,2608,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:190,Deployability,install,installed,190,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:258,Deployability,install,install,258,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:716,Deployability,Install,Installed,716,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:840,Deployability,Install,Install,840,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:888,Deployability,Install,Install,888,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:916,Deployability,install,installed,916,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:927,Deployability,Install,Install,927,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1302,Deployability,Install,Installed,1302,s which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1424,Deployability,Install,Install,1424," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1472,Deployability,Install,Install,1472," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1489,Deployability,Install,Installed,1489," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1536,Deployability,Install,Install,1536," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1926,Deployability,Install,Installed,1926,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2050,Deployability,Install,Install,2050,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2098,Deployability,Install,Install,2098,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2126,Deployability,install,installed,2126,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2137,Deployability,Install,Install,2137,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2653,Deployability,install,install,2653,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:588,Integrability,Depend,Depends,588,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1157,Integrability,Depend,Depends,1157,s which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1504,Integrability,depend,dependency,1504," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1798,Integrability,Depend,Depends,1798,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2315,Integrability,message,message,2315,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:426,Performance,optimiz,optimized,426,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1636,Performance,optimiz,optimized,1636,"lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:948,Security,Validat,Validated,948,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1557,Security,Validat,Validated,1557," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2158,Security,Validat,Validated,2158,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2370,Testability,log,logfile,2370,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2445,Testability,log,log,2445,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271
https://github.com/su2code/SU2/issues/991#issuecomment-631167702:300,Deployability,release,release-build,300,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702
https://github.com/su2code/SU2/issues/991#issuecomment-631167702:619,Integrability,wrap,wrapper,619,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702
https://github.com/su2code/SU2/issues/991#issuecomment-631167702:175,Modifiability,config,configure,175,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702
https://github.com/su2code/SU2/issues/991#issuecomment-631259592:150,Testability,log,log,150,"Hey,; I tried to compile it with the changes from fix_python_3.8 branch. Unfortunately the build failed again at the same point. I have attached the [log file](https://github.com/su2code/SU2/files/4654939/su2_build_NoOpenBlas_2.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631259592
https://github.com/su2code/SU2/issues/991#issuecomment-631259592:228,Testability,log,log,228,"Hey,; I tried to compile it with the changes from fix_python_3.8 branch. Unfortunately the build failed again at the same point. I have attached the [log file](https://github.com/su2code/SU2/files/4654939/su2_build_NoOpenBlas_2.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631259592
https://github.com/su2code/SU2/issues/991#issuecomment-631266692:160,Availability,down,downloads,160,"Hello... one more thing. Do you have the meson and ninja packages installed on your system? If so, can you try using those, instead of the meson/ninja that SU2 downloads and builds?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631266692
https://github.com/su2code/SU2/issues/991#issuecomment-631266692:66,Deployability,install,installed,66,"Hello... one more thing. Do you have the meson and ninja packages installed on your system? If so, can you try using those, instead of the meson/ninja that SU2 downloads and builds?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631266692
https://github.com/su2code/SU2/issues/991#issuecomment-631274168:109,Security,password,password,109,"I do have them:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ sudo pacman -S --needed meson ninja; [sudo] password for slimshady: ; warning: meson-0.53.2-1 is up to date -- skipping; warning: ninja-1.10.0-1 is up to date -- skipping; there is nothing to do; slimshady@arch-linux-hp-probook-g3-450: ~$ ; ```. How do I use them to build it? Sorry if this is a noob question, haha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631274168
https://github.com/su2code/SU2/issues/991#issuecomment-631584658:509,Availability,error,errors,509,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658
https://github.com/su2code/SU2/issues/991#issuecomment-631584658:585,Availability,error,errors,585,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658
https://github.com/su2code/SU2/issues/991#issuecomment-631584658:334,Deployability,install,install,334,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658
https://github.com/su2code/SU2/issues/991#issuecomment-631584658:371,Deployability,install,install,371,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658
https://github.com/su2code/SU2/issues/991#issuecomment-631584658:344,Usability,simpl,simply,344,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:38,Availability,down,downloading,38,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:380,Availability,down,downloading,380,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:54,Deployability,install,installing,54,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:219,Deployability,update,update,219,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:304,Deployability,release,release,304,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:348,Deployability,update,update,348,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631593655:478,Modifiability,variab,variable,478,"I believe I have the solution. SU2 is downloading and installing a fixed version of meson, which is now outdated. I believe this is set by the `sha_version_meson` in the `init.py` file in the meson_scripts folder?. The update to meson that accounts for Python3.8 was made in December, which is after the release of the version SU2 is using. Can we update the meson version we are downloading and using with `./meson.py`? Is this as easy as just changing the `sha_version_meson` variable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631593655
https://github.com/su2code/SU2/issues/991#issuecomment-631596300:20,Deployability,update,update,20,@GomerOfDoom We can update the meson version before the next release. . You can just checkout whatever commit/branch you want to have in `externals/meson/`. Then change also the `sha_version_meson` accordingly for the fall back solution to work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631596300
https://github.com/su2code/SU2/issues/991#issuecomment-631596300:61,Deployability,release,release,61,@GomerOfDoom We can update the meson version before the next release. . You can just checkout whatever commit/branch you want to have in `externals/meson/`. Then change also the `sha_version_meson` accordingly for the fall back solution to work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631596300
https://github.com/su2code/SU2/issues/991#issuecomment-631598702:109,Availability,down,downloaded,109,"Hi @talbring , I think what I'm a bit confused about is that, from a clean SU2, the version of meson that is downloaded is set (which needs to be updated). Why does SU2 not just pull the latest, and where is this behavior set?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631598702
https://github.com/su2code/SU2/issues/991#issuecomment-631598702:146,Deployability,update,updated,146,"Hi @talbring , I think what I'm a bit confused about is that, from a clean SU2, the version of meson that is downloaded is set (which needs to be updated). Why does SU2 not just pull the latest, and where is this behavior set?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631598702
https://github.com/su2code/SU2/issues/991#issuecomment-631609634:219,Deployability,update,update,219,I think always pointing to a version that we know works for the majority of cases is better than when the build system suddenly breaks for everybody because some syntax has changed for the *.build files because of some update in the latest version of meson ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631609634
https://github.com/su2code/SU2/issues/991#issuecomment-631809381:136,Availability,error,error,136,"So, I tried what @GomerOfDoom suggested and I was able to build SU2 using my system's meson and ninja packages. It first failed with an error that `externals/codi` is missing so I ran the `meson.py build <arguments>` script till it builds ninja and the stopped it, then ran `meson build` with the same arguments. After that I did `ninja -j4 -C build install` instead of `./ninja` and now its done. However, I am still not able to build it with openblas and I would like to have that functionality.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631809381
https://github.com/su2code/SU2/issues/991#issuecomment-631809381:350,Deployability,install,install,350,"So, I tried what @GomerOfDoom suggested and I was able to build SU2 using my system's meson and ninja packages. It first failed with an error that `externals/codi` is missing so I ran the `meson.py build <arguments>` script till it builds ninja and the stopped it, then ran `meson build` with the same arguments. After that I did `ninja -j4 -C build install` instead of `./ninja` and now its done. However, I am still not able to build it with openblas and I would like to have that functionality.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631809381
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:6005,Availability,error,error,6005,"erPackages/SU2_NEW/build/externals/cgns -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/externals/metis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/externals/parmetis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/externals/tecio/teciompisrc -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/Common/src; /usr/bin/ld: Common/src/libSU2Common.a(fem_geometry_structure.cpp.o): in function `CMeshFEM_DG::MetricTermsVolumeElements(CConfig*)':; fem_geometry_structure.cpp:(.text+0xdcbc): undefined reference to `dpotrf_'; /usr/bin/ld: fem_geometry_structure.cpp:(.text+0xe015): undefined reference to `dpotri_'; /usr/bin/ld: Common/src/libSU2Common.a(wall_model.cpp.o): in function `CWallModel1DEQ::WallShearStressAndHeatFlux(double, double, double, double, double, bool, double, bool, CFluidModel*, double&, double&, double&, double&)':; wall_model.cpp:(.text+0x124f): undefined reference to `dgtsv_'; /usr/bin/ld: wall_model.cpp:(.text+0x19fb): undefined reference to `dgtsv_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_sytri()':; CSymmetricMatrix.cpp:(.text+0x15c): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x1d5): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x205): undefined reference to `dsytri_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_potri()':; CSymmetricMatrix.cpp:(.text+0x593): undefined reference to `dpotrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x6c6): undefined reference to `dpotri_'; collect2: error: ld returned 1 exit status; [572/870] Compiling C++ object 'SU2_CFD/src/37e1b17@@SU2core_AD@sta/fluid_model_ppr.cpp.o'.; ninja: build stopped: subcommand failed.; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ echo $PKG_CONFIG_PATH ; :/lib/pkgconfig:/usr/lib/pkgconfig; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:6223,Availability,echo,echo,6223,"erPackages/SU2_NEW/build/externals/cgns -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/externals/metis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/externals/parmetis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/externals/tecio/teciompisrc -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_NEW/build/Common/src; /usr/bin/ld: Common/src/libSU2Common.a(fem_geometry_structure.cpp.o): in function `CMeshFEM_DG::MetricTermsVolumeElements(CConfig*)':; fem_geometry_structure.cpp:(.text+0xdcbc): undefined reference to `dpotrf_'; /usr/bin/ld: fem_geometry_structure.cpp:(.text+0xe015): undefined reference to `dpotri_'; /usr/bin/ld: Common/src/libSU2Common.a(wall_model.cpp.o): in function `CWallModel1DEQ::WallShearStressAndHeatFlux(double, double, double, double, double, bool, double, bool, CFluidModel*, double&, double&, double&, double&)':; wall_model.cpp:(.text+0x124f): undefined reference to `dgtsv_'; /usr/bin/ld: wall_model.cpp:(.text+0x19fb): undefined reference to `dgtsv_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_sytri()':; CSymmetricMatrix.cpp:(.text+0x15c): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x1d5): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x205): undefined reference to `dsytri_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_potri()':; CSymmetricMatrix.cpp:(.text+0x593): undefined reference to `dpotrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x6c6): undefined reference to `dpotri_'; collect2: error: ld returned 1 exit status; [572/870] Compiling C++ object 'SU2_CFD/src/37e1b17@@SU2core_AD@sta/fluid_model_ppr.cpp.o'.; ninja: build stopped: subcommand failed.; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ echo $PKG_CONFIG_PATH ; :/lib/pkgconfig:/usr/lib/pkgconfig; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1787,Deployability,install,install,1787,"/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1868,Deployability,install,install,1868,"SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1999,Deployability,Release,Release,1999,"for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2072,Deployability,Configurat,Configuration,2072,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2429,Deployability,update,update,2429,"; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2521,Deployability,configurat,configuration,2521,"ge: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enab",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2784,Deployability,install,install,2784,".sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi_cxx.so /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/us",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2808,Deployability,install,install,2808,".sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi_cxx.so /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/us",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2967,Deployability,install,install,2967," ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi_cxx.so /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -W",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1382,Integrability,Depend,Dependency,1382,"=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1433,Integrability,depend,dependency,1433,"=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1481,Integrability,depend,dependency,1481,"x-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1522,Integrability,Message,Message,1522,"-Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1562,Integrability,depend,dependency,1562,"led -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1641,Integrability,Message,Message,1641,"er=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1744,Integrability,depend,dependency,1744,"53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1881,Integrability,Message,Message,1881,"for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2288,Integrability,Wrap,Wrapper,2288,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1345,Modifiability,config,config,1345,"ONFIG_PATH=""${PKG_CONFIG_PATH}"":/lib/pkgconfig; slimshady@arch-linux-hp-probook-g3-450: pkgconfig$ export PKG_CONFIG_PATH=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1366,Modifiability,config,config,1366,"ONFIG_PATH=""${PKG_CONFIG_PATH}"":/lib/pkgconfig; slimshady@arch-linux-hp-probook-g3-450: pkgconfig$ export PKG_CONFIG_PATH=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2072,Modifiability,Config,Configuration,2072,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2413,Modifiability,variab,variables,2413,"; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2521,Modifiability,config,configuration,2521,"ge: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enab",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633
https://github.com/su2code/SU2/issues/991#issuecomment-631991063:175,Modifiability,config,configured,175,"Hmmm its complaining about Lapack functions but not about Blas functions....; Please post the contents of both openblas.pc files, there might be an issue with how openblas is configured.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631991063
https://github.com/su2code/SU2/issues/991#issuecomment-631992356:399,Performance,optimiz,optimized,399,Here it is:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /lib/pkgconfig/openblas.pc ; libdir=/usr/lib; includedir=/usr/include; openblas_config= USE_64BITINT= DYNAMIC_ARCH=1 DYNAMIC_OLDER= NO_CBLAS= NO_LAPACK= NO_LAPACKE= NO_AFFINITY=1 USE_OPENMP= HASWELL MAX_THREADS=64; version=0.3.8; extralib=-lm -lpthread -lgfortran -lm -lpthread -lgfortran; Name: openblas; Description: OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version; Version: ${version}; URL: https://github.com/xianyi/OpenBLAS; Libs: -L${libdir} -lopenblas; Libs.private: ${extralib}; Cflags: -I${includedir}; ```. ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/openblas.pc ; libdir=/usr/lib; includedir=/usr/include; openblas_config= USE_64BITINT= DYNAMIC_ARCH=1 DYNAMIC_OLDER= NO_CBLAS= NO_LAPACK= NO_LAPACKE= NO_AFFINITY=1 USE_OPENMP= HASWELL MAX_THREADS=64; version=0.3.8; extralib=-lm -lpthread -lgfortran -lm -lpthread -lgfortran; Name: openblas; Description: OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version; Version: ${version}; URL: https://github.com/xianyi/OpenBLAS; Libs: -L${libdir} -lopenblas; Libs.private: ${extralib}; Cflags: -I${includedir}; slimshady@arch-linux-hp-probook-g3-450: ~$ ; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631992356
https://github.com/su2code/SU2/issues/991#issuecomment-631992356:998,Performance,optimiz,optimized,998,Here it is:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /lib/pkgconfig/openblas.pc ; libdir=/usr/lib; includedir=/usr/include; openblas_config= USE_64BITINT= DYNAMIC_ARCH=1 DYNAMIC_OLDER= NO_CBLAS= NO_LAPACK= NO_LAPACKE= NO_AFFINITY=1 USE_OPENMP= HASWELL MAX_THREADS=64; version=0.3.8; extralib=-lm -lpthread -lgfortran -lm -lpthread -lgfortran; Name: openblas; Description: OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version; Version: ${version}; URL: https://github.com/xianyi/OpenBLAS; Libs: -L${libdir} -lopenblas; Libs.private: ${extralib}; Cflags: -I${includedir}; ```. ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/openblas.pc ; libdir=/usr/lib; includedir=/usr/include; openblas_config= USE_64BITINT= DYNAMIC_ARCH=1 DYNAMIC_OLDER= NO_CBLAS= NO_LAPACK= NO_LAPACKE= NO_AFFINITY=1 USE_OPENMP= HASWELL MAX_THREADS=64; version=0.3.8; extralib=-lm -lpthread -lgfortran -lm -lpthread -lgfortran; Name: openblas; Description: OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version; Version: ${version}; URL: https://github.com/xianyi/OpenBLAS; Libs: -L${libdir} -lopenblas; Libs.private: ${extralib}; Cflags: -I${includedir}; slimshady@arch-linux-hp-probook-g3-450: ~$ ; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631992356
https://github.com/su2code/SU2/issues/991#issuecomment-631996848:120,Modifiability,config,config,120,The openblas_config line looks exactly like mine...; Are there any lapack-???.pc files in your system?; If you run `pkg-config openblas --version` is the output 0.3.8 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631996848
https://github.com/su2code/SU2/issues/991#issuecomment-632009282:666,Deployability,install,installed,666,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282
https://github.com/su2code/SU2/issues/991#issuecomment-632009282:458,Integrability,message,message,458,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282
https://github.com/su2code/SU2/issues/991#issuecomment-632009282:406,Modifiability,config,config,406,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282
https://github.com/su2code/SU2/issues/991#issuecomment-632009282:528,Modifiability,config,config,528,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282
https://github.com/su2code/SU2/issues/991#issuecomment-632009282:559,Modifiability,config,config,559,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282
https://github.com/su2code/SU2/issues/991#issuecomment-632009282:799,Modifiability,variab,variable,799,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282
https://github.com/su2code/SU2/issues/991#issuecomment-632014885:130,Testability,test,tested,130,"Well it's not supposed to be needed, but something weird is going on.; Blas and Lapack are technically separate things but when I tested this openblas seemed to build both into the same library, perhaps arch linux does things differently (on ubuntu 16 they were separate packages). At any rate, try getting this package https://aur.archlinux.org/packages/openblas-lapack/; If the build still fails, try adding `-Dblas-name=openblas-lapack` to the meson options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632014885
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6,Deployability,install,installing,6,"After installing the package you suggested, I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:421,Deployability,install,install,421,"After installing the package you suggested, I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:576,Deployability,install,install,576,"After installing the package you suggested, I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:630,Deployability,Install,Installing,630,"After installing the package you suggested, I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:649,Deployability,Install,Installing,649,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:733,Deployability,Install,Installing,733,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:820,Deployability,Install,Installing,820,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:915,Deployability,Install,Installing,915,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:999,Deployability,Install,Installing,999,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1086,Deployability,Install,Installing,1086,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1170,Deployability,Install,Installing,1170,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1254,Deployability,Install,Installing,1254,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1338,Deployability,Install,Installing,1338,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1422,Deployability,Install,Installing,1422,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1509,Deployability,Install,Installing,1509,ful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1598,Deployability,Install,Installing,1598,ory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/U,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1728,Deployability,Install,Installing,1728,alling SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1859,Deployability,Install,Installing,1859,me/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1989,Deployability,Install,Installing,1989,; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2117,Deployability,Install,Installing,2117,limshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2249,Deployability,Install,Installing,2249,ing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2385,Deployability,Install,Installing,2385,rPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2510,Deployability,Install,Installing,2510, SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2640,Deployability,Install,Installing,2640,U2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2766,Deployability,Install,Installing,2766,/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_N,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2896,Deployability,Install,Installing,2896,_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTAL,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3021,Deployability,Install,Installing,3021,U2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackage,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3151,Deployability,Install,Installing,3151,2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/U,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3279,Deployability,Install,Installing,3279,U2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slim,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3413,Deployability,Install,Installing,3413,ages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/s,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3540,Deployability,Install,Installing,3540,ckages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_opti,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3659,Deployability,Install,Installing,3659,y/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3787,Deployability,Install,Installing,3787,/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3923,Deployability,Install,Installing,3923,Packages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_P,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4062,Deployability,Install,Installing,4062,EW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4201,Deployability,Install,Installing,4201,/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/too,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4339,Deployability,Install,Installing,4339,differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyM,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4471,Deployability,Install,Installing,4471,ation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4611,Deployability,Install,Installing,4611,e/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4741,Deployability,Install,Installing,4741,ady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4875,Deployability,Install,Installing,4875,/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5009,Deployability,Install,Installing,5009,imshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5140,Deployability,Install,Installing,5140,/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5271,Deployability,Install,Installing,5271, to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_P,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5407,Deployability,Install,Installing,5407,to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5541,Deployability,Install,Installing,5541,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5676,Deployability,Install,Installing,5676,py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5811,Deployability,Install,Installing,5811,to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5949,Deployability,Install,Installing,5949,/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6084,Deployability,Install,Installing,6084,slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_P,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6223,Deployability,Install,Installing,6223,dy/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6359,Deployability,Install,Installing,6359,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6497,Deployability,Install,Installing,6497,UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6632,Deployability,Install,Installing,6632,erPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6766,Deployability,Install,Installing,6766,serPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6900,Deployability,Install,Installing,6900,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NE,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7037,Deployability,Install,Installing,7037,dy/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7170,Deployability,Install,Installing,7170,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7306,Deployability,Install,Installing,7306,shady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7444,Deployability,Install,Installing,7444,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7580,Deployability,Install,Installing,7580,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/Use,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7715,Deployability,Install,Installing,7715,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPack,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7859,Deployability,Install,Installing,7859,ackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7997,Deployability,Install,Installing,7997,Packages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPac,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8131,Deployability,Install,Installing,8131,ckages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPac,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8268,Deployability,Install,Installing,8268,es/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPacka,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8411,Deployability,Install,Installing,8411,2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8553,Deployability,Install,Installing,8553,INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/F,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8687,Deployability,Install,Installing,8687,ALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8830,Deployability,Install,Installing,8830,_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8965,Deployability,Install,Installing,8965,U2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9101,Deployability,Install,Installing,9101,INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9239,Deployability,Install,Installing,9239,2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserP,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9367,Deployability,Install,Installing,9367,ackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install sc,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9499,Deployability,Install,Installing,9499,ckages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py';,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9653,Deployability,Install,Installing,9653,"U2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9784,Deployability,Install,Installing,9784,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9917,Deployability,Install,Installing,9917,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:10050,Deployability,Install,Installing,10050,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:10196,Deployability,install,install,10196,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:10270,Deployability,install,install,10270,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:10363,Deployability,install,install,10363,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:10437,Deployability,install,install,10437,"/home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it by using the previous default packages?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5605,Energy Efficiency,adapt,adapt,5605,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6422,Energy Efficiency,adapt,adaptation,6422,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6963,Integrability,interface,interface,6963,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NE,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4401,Modifiability,config,config,4401,differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyM,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5605,Modifiability,adapt,adapt,5605,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6422,Modifiability,adapt,adaptation,6422,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044
https://github.com/su2code/SU2/issues/991#issuecomment-632083173:595,Deployability,update,update,595,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173
https://github.com/su2code/SU2/issues/991#issuecomment-632083173:324,Integrability,depend,dependency,324,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173
https://github.com/su2code/SU2/issues/991#issuecomment-632083173:462,Integrability,depend,dependency,462,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173
https://github.com/su2code/SU2/issues/991#issuecomment-632083173:209,Modifiability,variab,variables,209,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173
https://github.com/su2code/SU2/issues/991#issuecomment-632083173:189,Performance,load,load,189,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173
https://github.com/su2code/SU2/issues/991#issuecomment-632092388:46,Deployability,install,installed,46,"I did mention earlier that I removed blas and installed openblas before beginning to build this package.; > I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements. Maybe that is the reason these two are treated separately.; Could you answer these doubts please?; 1. Could I do a `-Dblas-name=blas` and make it work with the blas package instead of openblas?; 2. I think I will do a `pacman -S lapack openblas(or blas)` and then try to build SU2 again. Will that work?; 3. Long ago I installed [GSL package](https://www.gnu.org/software/gsl/doc/html/), maybe that would have done something with blas since it has some blas implementation as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632092388
https://github.com/su2code/SU2/issues/991#issuecomment-632092388:167,Deployability,install,installed,167,"I did mention earlier that I removed blas and installed openblas before beginning to build this package.; > I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements. Maybe that is the reason these two are treated separately.; Could you answer these doubts please?; 1. Could I do a `-Dblas-name=blas` and make it work with the blas package instead of openblas?; 2. I think I will do a `pacman -S lapack openblas(or blas)` and then try to build SU2 again. Will that work?; 3. Long ago I installed [GSL package](https://www.gnu.org/software/gsl/doc/html/), maybe that would have done something with blas since it has some blas implementation as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632092388
https://github.com/su2code/SU2/issues/991#issuecomment-632092388:235,Deployability,install,install,235,"I did mention earlier that I removed blas and installed openblas before beginning to build this package.; > I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements. Maybe that is the reason these two are treated separately.; Could you answer these doubts please?; 1. Could I do a `-Dblas-name=blas` and make it work with the blas package instead of openblas?; 2. I think I will do a `pacman -S lapack openblas(or blas)` and then try to build SU2 again. Will that work?; 3. Long ago I installed [GSL package](https://www.gnu.org/software/gsl/doc/html/), maybe that would have done something with blas since it has some blas implementation as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632092388
https://github.com/su2code/SU2/issues/991#issuecomment-632092388:576,Deployability,install,installed,576,"I did mention earlier that I removed blas and installed openblas before beginning to build this package.; > I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements. Maybe that is the reason these two are treated separately.; Could you answer these doubts please?; 1. Could I do a `-Dblas-name=blas` and make it work with the blas package instead of openblas?; 2. I think I will do a `pacman -S lapack openblas(or blas)` and then try to build SU2 again. Will that work?; 3. Long ago I installed [GSL package](https://www.gnu.org/software/gsl/doc/html/), maybe that would have done something with blas since it has some blas implementation as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632092388
https://github.com/su2code/SU2/issues/991#issuecomment-632104708:117,Integrability,depend,dependency,117,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708
https://github.com/su2code/SU2/issues/991#issuecomment-632104708:155,Modifiability,config,config,155,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708
https://github.com/su2code/SU2/issues/991#issuecomment-632104708:309,Modifiability,config,config,309,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708
https://github.com/su2code/SU2/issues/991#issuecomment-632104708:507,Modifiability,config,configure,507,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708
https://github.com/su2code/SU2/issues/991#issuecomment-632168739:271,Performance,perform,performance,271,"I also use Arch Linux, so I can experiment with the blas/openblas stuff a bit. I usually just use the standard blas and lapack packages in arch, and don't have any issues. I know that openblas replaces blas, but i'm not sure of its interaction with lapack. How much of a performance increase does openblas typically provide over blas? . Anyway, @aditya12398 , for now it looks like you and @pcarruscag have found a work-around! Cheers!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632168739
https://github.com/su2code/SU2/issues/991#issuecomment-632175752:119,Performance,optimiz,optimized,119,"If ""default"" blas is just the compiled reference implementation then the difference is massive, because it will not be optimized code. As for lapack it should not matter so much, to my knowledge the lapack functions we use are built on top of blas so good blas -> good lapack.; But of course the question is whether this is even needed, I think only the DG solver and RBF interpolation use blas.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632175752
https://github.com/su2code/SU2/issues/991#issuecomment-632352572:615,Deployability,install,install,615,"Hi.; So I have lots of good news. I was able to build SU2 with the recommended changes in the meson.build file, (thank you, @pcarruscag!):; > ```; > su2_deps += blas_dep; > su2_deps += dependency('lapack'); > ```; using both, blas and openblas. For blas I used `-Dblas-name=blas` as an extra argument passed to meson. Mind you, I didn't use the `meson.py` script or `./ninja` but instead used the preinstalled versions on my system. I had also cloned the `fix_python_3.8` branch instead of master so there are quite some changes I had to do to successfully build it. I also noticed that openblas uses ~17 MBs extra install space, which I think is because of additional optimizations over the standard preinstalled blas package (just a speculation). So I think I will be using openblas for now instead of blas. But blas works, just in case someone might be wondering. Thank you all for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632352572
https://github.com/su2code/SU2/issues/991#issuecomment-632352572:185,Integrability,depend,dependency,185,"Hi.; So I have lots of good news. I was able to build SU2 with the recommended changes in the meson.build file, (thank you, @pcarruscag!):; > ```; > su2_deps += blas_dep; > su2_deps += dependency('lapack'); > ```; using both, blas and openblas. For blas I used `-Dblas-name=blas` as an extra argument passed to meson. Mind you, I didn't use the `meson.py` script or `./ninja` but instead used the preinstalled versions on my system. I had also cloned the `fix_python_3.8` branch instead of master so there are quite some changes I had to do to successfully build it. I also noticed that openblas uses ~17 MBs extra install space, which I think is because of additional optimizations over the standard preinstalled blas package (just a speculation). So I think I will be using openblas for now instead of blas. But blas works, just in case someone might be wondering. Thank you all for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632352572
https://github.com/su2code/SU2/issues/991#issuecomment-632352572:669,Performance,optimiz,optimizations,669,"Hi.; So I have lots of good news. I was able to build SU2 with the recommended changes in the meson.build file, (thank you, @pcarruscag!):; > ```; > su2_deps += blas_dep; > su2_deps += dependency('lapack'); > ```; using both, blas and openblas. For blas I used `-Dblas-name=blas` as an extra argument passed to meson. Mind you, I didn't use the `meson.py` script or `./ninja` but instead used the preinstalled versions on my system. I had also cloned the `fix_python_3.8` branch instead of master so there are quite some changes I had to do to successfully build it. I also noticed that openblas uses ~17 MBs extra install space, which I think is because of additional optimizations over the standard preinstalled blas package (just a speculation). So I think I will be using openblas for now instead of blas. But blas works, just in case someone might be wondering. Thank you all for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632352572
https://github.com/su2code/SU2/issues/992#issuecomment-648883933:924,Usability,simpl,simply,924,"The original Spalart-Allmaras turbulence model encloses the ft2 term: https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows or https://turbmodels.larc.nasa.gov/spalart.html#sa. After that, some modifications were introduced and the ft2 term was neglected. But accordingly, a different name is used, i.e., Spalart-Allmaras One-Equation Model without ft2 Term.; So, I would also vote for implementing the original model along with the SA-noft2 variant. Also, I would like to point out a fact about the current implementation of the Negative Spalart-Allmaras variant. From theory, https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf equation 12, the model introduces the modified vorticity S_tilde. However, in SU2 (SU2/SU2_CFD/src/numerics/turbulent/turb_sources.cpp and CSourcePieceWise_TurbSA_Neg::ComputeResidual) we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras:. Shat = S + TurbVar_i[0]*fv2*inv_k2_d2;. (Sbar is used as S_tilde). Is there any reason for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-648883933
https://github.com/su2code/SU2/issues/992#issuecomment-652248694:231,Usability,simpl,simply,231,"I can do that. I will follow the above mentioned papers to implement the original SA and SA_NEG. So we will end up with SA, SA_NEG along with SA_NOFT2 and SA_NEG_NOFT2**. SA_NEG_NOFT2**:; > we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652248694
https://github.com/su2code/SU2/issues/992#issuecomment-652446915:540,Modifiability,config,config,540,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915
https://github.com/su2code/SU2/issues/992#issuecomment-652446915:716,Modifiability,config,config,716,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915
https://github.com/su2code/SU2/issues/992#issuecomment-652446915:426,Usability,simpl,simple,426,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915
https://github.com/su2code/SU2/issues/992#issuecomment-652635415:268,Usability,simpl,simply,268,@fpalacios: I am adding you to this discussion because I have seen you are the responsible of implementing the Negative Spalart-Allmaras variation in SU2. Maybe you can shed some light into the discussion. In particular to:; > we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652635415
https://github.com/su2code/SU2/issues/994#issuecomment-631607647:43,Modifiability,config,config,43,"Hello @kohyun, to navigate to the mesh and config file you can just use the Terminal App and `cd` to your directory with mesh/config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631607647
https://github.com/su2code/SU2/issues/994#issuecomment-631607647:126,Modifiability,config,config,126,"Hello @kohyun, to navigate to the mesh and config file you can just use the Terminal App and `cd` to your directory with mesh/config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631607647
https://github.com/su2code/SU2/issues/994#issuecomment-631669081:146,Modifiability,config,config,146,"In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631669081
https://github.com/su2code/SU2/issues/994#issuecomment-631669081:263,Modifiability,config,config,263,"In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631669081
https://github.com/su2code/SU2/issues/994#issuecomment-631682024:63,Testability,test,tested,63,"Since we are already touching the Xcode topic here, has anyone tested the xcode backend in meson (with `--backend=xcode` in the meson call)? Maybe we can remove all this xcode stuff that we have currently in the repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631682024
https://github.com/su2code/SU2/issues/994#issuecomment-631892301:148,Modifiability,config,config,148,"> In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located. Thank you very much @economon ; Your method works exactly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631892301
https://github.com/su2code/SU2/issues/994#issuecomment-631892301:265,Modifiability,config,config,265,"> In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located. Thank you very much @economon ; Your method works exactly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631892301
https://github.com/su2code/SU2/issues/995#issuecomment-631645199:110,Modifiability,extend,extended,110,"It's good to hear Paraview has this capability. If SU2 has the structure for such an output maybe this can be extended to Tecplot as well. This will be a good capability. Additionally, I was also thinking of finding a way to plot along gridlines but that is not possible in Tecplot. It's an unstructured mesh so no i, j, k. If the output structure can have some additional information (maybe assign ""dummy"" i, j, k?) that would be a good capability to have as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/995#issuecomment-631645199
https://github.com/su2code/SU2/issues/997#issuecomment-632647020:94,Modifiability,variab,variable,94,"@pcarruscag Unfortunately, i tried to use ITER=99999 and it still gives zero result for every variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632647020
https://github.com/su2code/SU2/issues/997#issuecomment-632678700:42,Modifiability,config,config,42,"I tried to give a non-zero Mach Number in config file and it succeed. I obtained a rotary solution. However, giving a non-zero Mach Number would mean it is not hover anymore. Is there anyway to initialize this problem without given any forward speed ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632678700
https://github.com/su2code/SU2/issues/997#issuecomment-632683533:320,Modifiability,config,config,320,"The source term is being computed, but it is zero because the momentum is; zero.; If run a few iterations with MACH > 0 and then restart the simulation; putting it back to 0 are the results ok?. javsu <notifications@github.com> escreveu no dia sexta, 22/05/2020 à(s); 14:01:. > I tried to give a non-zero Mach Number in config file and it succeed. I; > obtained a rotary solution. However, giving a non-zero Mach Number would; > mean it is not hover anymore. Is there anyway to initialize this problem; > without given any forward speed ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/997#issuecomment-632678700>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3CDDHXXHNYCNHJLDLRSZZSLANCNFSM4NHBR7DQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632683533
https://github.com/su2code/SU2/issues/997#issuecomment-632892959:345,Energy Efficiency,efficient,efficient,345,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959
https://github.com/su2code/SU2/issues/997#issuecomment-632892959:70,Modifiability,config,config,70,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959
https://github.com/su2code/SU2/issues/997#issuecomment-632892959:166,Modifiability,config,config,166,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959
https://github.com/su2code/SU2/issues/997#issuecomment-632892959:142,Usability,simpl,simply,142,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959
https://github.com/su2code/SU2/issues/997#issuecomment-633078509:154,Availability,error,error,154,"@economon Thanks for your recommendation and care for the topic. I tried to implement it just before the line you specified. However, i get the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:36: error: ‘class CGeometry’ has no member named ‘nodes’; did you mean ‘node’?; su2double* GridVel_i = geometry->nodes->GetGridVel(iPoint);"". And i changed it to ""node"" instead of ""nodes"" just in case and tried it again. But then, i got the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:42: error: request for member ‘GetGridVel’ in ‘* geometry->CGeometry::node’, which is of pointer type ‘CPoint*’ (maybe you meant to use ‘->’ ?); su2double* GridVel_i = geometry->node->GetGridVel(iPoint);"". My Su2 code was 7.0.3. Just to check if the problem caused from my current Su2 version. I am installing 7.0.4 to try it out. . I am very much beginner in C++, so it might be better to post the current state of the code to be sure about i am doing something wrong ( even though i just copy pasted it); "" ...; for (iDim = 0; iDim < nDim; iDim++); 	; if (dynamic_grid) {; su2double ProjGridVel = 0.0;; su2double* GridVel_i = geometry->node->GetGridVel(iPoint);; for (iDim = 0; iDim < nDim; iDim++); ProjGridVel += 0.5*(GridVel_i[iDim]+GridVel_i[iDim])*UnitNormal[iDim];; ProjVelocity_i -= ProjGridVel;; }; V_reflected[iDim+1] = nodes->GetVelocity(iPoint,iDim) - 2.0 * ProjVelocity_i*UnitNormal[iDim];; ....""; Thank you again all of you helping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633078509
https://github.com/su2code/SU2/issues/997#issuecomment-633078509:212,Availability,error,error,212,"@economon Thanks for your recommendation and care for the topic. I tried to implement it just before the line you specified. However, i get the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:36: error: ‘class CGeometry’ has no member named ‘nodes’; did you mean ‘node’?; su2double* GridVel_i = geometry->nodes->GetGridVel(iPoint);"". And i changed it to ""node"" instead of ""nodes"" just in case and tried it again. But then, i got the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:42: error: request for member ‘GetGridVel’ in ‘* geometry->CGeometry::node’, which is of pointer type ‘CPoint*’ (maybe you meant to use ‘->’ ?); su2double* GridVel_i = geometry->node->GetGridVel(iPoint);"". My Su2 code was 7.0.3. Just to check if the problem caused from my current Su2 version. I am installing 7.0.4 to try it out. . I am very much beginner in C++, so it might be better to post the current state of the code to be sure about i am doing something wrong ( even though i just copy pasted it); "" ...; for (iDim = 0; iDim < nDim; iDim++); 	; if (dynamic_grid) {; su2double ProjGridVel = 0.0;; su2double* GridVel_i = geometry->node->GetGridVel(iPoint);; for (iDim = 0; iDim < nDim; iDim++); ProjGridVel += 0.5*(GridVel_i[iDim]+GridVel_i[iDim])*UnitNormal[iDim];; ProjVelocity_i -= ProjGridVel;; }; V_reflected[iDim+1] = nodes->GetVelocity(iPoint,iDim) - 2.0 * ProjVelocity_i*UnitNormal[iDim];; ....""; Thank you again all of you helping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633078509
https://github.com/su2code/SU2/issues/997#issuecomment-633078509:459,Availability,error,error,459,"@economon Thanks for your recommendation and care for the topic. I tried to implement it just before the line you specified. However, i get the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:36: error: ‘class CGeometry’ has no member named ‘nodes’; did you mean ‘node’?; su2double* GridVel_i = geometry->nodes->GetGridVel(iPoint);"". And i changed it to ""node"" instead of ""nodes"" just in case and tried it again. But then, i got the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:42: error: request for member ‘GetGridVel’ in ‘* geometry->CGeometry::node’, which is of pointer type ‘CPoint*’ (maybe you meant to use ‘->’ ?); su2double* GridVel_i = geometry->node->GetGridVel(iPoint);"". My Su2 code was 7.0.3. Just to check if the problem caused from my current Su2 version. I am installing 7.0.4 to try it out. . I am very much beginner in C++, so it might be better to post the current state of the code to be sure about i am doing something wrong ( even though i just copy pasted it); "" ...; for (iDim = 0; iDim < nDim; iDim++); 	; if (dynamic_grid) {; su2double ProjGridVel = 0.0;; su2double* GridVel_i = geometry->node->GetGridVel(iPoint);; for (iDim = 0; iDim < nDim; iDim++); ProjGridVel += 0.5*(GridVel_i[iDim]+GridVel_i[iDim])*UnitNormal[iDim];; ProjVelocity_i -= ProjGridVel;; }; V_reflected[iDim+1] = nodes->GetVelocity(iPoint,iDim) - 2.0 * ProjVelocity_i*UnitNormal[iDim];; ....""; Thank you again all of you helping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633078509
https://github.com/su2code/SU2/issues/997#issuecomment-633078509:517,Availability,error,error,517,"@economon Thanks for your recommendation and care for the topic. I tried to implement it just before the line you specified. However, i get the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:36: error: ‘class CGeometry’ has no member named ‘nodes’; did you mean ‘node’?; su2double* GridVel_i = geometry->nodes->GetGridVel(iPoint);"". And i changed it to ""node"" instead of ""nodes"" just in case and tried it again. But then, i got the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:42: error: request for member ‘GetGridVel’ in ‘* geometry->CGeometry::node’, which is of pointer type ‘CPoint*’ (maybe you meant to use ‘->’ ?); su2double* GridVel_i = geometry->node->GetGridVel(iPoint);"". My Su2 code was 7.0.3. Just to check if the problem caused from my current Su2 version. I am installing 7.0.4 to try it out. . I am very much beginner in C++, so it might be better to post the current state of the code to be sure about i am doing something wrong ( even though i just copy pasted it); "" ...; for (iDim = 0; iDim < nDim; iDim++); 	; if (dynamic_grid) {; su2double ProjGridVel = 0.0;; su2double* GridVel_i = geometry->node->GetGridVel(iPoint);; for (iDim = 0; iDim < nDim; iDim++); ProjGridVel += 0.5*(GridVel_i[iDim]+GridVel_i[iDim])*UnitNormal[iDim];; ProjVelocity_i -= ProjGridVel;; }; V_reflected[iDim+1] = nodes->GetVelocity(iPoint,iDim) - 2.0 * ProjVelocity_i*UnitNormal[iDim];; ....""; Thank you again all of you helping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633078509
https://github.com/su2code/SU2/issues/997#issuecomment-633078509:812,Deployability,install,installing,812,"@economon Thanks for your recommendation and care for the topic. I tried to implement it just before the line you specified. However, i get the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:36: error: ‘class CGeometry’ has no member named ‘nodes’; did you mean ‘node’?; su2double* GridVel_i = geometry->nodes->GetGridVel(iPoint);"". And i changed it to ""node"" instead of ""nodes"" just in case and tried it again. But then, i got the following error;; ""../SU2_CFD/src/solvers/CEulerSolver.cpp:6888:42: error: request for member ‘GetGridVel’ in ‘* geometry->CGeometry::node’, which is of pointer type ‘CPoint*’ (maybe you meant to use ‘->’ ?); su2double* GridVel_i = geometry->node->GetGridVel(iPoint);"". My Su2 code was 7.0.3. Just to check if the problem caused from my current Su2 version. I am installing 7.0.4 to try it out. . I am very much beginner in C++, so it might be better to post the current state of the code to be sure about i am doing something wrong ( even though i just copy pasted it); "" ...; for (iDim = 0; iDim < nDim; iDim++); 	; if (dynamic_grid) {; su2double ProjGridVel = 0.0;; su2double* GridVel_i = geometry->node->GetGridVel(iPoint);; for (iDim = 0; iDim < nDim; iDim++); ProjGridVel += 0.5*(GridVel_i[iDim]+GridVel_i[iDim])*UnitNormal[iDim];; ProjVelocity_i -= ProjGridVel;; }; V_reflected[iDim+1] = nodes->GetVelocity(iPoint,iDim) - 2.0 * ProjVelocity_i*UnitNormal[iDim];; ....""; Thank you again all of you helping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633078509
https://github.com/su2code/SU2/issues/997#issuecomment-633106644:51,Availability,error,errors,51,"@talbring I tried with 7.0.4 but it gives the same errors again. However, i tried to implement your version to 7.0.4 and it compiled somehow. However, it diverged. Then, i implement your version to 7.0.3 and it diverged again.; Now i am trying to understand why i could not implement @economon 's version to 7.0.4. May it be related with my gcc version or something ?. Edit: When i recompile the code, i run ninja such that ;; ""./ninja -C build install""; Do i need to make any other operations ? Thanks again",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633106644
https://github.com/su2code/SU2/issues/997#issuecomment-633106644:445,Deployability,install,install,445,"@talbring I tried with 7.0.4 but it gives the same errors again. However, i tried to implement your version to 7.0.4 and it compiled somehow. However, it diverged. Then, i implement your version to 7.0.3 and it diverged again.; Now i am trying to understand why i could not implement @economon 's version to 7.0.4. May it be related with my gcc version or something ?. Edit: When i recompile the code, i run ninja such that ;; ""./ninja -C build install""; Do i need to make any other operations ? Thanks again",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633106644
https://github.com/su2code/SU2/issues/997#issuecomment-633119867:66,Deployability,release,released,66,"The changes we made are in the develop branch, they have not been released.; There is also the chance that the case diverges because the settings are not adequate for the magnitude of the source term.; You can try reducing the rotation rate for example to make it easier to converge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633119867
https://github.com/su2code/SU2/issues/997#issuecomment-633126402:101,Modifiability,config,config,101,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402
https://github.com/su2code/SU2/issues/997#issuecomment-633126402:224,Modifiability,config,config,224,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402
https://github.com/su2code/SU2/issues/997#issuecomment-633126402:115,Testability,test,test,115,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402
https://github.com/su2code/SU2/issues/997#issuecomment-633149396:113,Modifiability,config,config,113,"@economon I am able to compile the code with develop branch. However, it diverges no matter my cfl number or cfl config i tried. I changed rotational speed too. But even changing rotational speed to 1 rad/s does not lead to convergence. Thanks again for all recommendations posted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633149396
https://github.com/su2code/SU2/issues/997#issuecomment-633305481:76,Deployability,update,updated,76,@javsu : please try the branch fix_gridvel where I have aded the change and updated the config file for that case. Shouldn't require any modifications (it converges ~10 orders in a little over 1k iters for me).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633305481
https://github.com/su2code/SU2/issues/997#issuecomment-633305481:88,Modifiability,config,config,88,@javsu : please try the branch fix_gridvel where I have aded the change and updated the config file for that case. Shouldn't require any modifications (it converges ~10 orders in a little over 1k iters for me).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633305481
https://github.com/su2code/SU2/issues/997#issuecomment-633728578:39,Availability,recover,recover,39,"Hey @economon, it has! And it seems to recover the results of the older Euler Wall implementation, at least it does for the pitching NACA64A010 which @cvencro analyzed in more detail :+1: ; I'll add an image over at 828. Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633728578
https://github.com/su2code/SU2/issues/997#issuecomment-633728578:39,Safety,recover,recover,39,"Hey @economon, it has! And it seems to recover the results of the older Euler Wall implementation, at least it does for the pitching NACA64A010 which @cvencro analyzed in more detail :+1: ; I'll add an image over at 828. Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633728578
https://github.com/su2code/SU2/pull/998#issuecomment-632761383:5,Deployability,update,updated,5,Also updated the AUTHORS.md file. We had some new contributors.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998#issuecomment-632761383
https://github.com/su2code/SU2/pull/998#issuecomment-632818720:25,Testability,test,tested,25,"Looks good to me! I just tested your branch on my system and it works. I'll delete my branch. While we're here, are there additional changes that need to be made for openblas (along the lines of what are mentioned in issue #991), or is that an ArchLinux issue, only?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998#issuecomment-632818720
https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:119,Integrability,depend,dependency,119,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695
https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:188,Integrability,depend,dependency,188,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695
https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:348,Integrability,depend,dependency,348,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695
https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:66,Security,access,access,66,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695
