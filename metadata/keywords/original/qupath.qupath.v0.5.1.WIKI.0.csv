id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://qupath.github.io/index-wcopy.html:30491,Integrability,interface,interfaces,30491,dLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:30520,Integrability,interface,interfaces,30520,.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages (QuPath 0.5.0); qupath.lib.sc,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:30562,Integrability,interface,interfaces,30562,tionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages (QuPath 0.5.0); qupath.lib.scripting.languages Class Hierarchy (QuPath 0.5.0); ,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:27919,Modifiability,plugin,plugins,27919,objects.utils (QuPath 0.5.0); qupath.lib.objects.utils Class Hierarchy (QuPath 0.5.0); Tiler.Builder (QuPath 0.5.0); Tiler (QuPath 0.5.0); Tiler.TileAlignment (QuPath 0.5.0). CellTools (QuPath 0.5.0); DefaultPathObjectComparator (QuPath 0.5.0); DefaultPathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScri,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:28128,Modifiability,plugin,plugins,28128,athObjectComparator (QuPath 0.5.0); DefaultPathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep ,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:28171,Modifiability,plugin,plugins,28171,PathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (Q,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:28642,Modifiability,plugin,plugins,28642,redicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qup,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:28688,Modifiability,plugin,plugins,28688,ath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plu,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:28969,Modifiability,plugin,plugins,28969,0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUt,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:29013,Modifiability,plugin,plugins,29013,th 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:29654,Modifiability,plugin,plugins,29654,uPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (Q,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:29689,Modifiability,plugin,plugins,29689, Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); De,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:472,Safety,detect,detect,472,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:506,Safety,detect,detect,506,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:549,Safety,detect,detect,549,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:781,Safety,detect,detect,781,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:826,Safety,detect,detect,826,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:964,Safety,detect,detect,964,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:1008,Safety,detect,detect,1008,assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0); qupath.ima,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:14149,Testability,log,logging,14149,Extension (QuPath 0.5.0); Subcommand (QuPath 0.5.0); UpdateChecker (QuPath 0.5.0); UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:14238,Testability,log,logging,14238,UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementPreferences (QuPath 0.5.0); PreferencePa,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/index-wcopy.html:14277,Testability,log,logging,14277,mages; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences (QuPath 0.5.0); PreferencePane.MeasurementPreferences (QuPath 0.5.0); PreferencePane.ObjectPreferences (QuPath 0.5.0); Preference,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:28016,Availability,mask,mask,28016,". Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Inte",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:32192,Availability,avail,available,32192," normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OM",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:51433,Availability,avail,available,51433,"tate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper m",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:51763,Availability,avail,available,51763,"mall JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel i",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:51943,Availability,avail,available,51943,"e Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableIma",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:57501,Availability,avail,available,57501," care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:58057,Availability,checkpoint,checkpoint,58057,"prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59785,Availability,avail,available,59785,"tions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventH",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:541,Deployability,pipeline,pipeline,541,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:2184,Deployability,install,installed,2184," a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokeni",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:15167,Deployability,pipeline,pipeline,15167,"/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DisplaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:15458,Deployability,patch,patch-based,15458,"xel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DisplaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:17333,Deployability,update,update,17333,"dler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:21362,Deployability,integrat,integration,21362,"aralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:21442,Deployability,install,install,21442,"s. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProce",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:29395,Deployability,install,installation,29395,"tList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:35054,Deployability,patch,patch-based,35054,"sionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface f",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:37677,Deployability,patch,patch,37677,"image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface use",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:39829,Deployability,update,updated,39829," PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; PathObjectHierarchy. A basic hierarchy in which to store PathObjects. PathObjectHierarchyEvent. An event class for passing on information about modifications to a PathObjectHierarchy. PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. PathObjectHierarchyListener. A listener for modifications to a PathObjectHierarchy (i.e. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. PathObjectPainter. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59313,Deployability,update,updates,59313,"taIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. Vi",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59396,Deployability,release,release,59396,"Dearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTracker",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:5132,Energy Efficiency,adapt,adapting,5132," the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:7096,Energy Efficiency,adapt,adapting,7096,"Info.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChoiceParameter<S>. Parameter that supports a list of choices. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. ClassifyMenuActions;  ; CodeAreaControl. Code area control using RichTextFX. CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. ColorDeconvMatrix3x3. Simple class for representing - and inverting a 3x3 matrix. ColorDeconvolutionHelper. Static methods to assist with color deconvolution. ColorDeconvolutionStains. Helper class for storing stain vectors and maximum channel values to be used for color deconvolution. ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Enum for common stain defaults. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ColorMaps. Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. ColorMaps.ColorMap. colormap, which acts as an interpolating lookup ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:19845,Energy Efficiency,adapt,adapters,19845,"gy Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53110,Energy Efficiency,adapt,adapted,53110,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53262,Energy Efficiency,monitor,monitoring,53262,"ls. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:2846,Integrability,wrap,wrappers,2846,"tation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:2943,Integrability,wrap,wrapper,2943,"e a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavio",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:3174,Integrability,interface,interface,3174,". Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) f",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:6118,Integrability,interface,interface,6118,"h size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChoiceParam",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:9966,Integrability,wrap,wrap,9966,"ls for BufferedImages. ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creat",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:10425,Integrability,depend,dependent,10425," used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImag",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:15113,Integrability,interface,interface,15113,"/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DisplaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:16832,Integrability,interface,interface,16832," superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image o",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:17481,Integrability,wrap,wrap,17481,"t doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing anno",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:18739,Integrability,interface,interface,18739,"ng with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy o",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:19845,Integrability,adapter,adapters,19845,"gy Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:21114,Integrability,interface,interface,21114,"at can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast setti",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:21362,Integrability,integrat,integration,21362,"aralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:21914,Integrability,wrap,wraps,21914,"ss for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Fil",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:25188,Integrability,interface,interface,25188,"nes a class encapsulating all that is required to build an ImageServer. ImageServerBuilder.UriImageSupport<T>. Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. ImageServerMetadata. Class for storing primary ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLangua",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:25491,Integrability,message,message,25491,"y ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and c",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:25570,Integrability,message,message,25570,"new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doe",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27801,Integrability,message,messages,27801,"for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class th",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27990,Integrability,interface,interface,27990,". Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Inte",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:28067,Integrability,interface,interface,28067,"tternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Par",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:29303,Integrability,interface,interface,29303,"ing a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEvent",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:29722,Integrability,depend,depending,29722,"ion objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:30789,Integrability,depend,dependent,30789,"anager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:32230,Integrability,interface,interface,32230,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:33790,Integrability,wrap,wrappers,33790," fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand. OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers. OMETiffWriter. ImageWriter for writing OME-TIFF images. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBui",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:35803,Integrability,wrap,wrapper,35803," DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:36059,Integrability,interface,interface,36059,"jectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interf",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:36256,Integrability,interface,interface,36256,"with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A colle",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:41006,Integrability,interface,interface,41006,"bjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. PathObjectPainter. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:41779,Integrability,interface,interface,41779,"PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:43015,Integrability,interface,interface,43015,"ructure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for pla",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:43597,Integrability,wrap,wrapper,43597," results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensit",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:44165,Integrability,interface,interface,44165,"Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePre",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:47391,Integrability,interface,interface,47391,"ctImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RearrangeRGBImageServe",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:49786,Integrability,interface,interface,49786,"ndardRegionFilters. Standard classification regions (hopefully all you will ever need). RegionRequest. Class for defining an image region that can also be used to request these region from an ImageServer. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ResourceManager. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. RoiEditor. Helper class for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers an",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:50347,Integrability,wrap,wraps,50347,"resources of different kinds, for example from projects ; or a user directory. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. RoiEditor. Helper class for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class w",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:51161,Integrability,interface,interface,51161,"rest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currentl",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52695,Integrability,interface,interface,52695,"lass with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic glob",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52948,Integrability,interface,interface,52948,"epresenting a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:55602,Integrability,interface,interface,55602,"eate a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to hel",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:56345,Integrability,interface,interface,56345," labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:56659,Integrability,interface,interface,56659," (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrap",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:57696,Integrability,wrap,wrapper,57696,"isplay. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59077,Integrability,wrap,wrapped,59077,"enting a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59554,Integrability,depend,depend,59554,"r. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedI",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61700,Integrability,interface,interface,61700,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61813,Integrability,wrap,wraps,61813,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:358,Modifiability,plugin,plugin,358,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:742,Modifiability,variab,variable,742,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:938,Modifiability,plugin,plugin,938,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:1296,Modifiability,plugin,plugin,1296,"in<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and confi",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:1371,Modifiability,plugin,plugins,1371,"in<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and confi",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:1479,Modifiability,plugin,plugin,1479,"ns). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. Image",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:1573,Modifiability,plugin,plugin,1573,"t when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions; ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:2338,Modifiability,config,configuring,2338,"methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu.",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:5132,Modifiability,adapt,adapting,5132," the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:5475,Modifiability,plugin,plugin,5475,"lection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested co",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:7096,Modifiability,adapt,adapting,7096,"Info.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChoiceParameter<S>. Parameter that supports a list of choices. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. ClassifyMenuActions;  ; CodeAreaControl. Code area control using RichTextFX. CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. ColorDeconvMatrix3x3. Simple class for representing - and inverting a 3x3 matrix. ColorDeconvolutionHelper. Static methods to assist with color deconvolution. ColorDeconvolutionStains. Helper class for storing stain vectors and maximum channel values to be used for color deconvolution. ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Enum for common stain defaults. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ColorMaps. Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. ColorMaps.ColorMap. colormap, which acts as an interpolating lookup ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:19578,Modifiability,enhance,enhanced,19578,"remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is hand",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:19845,Modifiability,adapt,adapters,19845,"gy Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:22379,Modifiability,plugin,plugin,22379,"on.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. Imag",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:32260,Modifiability,plugin,plugins,32260,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:41032,Modifiability,plugin,plugin,41032,"bjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. PathObjectPainter. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:41799,Modifiability,plugin,plugin,41799,"PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:46633,Modifiability,config,config,46633,"le existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:47153,Modifiability,plugin,plugin,47153,"lds for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:47256,Modifiability,plugin,plugin,47256,"le 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageDat",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:49227,Modifiability,layers,layers,49227,"lated to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RearrangeRGBImageServer. Simple image server to swap the red and blue channels of an RGB image. Reclassifier. Helper class when classifying PathObjects. RectangleROI. ROI representing a square or rectangle (unrotated). RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). RegionRequest. Class for defining an image region that can also be used to request these region from an ImageServer. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ResourceManager. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. RoiEditor. Helper class for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (R",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53110,Modifiability,adapt,adapted,53110,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53165,Modifiability,plugin,plugin,53165,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53290,Modifiability,plugin,plugin,53290,"ls. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:55490,Modifiability,plugin,plugin,55490,"enerate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriat",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:57894,Modifiability,plugin,plugin,57894," Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (draw",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:58445,Modifiability,plugin,plugin,58445,"ner<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisComma",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:1172,Performance,perform,perform,1172," All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action sho",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:4849,Performance,load,load,4849,"of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image chann",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:17159,Performance,load,loading,17159,"rent object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or perf",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:17382,Performance,load,loading,17382," selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle i",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:18179,Performance,perform,performing,18179,"assLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geome",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:32273,Performance,perform,perform,32273,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:34316,Performance,perform,performed,34316," OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand. OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers. OMETiffWriter. ImageWriter for writing OME-TIFF images. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:36131,Performance,load,loading,36131,". Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:38889,Performance,load,loading,38889,"ptional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; PathObjectHierarchy. A basic hierarchy in which to store PathObjects. PathObjectHierarchyEvent. An event class for passing on information about modifications to a PathObjectHierarchy. PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. PathObjectHierarchyListener. A listener for modifications ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:50966,Performance,perform,perform,50966,"s for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:56731,Performance,cache,cache,56731," (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrap",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:411,Safety,detect,detected,411,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:1589,Safety,detect,detection,1589,"t when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions; ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:5546,Safety,detect,detection,5546,"lection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested co",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:11978,Safety,predict,predictable,11978,"ting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. CroppedImageServer. ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. CssLanguage. Class for representing CSS in QuPath. DefaultAutoCompletor. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptEditor. Default multilingual script editor. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. DefaultTMAGrid. Default implementation of a TMAGrid. DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdiv",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:12172,Safety,predict,predictable,12172,"ifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. CroppedImageServer. ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. CssLanguage. Class for representing CSS in QuPath. DefaultAutoCompletor. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptEditor. Default multilingual script editor. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. DefaultTMAGrid. Default implementation of a TMAGrid. DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Comma",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:13189,Safety,detect,detections,13189,"able manner. DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptEditor. Default multilingual script editor. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. DefaultTMAGrid. Default implementation of a TMAGrid. DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Command for generating density maps from detections on an image. DensityMapDialog. Dialog for interactively generating a custom density map. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. DensityMapUI. UI elements associated with density maps. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. DilateAnnotatio",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:13731,Safety,detect,detect,13731,"Tools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Command for generating density maps from detections on an image. DensityMapDialog. Dialog for interactively generating a custom density map. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. DensityMapUI. UI elements associated with density maps. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version o",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:13944,Safety,detect,detection,13944,"n Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Command for generating density maps from detections on an image. DensityMapDialog. Dialog for interactively generating a custom density map. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. DensityMapUI. UI elements associated with density maps. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating t",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:18594,Safety,detect,detections,18594,"ace for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting wi",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:18633,Safety,detect,detections,18633,"ace for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting wi",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:20434,Safety,detect,detections,20434,"image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.I",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:22424,Safety,detect,detected,22424,"on.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. Imag",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:25730,Safety,detect,detections,25730,"pes for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are int",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:28695,Safety,detect,detection,28695,"the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail fro",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:32281,Safety,detect,detection,32281,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:36597,Safety,detect,detections,36597,"ect being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters.",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:36860,Safety,detect,detection,36860,"or OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. Pa",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:38405,Safety,detect,detection,38405," of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to sele",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:38600,Safety,detect,detection,38600,"meters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; PathO",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:41260,Safety,detect,detections,41260,"er. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:44714,Safety,detect,detect,44714,"lass for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV imag",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53147,Safety,avoid,avoid,53147,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:54253,Safety,detect,detection,54253," and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelpe",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:55714,Safety,detect,detection,55714,"geServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate tha",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61063,Safety,detect,detection,61063,"ions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWr",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61176,Safety,detect,detection,61176,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:9786,Security,access,access,9786,"s. Static functions to help work with RGB(A) colors using packed ints. ColorToolsAwt. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:25348,Security,access,access,25348,"ers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. ImageServerMetadata. Class for storing primary ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:31023,Security,access,access,31023,"ementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFa",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:43661,Security,access,access,43661," results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensit",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:47061,Security,access,access,47061,"ated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. Jav",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52709,Security,access,accessing,52709,"lass with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic glob",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52987,Security,access,access,52987,"epresenting a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:55046,Security,validat,validation,55046," at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in whic",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59765,Security,access,access,59765,"tions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventH",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:10072,Testability,log,logs,10072,"olors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:10197,Testability,log,log,10197,"former. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27021,Testability,test,test,27021,"Writer implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to a",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27529,Testability,log,logging,27529,"rver. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibilit",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27576,Testability,log,log,27576,"hat doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. F",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27625,Testability,log,log-rank,27625,"r; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. M",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27634,Testability,test,test,27634,"r; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. M",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27715,Testability,log,log,27715,"labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby det",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27724,Testability,test,test,27724,"labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby det",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27757,Testability,log,logging,27757,"s. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measuremen",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:27797,Testability,log,log,27797,"for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class th",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:55061,Testability,test,test,55061," at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in whic",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61557,Testability,log,logged,61557,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61716,Testability,log,loggable,61716,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:521,Usability,learn,learning,521,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:4226,Usability,learn,learning,4226,"rom a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay us",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:5814,Usability,simpl,simple,5814,"o save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:6404,Usability,simpl,simple,6404," plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChoiceParameter<S>. Parameter that supports a list of choices. ClassificationResolution. Wrapper for a PixelCalibration to be used to define classifier resolution. ClassifyMenuActions;  ; CodeAreaControl. Code area control using RichTextFX. CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. ColorDeconvMatrix3x3",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:10065,Usability,simpl,simply,10065,"olors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:10238,Usability,simpl,simple,10238,"alues. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:15147,Usability,learn,learning,15147,"/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DisplaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:15847,Usability,simpl,simple,15847,"splaySettingUtils. Utility class for working with image display and image display settings objects. DistanceTools. Static methods for calculating distances between objects. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoubleParameter. Parameter to represent a floating point numeric value. DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:22170,Usability,simpl,simple,22170,". IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:22953,Usability,learn,learning,22953,"l used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. ImageServer<T>. Generic ImageServer, able to return pixels and metadata. ImageServerBuilder<T>. Helper class for creating ImageServers from a given URI and optional argument list. ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. ImageServerBuilder.Defau",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:23059,Usability,simpl,simplify,23059,"ms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. ImageServer<T>. Generic ImageServer, able to return pixels and metadata. ImageServerBuilder<T>. Helper class for creating ImageServers from a given URI and optional argument list. ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:31151,Usability,simpl,simple,31151,"ated:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if on",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:31815,Usability,simpl,simple,31815,"omputing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementT",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:43590,Usability,simpl,simple,43590," results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensit",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:44824,Usability,learn,learning,44824,"xelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. Pr",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:45479,Usability,learn,learning,45479,"OI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. P",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:45788,Usability,learn,learning,45788,"rediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. A",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:46278,Usability,simpl,simple,46278,"gPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52435,Usability,simpl,simplifying,52435,"s that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, op",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52586,Usability,simpl,simplify,52586,". Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:52851,Usability,simpl,simple,52851,"iptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53312,Usability,feedback,feedback,53312,"ls. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53364,Usability,simpl,simple,53364,"ying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions fro",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:53503,Usability,feedback,feedback,53503,"ying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions fro",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:54125,Usability,simpl,simple,54125,"storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color decon",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:56412,Usability,feedback,feedback,56412," labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:58140,Usability,simpl,simple,58140,"using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply tr",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:59243,Usability,undo,undo,59243,". A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allclasses-index.html:61806,Usability,simpl,simply,61806,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:8270,Deployability,install,install,8270,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:611,Integrability,interface,interface,611,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:1543,Integrability,interface,interfaces,1543," by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.o",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:1860,Integrability,interface,interfaces,1860," Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:2700,Integrability,interface,interface,2700,"ats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.mea",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3065,Integrability,interface,interface,3065,"ation. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3451,Integrability,depend,depend,3451,"rge images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPat",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3474,Integrability,interface,interface,3474,"rge images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPat",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3842,Integrability,interface,interface,3842,"used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3950,Integrability,interface,interface,3950,"us. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:4633,Integrability,interface,interface,4633,"lization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io.",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6545,Integrability,interface,interfaces,6545,"Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.featu",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6664,Integrability,interface,interfaces,6664,"easurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6906,Integrability,interface,interfaces,6906,"lasses to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qu",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:1154,Modifiability,plugin,plugins,1154,"x; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transf",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:2830,Modifiability,config,configure,2830,". qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display informa",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6255,Modifiability,plugin,plugins,6255,"s using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.f",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6321,Modifiability,plugin,plugins,6321," qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.open",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6392,Modifiability,plugin,plugins,6392,"s://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6515,Modifiability,plugin,plugins,6515,"various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath o",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:7160,Modifiability,plugin,plugins,7160,"sified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:8259,Modifiability,plugin,plugins,8259,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:309,Safety,detect,detect,309,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:346,Safety,detect,detection,346,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:439,Safety,detect,detect,439,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:520,Safety,detect,detect,520,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:560,Safety,detect,detection,560,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:5170,Security,access,accessing,5170,"native script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.o",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3646,Testability,log,logging,3646," dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:3667,Testability,log,logging,3667,"upath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:6567,Testability,log,logging,6567,"Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.featu",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:1641,Usability,simpl,simple,1641,"ng ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:1890,Usability,learn,learning,1890," Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:2436,Usability,simpl,simplify,2436,"atic methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:7440,Usability,learn,learning,7440,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:7891,Usability,learn,learning,7891,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:7976,Usability,learn,learning,7976,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/allpackages-index.html:8139,Usability,learn,learning,8139,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
https://qupath.github.io/javadoc/docs/constant-values.html:3481,Energy Efficiency,power,power,3481,"R; ""\t"". qupath.lib.images.servers.PixelCalibration. Modifier and Type; Constant Field; Value; public static final String; PIXEL; ""px""; public static final String; Z_SLICE; ""z-slice"". qupath.lib.images.servers.openslide.jna.OpenSlide. Modifier and Type; Constant Field; Value; public static final String; PROPERTY_NAME_BACKGROUND_COLOR; ""openslide.background-color""; public static final String; PROPERTY_NAME_BOUNDS_HEIGHT; ""openslide.bounds-height""; public static final String; PROPERTY_NAME_BOUNDS_WIDTH; ""openslide.bounds-width""; public static final String; PROPERTY_NAME_BOUNDS_X; ""openslide.bounds-x""; public static final String; PROPERTY_NAME_BOUNDS_Y; ""openslide.bounds-y""; public static final String; PROPERTY_NAME_COMMENT; ""openslide.comment""; public static final String; PROPERTY_NAME_MPP_X; ""openslide.mpp-x""; public static final String; PROPERTY_NAME_MPP_Y; ""openslide.mpp-y""; public static final String; PROPERTY_NAME_OBJECTIVE_POWER; ""openslide.objective-power""; public static final String; PROPERTY_NAME_QUICKHASH1; ""openslide.quickhash-1""; public static final String; PROPERTY_NAME_VENDOR; ""openslide.vendor"". qupath.lib.objects.DefaultPathObjectConnectionGroup. Modifier and Type; Constant Field; Value; public static final String; KEY_OBJECT_CONNECTIONS; ""OBJECT_CONNECTIONS"". qupath.lib.objects.TMACoreObject. Modifier and Type; Constant Field; Value; public static final String; KEY_CASE_ID; ""Case ID""; public static final String; KEY_OS_CENSORED; ""OS censored""; public static final String; KEY_OVERALL_SURVIVAL; ""Overall survival""; public static final String; KEY_RECURRENCE_FREE_SURVIVAL; ""Recurrence-free survival""; public static final String; KEY_RFS_CENSORED; ""RFS censored""; public static final String; LEGACY_KEY_UNIQUE_ID; ""Unique ID"". qupath.lib.objects.classes.PathClass. Modifier and Type; Constant Field; Value; public static final String; NAME_NEGATIVE; ""Negative""; public static final String; NAME_ONE_PLUS; ""1+""; public static final String; NAME_POSITIVE; ""Positive""",MatchSource.WIKI,javadoc/docs/constant-values.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html
https://qupath.github.io/javadoc/docs/constant-values.html:1864,Testability,log,logs,1864,"lue; public static final String; PROJECT_LOCATION; ""classifiers/pixel_classifiers"". qupath.lib.color.ColorDeconvolutionStains. Modifier and Type; Constant Field; Value; public static final String; DAB; ""DAB""; public static final String; EOSIN; ""Eosin""; public static final String; HEMATOXYLIN; ""Hematoxylin"". qupath.lib.common.GeneralTools. Modifier and Type; Constant Field; Value; public static final String; SYMBOL_MICROMETER; ""\u00b5m""; public static final char; SYMBOL_MU; '\u00b5'; public static final char; SYMBOL_SIGMA; '\u03c3'. qupath.lib.gui.JavadocViewer. Modifier and Type; Constant Field; Value; public static final String; PROP_JAVADOC_PATH; ""javadoc"". qupath.lib.gui.QuPathGUI. Modifier and Type; Constant Field; Value; public static final int; TOOLBAR_ICON_SIZE; 16. qupath.lib.gui.UserDirectoryManager. Modifier and Type; Constant Field; Value; public static final String; DIR_COLORMAPS; ""colormaps""; public static final String; DIR_CSS; ""css""; public static final String; DIR_EXTENSIONS; ""extensions""; public static final String; DIR_LOCALIZATION; ""localization""; public static final String; DIR_LOGS; ""logs""; public static final String; DIR_SCRIPTS; ""scripts"". qupath.lib.gui.commands.InteractiveObjectImporter. Modifier and Type; Constant Field; Value; public static final String; MIME_TYPE_GEOJSON; ""application/geo+json"". qupath.lib.gui.measure.ObservableMeasurementTableData. Modifier and Type; Constant Field; Value; public static final String; NAME_OBJECT_ID; ""Object ID"". qupath.lib.gui.tma.TMADataIO. Modifier and Type; Constant Field; Value; public static final String; TMA_DEARRAYING_DATA_EXTENSION; "".qptma"". qupath.lib.gui.viewer.recording.ViewTracker. Modifier and Type; Constant Field; Value; protected static final String; LOG_DELIMITER; ""\t"". qupath.lib.images.servers.PixelCalibration. Modifier and Type; Constant Field; Value; public static final String; PIXEL; ""px""; public static final String; Z_SLICE; ""z-slice"". qupath.lib.images.servers.openslide.jna.OpenSl",MatchSource.WIKI,javadoc/docs/constant-values.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:14328,Availability,reliab,reliable,14328,"use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives more reliable shapes. qupath.opencv.tools.OpenCVTools.labelImage(Mat, Mat, int). Use OpenCVTools.label(Mat, Mat, int) instead. qupathj.QuPath_Send_Overlay_to_QuPath.createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane). use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Deprecated Constructors. Constructor; Description; qupath.lib.gui.commands.MiniViewers.MiniViewerManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>). use MiniViewers.createManager(QuPathViewer, Collection) instead. ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:4949,Deployability,release,release,4949,"s may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. qupath.lib.images.servers.LabeledImageServer.Builder.useUniqueLabels(). in favor of LabeledImageServer.Builder.useInstanceLabels(). qupath.lib.images.servers.TileRequest.getPlane(). v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries.writePyramid(String). use OMEPyramidWriter.OMEPyramidSeries.writeSeries(String) instead. qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries.writePyramid(PyramidOMETiffWriter, IMetadata, int). use OMEPyramidWriter.OMEPyramidSeries.writeSeries(IFormatWriter, IMetadata, int) instead. qupath.lib.io.PathIO.getObjectFileExtensions(). use PathIO.getObjectFileExtensions(boolean) instead. qupath.lib.io.PathIO.readSerializedServerPath(File). This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:5051,Deployability,update,updated,5051,"s may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. qupath.lib.images.servers.LabeledImageServer.Builder.useUniqueLabels(). in favor of LabeledImageServer.Builder.useInstanceLabels(). qupath.lib.images.servers.TileRequest.getPlane(). v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries.writePyramid(String). use OMEPyramidWriter.OMEPyramidSeries.writeSeries(String) instead. qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries.writePyramid(PyramidOMETiffWriter, IMetadata, int). use OMEPyramidWriter.OMEPyramidSeries.writeSeries(IFormatWriter, IMetadata, int) instead. qupath.lib.io.PathIO.getObjectFileExtensions(). use PathIO.getObjectFileExtensions(boolean) instead. qupath.lib.io.PathIO.readSerializedServerPath(File). This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:11848,Deployability,update,updateServerURIs,11848,"). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroi",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:11905,Deployability,update,updateURIs,11905,"(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:12930,Deployability,release,releases,12930,"getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.ope",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:13100,Deployability,release,releases,13100,"I.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:2085,Energy Efficiency,green,green,2085,"ath.process.gui.ProcessingExtension.OpenCVCommands.actionFastCellCounts. Deprecated Methods. Method; Description; qupath.imagej.tools.IJTools.convertToAnnotation(ImagePlus, ImageServer<?>, Roi, double, ImagePlane). use instead IJTools.convertToAnnotation(Roi, double, double, double, ImagePlane). qupath.imagej.tools.IJTools.convertToDetection(ImagePlus, ImageServer<?>, Roi, double, ImagePlane). use instead IJTools.convertToDetection(Roi, double, double, double, ImagePlane). qupath.imagej.tools.IJTools.convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane). use instead IJTools.convertToPathObject(Roi, double, double, double, Function, ImagePlane). qupath.lib.common.ColorTools.makeRGB(int, int, int). Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. qupath.lib.common.ColorTools.makeRGBA(int, int, int, int). The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. qupath.lib.common.GeneralTools.getNameWithoutExtension(String). v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:12155,Integrability,interface,interfaces,12155,"Object.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:2430,Modifiability,extend,extends,2430,", Roi, double, ImagePlane). use instead IJTools.convertToDetection(Roi, double, double, double, ImagePlane). qupath.imagej.tools.IJTools.convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane). use instead IJTools.convertToPathObject(Roi, double, double, double, Function, ImagePlane). qupath.lib.common.ColorTools.makeRGB(int, int, int). Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. qupath.lib.common.ColorTools.makeRGBA(int, int, int, int). The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. qupath.lib.common.GeneralTools.getNameWithoutExtension(String). v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). u",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:3064,Modifiability,extend,extends,3064,"ments are provided in the order red, green, blue, alpha. qupath.lib.common.GeneralTools.getNameWithoutExtension(String). v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPre",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:3238,Modifiability,extend,extends,3238,"hich does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadP",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:3677,Modifiability,extend,extends,3677,"uilder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.cre",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:3828,Modifiability,extend,extends,3828,"ata.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:9781,Modifiability,extend,extends,9781,"gletonPathClass(PathClass). since v0.4.0 in favor of PathClass.getSingleton(PathClass). qupath.lib.objects.classes.PathClassFactory.getThreePlus(PathClass). since v0.4.0, use PathClass.getThreePlus(PathClass). qupath.lib.objects.classes.PathClassFactory.getTwoPlus(PathClass). since v0.4.0, use PathClass.getTwoPlus(PathClass). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObject(PathObject). since v0.4.0; use PathObjectHierarchy.addObject(PathObject) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectBelowParent(PathObject, PathObject, boolean). since v0.4.0; use PathObjectHierarchy.addObjectBelowParent(PathObject, PathObject, boolean). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.o",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:10476,Modifiability,extend,extends,10476,"n). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.Para",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:11450,Modifiability,plugin,plugins,11450,"hObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usua",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:11586,Modifiability,plugin,plugins,11586,"ect.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scr",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:14845,Modifiability,extend,extends,14845,"use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives more reliable shapes. qupath.opencv.tools.OpenCVTools.labelImage(Mat, Mat, int). Use OpenCVTools.label(Mat, Mat, int) instead. qupathj.QuPath_Send_Overlay_to_QuPath.createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane). use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Deprecated Constructors. Constructor; Description; qupath.lib.gui.commands.MiniViewers.MiniViewerManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>). use MiniViewers.createManager(QuPathViewer, Collection) instead. ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:13307,Performance,load,loadImageData,13307,".duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:3942,Safety,avoid,avoid,3942,"cePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:12848,Safety,detect,detectionCentroidDistances,12848,"Is(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassif",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:12953,Safety,detect,detectionCentroidDistances,12953,"getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.ope",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:13014,Safety,detect,detectionToAnnotationDistances,13014,"r consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, S",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:13123,Safety,detect,detectionToAnnotationDistances,13123,"I.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:10594,Usability,clear,clearPathObjects,10594," confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/deprecated-list.html:10651,Usability,clear,clearChildObjects,10651,"to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
https://qupath.github.io/javadoc/docs/help-doc.html:1656,Integrability,interface,interfaces,1656,"low you to navigate to specific declarations and summary pages, including: All Packages, All Classes and Interfaces. Search; You can search for definitions of modules, packages, types, fields, methods, system properties and other terms defined in the API. These items can be searched using part or all of the name, optionally using ""camelCase"" abbreviations, or multiple search terms separated by whitespace. Some examples:. ""j.l.obj"" matches ""java.lang.Object""; ""InpStr"" matches ""java.io.InputStream""; ""math exact long"" matches ""java.lang.Math.absExact(long)"". Refer to the Javadoc Search Specification for a full description of search features. Kinds of Pages; The following sections describe the different kinds of pages in this collection. Overview; The Overview page is the front page of this API document and provides a list of all packages with a summary for each. This page can also contain an overall description of the set of packages. Package; Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required an",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:1853,Integrability,interface,interface,1853," defined in the API. These items can be searched using part or all of the name, optionally using ""camelCase"" abbreviations, or multiple search terms separated by whitespace. Some examples:. ""j.l.obj"" matches ""java.lang.Object""; ""InpStr"" matches ""java.io.InputStream""; ""math exact long"" matches ""java.lang.Math.absExact(long)"". Refer to the Javadoc Search Specification for a full description of search features. Kinds of Pages; The following sections describe the different kinds of pages in this collection. Overview; The Overview page is the front page of this API document and provides a list of all packages with a summary for each. This page can also contain an overall description of the set of packages. Package; Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are al",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:1888,Integrability,interface,interface,1888," defined in the API. These items can be searched using part or all of the name, optionally using ""camelCase"" abbreviations, or multiple search terms separated by whitespace. Some examples:. ""j.l.obj"" matches ""java.lang.Object""; ""InpStr"" matches ""java.io.InputStream""; ""math exact long"" matches ""java.lang.Math.absExact(long)"". Refer to the Javadoc Search Specification for a full description of search features. Kinds of Pages; The following sections describe the different kinds of pages in this collection. Overview; The Overview page is the front page of this API document and provides a list of all packages with a summary for each. This page can also contain an overall description of the set of packages. Package; Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are al",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:2610,Integrability,interface,interfaces,2610,"ist of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displa",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:3319,Integrability,interface,interfaces,3319,"Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get t",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:3594,Integrability,interface,interface,3594,"interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page cont",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:4654,Integrability,interface,interfaces,4654,"ackages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page contains an alphabetic index of all classes and interfaces contained in the documentation, including annotation interfaces, enum classes, and record classes. Index; The Index contains an alphabetic index of all classes, interfaces, constructors, methods, and fields in the documentation, as well as summary pages such as All Packages, All Classes and Interfaces. This help file applies to API documentation generated by the standard doclet. ",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:4718,Integrability,interface,interfaces,4718,"ackages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page contains an alphabetic index of all classes and interfaces contained in the documentation, including annotation interfaces, enum classes, and record classes. Index; The Index contains an alphabetic index of all classes, interfaces, constructors, methods, and fields in the documentation, as well as summary pages such as All Packages, All Classes and Interfaces. This help file applies to API documentation generated by the standard doclet. ",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:4826,Integrability,interface,interfaces,4826,"ackages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page contains an alphabetic index of all classes and interfaces contained in the documentation, including annotation interfaces, enum classes, and record classes. Index; The Index contains an alphabetic index of all classes, interfaces, constructors, methods, and fields in the documentation, as well as summary pages such as All Packages, All Classes and Interfaces. This help file applies to API documentation generated by the standard doclet. ",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:3356,Modifiability,inherit,inheritance,3356,"eld Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Seri",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:3428,Modifiability,inherit,inherit,3428,"ry; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description.",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/help-doc.html:2984,Testability,log,logical,2984,"scription, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
https://qupath.github.io/javadoc/docs/index-all.html:19724,Availability,down,downsample,19724,"or ; annotations with the given classification. addLabel(PathClass, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by PathClass, where the label represents the integer label used for ; annotations with the given classification. addLabels(Map<PathClass, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the given class. addLabelsByName(Map<String, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:19945,Availability,down,downsample,19945,"abel represents the integer label used for ; annotations with the given classification. addLabels(Map<PathClass, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the given class. addLabelsByName(Map<String, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificatio",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:20317,Availability,down,downsample,20317,"teger>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificationMeasurementManager, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to specified objects from a PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to selected objects based upon the output o",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:36289,Availability,toler,tolerance,36289," System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be written. allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51058,Availability,avail,availableChannels,51058,"es.PreferencePane.ViewerPreferences;  ; autoSetAnnotationClassProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Classification that should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.Vie",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51178,Availability,avail,available,51178,"thod in class qupath.lib.gui.prefs.PathPrefs. Classification that should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.im",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51201,Availability,avail,availableFontsProperty,51201," should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. b",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51306,Availability,avail,available,51306,"ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.Rendered",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51323,Availability,avail,availableStylesProperty,51323,"lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. ba",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51431,Availability,avail,available,51431,"ult saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:65403,Availability,down,downsample,65403,"iTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in pixels. brushScaleByMag - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushScaleByMagProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). BrushToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BrushToolEventHandler() - Constructor for class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; buffer(ROI, double) - Static method in class qupath.lib.roi.RoiTools. Buffer the specified ROI, dilating (or eroding) by the specified distance. BufferedImageOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to dis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:87527,Availability,down,downsample,87527,"/1+/2+/3+ based on a single (usually intensity-based) measurement. CellIntensityClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.CellIntensityClassificationCommand. Constructor. cells() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept cell objects only. CELLS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept cells. CellTools - Class in qupath.lib.objects. Helper class for working with PathObjects that represent cells. CellTools() - Constructor for class qupath.lib.objects.CellTools;  ; CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; CENTER_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; CENTER_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; centerImage() - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the current image in the viewer, while keeping the same downsample factor. centerROI(ROI) - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the specified ROI in the viewer. centroidDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI centroids within a specified distance. centroids() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI centroids. centroids(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects in pixel units. centroids(Collection<? extends PathObject>, PixelCalibration) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects using a fixed pixel calibration. CENTROIDS - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only detection centroids, not boundaries.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:98789,Availability,checkpoint,checkpoint,98789,"ass qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - C",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:98859,Availability,checkpoint,checkpoint,98859,"recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that suppor",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:98891,Availability,checkpoint,checkpoint,98891,"te(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:98967,Availability,checkpoint,checkpoint,98967,"gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARIT",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:99003,Availability,checkpoint,checkpointAndRun,99003,"ase from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:99083,Availability,checkpoint,checkpoint,99083,"ej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:99159,Availability,checkpoint,checkpointAndRun,99159,".) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Me",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:99247,Availability,checkpoint,checkpoint,99247,"r;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be Open",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:99301,Availability,checkpoint,checkpointAndRun,99301,"ath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. CLASSIFICATION - Enum constant i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:99394,Availability,checkpoint,checkpoint,99394,". checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. CLASSIFICATION - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:129315,Availability,mask,mask,129315,"boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert x and y coordinates from the component space to the image space. componentPointToImagePoint(Point2D, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. compress(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Compresses the specified text by removing extra space, according to the syntax. compression(OMEPyramidWriter.CompressionType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the output compression type. compressSourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. computeAngle(StainVector, StainVector) - Static method in class qupath.lib.color.StainVector. Calculate the angle between two stain vectors, in degrees. computeArgMaxHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:129562,Availability,mask,mask,129562,"nate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. compress(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Compresses the specified text by removing extra space, according to the syntax. compression(OMEPyramidWriter.CompressionType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the output compression type. compressSourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. computeAngle(StainVector, StainVector) - Static method in class qupath.lib.color.StainVector. Calculate the angle between two stain vectors, in degrees. computeArgMaxHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.Prop",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:149095,Availability,avail,available,149095,"TION_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_FULL_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_VIEW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; copyAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; copyActions - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; CopyActions() - Constructor for class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; copyAnnotationsToClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Attempt to annotation objects to the system clipboard, if available. copySelectedAnnotationsToCurrentPlane(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Copy the selected objects and add them to the plane currently active in the viewer. copySelectedAnnotationsToPlane(int, int) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. copySelectedAnnotationsToPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the specified hierarchy to the specified image plane. copySelectedAnnotationsToPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified image plane. copySelectedObjectsToClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Attempt to copy selected objects to the system clipboard, if available. copySelectedObjec",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:150043,Availability,avail,available,150043,".commands.Commands. Attempt to annotation objects to the system clipboard, if available. copySelectedAnnotationsToCurrentPlane(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Copy the selected objects and add them to the plane currently active in the viewer. copySelectedAnnotationsToPlane(int, int) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. copySelectedAnnotationsToPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the specified hierarchy to the specified image plane. copySelectedAnnotationsToPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified image plane. copySelectedObjectsToClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Attempt to copy selected objects to the system clipboard, if available. copySelectedObjectsToPlane(int, int) - Static method in class qupath.lib.scripting.QP. Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. copySelectedObjectsToPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected objects in the specified hierarchy to the specified image plane. copySelectedObjectsToPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected objects in the current hierarchy to the specified image plane. copyTableContentsToClipboard(PathTableData<?>, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table and copy it to the clipboard. copyToClipboard(Object) - Static method in class qupath.lib.gui.scripting.QPEx. Try to copy an object to the clipboard. Core() - Constructor for class qupath.opencv.ops.ImageOps.Core;  ; coun",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:152276,Availability,avail,available,152276,"ating Point annotations. CountingDialogCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.CountingDialogCommand. Constructor. countMissing() - Method in class qupath.lib.io.UriUpdater. Get a count of the items flagged as missing. countObjectsWithClass(Collection<? extends PathObject>, PathClass, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Count the number of PathObjects in a collection with a specified class or base class. countProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing any count associated with the text (may be null). countReplacements() - Method in class qupath.lib.io.UriUpdater. Get a count of the number of replacements for missing items. countsTransformProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how counts should be transformed before being; shown in the histogram. cpu() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CPU backend and target, if available. create() - Static method in class qupath.lib.gui.SharedThreadPoolManager. Create a new instance. create() - Static method in class qupath.lib.gui.ToolManager. Create a new instance. create(boolean) - Static method in class qupath.lib.gui.tools.WebViews. Create a new WebView. create(int) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a simple channel threshold. create(int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values between a minimum and maximum (inclusive). create(Gson, TypeToken<R>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory;  ; create(String, double, boolean, List<Ch",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:163522,Availability,mask,mask,163522,"yBand to define the colormap associated with an image band (channel). createBand(String, int, double, double) - Static method in class qupath.lib.color.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.analysis.heatmaps.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.color.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:164172,Availability,avail,available,164172,"DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). createButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing only the graphic and not any text. createCellObject(ROI, ROI) - Static method in class qupath.lib.objects.PathObjects. Create a cell object. createCellObject(ROI, ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a cell object with an optional classification. createCellObject(ROI, ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a cell object wit",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:185838,Availability,avail,available,185838,"eImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore with a specified tile cache size, in bytes. createImageStack(ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Create an ImageStack containing the specified ImageProcessors. createIndexColorModel(int, int, int, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a linear LUT based on a RGB color. createIndexedColorModel(Map<Integer, Integer>, boolean) - Static method in class qupath.lib.color.ColorModelFactory. Create an indexed colormap for a labelled (indexed color) image. createIndexedColorModel8bit(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorModelFactory. Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. createIndexedColorModel8bit(ColorMaps.ColorMap, int) - Static method in class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:189909,Availability,down,downsample,189909,"in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, z-slice and time point. createInstance(String, double, int, int, int, int, ImagePlane) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box and ImagePlane. createInstance(String, double, Collection<? extends ROI>) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROIs. createInstance(String, double, ImageRegion) - Static method in class qupath.lib.regions.RegionRequest. Create a request corresponding to a specified ImageRegion. createInstance(String, double, ROI) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROI. createInstance(String, int, double, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region, downsample and resolution level. createInstance(String, RegionRequest) - Static method in class qupath.lib.regions.RegionRequest. Create a request that matches another request but with a different path. createInstance(Collection<? extends ROI>) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains the specified ROIs. createInstance(Stage) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath on the JavaFX Application thread. createInstance(Stage, HostServices) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from a JavaFX application. createInstance(ImageServer<?>) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). createInstance(ImageServer<?>, double) - Static method in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:190801,Availability,down,downsample,190801,"reateInstance(String, int, double, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region, downsample and resolution level. createInstance(String, RegionRequest) - Static method in class qupath.lib.regions.RegionRequest. Create a request that matches another request but with a different path. createInstance(Collection<? extends ROI>) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains the specified ROIs. createInstance(Stage) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath on the JavaFX Application thread. createInstance(Stage, HostServices) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from a JavaFX application. createInstance(ImageServer<?>) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). createInstance(ImageServer<?>, double) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). createInstance(ImageServer<?>, int, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region and resolution level of an image. createInstance(ROI) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains a specified ROI. createJavaCompletion(Class<?>) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a class. createJavaCompletion(Class<?>, Field) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a field. createJavaCompletion(Class<?>, Method) - Static method in cla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:195417,Availability,mask,mask,195417,"LoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the maximum of all channels. createMeanChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the mean of all channels. createMeasurement(String, double)",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:195720,Availability,mask,mask,195720,"eferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the maximum of all channels. createMeanChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the mean of all channels. createMeasurement(String, double) - Static method in class qupath.lib.measurements.MeasurementFactory. Deprecated.; Create a measurement with a double value. createMeasurement(String, float) - Static method in class qupath.lib.measurements.MeasurementFactory. Deprecated.; Create a measurement wi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:203059,Availability,mask,mask,203059,"extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. createObjectDescriptionsDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to display object descriptions. createObjectFunction(Function<ROI, PathObject>, BiConsumer<PathObject, Number>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a (bi)function to generate an object from a ROI and a number. createObjectInputStream(InputStream) - Static method in class qupath.lib.io.PathIO. Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask. createObjectRemovedEvent(Object, PathObjectHierarchy, PathObject, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects were removed. createObjects(Raster, int, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from one band of a raster containing integer labels. createObjects(Mat, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.opencv.tools.OpenCVTools. Create objects by tracing contours in a labelled image. createObjects(SimpleImage, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a labelled image. createObjects(ROI, Function<ROI, PathObject>) - Method in class qupath.lib.objects.utils.Tiler. Create a list ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:213103,Availability,mask,mask,213103,"omMeasurement<S, T>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProcessor(MeasurementProcessor.CustomMeasurement<S, T>...) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selec",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:213342,Availability,mask,mask,213342,"- Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selection. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:213565,Availability,mask,mask,213565,"jects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selection. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>, Function<URI, String>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, cu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:213807,Availability,mask,mask,213807," - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selection. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>, Function<URI, String>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. createRectangle(double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Create a rectangular Geometry for the specified bounding box. createRectangleEventHandler() - Static method in cla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:216556,Availability,mask,mask,216556,"s.ml.PixelClassifierUI. Create a ComboBox that can be used to select the pixel classification region filter. createRelativePathProperty(String) - Method in class qupath.lib.gui.UserDirectoryManager. Create a read only property for a relative path of the user subdirectory. createRenderedServer(QuPathViewer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. createRenderedServer(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a la",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:216741,Availability,mask,mask,216741,"ctoryManager. Create a read only property for a relative path of the user subdirectory. createRenderedServer(QuPathViewer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. createRenderedServer(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) -",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:216878,Availability,mask,mask,216878,"ges.servers.RenderedImageServer. Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. createRenderedServer(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for rotating the image in the current viewer (for display only). createRowGrid(Node...) - St",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:217036,Availability,mask,mask,217036,"(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for rotating the image in the current viewer (for display only). createRowGrid(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). createRowGr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:224170,Availability,mask,mask,224170,"path.lib.images.servers.openslide.OpenslideImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.SparseImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer. Returns null (does not support ServerBuilders). createShape(MouseEvent, double, double, boolean, Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. createShape(MouseEvent, double, double, boolean, Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; createShapeMask(int, int, Shape, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createSharedClassificationMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.SharedThreadPoolManager. Create a completion service that uses a shared threadpool for the application. createSharedTileBoundaryMerger(double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. createSharedTileBoundaryMerger(double, double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. createShowSystemInfoDialog(QuPathGUI) - Stati",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:224902,Availability,toler,tolerance,224902," coordinates. createShape(MouseEvent, double, double, boolean, Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; createShapeMask(int, int, Shape, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createSharedClassificationMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.SharedThreadPoolManager. Create a completion service that uses a shared threadpool for the application. createSharedTileBoundaryMerger(double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. createSharedTileBoundaryMerger(double, double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. createShowSystemInfoDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing key system information relevant for QuPath. createSingleStageAction(Supplier<Stage>) - Static method in class qupath.lib.gui.commands.Commands. Create a command that generates a persistent single dialog on demand. createSingleStageAction(Supplier<Stage>, String) - Static method in class qupath.lib.gui.commands.Commands. Create a named command that generates a persistent single dialog on demand. createSingleThreadExecutor(Object) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.com",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:225102,Availability,toler,tolerance,225102,"hod in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createSharedClassificationMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.SharedThreadPoolManager. Create a completion service that uses a shared threadpool for the application. createSharedTileBoundaryMerger(double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. createSharedTileBoundaryMerger(double, double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. createShowSystemInfoDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing key system information relevant for QuPath. createSingleStageAction(Supplier<Stage>) - Static method in class qupath.lib.gui.commands.Commands. Create a command that generates a persistent single dialog on demand. createSingleStageAction(Supplier<Stage>, String) - Static method in class qupath.lib.gui.commands.Commands. Create a named command that generates a persistent single dialog on demand. createSingleThreadExecutor(Object) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to prompt the user to specify an annotation to add. createStainVector(String, double, double, double) - Static method in class qupath.lib.color.StainVector. Create a stain v",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:231134,Availability,avail,available,231134,"TMACoreObject(double, double, double, double, boolean, ImagePlane) - Static method in class qupath.lib.objects.PathObjects. Create a TMA core object with an ellipse ROI. createTmaCoreView(QuPathGUI) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for TMA core objects. createTMAGrid(String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for the current image. createTMAGrid(String, String, boolean, double, ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid, fit within a specified region. createTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for an image. createToggleButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing both the text and graphic if available. createToggleButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing only the graphic and not any text. createTool(EventHandler<MouseEvent>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified MouseEvent handler. createTool(EventType<T>, EventHandler<T>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified event handler. createTouchingMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createTracedGeometry(Raster, double, double, int, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a traced geometry from a raster. createTracedGeometry(SimpleImage, double, double, RegionRequest) - Static method in class q",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:233823,Availability,avail,available,233823,"lass qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Create training data in the format required by this classifier. createTrainingData(Collection<ImageData<BufferedImage>>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingData(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>>, Map<PathClass, Integer>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get a classifier training map, using a predefined label map (which determines which classifications to use). CreateTrainingImageCommand - Class in qupath.process.gui.commands. Command to generate a SparseImageServer from multiple image regions across a project. CreateTrainingImageCommand() - Constructor for class qupath.process.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:234042,Availability,avail,available,234042,"Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Create training data in the format required by this classifier. createTrainingData(Collection<ImageData<BufferedImage>>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingData(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>>, Map<PathClass, Integer>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get a classifier training map, using a predefined label map (which determines which classifications to use). CreateTrainingImageCommand - Class in qupath.process.gui.commands. Command to generate a SparseImageServer from multiple image regions across a project. CreateTrainingImageCommand() - Constructor for class qupath.process.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. createU",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:238116,Availability,avail,available,238116,"Server that treats a particular sub-region of another ImageServer as a full image, ; i.e. CroppedImageServer(ImageServer<BufferedImage>, ImageRegion) - Constructor for class qupath.lib.images.servers.CroppedImageServer. Create an ImageServer that represents a cropped region of another (larger) server. cropTiles(boolean) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set whether the tiler is set to crop the output to the input parent. cross3(double[], double[]) - Static method in class qupath.lib.color.StainVector. Compute the cross product of two vectors. cssDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the css directory. CssLanguage - Class in qupath.lib.gui.scripting.languages. Class for representing CSS in QuPath. CssLanguage() - Constructor for class qupath.lib.gui.scripting.languages.CssLanguage. Constructor for JSON language. cuda() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available. cuda16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available, with 16-bit floating point. currentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current s",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:238227,Availability,avail,available,238227,"eredImage>, ImageRegion) - Constructor for class qupath.lib.images.servers.CroppedImageServer. Create an ImageServer that represents a cropped region of another (larger) server. cropTiles(boolean) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set whether the tiler is set to crop the output to the input parent. cross3(double[], double[]) - Static method in class qupath.lib.color.StainVector. Compute the cross product of two vectors. cssDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the css directory. CssLanguage - Class in qupath.lib.gui.scripting.languages. Class for representing CSS in QuPath. CssLanguage() - Constructor for class qupath.lib.gui.scripting.languages.CssLanguage. Constructor for JSON language. cuda() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available. cuda16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available, with 16-bit floating point. currentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current selection. cut() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; cutAction - Variable in class qupath.lib.gui.s",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:253980,Availability,avail,available,253980,"idDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:267017,Availability,down,down,267017,"lParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - M",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:267174,Availability,down,down,267174,"nModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:269609,Availability,avail,available,269609,"r for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). doWatershed(ImageProcessor, ImageProcessor, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply a watershed transform. doWatershed(ImageProcessor, ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271050,Availability,down,downsample,271050,"s qupath.imagej.processing.Watershed. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271150,Availability,down,downsample,271150," from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271206,Availability,down,downsample,271206,"reshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271297,Availability,down,downsample,271297,"ply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Con",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271370,Availability,down,downsample,271370,"n) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271469,Availability,down,downsample,271469,"onstrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences(",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271488,Availability,down,downsample,271488,"enting regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271588,Availability,down,downsample,271588,". doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271606,Availability,down,downsamples,271606,"leModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.se",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271714,Availability,down,downsamples,271714,"ble, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string r",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271814,Availability,down,downsamples,271814,"ble, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string r",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271882,Availability,down,downsamples,271882,"hed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:271987,Availability,down,downsample,271987,"ath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pai",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283031,Availability,error,error,283031,"workflow.DefaultScriptableWorkflowStep;  ; equals(Object) - Method in class qupath.lib.regions.ImagePlane;  ; equals(Object) - Method in class qupath.lib.regions.ImageRegion;  ; equals(Object) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). esc",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283120,Availability,error,error,283120,"qupath.lib.regions.ImagePlane;  ; equals(Object) - Method in class qupath.lib.regions.ImageRegion;  ; equals(Object) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283140,Availability,error,error,283140,"s(Object) - Method in class qupath.lib.regions.ImageRegion;  ; equals(Object) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283225,Availability,error,error,283225,"ect) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283257,Availability,error,error,283257,"nRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estima",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283347,Availability,error,error,283347,"ion.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283391,Availability,error,error,283391,"path.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, doub",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283490,Availability,error,error,283490,"upath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283523,Availability,error,errors,283523,"upath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283531,Availability,error,error,283531,"; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283633,Availability,error,error,283633,"Classifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283648,Availability,error,error,283648,"fication (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extra",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283773,Availability,error,error,283773,"l to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:284297,Availability,avail,available,284297,"foMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the image type of a PathImageServer. estimateStains(int[], float[], float[], float[], ColorDeconvolutionStains, double, double, double, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Check colors only currently applies to H&E. estimateStains(BufferedImage, ColorDeconvolutionStains, boolean) - Static method in class qupath.lib.analys",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:284648,Availability,down,downsample,284648,"n class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the image type of a PathImageServer. estimateStains(int[], float[], float[], float[], ColorDeconvolutionStains, double, double, double, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Check colors only currently applies to H&E. estimateStains(BufferedImage, ColorDeconvolutionStains, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Estimate two stains from a BufferedImage, with default parameter settings. estimateStains(BufferedImage, ColorDeconvolutionStains, double, double, double, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Estimate two stains from a BufferedImage. EstimateStainVectors - Class in qupath.lib.analysis.algorithms. Code for ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:289402,Availability,avail,available,289402,"_LIST - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; EXPORT_ORIGINAL - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; EXPORT_RENDERED - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; exportAllObjectsToGeoJson(String, String, String...) - Static method in class qupath.lib.scripting.QP. Export all objects (excluding root object) to an output file as GeoJSON. exportAllObjectsToGeoJson(String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export all objects (excluding root object) to an output file as GeoJSON. exportImageActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportImageActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; exportJson(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally export a JSON file that includes label information and image/label pairs, where available. exportMeasurements(File) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportMeasurements(OutputStream) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportObjectsAsGeoJSON(File, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""Fea",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:295333,Availability,mask,mask,295333,"opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:295509,Availability,mask,mask,295509,"objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:295826,Availability,mask,mask,295826,"erver<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in class qupath.imagej.gui.IJExtension. Extract an ImageJ overlay for the specified region. extractPixels(Mat, double[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractPixels(Mat, float[]) - Static method in class qupa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:296106,Availability,mask,mask,296106,"in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in class qupath.imagej.gui.IJExtension. Extract an ImageJ overlay for the specified region. extractPixels(Mat, double[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractPixels(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float[] array. extractROI(ImageServer<BufferedImage>, PathObject, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Similar to IJExtension.extractROI(ImageServer, ROI, RegionRequest, boolean), except t",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:296396,Availability,mask,mask,296396,"pecified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in class qupath.imagej.gui.IJExtension. Extract an ImageJ overlay for the specified region. extractPixels(Mat, double[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractPixels(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float[] array. extractROI(ImageServer<BufferedImage>, PathObject, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Similar to IJExtension.extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). extractROI(ImageServer<BufferedImage>, ROI, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Extract a region of interest from an image as an ImageJ ImagePlus. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:297976,Availability,avail,available,297976,"j.gui.IJExtension. Similar to IJExtension.extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). extractROI(ImageServer<BufferedImage>, ROI, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Extract a region of interest from an image as an ImageJ ImagePlus. extractROIWithOverlay(ImageServer<BufferedImage>, PathObject, PathObjectHierarchy, RegionRequest, boolean, OverlayOptions) - Static method in class qupath.imagej.gui.IJExtension. Extract an image region as an ImagePlus, optionally setting ImageJ Rois corresponding to QuPath objects. extractServerBuilder(Path) - Static method in class qupath.lib.io.PathIO. Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. extractZStack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.opencv.tools.OpenCVTools. Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. extractZStack(ImageServer<BufferedImage>, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract a list of Mats, where each Mat corresponds to a z-slice. eyeTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the eyeTracking property of this tracker. F. factory(GeometryFactory) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the GeometryFactory, which can define a precision model in JTS. FEATURE - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a feature for a pixel classifier. FEATURE_COLLECTION - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request that objects are export as a FeatureCollection. FeatureCollection - Class in qupath.lib.io. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollectio",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:301864,Availability,mask,mask,301864,"leMenuActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions;  ; FileMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ExportImageActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ExportSnapshotActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ProjectActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.TmaActions - Class in qupath.lib.gui.actions.menus;  ; files(File...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as files. filesOnly - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; fill(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill the pixels of an image with a specific value. fill(Mat, Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill the pixels of an image with a specific value, corresponding to a mask. FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_HOLES - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; FillAnnotationHolesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. FillAnnotationHolesPlugin() - Constructor for class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; fillAnnotations(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether annotations are drawn as 'filled' shapes. fillAnnotationsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; fillDetections(boolean) - M",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:333104,Availability,avail,available,333104,"- Method in class qupath.lib.gui.scripting.languages.PlainLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PropertiesLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.XmlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.YamlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the ScriptAutoCompletor object that takes care of this language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurem",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:333228,Availability,avail,available,333228,"th.lib.gui.scripting.languages.PropertiesLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.XmlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.YamlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the ScriptAutoCompletor object that takes care of this language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:333361,Availability,avail,available,333361,"tAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.YamlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the ScriptAutoCompletor object that takes care of this language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.pr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:333606,Availability,avail,available,333606,"his language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:334019,Availability,avail,available,334019,"() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. getBaseStyle() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. getBaseStyle() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Optionally return a base style for the code area. getBatchIndex() - Method in clas",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:338103,Availability,avail,available,338103,"alues, using a specified maximum value. getBooleanParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a boolean parameter value (or its default) for the specified key. getBorderColor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the border color set for this viewer. getBoundaryClass(PathClass) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy. Get the classification to be used for the annotation boundary, given the classification of the annotated region. getBoundaryDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the boundaries of two ROIs. getBoundaryDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. getBoundaryLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their corresponding boundary labels, if available. getBoundaryStrategy() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the strategy for handling the boundaries of area annotations. getBoundaryThickness() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy. Get the boundary thickness, in pixels. getBounds(ImageRegion) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. getBounds(ImageRegion, Rectangle) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. getBounds(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to bounding box of a ROI. getBounds2D(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle2D corresponding to bounding box of a ROI. getBounds2D(ROI, Rectangle2D) - Static method in class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:342573,Availability,avail,available,342573,"oundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get a list of ServerBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:343444,Availability,avail,available,343444,"read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:350822,Availability,avail,available,350822,"de. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of ch",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:351723,Availability,checkpoint,checkpoints,351723,"lt colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:352355,Availability,avail,available,352355,"Metadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). getCircularStructuringElement(int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. getClassification(ImageServer<BufferedImage>, int, int, int, int) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Reque",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:353040,Availability,reliab,reliable,353040,"jects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). getCircularStructuringElement(int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. getClassification(ImageServer<BufferedImage>, int, int, int, int) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Request the classification for a specific pixel. getClassificationLabels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Map between integer labels and classifications. getClassificationLabels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get map between labels and classification names. getClassifications() - Method in class qupath.lib.objects.PathObject. Get the components of the PathClass as an unmodifiable set. getClassifier() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the PixelClassifier performing the classification. getClassifyBoundaryStrategy(PathClass, double) - Static method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:354338,Availability,avail,available,354338,"PixelClassifierTools. Request the classification for a specific pixel. getClassificationLabels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Map between integer labels and classifications. getClassificationLabels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get map between labels and classification names. getClassifications() - Method in class qupath.lib.objects.PathObject. Get the components of the PathClass as an unmodifiable set. getClassifier() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the PixelClassifier performing the classification. getClassifyBoundaryStrategy(PathClass, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. getClassProbability() - Method in class qupath.lib.objects.PathObject. Request the classification probability, or Double.NaN if no probability is available. getClassProbability() - Method in class qupath.lib.objects.PathROIObject;  ; getClassProbability() - Method in class qupath.lib.objects.PathRootObject;  ; getClipboardText(boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getClusters(BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get clusters of connected objects, where connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) corresponds to color represented by this stain vector. getColor() - Method in interface qupath.lib.display.ChannelDisplayInfo. Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. getColor() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColor() - Method in class qupath.lib.display.settings.ChannelSettings. Get the color used to display the channel, or null",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:356835,Availability,avail,available,356835,"et a packed ARGB representation of the (interpolated) color at the specified value,. getColorDeconvolutionStains() - Method in class qupath.lib.images.ImageData. Get the stains defined for this image, or null if this is not a brightfield image suitable for color deconvolution. getColorDeconvolutionStainsAsString(ColorDeconvolutionStains, int) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Get a String representation of the stains and background. getColorForObject(PathObject) - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the display color for a specified object, according to the settings of this mapper. getColorMap() - Method in class qupath.lib.gui.ColorMapCanvas. Return the currently displayed ColorMaps.ColorMap. getColorMapper() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the color mapper, which is effectively a lookup table. getColorMaps() - Static method in class qupath.lib.color.ColorMaps. Get an unmodifiable map representing all the currently-available colormaps. getColormapsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where colormaps should be written. getColorModel() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer. Get the ColorModel for this renderer (may be null). getColorModel() - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay;  ; getColorModel() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getColorModel(ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColorRGB() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, use PathObject.getColor() instead. getColorRGB(int...) - Static method in class qupath.lib.scripting.QP. Deprecated.; Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). getColors(ColorMaps.ColorMap, int, boolean) - Static method in class qupath.lib.color.ColorMaps. Get an array of packed RGB val",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:365489,Availability,avail,available,365489,". Get the path to where user directory for storing CSS styles. getCurrentConsoleControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the current preferred data file version. getCurrentEditorControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentHierarchy() - Static method in class qupath.lib.scripting.QP. Get the PathObjectHierarchy of the current ImageData. getCurrentImageData() - Static method in class qupath.lib.scripting.QP. Get the path to the current ImageData. getCurrentImageName() - Static method in class qupath.lib.scripting.QP. Get the name of the current image. getCurrentImageNameWithoutExtension() - Static method in class qupath.lib.scripting.QP. Get the name of the current image, removing any file extension. getCurrentImages(QuPathGUI) - Static method in class qupath.lib.gui.dialogs.ProjectDialogs. Get the ProjectImageEntry for each of the current images open in QuPath, if available. getCurrentLanguage() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Gets the value of the currentLanguage property. getCurrentParent() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getCurrentParent() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; getCurrentParent() - Method in class qupath.process.gui.WandToolEventHandler;  ; getCurrentROI() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current ROI, i.e. getCurrentScriptTab() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentServer() - Static method in class qupath.lib.scripting.QP. Get the ImageServer of the current ImageData. getCurrentServerPath() - Static method in class qupath.lib.scripting.QP. Get the path to the ImageServer of the current ImageData. getCurrentSyntax() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Gets the value of the current",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:376477,Availability,down,downsample,376477,"ers.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. getDerivedPathClass(PathClass, String) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathCla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:380125,Availability,avail,available,380125,"ms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:385627,Availability,down,downsample,385627,"charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:385778,Availability,down,downsample,385778,"ion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qup",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:385893,Availability,down,downsample,385893,"ui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.im",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386011,Availability,down,downsample,386011,"s.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nR",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386182,Availability,down,downsample,386182,"hod in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386282,Availability,down,downsample,386282,"hod in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Metho",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386525,Availability,down,downsample,386525,"Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386686,Availability,down,downsample,386686,"th.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highes",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386938,Availability,down,downsample,386938,"downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get th",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:387083,Availability,avail,available,387083,"downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get th",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:389086,Availability,error,error,389086,") - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. getErrorWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the error writer for script output. getEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get an unmodifiable list of all events. getEventsAtTime(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events at a specified time (exactly). getEventType() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the hierarchy event type. getExcludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.MeasurementMapper. Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. getExpandToWindow() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Query whether the image is allowed to expand beyond its preferred width and height to fill the window. getExtension(File) - Static method in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:391870,Availability,avail,available,391870,"iter;  ; getExtensions() - Method in class qupath.lib.images.writers.PngWriter;  ; getExtensions() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get an unmodifiable set containing the possible extensions for this language. getExtensionsDirectory() - Method in class qupath.lib.gui.ExtensionClassLoader. Directory containing extensions. getExtensionsPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where extensions should be stored. getEyeFixatedIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getEyePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getFeature(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the value of the specified feature. getFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Request the variable importance values from the last trained RTrees classifier, if available. getFeatureName(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the name of the specified feature. getFeatureNames() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; getFeatureOp() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get an ImageDataOp used for feature calculation. getFile() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the file associated with this ViewTracker. getFile() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the underlying file. getFile() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get a File object representing the local image file - or null if no file could be found. getFile() - Method in class qupath.lib.scripting.ScriptParameters. Get the file where the script is located. getFilesOnly() - Method in class qupath.lib.images.servers.bioformats.Bi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:399628,Availability,avail,available,399628,"Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:402149,Availability,avail,available,402149," Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathToo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:402639,Availability,avail,available,402639,"ng of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:412590,Availability,avail,available,412590,"ion. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:412723,Availability,error,error,412723,"f columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the r",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:414648,Availability,avail,available,414648,"ss qupath.opencv.ml.PatchClassifierParams. Get the requested input resolution for the image. getInputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the requested inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstance() - Static method in class qupath.lib.gui.BuildInfo. Get the shared BuildInfo instance. getInstance() - Static method in class qupath.lib.gui.ExtensionClassLoader. Get a singleton instance of the ExtensionClassLoader. getInstance() - Static method in class qupath.lib.gui.JavadocViewer. Get the main (singleton) instance of JavadocViewer. getInstance() - Static method in class qupath.lib.gui.QuPathGUI. Get the static instance of the current QuPath GUI. getInstance() - Static method in class qupath.lib.gui.scripting.languages.CssLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.GroovyLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.lang",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:414805,Availability,avail,available,414805,"d inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstance() - Static method in class qupath.lib.gui.BuildInfo. Get the shared BuildInfo instance. getInstance() - Static method in class qupath.lib.gui.ExtensionClassLoader. Get a singleton instance of the ExtensionClassLoader. getInstance() - Static method in class qupath.lib.gui.JavadocViewer. Get the main (singleton) instance of JavadocViewer. getInstance() - Static method in class qupath.lib.gui.QuPathGUI. Get the static instance of the current QuPath GUI. getInstance() - Static method in class qupath.lib.gui.scripting.languages.CssLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.GroovyLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.JsonLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.MarkdownLanguage. Get the static instan",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:416646,Availability,avail,available,416646,"gui.scripting.languages.JsonLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.MarkdownLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.PlainLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.PropertiesLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.XmlLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.YamlLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.UserDirectoryManager. Get the singleton instance of the UserDirectoryManager. getInstance() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the static instance of BioFormatsServerOptions, available to servers being constructed. getInstance() - Static method in class qupath.lib.io.GsonTools. Get default Gson, capable of serializing/deserializing some key QuPath classes. getInstance() - Static method in class qupath.lib.objects.DefaultPathObjectComparator. Get shared comparator instance to sort PathObjects repeatably. getInstance() - Static method in class qupath.lib.roi.DefaultROIComparator. Get a static instance of this comparator, to avoid needing to construct it. getInstance(boolean) - Static method in class qupath.lib.io.GsonTools. Get default Gson, optionally with pretty printing enabled. getInstance(int, int) - Static method in class qupath.lib.geom.ImmutableDimension. Get an ImmutableDimension representing the specified width and height. getInstance(String) - Static method in class qupath.lib.objects.classes.PathClass;  ; getInstance(String, Integer) - Static method in class qupath.lib.images.servers.ImageChannel. Get a channel instance with the specified n",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:425923,Availability,avail,available,425923,"litAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not be preserved. getLayout() - Method in class qupath.opencv.dnn.DnnModelParams. Get a string representing the axes layout that the model expects as input. getLength() - Method in class qupath.lib.roi.EllipseROI;  ; getLength() - Method in class qupath.lib.roi.RectangleROI;  ; getLength() - Method in class qupath.lib.roi.AreaROI;  ; getLength() - Method in class qupath.lib.roi.GeometryROI;  ; getLength() - Method in interface qupath.lib.roi.interfaces.ROI. Get ROI length. getLength() - Method in class qupath.lib.roi.LineROI;  ; getLength() - Method in class qupath.lib.roi.PointsROI;  ; getLength() - Method in class qupath.lib.roi.PolygonROI;  ; getLength() - Method in class qupath.lib",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:431029,Availability,avail,available,431029,"h.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Ge",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432265,Availability,mask,mask,432265,"ound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.dis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432335,Availability,mask,mask,432335,"ound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.dis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432343,Availability,avail,available,432343,"ound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.dis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432458,Availability,mask,mask,432458,"ification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432600,Availability,mask,mask,432600,". getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlace",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432644,Availability,mask,mask,432644,". getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlace",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432652,Availability,avail,available,432652,". getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlace",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432763,Availability,mask,masked,432763,"fication of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432889,Availability,mask,masked,432889,"s.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:434212,Availability,down,downsample,434212,".DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute maximum features from all four rotations. getMaxGreen() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the green channel (default = 255). getMaxHeight() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum height of the density map. getMaxNormalizedCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin, divided by the total counts across the entire histogram. getMaxRed() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the red channel (default = 255). getMaxROIHandleSize() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum size for which ROI handles may be drawn. getMaxThreads() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the maximum number of",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:443813,Availability,down,downsample,443813,"ing) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:448955,Availability,checkpoint,checkpoint,448955,"imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qup",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:455837,Availability,avail,available,455837,"penCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. getNearestNeighbor(PathObject) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:456345,Availability,checkpoint,checkpoint,456345,". getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. getNearestNeighbor(PathObject) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the nearest neighbor for the specified object. getNearestNeighbor(PathObject, BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the nearest neighbor for the specified object, filtered by a predicate. getNegative(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Negative classification. getNegative(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:481935,Availability,down,downsampling,481935,"vision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:483174,Availability,avail,available,483174,"ges.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel height, in the stored units. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel height in microns, if available - or Double.NaN otherwise. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel height in microns, or Double.NaN if this is unknown. getPixelHeightUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel height unit. getPixelLayer(ImageData<?>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Request the pixel layer from an ImageData. getPixels(SimpleImage, boolean) - Static method in class qupath.lib.analysis.images.SimpleImages. Get the pixel values for the image. getPixelSize() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the requested pixel size for the density map. getPixelType() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getPixelType() - Method in interface qupath.lib.images.servers.ImageServer. The bit-depth and type of the image. getPixelType() - Method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:485042,Availability,avail,available,485042,"pe() - Method in interface qupath.lib.images.servers.ImageServer. The bit-depth and type of the image. getPixelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns the bit-depth for individual pixels in the image. getPixelValue(int, ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method. getPixelValue(int, ColorTransformer.ColorTransformMethod, ColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. getPixelWidth() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel width, in the stored units. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel width in microns, if available - or Double.NaN otherwise. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel width in microns, or Double.NaN if this is unknown. getPixelWidthUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel width unit. getPlaceholderText() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. getPlainStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get simple styling that does not apply any classes. getPlane() - Method in class qupath.lib.images.servers.TileRequest. Deprecated.; v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). getPlane() - Method in class qupath.lib.regions.ImageRegion. Deprecated.; v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:485502,Availability,avail,available,485502,"thod. getPixelValue(int, ColorTransformer.ColorTransformMethod, ColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. getPixelWidth() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel width, in the stored units. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel width in microns, if available - or Double.NaN otherwise. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel width in microns, or Double.NaN if this is unknown. getPixelWidthUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel width unit. getPlaceholderText() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. getPlainStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get simple styling that does not apply any classes. getPlane() - Method in class qupath.lib.images.servers.TileRequest. Deprecated.; v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). getPlane() - Method in class qupath.lib.regions.ImageRegion. Deprecated.; v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). getPlane(int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. getPlane(ImageRegion) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. getPlane(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1,",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:488419,Availability,down,downsample,488419,"PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:488502,Availability,down,downsample,488502,"PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:488627,Availability,down,downsamples,488627,"nce v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superp",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:488767,Availability,down,downsample,488767,"ing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:488929,Availability,down,downsamples,488929,"n that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicron",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:490337,Availability,down,downsample,490337,"rList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:494012,Availability,avail,available,494012,ojectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into quartiles. getQuPath() - Method in class qupath.lib.gui.actions.CommonActions. Get the QuPath instance associated with these actions. getQuPath() - Static method in class qupath.lib.gui.scripting.QPEx. Get the current QuPath instance. getQuPathVersion() - Method in class qupath.imagej.gui.IJExtension. Returns the version stored ,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:498023,Availability,avail,available,498023,"ified maximum value. getRegion() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getRegion() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the region representing this control, so it may be added to a scene. getRegion() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getRegion() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the region node that can be added to a scene graph to display the viewers. getRegionMap() - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Get an unmodifiable Map containing image regions to paint on this overlay. getRegionRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the region request. getRegionRequest() - Method in class qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; getRenderer() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer used with this overlay, which may be null. getRenderer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEvent",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:505766,Availability,down,down,505766,"ouble) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:507881,Availability,avail,available,507881," be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-selected object from the hierarchy. getSelectedObject() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the current primary selected object. getSelectedObject() - Static method in class qupath.lib.scripting.QP. Get the primary selected object within the current PathObjectHierarchy. getSelectedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get an unmodifiable set containing all the currently-selected objects. getSelectedObjects() - Static method in class qupath.lib.scripting.QP. Get the selected objects within the current PathObjectHierarchy. getSelectedROI() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the ROI of the selected object, if available, or null. getSelectedROI() - Static method in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:511037,Availability,down,downsample,511037,"resentation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the separator used in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. getServer() - Method in class qupath.lib.images.ImageData. Get the ImageServer. getServer(ImageRegion, double) - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Request the server for a specific downsample. getServerBounds() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an ImageRegion representing the full width and height of the current image. getServerBuilder() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a ImageServerBuilder.ServerBuilder that can be used to open this image. getServerBuilderFactory() - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory to handle ServerBuilders. getServerHeight() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. getServerPath() - Method in class qupath.lib.images.ImageData. Get the path of the ImageServer. getServerType() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getServerType() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.ChannelDis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:514815,Availability,avail,available,514815,"faces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnShape. Get a copy of the internal dimensions array. getShape(ROI) - Static method in class qupath.lib.roi.RoiTools. Get a Shape object representing a ROI. getShapeROI(Area, ImagePlane) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape. getShapeROI(Shape, ImagePlane, double) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape with a specified 'flatness'. getShowAllRGBTransforms() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that all available color transforms are shown for RGB images. getShowAnnotations() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowCellBoundaries() - Method in class qupath.lib.gui.viewer.OverlayOptions. Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. getShowCellNuclei() - Method in class qupath.lib.gui.viewer.OverlayOptions. Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. getShowConnections() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowDetections() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowGrid() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowLocation() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Get the value of ViewerPlusDisplayOptions.showLocationProperty(). getShowNames() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowOverview() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOpti",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:520258,Availability,recover,recover,520258,"counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStage() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Get the stage for this script editor. getStage() - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Get the stage for display. getStage() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Get the stage. getStain(int) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). getStainNumber(StainVector) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the number for a specific stain (1, 2 or 3). getStainProjection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of projection of pixel OD onto stain OD. getStainRejection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of rejection of pixel OD onto stain OD. getStains(boolean) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a collection of all the stains. getStartTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the first recorded frame. getStartX() - Method in class qupath.lib.gui.viewer.GridLines. Starting x coordinate for any counting grid (usually 0). getSt",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:524948,Availability,avail,available,524948,".gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:534451,Availability,avail,available,534451,"lass qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV. Returns zero - indicating no overlap... getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - M",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:537818,Availability,avail,available,537818,"aN if this is unknown. getTimeToEvent() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Get the stored time to event (units are unspecified). getTimeUnit() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the time unit for a time series. getTimeUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get the time unit for a time series. getTMACore(int, int) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(int, int) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get the TMACoreObject for a specified grid location. getTMACore(String) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(String) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Retrieve a TMA core based upon its name. getTMACoreForPixel(TMAGrid, double, double) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extract a list of TMA cores from an object hierarchy. getTMAGrid() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:539386,Availability,avail,available,539386,"s qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. getTool(String) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Return the PathTool corresponding to the specified String. getToolAction(PathTool) - Method in class qupath.lib.gui.ToolManager. Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. getToolBar() - Method in class qupath.lib.gui.QuPathGUI. Get the main toolbar. getToolManager() - Method in class qupath.lib.gui.QuPathGUI. Get the ToolManager that handles available and selected tools. getTools() - Method in class qupath.lib.gui.ToolManager. Get a read-only list of all available tools. getTPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible time point. getTrainData() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get training data. getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMCla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:539501,Availability,avail,available,539501," with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. getTool(String) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Return the PathTool corresponding to the specified String. getToolAction(PathTool) - Method in class qupath.lib.gui.ToolManager. Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. getToolBar() - Method in class qupath.lib.gui.QuPathGUI. Get the main toolbar. getToolManager() - Method in class qupath.lib.gui.QuPathGUI. Get the ToolManager that handles available and selected tools. getTools() - Method in class qupath.lib.gui.ToolManager. Get a read-only list of all available tools. getTPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible time point. getTrainData() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get training data. getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getTr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:542450,Availability,avail,available,542450,".classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). getType() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the type of path objects used in the export. getTypeAdapterFactory() - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Get a TypeAdapterFactory to handle ObjectClassifier instances. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Get the TypeAdapterFactory default used for FeatureExtractor objects. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Get the TypeAdapterFactory default used for PixelClassifier objects. getTypeAdaptor(Class<T>) - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the releas",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:542922,Availability,avail,available,542922,"ors. Get the TypeAdapterFactory default used for FeatureExtractor objects. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Get the TypeAdapterFactory default used for PixelClassifier objects. getTypeAdaptor(Class<T>) - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:543401,Availability,down,download,543401,"to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:543448,Availability,avail,available,543448,"to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:551679,Availability,avail,available,551679,"DocsUrl(String) - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). getView() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the main JavaFX component representing this viewer. getViewer() - Method in class qupath.lib.gui.QuPathGUI. Get the currently active viewer. getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; getViewer() - Method in class qupath.process.gui.WandToolEventHandler;  ; getViewerActions() - Method in class qupath.lib.gui.QuPathGUI. Get the associations associated with QuPath image viewers. getViewerManager() - Method in class qupath.lib.gui.actions.ViewerActions;  ; getViewerManager() - Method in class qupath.lib.gui.QuPathGUI. Get the viewer manager, which gives access to all the viewers available within this QuPath instance. getVoronoiFaces() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces as JTS Geometry objects. getVoronoiROIs(Geometry) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces, convered to ROI objects. getWandSensitivity() - Static method in class qupath.process.gui.WandToolEventHandler. Query the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. getWandSigmaPixels() - Static method in class qupath.process.gui.WandToolEventHandler. Query the Gaussian sigma value used to smooth the image when applying the wand. getWandUseOverlays() - Static method in class qupath.process.gui.WandToolEventHandler. Query whether the wand tool should be influenced by pixel values painted on image overlays. getWidth() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getWidth() - Method in interface qupath.lib.analy",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:556746,Availability,avail,available,556746,"ice index for the region. getZ() - Method in class qupath.lib.roi.AreaROI;  ; getZ() - Method in class qupath.lib.roi.EllipseROI;  ; getZ() - Method in class qupath.lib.roi.GeometryROI;  ; getZ() - Method in class qupath.lib.roi.LineROI;  ; getZ() - Method in class qupath.lib.roi.PointsROI;  ; getZ() - Method in class qupath.lib.roi.PolygonROI;  ; getZ() - Method in class qupath.lib.roi.PolylineROI;  ; getZ() - Method in class qupath.lib.roi.RectangleROI;  ; getZ() - Method in interface qupath.lib.roi.interfaces.ROI. Get z-stack slice index. getZoomToFitDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; getZPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible z-slice. getZSpacing() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the z-spacing, in the stored units. getZSpacingMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the z-spacing in microns, if available - or Double.NaN otherwise. getZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the z-spacing in microns, or Double.NaN if this is unknown. getZSpacingUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred z-spacing unit. GITHUB - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GitHubProject - Interface in qupath.lib.gui.extensions. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo - Class in qupath.lib.gui.extensions. Helper class to represent a GitHub repository. grabHandle(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Try to grab a ROI handle. GRADIENT_MAGNITUDE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Gradient magnitude. gradientMagnitude(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:571193,Availability,avail,available,571193,"ashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:573543,Availability,error,errors,573543,"h and height information in microns is known. hasPointROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Returns true if a PathObject has a Point ROI. hasROI() - Method in class qupath.lib.objects.PathObject. Returns true if this object has a ROI. hasROI() - Method in class qupath.lib.roi.RoiEditor. Returns true if this editor currently has a ROI. hasServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if there is currently an ImageServer being displayed in this viewer. hasString(String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasSuffix() - Method in class qupath.lib.common.Version. Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. hasUnseenErrors() - Method in class qupath.lib.gui.commands.LogViewerCommand. Boolean binding indicating whether there are any unseen errors. hasUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid upper bound. hasZAndT() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker has Z and T information. hasZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the z-spacing is known in microns. hConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Horizontal concatenation for a Mat. headerText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog header text. height - Variable in class qupath.lib.geom.ImmutableDimension. Height of the ImmutableDimension. height - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.Scat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:599537,Availability,mask,mask,599537,"e, i.e. importFromCSV(File, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a file into the TMAGrid of an object hierarchy. importFromCSV(String, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a String into the TMAGrid of an object hierarchy. importObjectsFromFile(String) - Static method in class qupath.lib.scripting.QP. Import all PathObjects from the given file. importPreferences(InputStream) - Static method in class qupath.lib.gui.prefs.PathPrefs. Import preferences from a stream. imposeMaxima(FloatProcessor, Roi) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. imposeMaxima(FloatProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. imposeMinima(FloatProcessor, Roi) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. INACTIVE_SERVER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INCLUDE_IGNORED - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Generate objects for ignored classes (default is not to). includeOnlyColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607488,Availability,avail,available,607488,"ng positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.li",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:617852,Availability,avail,available,617852,"xels. isCircle(double, double) - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. isCompatible(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Test if this completion is compatible with the provided text. isCompatible(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Check if an image display is 'compatible' with this one. isCompatibleMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). isComplete() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setComplete() has been called. isCudaAvailable() - Static method in class qupath.opencv.dnn.DnnTools. Query whether CUDA is reported as available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Check if the default JavaFX style is used. isDerivedClass() - Method in class qupath.lib.objects.classes.PathClass. Returns true if #getParentClass() != null. isDerivedFrom(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class, or any ancestor class, is equal to the specified parent class. isDetection() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a detection. isDirectory(String) - Static method in class qupath.lib.scripting.QP. Query if a file path corresponds to a directory. isDynamic() - Method in interface qupath.lib.measurements.Measurement. Deprecated. isEditable() - Method in class qupath.lib.objects.PathDetectionObject. Always returns false - d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:626578,Availability,avail,available,626578,"path.lib.roi.PolylineROI;  ; isLine() - Method in class qupath.lib.roi.RectangleROI;  ; isLine() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI consists of line segments and does not enclose an area. isLinux() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Linux. isLocationVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the cursor location is visible, false otherwise. isLocked() - Method in class qupath.lib.objects.PathObject. Query the locked status. isLocked() - Method in class qupath.lib.objects.PathROIObject. Query the locked status for the object, indicating whether it should be editable or not. isMac() - Static method in class qupath.lib.common.GeneralTools. Return true if running on macOS. isMemorySufficient(RegionRequest, ImageData<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. isMissing() - Method in class qupath.lib.objects.TMACoreObject. Query the 'missing' flag for this core. isModified() - Method in class qupath.lib.gui.scripting.ScriptTab. Return. isModifiedProperty() - Method in class qupath.lib.gui.scripting.ScriptTab. Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. isMultipartExtension(String) - Static method in class qupath.lib.common.GeneralTools. Returns true for file extensions containing multiple parts (or 'dots'). isMutable() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isMutable() - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. isNegativeClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:633035,Availability,down,down,633035,"ActionTools. Specify that an Action has a meaningful 'selected' status. isSelected() - Method in class qupath.lib.gui.SelectableItem. Returns true if the value of the selected property equals SelectableItem.getItem(). isSelected(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Query whether a specific object is selected. isShapeROI(ROI) - Static method in class qupath.lib.roi.RoiTools. Returns true if the ROI is not null and is not a point ROI. isShowing() - Method in class qupath.lib.display.settings.ChannelSettings. Get whether the channel should be displayed. isShowing() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if the viewer is visible, and attached to a scene. isSignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is a signed integer representation. isSpaceDown() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if the spacebar was pressed when this component was focussed, and is still being held down. isStandalone() - Method in class qupath.lib.gui.QuPathGUI. Query whether this is a standalone QuPathGUI instance, as flagged during startup. isStringMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a String value only. isStructureChangeEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the hierarchy structure has changed, e.g. isSubtractMode(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:634626,Availability,avail,available,634626,"; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a TIFF image. isTile() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents an image tile. isTitle - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; isTitle() - Method in class qupath.lib.plugins.parameters.EmptyParameter. Returns true if the parameter should be considered a title. isTMACore() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents a TMA core. isTMADearrayed() - Static method in class qupath.lib.scripting.QP. Returns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is r",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:642880,Availability,avail,available,642880,"reObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. label(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. label(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. labeledImageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the labelled image, which determines the export file format. labeledImageId(String) - Method in class qupath.lib.images.writers.TileExporter. Specify an identifier appended to the filename for labeled images. LabeledImageServer - Class in qupath.lib.images.servers. A special ImageServer implementation that doesn't have a backing image, b",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:651666,Availability,down,downsample,651666," legendVisible - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; legendVisible - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; legendVisible - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; LENGTH - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Length of the shape; for area geometries, this provides the perimeter. leq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold. leq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold between two arrays. levels(Collection<ImageServerMetadata.ImageResolutionLevel>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify resolution levels, where the largest image should come first. levelsFromDownsamples(double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify downsample values for pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:652728,Availability,down,downsample,652728,"r pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:665690,Availability,avail,available,665690," method in class qupath.lib.scripting.QP. Make an inverse annotation using the current ImageData and its current selected objects. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Make an inverse annotation for the selected objects, storing the command in the history workflow. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the specified ImageData and current selected objects. makeInverseAnnotation(ImageData<?>, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). makeInverseAnnotation(ImageData<?>, PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeInverseAnnotation(PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeMeasurementHistogram(Collection<PathObject>, String, int) - Static method in class qupath.lib.analysis.stats.Histogram. Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. makeOD(double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a single pixel value to an optical density as max(0, -log10(val/max). makeODByLUT(float, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[])",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:665979,Availability,avail,available,665979," command in the history workflow. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the specified ImageData and current selected objects. makeInverseAnnotation(ImageData<?>, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). makeInverseAnnotation(ImageData<?>, PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeInverseAnnotation(PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeMeasurementHistogram(Collection<PathObject>, String, int) - Static method in class qupath.lib.analysis.stats.Histogram. Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. makeOD(double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a single pixel value to an optical density as max(0, -log10(val/max). makeODByLUT(float, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 ent",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:672507,Availability,mask,maskFunction,672507,"charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Pi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:672642,Availability,mask,mask,672642,"uilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A fun",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:672695,Availability,mask,maskImageNames,672695,"od in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:672789,Availability,mask,maskImageNamesProperty,672789,"rOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; mat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:672934,Availability,mask,maskObject,672934,".lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects accordin",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673051,Availability,mask,mask,673051,"iable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassNa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673134,Availability,mask,mask,673134,"iable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassNa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673140,Availability,mask,maskObjectAndSplit,673140,"mponent from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673265,Availability,mask,mask,673265,"int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchCl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673348,Availability,mask,mask,673348,"int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchCl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673452,Availability,mask,maskSupplier,673452,"a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673566,Availability,mask,mask,673566,".experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples)",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:673685,Availability,mask,mask,673685,"specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples) of all viewers to match the current viewer. matToBufferedImage(Mat) - Static method in class qupath.opencv.tool",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:674557,Availability,down,downsamples,674557,"k supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples) of all viewers to match the current viewer. matToBufferedImage(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a BufferedImage. matToBufferedImage(Mat, ColorModel) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a BufferedImage. matToImagePlus(String, Mat...) - Static method in class qupath.opencv.tools.OpenCVTools. Convert an OpenCV MatVector into an ImageJ ImagePlus. matToImagePlus(Mat, String) - Static method in class qupath.opencv.tools.OpenCVTools. Convert an OpenCV Mat into an ImageJ ImagePlus. matToImageProcessor(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. matToSimpleImage(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a SimpleImage. max() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate the maximum value of an array. max(Mat) - ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:681821,Availability,mask,masking,681821,"eviation. meanFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D mean filter to all channels of an image, with symmetric boundary padding. meanFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D mean filter to all channels of an image. MEASURE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; MEASURE_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_DETECTIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_TMA_CORES - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_TMA - Variable in class qupath.lib.gui.actions.CommonActions;  ; measureHaralick(SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Compute mean Haralick features from a SimpleImage, with optional masking. measurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Extract the specified measurement from a PathObject. Measurement - Interface in qupath.lib.measurements. Basic interface to define a measurement. MeasurementExportCommand - Class in qupath.lib.gui.commands. Dialog box to export measurements. MeasurementExportCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.MeasurementExportCommand. Creates a simple GUI for MeasurementExporter. MeasurementExporter - Class in qupath.lib.gui.tools. Helper class for exporting the measurements of one or more entries in a project. MeasurementExporter() - Constructor for class qupath.lib.gui.tools.MeasurementExporter;  ; MeasurementFactory - Class in qupath.lib.measurements. Deprecated. MeasurementFactory() - Constructor for class qupath.lib.measurements.MeasurementFactory. Deprecated.;  ; MeasurementList - Interface in qupath.lib.measurements. Interface defining a feature ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:696734,Availability,mask,mask,696734,"BrightnessContrastSliderPane. Value of the minimum slider. minWidth(double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; MISSING - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that does not appear to exist or is inaccessible. missingValue(double) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder;  ; mkdirs(String) - Static method in class qupath.lib.scripting.QP. Ensure directories exist for the specified path, calling file.mkdirs() if not. ML() - Constructor for class qupath.opencv.ops.ImageOps.ML;  ; modality(Modality) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the modality of the dialog. modelType(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type, used by OpenCVDnn.buildModel(). morphologicalReconstruction(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply morphological operation using marker and mask images. morphologicalReconstruction(Mat, Mat) - Static method in class qupath.opencv.tools.ProcessingCV. Compute morphological reconstruction. morphologicalReconstruction(SimpleModifiableImage, SimpleImage) - Static method in class qupath.lib.analysis.algorithms.MorphologicalReconstruction. Apply morphological reconstruction with the specified marker and mask images. MorphologicalReconstruction - Class in qupath.imagej.processing. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction - Class in qupath.lib.analysis.algorithms. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MorphologicalReconstruction() - Constructor for class qupath.imagej.processing.MorphologicalReconstruction;  ; MorphologicalReconstruction() - Constructor for class qupath.lib.analysis.algorithms.MorphologicalReconstruction;  ; mouseClicked(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEven",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:697096,Availability,mask,mask,697096,"der;  ; mkdirs(String) - Static method in class qupath.lib.scripting.QP. Ensure directories exist for the specified path, calling file.mkdirs() if not. ML() - Constructor for class qupath.opencv.ops.ImageOps.ML;  ; modality(Modality) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the modality of the dialog. modelType(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type, used by OpenCVDnn.buildModel(). morphologicalReconstruction(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply morphological operation using marker and mask images. morphologicalReconstruction(Mat, Mat) - Static method in class qupath.opencv.tools.ProcessingCV. Compute morphological reconstruction. morphologicalReconstruction(SimpleModifiableImage, SimpleImage) - Static method in class qupath.lib.analysis.algorithms.MorphologicalReconstruction. Apply morphological reconstruction with the specified marker and mask images. MorphologicalReconstruction - Class in qupath.imagej.processing. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction - Class in qupath.lib.analysis.algorithms. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MorphologicalReconstruction() - Constructor for class qupath.imagej.processing.MorphologicalReconstruction;  ; MorphologicalReconstruction() - Constructor for class qupath.lib.analysis.algorithms.MorphologicalReconstruction;  ; mouseClicked(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseClicked(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; mouseClicked(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; mouseDragged(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseDragged(MouseEvent) - Method in class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:700598,Availability,mask,mask,700598,"ventHandler;  ; MOVE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Move tool. MOVE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; MOVE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; MoveToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler() - Constructor for class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; MoveToolEventHandler.ViewerMover - Class in qupath.lib.gui.viewer.tools.handlers. Helper class for panning a QuPathViewer (reasonably) smoothly. multiChannel(String, List<ColorTransforms.ColorTransform>, Function<double[][], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. multiChannel(String, List<ColorTransforms.ColorTransform>, Function<double[][], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires multiple channels as input. multichannelOutput(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification. MULTICLASS_PROBABILITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a probability value, where each pixel is potentially part of multiple classes. multiply(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Multiply all pixels by a constant. multiply(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:714364,Availability,avail,available,714364,"ages.servers.bioformats.OMEPixelParser.Builder;  ; Normalizer - Class in qupath.opencv.ml.objects.features. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. noSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if no objects are selected. nResolutions() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nResolutions() - Method in interface qupath.lib.images.servers.ImageServer. Number of resolutions for the image. nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Nucleus/cell area ratio (only relevant to cell objects). NULL_CLASS - Static variable in class qupath.lib.objects.classes.PathClass. Default PathClass that represents no classification. numCommandThreadsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying the preferred number of threads QuPath should use for multithreaded commands. numDimensions() - Method in class qupath.opencv.dnn.DnnShape. The total number of dimensions, i.e. NumericParameter<S> - Class in qupath.lib.plugins.parameters. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:717898,Availability,avail,available,717898,"and to apply a pre-trained object classifier to an image. ObjectClassifierLoadCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ;",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:750967,Availability,avail,available,750967,"put representing potential TMA core labels. parseTransformMatrix(String) - Static method in class qupath.lib.roi.GeometryTools. Parse the matrix (String) to create and return an AffineTransformation. paste() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; paste() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request paste from the system clipboard. paste() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; PASTE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; PASTE_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) ex",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:767540,Availability,avail,available,767540,"- Class in qupath.lib.experimental.pixels. Builder class for a PixelProcessor. PixelProcessorUtils - Class in qupath.lib.experimental.pixels. Utility functions to help with the PixelProcessor class. PixelProcessorUtils() - Constructor for class qupath.lib.experimental.pixels.PixelProcessorUtils;  ; pixelSize(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the requested pixel size to use with requesting image regions. pixelSize(double, double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). pixelSize(PixelCalibration) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Requested pixel size to determine the resolution of the density map, in calibrated units. pixelSizeCalibrated() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if pixel width and height calibration information is available for the image. pixelSizeMicrons(Number, Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the pixel sizes, in microns. pixelSizeMicrons(Number, Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify the pixel width and height in microns (the most common calibration value). pixelSnapping - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pixelType(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType as a String, e.g. pixelType(PixelType) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; pixelType(PixelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the bit-depth of the image. pixelType(PixelType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType. PixelType - Enum Class in qupath.li",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:768697,Availability,avail,available,768697,"y the pixel sizes, in microns. pixelSizeMicrons(Number, Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify the pixel width and height in microns (the most common calibration value). pixelSnapping - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pixelType(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType as a String, e.g. pixelType(PixelType) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; pixelType(PixelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the bit-depth of the image. pixelType(PixelType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType. PixelType - Enum Class in qupath.lib.images.servers. Image bit-depths and types. placeholderTextProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ;",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:823239,Availability,avail,available,823239,"ctConnections;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathROIObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.TMACoreObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; readFile(File) - Method in class qupath.lib.gui.scripting.ScriptTab. Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). readFileAsString(File) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file into a single String. readFileAsString(String) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file given by the specified path into a single String. readHierarchy() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. readHierarchy(File) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readHierarchy(InputStream) - Static method in class qupath.lib.io.PathIO. Read a PathObjectHierarchy from a saved data file (omitting all other contents). readHierarchy(Path) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the ImageData associated with this entry, or create a new ImageData if none is currently present. readImageData(File, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from a File into an existing ImageData object, or create a new one if required. readImageData(InputStream, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from an InputStream into an existing ImageData object, or creating a new on",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:834729,Availability,down,down,834729,"ns based upon pixel values. refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Apply clipping based on the current parent object. refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Apply clipping based on the current parent object. refineROIByParent(ROI) - Method in class qupath.process.gui.WandToolEventHandler. Apply clipping based on the current parent object. refresh() - Method in class qupath.lib.gui.commands.PathObjectGridView. Refresh the data in the grid view. refresh() - Method in class qupath.lib.gui.ExtensionClassLoader. Ensure all Jars in the extensions directory (and one subdirectory down) are available. refresh() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Refresh the current style. REFRESH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; REFRESH_DUPLICATE_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; REFRESH_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; refreshAllEditors() - Method in class qupath.lib.gui.panes.PreferencePane. Request that all the property editors are regenerated. refreshChannelOptions() - Method in class qupath.lib.display.ImageDisplay. Refresh the channel options. refreshCombo() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the available measurements. refreshDuplicateIDs() - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshDuplicateI",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:834739,Availability,avail,available,834739,"ns based upon pixel values. refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Apply clipping based on the current parent object. refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Apply clipping based on the current parent object. refineROIByParent(ROI) - Method in class qupath.process.gui.WandToolEventHandler. Apply clipping based on the current parent object. refresh() - Method in class qupath.lib.gui.commands.PathObjectGridView. Refresh the data in the grid view. refresh() - Method in class qupath.lib.gui.ExtensionClassLoader. Ensure all Jars in the extensions directory (and one subdirectory down) are available. refresh() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Refresh the current style. REFRESH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; REFRESH_DUPLICATE_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; REFRESH_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; refreshAllEditors() - Method in class qupath.lib.gui.panes.PreferencePane. Request that all the property editors are regenerated. refreshChannelOptions() - Method in class qupath.lib.display.ImageDisplay. Refresh the channel options. refreshCombo() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the available measurements. refreshDuplicateIDs() - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshDuplicateI",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:835465,Availability,avail,available,835465,"rrent parent object. refresh() - Method in class qupath.lib.gui.commands.PathObjectGridView. Refresh the data in the grid view. refresh() - Method in class qupath.lib.gui.ExtensionClassLoader. Ensure all Jars in the extensions directory (and one subdirectory down) are available. refresh() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Refresh the current style. REFRESH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; REFRESH_DUPLICATE_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; REFRESH_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; refreshAllEditors() - Method in class qupath.lib.gui.panes.PreferencePane. Request that all the property editors are regenerated. refreshChannelOptions() - Method in class qupath.lib.display.ImageDisplay. Refresh the channel options. refreshCombo() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the available measurements. refreshDuplicateIDs() - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshDuplicateIDs(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Refresh the measurement values. refreshExtensions(boolean) - Method in class qupath.lib.gui.ExtensionManager. Check the extensions directory, loading any new extensions found there. refreshFileContents() - Method in class qupath.lib.gui.scripting.ScriptTab;  ; refreshHistogram() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the currently-displayed histogram (e.g. refreshID() - Method in class qupath.lib.objects.PathObject. Regenerate a new random I",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:838620,Availability,down,downsample,838620,"athGUI. Refresh the title bar in the main QuPath window. refreshTitles() - Method in class qupath.lib.gui.viewer.ViewerManager. Request that viewers refresh their titles. region(int, int, int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the region to export based on a bounding box. region(ImageRegion) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the region (in terms of the full resolution image space) for export. region(ImageRegion) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the region to export, including the z-slice and time point. region(ImageRegion) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed. region(RegionRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the region to use for processing. region(RegionRequest) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed, including downsample. REGION - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Region class. REGION - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Region class. RegionFilter - Interface in qupath.lib.gui.viewer. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters - Enum Class in qupath.lib.gui.viewer. Standard classification regions (hopefully all you will ever need). RegionRequest - Class in qupath.lib.regions. Class for defining an image region that can also be used to request these region from an ImageServer. regionToGeometry(ImageRegion) - Static method in class qupath.lib.roi.GeometryTools. Convert an ImageRegion to a rectangular Geometry. registerAlias(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register an alias label for a specified subtype. registerBuilder(DnnModelBuil",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:842732,Availability,avail,available,842732,"MAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing paths. relativeToUserDirectory() - Method in class qupath.lib.gui.FileCopier. Specify that the copying is relative to the QuPath user directory. RELOAD_DATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; reloadImageData(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Reload the specified image data from a previously saved version,if available. remove(String) - Method in interface qupath.lib.measurements.MeasurementList. Remove a named measurement. remove(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Remove a resource within the project. REMOVE_COLUMN - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; REMOVE_FRAGMENTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; REMOVE_ROW - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RemoveActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeAllImages(Collection<ProjectImageEntry<T>>, boolean) - Method in interface qupath.lib.projects.Project. Remove multiple images from the project, optionally including associated data. removeByAreas(ByteProcessor, doub",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:859905,Availability,avail,available,859905,"ould be applied. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.process.gui.WandToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestStartMoving(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer start panning with a velocity determined by dx and dy. requestStopMoving() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer stop any panning immediately. requestUserDirectory(boolean) - Static method in class qupath.lib.gui.commands.Commands. Request the current user directory, optionally prompting the user to request a directory if none is available. requiresTileRegion(String, ImageRegion) - Method in interface qupath.lib.gui.images.stores.TileListener. Check if the listener requires a particular tile. requiresTileRegion(String, ImageRegion) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; RESET_DETECTION_CLASSIFICATIONS - Variable in class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; RESET_METADATA - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:860892,Availability,avail,availablePathClasses,860892,"available. requiresTileRegion(String, ImageRegion) - Method in interface qupath.lib.gui.images.stores.TileListener. Check if the listener requires a particular tile. requiresTileRegion(String, ImageRegion) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; RESET_DETECTION_CLASSIFICATIONS - Variable in class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; RESET_METADATA - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:864290,Availability,avail,available,864290,"asurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions. Reset any MeasurementMapper, so that measurements are not used to determine object colors. resetMinimumRepaintSpacingMillis() - Method in class qupath.lib.gui.viewer.QuPathViewer. Return to processing all repainting requests. resetPathClass() - Method in class qupath.lib.objects.PathObject. Reset the classification (i.e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:886621,Availability,down,downsample,886621,"rred font size for the scalebar in the viewer. scalebarFontWeight - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scalebarFontWeightProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred font weight in the viewer. scalebarLineWidth - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scalebarLineWidthProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred line width for the scalebar. scaleColor(Color, double) - Static method in class qupath.lib.color.ColorToolsAwt. Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. scaledDownsampling(double) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Downsample by specific increasing factor each time (e.g. scaledDownsampling(double, double) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. scaleVariance - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian-weighted standard deviation estimate. scatterChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. SCREENSHOT - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; ScriptableWorkflowStep - Interface in qupath.lib.plugins.workflow. A WorkflowStep that can also return som",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:888832,Availability,avail,available,888832,"tributes;  ; ScriptAutoCompletor - Interface in qupath.lib.scripting.languages. Interface for classes that implement auto-completion (e.g. ScriptEditor - Interface in qupath.lib.gui.scripting. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T> - Interface in qupath.lib.gui.scripting. Basic script editor control using JavaFX. ScriptingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; ScriptLanguage - Class in qupath.lib.scripting.languages. Abstract class to represent languages supported by the script editor. ScriptLanguage(String, String) - Constructor for class qupath.lib.scripting.languages.ScriptLanguage. Default constructor for a ScriptLanguage. ScriptLanguage(String, Collection<String>) - Constructor for class qupath.lib.scripting.languages.ScriptLanguage. Default constructor for a ScriptLanguage. ScriptLanguageProvider - Class in qupath.lib.gui.scripting.languages. Class with static methods to fetch all the available ScriptLanguages. ScriptLanguageProvider() - Constructor for class qupath.lib.gui.scripting.languages.ScriptLanguageProvider;  ; ScriptParameters - Class in qupath.lib.scripting. Class that stores key information that is useful for running scripts. ScriptParameters.Builder - Class in qupath.lib.scripting. Builder class for ScriptParameters. scriptRunning() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Observable value indicating whether a script is currently running or not. scriptsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the shared scripts directory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user int",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:890098,Availability,avail,available,890098,. ScriptParameters.Builder - Class in qupath.lib.scripting. Builder class for ScriptParameters. scriptRunning() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Observable value indicating whether a script is currently running or not. scriptsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the shared scripts directory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user interface. ScriptStyler - Interface in qupath.lib.gui.scripting.richtextfx.stylers. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider - Class in qupath.lib.gui.scripting.richtextfx.stylers. Class with static methods to fetch all the available ScriptStylers. ScriptStylerProvider() - Constructor for class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider;  ; ScriptSyntax - Interface in qupath.lib.gui.scripting.syntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider - Class in qupath.lib.gui.scripting.syntax. Class with static methods to fetch all the available ScriptSyntaxes. ScriptSyntaxProvider() - Constructor for class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; ScriptTab - Class in qupath.lib.gui.scripting. Class representing a script tab (e.g. scrollSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scrollSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale scroll speed for zooming etc. searchDepth(int) - Method in class qupath.lib.io.UriUpdater. Maximum search depth when using UriUpdater.searchDepth(int) to match filenames in directories and subdirector,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:890484,Availability,avail,available,890484,"ectory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user interface. ScriptStyler - Interface in qupath.lib.gui.scripting.richtextfx.stylers. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider - Class in qupath.lib.gui.scripting.richtextfx.stylers. Class with static methods to fetch all the available ScriptStylers. ScriptStylerProvider() - Constructor for class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider;  ; ScriptSyntax - Interface in qupath.lib.gui.scripting.syntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider - Class in qupath.lib.gui.scripting.syntax. Class with static methods to fetch all the available ScriptSyntaxes. ScriptSyntaxProvider() - Constructor for class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; ScriptTab - Class in qupath.lib.gui.scripting. Class representing a script tab (e.g. scrollSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scrollSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale scroll speed for zooming etc. searchDepth(int) - Method in class qupath.lib.io.UriUpdater. Maximum search depth when using UriUpdater.searchDepth(int) to match filenames in directories and subdirectories. searchPath(Path) - Method in class qupath.lib.io.UriUpdater. Search for filenames that match missing URIs, recursively up to the depth specified by UriUpdater.searchDepth(int). seconds() - Method in class qupath.lib.common.Timeit. Report timings in seconds. segment(SegmentationModel, Mat, Mat) - Static method in class qupath.opencv.dnn.DnnTools. Apply a segmentation model to an i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:924462,Availability,down,downsample,924462,"urement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:924595,Availability,down,downsample,924595,"MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width a",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:924732,Availability,down,downsample,924732,"HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:924955,Availability,down,downsample,924955,"le) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:925281,Availability,error,error,925281,"ting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set whether Bio-Formats should support only local files (rather than any URL). setFillAnnotations(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show annotation objects 'filled' in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:933718,Availability,down,downsample,933718,"w their legends with circular/square markers... setLineWidth(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the threshold line width. setLivePrediction(boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Turn on or off live prediction. setLocationStringFunction(AbstractOverlay.LocationStringFunction) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a custom function to calculate a location string for the overlay. setLocked(boolean) - Method in class qupath.lib.objects.PathObject. Set locked status, if possible. setLocked(boolean) - Method in class qupath.lib.objects.PathROIObject. Set locked flag, indicating that the object ROI should not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.Over",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:933875,Availability,mask,masked,933875,"e width. setLivePrediction(boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Turn on or off live prediction. setLocationStringFunction(AbstractOverlay.LocationStringFunction) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a custom function to calculate a location string for the overlay. setLocked(boolean) - Method in class qupath.lib.objects.PathObject. Set locked status, if possible. setLocked(boolean) - Method in class qupath.lib.objects.PathROIObject. Set locked flag, indicating that the object ROI should not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. setMemoizat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:940025,Availability,avail,available,940025," the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter by key, to determine if it can be edited. setParameterEnabled(Parameter<?>, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter, to determine if it can be edited. setPathClass(PathClass) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, without specifying any classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, specifying a classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathROIObject;  ; setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathRootObject;  ; setPathClasses(Collection<? extends PathClass>) - Method in interface qupath.lib.projects.Project. Update the available PathClasses. setPathClassHidden(PathClass, boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Request that objects with a particular PathClass not be displayed. setPathMemoization(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the directory where memoization files should be written. setPathObject(PathObject) - Method in class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Set the PathObject to display (may be null). setPenManager(QuPathPenManager.PenInputManager) - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Set the PenInputManager. setPieChartData(PieChart, Map<T, ? extends Number>, Function<T, String>, Function<T, Color>, boolean, boolean) - Static method in class qupath.lib.gui.charts.ChartTools. Set pie chart data from a count map. setPixelClassificationRegionFilter(RegionFilter) - Method in class qupath.lib.gui.viewer.OverlayOptions. Control where pixel classifications should be cal",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:941934,Availability,avail,available,941934,"ionFilter) - Method in class qupath.lib.gui.viewer.OverlayOptions. Control where pixel classifications should be calculated during live prediction. setPixelLayer(ImageData<BufferedImage>, ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set an ImageServer as a property in the ImageData. setPixelSizeMicrons(Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes. setPixelSizeMicrons(Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. setPixelSizeMicrons(ImageData<?>, Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for an ImageServer to have the required pixel sizes and z-spacing. setPlaceholderText(String) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the placeholder text to show if no image is available. setPredicate(Predicate<? super PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set a predicate used to filter the rows of the table. setPreferredOverlayColor(Color) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a preferred overlay color, which the overlay may or may not make use of. setProject(Project<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current project for the script. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser. Set the project. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Set the active project, triggering any necessary GUI updates. setProperty(String, Object) - Method in class qupath.lib.images.ImageData. Set a property. setRange(double, double) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the upper and lower bounds. setReaderOptions(Map<String, Strin",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:946974,Availability,avail,available,946974,"be the primary selected object, optionally retaining the ; existing selected objects. setSelectedObjects(Collection<? extends PathObject>, PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Specify a collection of objects to be selected, and which among them should be the primary. setSelectedTool(PathTool) - Method in class qupath.lib.gui.ToolManager. Programmatically select the active PathTool. setServiceLoader(ServiceLoader<ImageServerBuilder>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Replace the default service loader with another. setShowAnnotations(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the annotations on the image. setShowChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is shown. setShowConnections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show connections between objects, if available. setShowDetections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the objects as an overlay on the image. setShowGrid(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set whether a counting grid should be shown in viewers. setShowLocation(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showLocationProperty(). setShowNames(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the object names on the image. setShowOverview(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showOverviewProperty(). setShowPixelClassification(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show pixel classification overlays. setShowScalebar(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showScalebarProperty(). s",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:950181,Availability,error,error,950181,"ocale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; setThickness(BoundaryStrategy, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy with the specified thickness. setThresholdColor(ObservableNumberValue, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the color of a specified threshold line. setThresholds(Color, double...) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set thresholds, which are visualized as vertical lines. setThumbnail(T) - Me",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:952309,Availability,avail,available,952309,"(ImageDisplaySettings) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageDisplaySettings that control conversion to RGB. settingsCompatibleWithDisplay(ImageDisplay, ImageDisplaySettings) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Check if the settings are compatible with the display. setTitleFromObject(PathImage<ImagePlus>, PathObject) - Static method in class qupath.imagej.tools.IJTools. Set the name of an image based on a PathObject. setTMAEntriesFromImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. setTMAGrid(TMAGrid) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the tma grid for this hierarchy. setToExpandGridPaneHeight(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:952546,Availability,avail,available,952546,"c method in class qupath.lib.display.settings.DisplaySettingUtils. Check if the settings are compatible with the display. setTitleFromObject(PathImage<ImagePlus>, PathObject) - Static method in class qupath.imagej.tools.IJTools. Set the name of an image based on a PathObject. setTMAEntriesFromImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. setTMAGrid(TMAGrid) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the tma grid for this hierarchy. setToExpandGridPaneHeight(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTool",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:955982,Availability,down,downsample,955982,"ss qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:964488,Availability,error,error,964488,"ogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:964617,Availability,error,error,964617,"recatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified dat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:964790,Availability,error,error,964790,"n class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:964961,Availability,error,error,964961,"e(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying if QuPath should show the image title in the main window title. showInfoNotification(String, String) - S",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:965100,Availability,error,error,965100,"Property() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying if QuPath should show the image title in the main window title. showInfoNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an info notification. showingProperty() - Method in class qupath.lib.gui.panes.SlideLabelVi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968466,Availability,error,error,968466,"uld show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationP",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968497,Availability,avail,available,968497,"uld show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationP",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968597,Availability,error,error,968597,"ementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968628,Availability,avail,available,968628,"ementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968744,Availability,error,error,968744,"tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968777,Availability,avail,available,968777,"tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968879,Availability,error,error,968879,".Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Sho",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:968912,Availability,avail,available,968912,".Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Sho",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:979095,Availability,mask,mask,979095,"s) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Simplify the appearance of a TitledPane using CSS. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SingleMeasurementClassificationCommand. Constructor. singleSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if only one object has been selected, accessible by getSelectedObject();. size - Variable in class qupath.lib.analysis.sta",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:995506,Availability,checkpoint,checkpoint,995506,"color.ColorTransformer.ColorTransformMethod. Third stain after color deconvolution. StainVector - Class in qupath.lib.color. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector() - Constructor for class qupath.lib.color.StainVector. Default constructor, required for Externalizable interface. StainVector.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.Pref",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:995628,Availability,checkpoint,checkpoint,995628,". Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector() - Constructor for class qupath.lib.color.StainVector. Default constructor, required for Externalizable interface. StainVector.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferen",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1003715,Availability,checkpoint,checkpoints,1003715,"c method in class qupath.opencv.tools.GroovyCV. Calculate the sum of all elements in a Mat, ignoring NaNs. sum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the sum of an image, across all pixels (regardless of channels), ignoring NaNs. SUM - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. No normalization; maps provide raw object counts in a defined radius. sumFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image, with symmetric boundary padding. sumFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image. summarize(Net, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Create a (multiline) summary String for a Net, given the specified image input dimensions. summarizeCheckpoints() - Method in class qupath.lib.common.Timeit. Request that checkpoints are summarized in the Timeit.toString() method. summarizeCheckpoints(boolean) - Method in class qupath.lib.common.Timeit. Optionally request that checkpoints are summarized in the Timeit.toString() method. SummaryMeasurementTableCommand - Class in qupath.lib.gui.commands. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SummaryMeasurementTableCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Command to show a summary measurement table, for PathObjects of a specified type (e.g. supports2D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 2D images. supports3D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 3D images (z-stacks). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns true (the ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1003873,Availability,checkpoint,checkpoints,1003873,"v.tools.OpenCVTools. Get the sum of an image, across all pixels (regardless of channels), ignoring NaNs. SUM - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. No normalization; maps provide raw object counts in a defined radius. sumFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image, with symmetric boundary padding. sumFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image. summarize(Net, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Create a (multiline) summary String for a Net, given the specified image input dimensions. summarizeCheckpoints() - Method in class qupath.lib.common.Timeit. Request that checkpoints are summarized in the Timeit.toString() method. summarizeCheckpoints(boolean) - Method in class qupath.lib.common.Timeit. Optionally request that checkpoints are summarized in the Timeit.toString() method. SummaryMeasurementTableCommand - Class in qupath.lib.gui.commands. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SummaryMeasurementTableCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Command to show a summary measurement table, for PathObjects of a specified type (e.g. supports2D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 2D images. supports3D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 3D images (z-stacks). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Returns true (the default value). supportsAu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1016597,Availability,error,error,1016597,"hould be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1024848,Availability,avail,available,1024848," TileRequest) - Static method in class qupath.imagej.processing.SimpleThresholding. Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. thumbnailCache - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; TiffWriterIJ - Class in qupath.imagej.images.writers. ImageWriter implementation to write TIFF images using ImageJ. TiffWriterIJ() - Constructor for class qupath.imagej.images.writers.TiffWriterIJ;  ; tile(int, int) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a default tiler to use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.object",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1025148,Availability,avail,available,1025148,"geWriter implementation to write TIFF images using ImageJ. TiffWriterIJ() - Constructor for class qupath.imagej.images.writers.TiffWriterIJ;  ; tile(int, int) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a default tiler to use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experim",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1026005,Availability,avail,available,1026005,"s qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a tiler to use. Tiler - Class in qupath.lib.objects.utils. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder - Class in qupath.lib.objects.utils;  ; Tiler.TileAlignment - Enum Class in qupath.lib.objects.utils. Enum representing the possible alignments for tiles. TileRequest - Class in qupath.lib.images.servers. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager - Interface in qupath.lib.images.servers. Helper class to manage tile requests from an ImageServer. TilerPlugin<T> - Class in qupath.lib.algorithms. Simple plugin to create square tiles, which may later have measurements added. TilerPlugin() - Constructor for class qupath.lib.algorithms.TilerPlugin. Default const",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1028356,Availability,checkpoint,checkpoint,1028356," Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested tile size (width == height). tileSize(int) - Method in class qupath.lib.images.writers.TileExporter. Define the tile size in pixel units at the export resolution. tileSize(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set tile width and height. tileSize(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested tile width and height. tileSize(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the horizontal and vertical tile size in pixel units at the export resolution. tileWidth(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the width of output tiles. Timeit - Class in qupath.lib.common. Helper class to time code execution. Timeit() - Constructor for class qupath.lib.common.Timeit;  ; Timeit.Checkpoint - Class in qupath.lib.common. Class representing a named checkpoint with a timestamp in nanoseconds. timePoint(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a single timepoint to be written from a time series. timepoints(TimeUnit, double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the time unit and individual time points. timepoints(TimeUnit, double...) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify timepoints and units. timePoints(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a range of timepoints to be written from a time series. timestamp - Variable in class qupath.lib.gui.images.stores.AbstractImageRenderer. Timestamp variable; this should be updated by implementing classes. TINY - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; TINY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; title - Variable in class qupath.lib.gui.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1032635,Availability,down,downsample,1032635,"for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a TMA Grid. TMAGridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.TMAGridOverlay. Constructor. TMAMenuActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.AddActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.RemoveActions - Class in qupath.lib.gui.actions.menus;  ; tmaMissingColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMAScoreImporter - Class in qupath.lib.io. Helper class for importing data in connection with TMA slides. TMAScoreImporter() - Constructor for class qupath.lib.io.TMAScoreImporter;  ; TMASummaryViewer - Class in qupath.lib.gui.tma. Deprecated.; since v0.4.0. TMASummaryViewer(S",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061581,Availability,avail,available,1061581,"ues, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062920,Availability,down,downsample,1062920,"terChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.h",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1070427,Availability,avail,available,1070427,"notations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in clas",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1071122,Availability,avail,available,1071122," qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in class qupath.lib.scripting.ScriptParameters. Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. useCompiled(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. useCuda() - Static method in class qupath.opencv.dnn.DnnTools. Returns true if CUDA is available and requested. useDetections() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use detections rather than annotations for labels. useExtensions - Variable in class qupath.lib.images.server",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1071767,Availability,avail,available,1071767,".servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in class qupath.lib.scripting.ScriptParameters. Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. useCompiled(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. useCuda() - Static method in class qupath.opencv.dnn.DnnTools. Returns true if CUDA is available and requested. useDetections() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use detections rather than annotations for labels. useExtensions - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; useFilter(Predicate<PathObject>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use a custom method of selecting objects for inclusion. useGrayscaleLutProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1071865,Availability,avail,available,1071865,"s.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in class qupath.lib.scripting.ScriptParameters. Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. useCompiled(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. useCuda() - Static method in class qupath.opencv.dnn.DnnTools. Returns true if CUDA is available and requested. useDetections() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use detections rather than annotations for labels. useExtensions - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; useFilter(Predicate<PathObject>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use a custom method of selecting objects for inclusion. useGrayscaleLutProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.La",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1073377,Availability,error,error,1073377," Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1073530,Availability,error,error,1073530,"ay.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Property representing the user directory. useROIBounds(boolean) - Method in class qupath.lib.images.writers.TileExporter. Op",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1075645,Availability,avail,available,1075645,"ures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useRotateGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support rotate gestures for touchscreens and trackpads. userPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. A path where additional files may be stored, such as extensions and log files. useScrollGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support scroll gestures for touchscreens and trackpads. useSelectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; useSelectedColorProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external pro",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1076253,Availability,mask,mask,1076253,"ic method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTraining",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1076322,Availability,mask,mask,1076322,"ic method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTraining",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1129849,Availability,down,downsample,1129849,"ui.actions.menus.ViewMenuActions.ZoomActions;  ; ZOOM_TO_FIT - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ZOOM_TO_FIT - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions;  ; ZOOM_TO_FIT - Variable in class qupath.lib.gui.actions.ViewerActions;  ; zoomActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; zoomIn() - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom in by one step. zoomIn(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. zoomOut() - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom out by one step. zoomOut(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. zoomToFit() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the downsample is set to contain the entire image, and the image is centered in the viewer. zPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current z-position for the z-slice currently visible in the viewer. zRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of Z-slices to process. zSlice(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the z-slice to export. zSlices(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the start (inclusive) and end (exclusive) z-slices. zSpacingCalibrated() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if z-spacing calibration information is available for the image. zSpacingMicrons(Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the spacing between z-slices, in microns. zSpacingMicrons(Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify spacing",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1130603,Availability,avail,available,1130603," class qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions;  ; ZOOM_TO_FIT - Variable in class qupath.lib.gui.actions.ViewerActions;  ; zoomActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; zoomIn() - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom in by one step. zoomIn(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. zoomOut() - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom out by one step. zoomOut(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. zoomToFit() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the downsample is set to contain the entire image, and the image is centered in the viewer. zPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current z-position for the z-slice currently visible in the viewer. zRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of Z-slices to process. zSlice(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the z-slice to export. zSlices(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the start (inclusive) and end (exclusive) z-slices. zSpacingCalibrated() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if z-spacing calibration information is available for the image. zSpacingMicrons(Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the spacing between z-slices, in microns. zSpacingMicrons(Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify spacing between z-slices, in microns. A B C D E F G H I J K L M N O P Q R S T U V W X Y Z All Classes and Interfaces|All Packages|Constant Field Values|Serialized Form. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1712,Deployability,pipeline,pipeline,1712,"nt has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - C",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:8233,Deployability,install,installed,8233,magej.gui.IJExtension.IJExtensionCommands;  ; actionFastCellCounts - Variable in class qupath.process.gui.ProcessingExtension.OpenCVCommands. Deprecated. ActionIcon - Annotation Interface in qupath.lib.gui.actions.annotations. Default icon for an action. actionImportROIs - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands;  ; actionIntensity - Variable in class qupath.process.gui.ProcessingExtension.ObjectClassificationCommands;  ; actionLoadObjectClassifier - Variable in class qupath.process.gui.ProcessingExtension.ObjectClassificationCommands;  ; actionLoadPixelClassifier - Variable in class qupath.process.gui.ProcessingExtension.PixelClassificationCommands;  ; actionMacroRunner - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands;  ; actionMeasurement - Variable in class qupath.process.gui.ProcessingExtension.ObjectClassificationCommands;  ; ActionMenu - Annotation Interface in qupath.lib.gui.actions.annotations. Annotation indicating the menu path where an action should be installed. ActionMethod - Annotation Interface in qupath.lib.gui.actions.annotations. Annotation indicating that a method should be converted to an Action if possible. actionObjectClassifier - Variable in class qupath.process.gui.ProcessingExtension.ObjectClassificationCommands;  ; actionPixelClassifier - Variable in class qupath.process.gui.ProcessingExtension.PixelClassificationCommands;  ; actionPixelCount - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands. Deprecated. actionPlugins - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands;  ; actionPositiveCellDetection - Variable in class qupath.imagej.gui.IJExtension.IJExtensionCommands;  ; Actions() - Constructor for class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; Actions() - Constructor for class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; Actions() - Constructor for class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; Acti,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:30296,Deployability,update,update,30296,"ements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:30467,Deployability,update,update,30467,"jects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionSt",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:30929,Deployability,update,updated,30929,"fferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, whe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:51014,Deployability,update,updates,51014,"tionPercent - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; autoSetAnnotationClassProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Classification that should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variabl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:53910,Deployability,patch,patches,53910,"der for generating a custom scatter plot. baseClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectCla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:71166,Deployability,patch,patch,71166,"ages.servers.SparseImageServer.Builder. Build a new SparseImageServer. build() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Get the ImageServer that applies all the requested transforms. build() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. build() - Method in class qupath.lib.objects.utils.Tiler.Builder. Build a tiler object with the current settings. build() - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Build a new converter with the specified parameters. build() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Build the ScriptParameters with the current options. build() - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Build the params. build() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Build a new OpenCVDnn. build() - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Build the patch classifier parameters. build() - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Build the pane. build(List<Mat>) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate results as a list of maps connecting features and Mats for all slices of a z-stack. build(List<Mat>, int) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate results for a map of features and Mats for one slice of a z-stack. build(Mat) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate results for a single Mat. build(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Build a FeaturePreprocessor. buildClassifier(ImageData<BufferedImage>) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build a PixelClassifier for a density map using the current parameters and the specified ImageData. buildDnnModel(BioimageIoSpec.BioimageIoMode",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:73184,Deployability,patch,patch,73184," Static method in class qupath.opencv.ml.BioimageIoTools. Attempt to build a DnnModel that follows this spec as closely as possible. builder() - Static method in class qupath.lib.experimental.pixels.Parameters. Create a new builder for parameters. builder() - Static method in class qupath.lib.experimental.pixels.PixelProcessor. Create a new builder to construct a PixelProcessor. builder() - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Create a new builder to generate a custom dialog. builder() - Static method in class qupath.lib.scripting.ScriptParameters. Create a new builder for ScriptParameters. builder() - Static method in class qupath.opencv.dnn.DnnModelParams. Create a new params builder, with default values. builder() - Static method in class qupath.opencv.ml.FeaturePreprocessor. Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. builder() - Static method in class qupath.opencv.ml.PatchClassifierParams. Create a builder to generate new patch classifier params. builder(int) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder to generate square tiles. builder(int, int) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder to generate rectangular tiles. builder(String) - Static method in class qupath.opencv.dnn.DnnTools. Initiative building and configuring an OpenCVDnn. builder(String) - Static method in class qupath.opencv.dnn.OpenCVDnn. Create a new builder. builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage, BufferedImage>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a new builder for a PixelProcessor that can make custom measurements for an image object. builder(DensityMaps.DensityMapBuilder) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. builder(Processor<ImagePlus, I",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:75124,Deployability,patch,patch,75124,"ilder(Processor<ImagePlus, ImagePlus, Object>) - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a PixelProcessor.Builder for an ImageJ ImagePlus. builder(Processor<Mat, Mat, Mat>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a PixelProcessor.Builder for an OpenCV Mat. builder(PathObjectPredicates.PathObjectPredicate) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Create a new DensityMaps.DensityMapBuilder to generate a customized density map. builder(Tiler) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder initialized with the settings from an existing Tiler. builder(DnnModelParams) - Static method in class qupath.opencv.dnn.DnnModelParams. Create a new params builder, initialized with the values from existing ; params. builder(PatchClassifierParams) - Static method in class qupath.opencv.ml.PatchClassifierParams. Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Builder() - Constructor for class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder;  ; Builder() - Constructor for class qupath.lib.experimental.pixels.Parameters.Builder;  ; Builder() - Constructor for class qupath.lib.experimental.pixels.PixelProcessor.Builder;  ; Builder() - Constructor for class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.;  ; Builder() - Constructor for class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; Builder() - Constructor for class qupath.lib.images.servers.ImageServerMetadata.Builder. Minimal builder for a new ImageServerMetadata; further properties must be set. Builder() - Constructor for class qupath.lib.images.servers.PixelCalibration.Builder. Create a new builder with default (uncalibrated) values. Builder() - Constructor for class qupath.lib.images.servers.SparseImageServer.Builder;  ; Builder() - Constructor for class qupath.lib.roi.GeometryTools.Geometr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:97881,Deployability,release,release,97881,"er - Class in qupath.lib.gui.charts. Builder for creating scatter charts. ChartThresholdPane - Class in qupath.lib.gui.charts. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartThresholdPane(XYChart<Number, Number>) - Constructor for class qupath.lib.gui.charts.ChartThresholdPane. Note: xAxis and yAxis must be instances of NumberAxis. ChartTools - Class in qupath.lib.gui.charts. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:98024,Deployability,release,release,98024,"ontain an XYChart, adding adjustable thresholds to be displayed. ChartThresholdPane(XYChart<Number, Number>) - Constructor for class qupath.lib.gui.charts.ChartThresholdPane. Note: xAxis and yAxis must be instances of NumberAxis. ChartTools - Class in qupath.lib.gui.charts. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable)",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:101611,Deployability,patch,patch,101611,"cationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify classification labels. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the interpretation of classification labels. classificationLabelsToChannels(Map<Integer, PathClass>, boolean) - Static method in class qupath.lib.images.servers.ServerTools. Create a list of channels from classification labels. ClassificationResolution - Class in qupath.process.gui.commands.ml. Wrapper for a PixelCalibration to be used to define classifier resolution. classifications(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot two measurements against one another for the specified objects. classify(ClassificationModel, PathObject, Mat, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an existing image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, int, int, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:101854,Deployability,patch,patch,101854,"erMetadata.Builder. Specify the interpretation of classification labels. classificationLabelsToChannels(Map<Integer, PathClass>, boolean) - Static method in class qupath.lib.images.servers.ServerTools. Create a list of channels from classification labels. ClassificationResolution - Class in qupath.process.gui.commands.ml. Wrapper for a PixelCalibration to be used to define classifier resolution. classifications(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot two measurements against one another for the specified objects. classify(ClassificationModel, PathObject, Mat, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an existing image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, int, int, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:102087,Deployability,patch,patch,102087,"classification labels. ClassificationResolution - Class in qupath.process.gui.commands.ml. Wrapper for a PixelCalibration to be used to define classifier resolution. classifications(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot two measurements against one another for the specified objects. classify(ClassificationModel, PathObject, Mat, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an existing image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, int, int, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.p",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:106190,Deployability,update,update,106190," clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hie",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:127350,Deployability,patch,patch,127350,"rogress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.KaplanMeierEvent) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent;  ; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePlane) - Method in class qupath.lib.regions.ImagePlane. Compare with another ImagePlane, in the order t, z, c. completionCodeCombination - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; componentContains(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; componentPointToImagePoint(double, double, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert x and y c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:157427,Deployability,install,installed,157427," - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values greater than or equal to a specified threshold. createAction(Runnable) - Static method in class qupath.lib.gui.actions.ActionTools. Create an action whose event handler calls a runnable. createAction(Runnable, String) - Static method in class qupath.lib.gui.actions.ActionTools. Create an action whose event handler calls a runnable, with a specified name. createAllFullImageAnnotations(boolean) - Static method in class qupath.lib.scripting.QP. Create annotation around the full image for the current image, on all z-slices and timepoints. createAllFullImageAnnotations(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Create annotation around the full image for the specified image, on all z-slices and timepoints. createAllMenuActions(QuPathGUI) - Static method in class qupath.lib.gui.actions.menus.Menus. Create a collection of all the actions that should be installed in QuPath's main menubar. createAllRequests(ImageServer<?>, double) - Static method in class qupath.lib.regions.RegionRequest. Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). createAnnotationConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationObject(ROI) - Static method in class qupath.lib.objects.PathObjects",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:231067,Deployability,toggle,toggle,231067,"TMACoreObject(double, double, double, double, boolean, ImagePlane) - Static method in class qupath.lib.objects.PathObjects. Create a TMA core object with an ellipse ROI. createTmaCoreView(QuPathGUI) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for TMA core objects. createTMAGrid(String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for the current image. createTMAGrid(String, String, boolean, double, ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid, fit within a specified region. createTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for an image. createToggleButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing both the text and graphic if available. createToggleButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing only the graphic and not any text. createTool(EventHandler<MouseEvent>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified MouseEvent handler. createTool(EventType<T>, EventHandler<T>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified event handler. createTouchingMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createTracedGeometry(Raster, double, double, int, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a traced geometry from a raster. createTracedGeometry(SimpleImage, double, double, RegionRequest) - Static method in class q",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:231257,Deployability,toggle,toggle,231257,"QuPathGUI) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for TMA core objects. createTMAGrid(String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for the current image. createTMAGrid(String, String, boolean, double, ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid, fit within a specified region. createTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for an image. createToggleButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing both the text and graphic if available. createToggleButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing only the graphic and not any text. createTool(EventHandler<MouseEvent>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified MouseEvent handler. createTool(EventType<T>, EventHandler<T>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified event handler. createTouchingMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createTracedGeometry(Raster, double, double, int, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a traced geometry from a raster. createTracedGeometry(SimpleImage, double, double, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a traced geometry from a SimpleImage. createTracedROI(Raster, double, double, int, RegionRequest) - Static method in class qupath.lib.anal",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:252882,Deployability,release,releases,252882,"Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Comman",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:255755,Deployability,release,releases,255755," ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:262104,Deployability,toggle,toggle,262104," black to the 'pure' color specified,; but without actually generating the LUT. DirectServerChannelInfo(ImageData<BufferedImage>, int) - Constructor for class qupath.lib.display.DirectServerChannelInfo. Constructor. disabled(boolean) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the disabled property of the action. disabled(ObservableValue<Boolean>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the disabled property of the action to an ObservableValue, bidirectionally if possible. disableGammaAdjustmentProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Prevent gamma from being adjusted. disableMinMaxAdjustmentProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Prevent the min and max sliders from being adjusted. disableToggleMenuItemsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Property to disable options to toggle the visibility of channels. disableUpdatesProperty() - Method in class qupath.lib.gui.panes.AnnotationPane. Property that may be used to prevent updates on every hierarchy or selection change event. disableUpdatesProperty() - Method in class qupath.lib.gui.panes.PathObjectHierarchyView. Property that may be used to prevent updates on every hierarchy or selection change event. display(ImageDisplay) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Deprecated.; use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. displayMode() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). displayModeProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how the histogram is displayed, either using areas or bars. DisplaySettingUtils - Class in qupath.lib.display.settings. Utility class for working with image display",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:262256,Deployability,update,updates,262256," qupath.lib.display.DirectServerChannelInfo. Constructor. disabled(boolean) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the disabled property of the action. disabled(ObservableValue<Boolean>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the disabled property of the action to an ObservableValue, bidirectionally if possible. disableGammaAdjustmentProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Prevent gamma from being adjusted. disableMinMaxAdjustmentProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Prevent the min and max sliders from being adjusted. disableToggleMenuItemsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Property to disable options to toggle the visibility of channels. disableUpdatesProperty() - Method in class qupath.lib.gui.panes.AnnotationPane. Property that may be used to prevent updates on every hierarchy or selection change event. disableUpdatesProperty() - Method in class qupath.lib.gui.panes.PathObjectHierarchyView. Property that may be used to prevent updates on every hierarchy or selection change event. display(ImageDisplay) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Deprecated.; use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. displayMode() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). displayModeProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how the histogram is displayed, either using areas or bars. DisplaySettingUtils - Class in qupath.lib.display.settings. Utility class for working with image display and image display settings objects. DisplaySettingUtils() - Constructor for class qupath.lib.display.settings.DisplaySettingUtils;  ; displayToSettings(ImageD",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:262436,Deployability,update,updates,262436,"ion. disabled(ObservableValue<Boolean>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the disabled property of the action to an ObservableValue, bidirectionally if possible. disableGammaAdjustmentProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Prevent gamma from being adjusted. disableMinMaxAdjustmentProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Prevent the min and max sliders from being adjusted. disableToggleMenuItemsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Property to disable options to toggle the visibility of channels. disableUpdatesProperty() - Method in class qupath.lib.gui.panes.AnnotationPane. Property that may be used to prevent updates on every hierarchy or selection change event. disableUpdatesProperty() - Method in class qupath.lib.gui.panes.PathObjectHierarchyView. Property that may be used to prevent updates on every hierarchy or selection change event. display(ImageDisplay) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Deprecated.; use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. displayMode() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). displayModeProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how the histogram is displayed, either using areas or bars. DisplaySettingUtils - Class in qupath.lib.display.settings. Utility class for working with image display and image display settings objects. DisplaySettingUtils() - Constructor for class qupath.lib.display.settings.DisplaySettingUtils;  ; displayToSettings(ImageDisplay, String) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Create a new image display settings object from the image display. dispose() - Method in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:265777,Deployability,pipeline,pipeline,265777,"d assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to build a DnnModel. DnnModelParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.op",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:266285,Deployability,patch,patch-based,266285,"ant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to build a DnnModel. DnnModelParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:269541,Deployability,update,update,269541,"r for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). doWatershed(ImageProcessor, ImageProcessor, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply a watershed transform. doWatershed(ImageProcessor, ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:269743,Deployability,update,update,269743,"m shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). doWatershed(ImageProcessor, ImageProcessor, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply a watershed transform. doWatershed(ImageProcessor, ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleM",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:278541,Deployability,continuous,continuous,278541," enableBioformats - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; enableFreehand - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; enableFreehandToolsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). ensureBufferedImage(Image) - Static method in class qupath.lib.awt.common.BufferedImageTools. Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. ensureBufferedImageType(BufferedImage, int) - Static method in class qupath.lib.awt.common.BufferedImageTools. Convert a BufferedImage to have a specified type. ensureContinuous(Mat, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Ensure a Mat is continuous, creating a copy of the data if necessary. ensureCursorType(Cursor) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Ensure that the specified cursor is set in the current viewer. ensureCursorType(Cursor) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Ensure that the specified cursor is set in the current viewer. ensureCursorType(Cursor) - Method in class qupath.process.gui.WandToolEventHandler. Ensure that the specified cursor is set in the current viewer. ensureDuplicatableGlyph(Glyph) - Static method in class qupath.lib.gui.tools.GuiTools. Ensure that a Glyph is 'duplicatable', without losing its key properties. ensureDuplicatableGlyph(Glyph, boolean) - Static method in class qupath.lib.gui.tools.GuiTools. Ensure that a Glyph is 'duplicatable', optionally retaining any fill. ensureHandlesUpdated() - Method in class qupath.lib.roi.RoiEditor. In the event that the current ROI has been modified elsewhere (which generally it shouldn't ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:292670,Deployability,update,update,292670," Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the current image. exportTMAData(ImageData<BufferedImage>, String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the specified image. ExportTrainingRegionsCommand - Class in qupath.process.gui.commands. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExportTrainingRegionsCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ExportTrainingRegionsCommand. Constructor. exportType(Class<? extends PathObject>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify what type of object should be exported. ExtendedPathTool - Class in qupath.lib.gui.viewer.tools;  ; ExtensionClassLoader - Class in qupath.lib.gui. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane - Class in qupath.lib.gui. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager - Class in qupath.lib.gui. Manage loading extensions for a QuPathGUI instance. ExtensionPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the extensions directory. ExtensionsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ExtensionsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; extract(int...) - Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:293137,Deployability,release,releases,293137,"r for class qupath.process.gui.commands.ExportTrainingRegionsCommand. Constructor. exportType(Class<? extends PathObject>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify what type of object should be exported. ExtendedPathTool - Class in qupath.lib.gui.viewer.tools;  ; ExtensionClassLoader - Class in qupath.lib.gui. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane - Class in qupath.lib.gui. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager - Class in qupath.lib.gui. Manage loading extensions for a QuPathGUI instance. ExtensionPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the extensions directory. ExtensionsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ExtensionsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; extract(int...) - Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raster as a SimpleImage. extractChannel(ImageServer<BufferedImage>, BufferedImage, float[]) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Extract a (row-wise) array containing the pixels extracted from a BufferedImage. extractChannels(int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract spe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:308680,Deployability,update,update,308680," method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region. findObjectsOutsideRegion(Collection<? extends PathObject>, ImageRegion, int, int, int, int, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. findRegionalMaxima(ImageProcessor, float, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Find regional maxima using morphological reconstruction. findRegionalMaxima(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the regional maxima within a Mat, providing the output as a labeled image. finishTranslation() - Method in class qupath.lib.roi.RoiEditor. Notify the editor that translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.Pat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:308866,Deployability,update,update,308866,"t, int, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. findRegionalMaxima(ImageProcessor, float, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Find regional maxima using morphological reconstruction. findRegionalMaxima(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the regional maxima within a Mat, providing the output as a labeled image. finishTranslation() - Method in class qupath.lib.roi.RoiEditor. Notify the editor that translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:309049,Deployability,update,update,309049,"nded for multiple z-slices and timepoints. findRegionalMaxima(ImageProcessor, float, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Find regional maxima using morphological reconstruction. findRegionalMaxima(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the regional maxima within a Mat, providing the output as a labeled image. finishTranslation() - Method in class qupath.lib.roi.RoiEditor. Notify the editor that translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:309185,Deployability,update,update,309185,"essing.MorphologicalReconstruction. Find regional maxima using morphological reconstruction. findRegionalMaxima(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the regional maxima within a Mat, providing the output as a labeled image. finishTranslation() - Method in class qupath.lib.roi.RoiEditor. Notify the editor that translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:309516,Deployability,update,update,309516,"at translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUp",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:309733,Deployability,update,update,309733,"hangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:309956,Deployability,update,update,309956,"erarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current pr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:310159,Deployability,update,update,310159,".QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Buil",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:310359,Deployability,update,update,310359,"Event(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the flatness for any operation where a PathIterator is required. flatten(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Flatten a Mat to give a single column. FLOAT - Enum constant in enu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:360350,Deployability,configurat,configuration,360350,") - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getConnectedObjects(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getConnectionGroups() - Method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:406164,Deployability,install,installation,406164,"currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a name that may be used for this entry. getImageObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getImagePlane() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. g",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:414498,Deployability,install,install,414498,"ight). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested input resolution for the image. getInputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the requested inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstance() - Static method in class qupath.lib.gui.BuildInfo. Get the shared BuildInfo instance. getInstance() - Static method in class qupath.lib.gui.ExtensionClassLoader. Get a singleton instance of the ExtensionClassLoader. getInstance() - Static method in class qupath.lib.gui.JavadocViewer. Get the main (singleton) instance of JavadocViewer. getInstance() - Static method in class qupath.lib.gui.QuPathGUI. Get the static instance of the current QuPath GUI. getInstance() - Static method in class qupath.lib.gui.scripting.languages.CssLanguage. Get the static instance of this class. getInstance() - Static metho",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:429173,Deployability,update,update,429173," Get the version of the OpenSlide library. getLineCommentString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get the String that represents the start of a comment line. getLineObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log fi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:429222,Deployability,update,updated,429222," Get the version of the OpenSlide library. getLineCommentString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get the String that represents the start of a comment line. getLineObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log fi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:450791,Deployability,release,release,450791,path.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.ima,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:477268,Deployability,patch,patch,477268,"ib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.Path",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:477393,Deployability,patch,patch,477393,".objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.PathObject. Get the classification of the object. getPathClass() - Method in class qupath.lib.objects.PathROIObject;  ;",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:477504,Deployability,patch,patch,477504,".objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.PathObject. Get the classification of the object. getPathClass() - Method in class qupath.lib.objects.PathROIObject;  ; getPathClass() - Method in class qupath.lib.objects.PathRootObject;  ; getPathClass(String) - Static method in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:524189,Deployability,release,release,524189,"ingValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupp",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:543414,Deployability,release,release,543414,"to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:584191,Deployability,integrat,integration,584191,"ons - Enum Class in qupath.lib.gui.tools. Default icons for QuPath commands. iconProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; iconProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the icon that should be used for the tool. identity() - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform representing the identity transform. identity() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns its input unchanged. IGNORE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Ignore classification, indicating what should not be further measured (e.g. IGNORE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Ignore classification, indicating what should not be further measured (e.g. IJExtension - Class in qupath.imagej.gui. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension() - Constructor for class qupath.imagej.gui.IJExtension;  ; IJExtension.IJExtensionCommands - Class in qupath.imagej.gui. Commands to install with the ImageJ extension. IJTools - Class in qupath.imagej.tools. Collection of static methods to help with using ImageJ with QuPath. IJTools() - Constructor for class qupath.imagej.tools.IJTools;  ; IMAGE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests for the image where the region is non-empty. IMAGE_ROOT - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Root object classification. IMAGE_ROOT - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Root object classification. ImageChannel - Class in qupath.lib.images.servers. The name and display color for a single image channel. imageData - Variable in class qupath.lib.gui.charts.Chart",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:584372,Deployability,install,install,584372,"i.viewer.tools.PathTool. Property giving the icon that should be used for the tool. identity() - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform representing the identity transform. identity() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns its input unchanged. IGNORE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Ignore classification, indicating what should not be further measured (e.g. IGNORE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Ignore classification, indicating what should not be further measured (e.g. IJExtension - Class in qupath.imagej.gui. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension() - Constructor for class qupath.imagej.gui.IJExtension;  ; IJExtension.IJExtensionCommands - Class in qupath.imagej.gui. Commands to install with the ImageJ extension. IJTools - Class in qupath.imagej.tools. Collection of static methods to help with using ImageJ with QuPath. IJTools() - Constructor for class qupath.imagej.tools.IJTools;  ; IMAGE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests for the image where the region is non-empty. IMAGE_ROOT - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Root object classification. IMAGE_ROOT - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Root object classification. ImageChannel - Class in qupath.lib.images.servers. The name and display color for a single image channel. imageData - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; imageData - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; imageData - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; imageData(ImageData<?>) -",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:590253,Deployability,install,installation,590253,".display.settings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageDisplaySettings() - Constructor for class qupath.lib.display.settings.ImageDisplaySettings;  ; imageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the original pixels, which determines the export file format. imageFunction(ImageSupplier<S>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used ot lazily read the image. ImageInterpolation - Enum Class in qupath.lib.gui.viewer. Supported interpolation methods when displaying images. ImageJMacroRunner - Class in qupath.imagej.gui. QuPath plugin for running ImageJ macros & returning detected regions. ImageJMacroRunner(QuPathGUI) - Constructor for class qupath.imagej.gui.ImageJMacroRunner. Constructor. imageJPathProperty() - Static method in class qupath.imagej.gui.IJExtension. Property representing the path to a local ImageJ installation, or null if no path has been set. ImageJProcessor - Class in qupath.lib.experimental.pixels. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJProcessor() - Constructor for class qupath.lib.experimental.pixels.ImageJProcessor;  ; ImageJServer - Class in qupath.imagej.images.servers. ImageServer that uses ImageJ's image-reading capabilities. ImageJServer(URI, String...) - Constructor for class qupath.imagej.images.servers.ImageJServer. Constructor. ImageJServerBuilder - Class in qupath.imagej.images.servers. Builder for ImageServers that use ImageJ to read images. ImageJServerBuilder() - Constructor for class qupath.imagej.images.servers.ImageJServerBuilder;  ; imageList(List<ProjectImageEntry<BufferedImage>>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the list of images (ProjectImageEntry) to export. imageNameProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only propert",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:597412,Deployability,update,updated,597412,".experimental.pixels.PixelProcessor.Builder. Set the image supplier. ImageSupplier<S> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying an image region for processing. imageToMat(BufferedImage) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a BufferedImage to an OpenCV Mat. imageToMatBGR(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. imageToMatRGB(BufferedImage, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. imageTypeSettingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify how setting the image type should be handled for images when they are opened for the first time. imageUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). ImageWriter<T> - Interface in qupath.lib.images.writers. Interface for defining class that can write images. ImageWriterTools - Class in qupath.lib.images.writers. Static methods to access ImageWriter objects and write images. ImageWriterTools() - Constructor for class qupath.lib.images.writers.ImageWriterTools;  ; IMMUNE_CELLS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Immune cell classification. IMMUNE_CELLS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Immune cell classification. ImmutableDimension - Class in qupath.lib.geom. An immutable alternative to Java's AWT Dimension. IMPORT_IMAGES - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; IMPORT_IMAGES_LEGACY - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; importDearrayedTMAData(File) - Static method i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:606806,Deployability,install,installActions,606806,"PathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Insert a collection of objects into the hierarchy, firing a change event on completion. insertPixelClassifiersAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPExImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:606926,Deployability,install,installColorMaps,606926,"erarchy. Insert a collection of objects into the hierarchy, firing a change event on completion. insertPixelClassifiersAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPExImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607049,Deployability,install,installColorMaps,607049,"- Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPExImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the ext",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607161,Deployability,install,installCommand,607161,"scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEdi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607271,Deployability,install,installDefaultFeatureClassificationBuilder,607271,"ectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607526,Deployability,install,installDragAndDropHandler,607526,"cripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyComman",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607636,Deployability,install,install,607636,"ass qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new comma",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607696,Deployability,install,installExtension,607696,"ertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageDa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607786,Deployability,install,installExtension,607786,";  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607866,Deployability,install,installExtension,607866,"QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Actio",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:607954,Deployability,install,installExtension,607954,"ss qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionT",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608095,Deployability,install,installExtension,608095,"lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608207,Deployability,install,installExtension,608207,".lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collec",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608321,Deployability,install,installExtension,608321,"erBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608410,Deployability,install,installGroovyCommand,608410,"he list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608541,Deployability,install,installGroovyCommand,608541," method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608674,Deployability,install,installImageDataCommand,608674,"UI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:608861,Deployability,install,installInfoMessage,608861," class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:609028,Deployability,install,installRangePrompt,609028,"e extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:609199,Deployability,install,installStyles,609199,"GUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. IntensityFeaturesPlugin() - Constructor for class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; InteractiveObjectImporter - Class in qupath.lib.gui.commands. Static meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:609304,Deployability,install,installing,609304,"Extension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. IntensityFeaturesPlugin() - Constructor for class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; InteractiveObjectImporter - Class in qupath.lib.gui.commands. Static methods to import object(s) from different sources. INTERLEAVED - Enum constant in enum class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:609362,Deployability,install,installTool,609362,"gExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionTools. Install an optional info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. IntensityFeaturesPlugin() - Constructor for class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; InteractiveObjectImporter - Class in qupath.lib.gui.commands. Static methods to import object(s) from different sources. INTERLEAVED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:656736,Deployability,update,update,656736,"on;  ; LocalNormalization.LocalNormalizationType - Class in qupath.opencv.tools. Helper class to store local normalization parameters. LocalNormalization.NormalizationType - Enum Class in qupath.opencv.tools. Local normalization type. LocalNormalization.SmoothingScale - Class in qupath.opencv.tools. 2D or 3D Gaussian scale. locateFile(String) - Static method in class qupath.lib.gui.scripting.QPEx. Locate a specified file based upon its name or path, with a search depth of 4. locateFile(String) - Static method in class qupath.lib.scripting.QP. Locate a specified file based upon its name or path, with a search depth of 4. locateFile(String, int) - Static method in class qupath.lib.gui.scripting.QPEx. Locate a specified file based upon its name or path. locateFile(String, int) - Static method in class qupath.lib.scripting.QP. Locate a specified file based upon its name or path. locateFile(String, int, Path...) - Static method in class qupath.lib.io.UriUpdater. Attempt to update a file using the specified search paths. locateFile(URI, int, Path...) - Static method in class qupath.lib.io.UriUpdater. Attempt to update a URI to find an existing file using the specified search paths. LOCATION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; locationFontSize - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; locationFontSizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred font size for the location text in the viewer. locationUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collec",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:656876,Deployability,update,update,656876,"n.NormalizationType - Enum Class in qupath.opencv.tools. Local normalization type. LocalNormalization.SmoothingScale - Class in qupath.opencv.tools. 2D or 3D Gaussian scale. locateFile(String) - Static method in class qupath.lib.gui.scripting.QPEx. Locate a specified file based upon its name or path, with a search depth of 4. locateFile(String) - Static method in class qupath.lib.scripting.QP. Locate a specified file based upon its name or path, with a search depth of 4. locateFile(String, int) - Static method in class qupath.lib.gui.scripting.QPEx. Locate a specified file based upon its name or path. locateFile(String, int) - Static method in class qupath.lib.scripting.QP. Locate a specified file based upon its name or path. locateFile(String, int, Path...) - Static method in class qupath.lib.io.UriUpdater. Attempt to update a file using the specified search paths. locateFile(URI, int, Path...) - Static method in class qupath.lib.io.UriUpdater. Attempt to update a URI to find an existing file using the specified search paths. LOCATION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; locationFontSize - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; locationFontSizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred font size for the location text in the viewer. locationUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathO",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:658030,Deployability,update,update,658030,"; locationFontSize - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; locationFontSizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred font size for the location text in the viewer. locationUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.lo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:667469,Deployability,update,update,667469,"olutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 entries, normalizing to the specified background value. makeODLUT(double, int) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table, normalizing to the specified background value. makePathInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file or directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:686516,Deployability,install,installation,686516,"Prefs.FontSize;  ; MEMBRANE - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Cell boundary, with interior removed. memoizationTimeMillis - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; MEMORY_MONITORY - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; memoryReport(CharSequence) - Static method in class qupath.opencv.tools.OpenCVTools. Create a brief report on memory use, based on JavaCPP's Pointer class. menu() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; MenuActions - Interface in qupath.lib.gui.actions.menus. Common interface to define the contents of a menu in terms of actions. menuPathProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getMenuPath(). Menus - Class in qupath.lib.gui.actions.menus. Generate actions for installation in QuPath's main menubar. Menus() - Constructor for class qupath.lib.gui.actions.menus.Menus;  ; menusToMarkdown() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. menusToMarkdown(QuPathGUI, Writer) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Write a markdown representation of the menus for inclusion in the documentation. MenuTools - Class in qupath.lib.gui.tools. Static methods to help with creating and populating JavaFX menus. MenuTools() - Constructor for class qupath.lib.gui.tools.MenuTools;  ; merge(Collection<? extends PathObject>) - Method in class qupath.lib.objects.utils.ObjectMerger. Calculate the result of applying the merging strategy to the input objects. MERGE_SELECTED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; mergeAnnotations(Collection<PathObject>) - Static metho",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:712080,Deployability,update,updates,712080,"es.servers.ImageServerMetadata. Get the number of resolution levels. nMissingValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of NaNs in the input array. NO - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""No"" option. nObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Number of objects in the hierarchy, excluding the root. nObjects() - Static method in class qupath.lib.scripting.QP. Get a count of the total number of objects in the current hierarchy. nObserved() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of observed (not censored) events. NONE - Enum constant in enum class qupath.lib.classifiers.Normalization. Do not normalize features. NONE - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Do not include images. NONE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Don't check for any updates automatically. NONE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Do not show detections. NONE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Do not set the image type. NONE - Enum constant in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. No local normalization. nonModal() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify that the dialog should be non-modal. Normalization - Enum Class in qupath.lib.classifiers. Methods for normalizing features. normalize(Mat, Normalizer) - Static method in class qupath.opencv.ml.objects.features.Preprocessing. Apply a Normalizer to new training data samples. normalize(Normalization) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Define normalization type. Normalize() - Constructor for class qupath.opencv.ops.ImageOps.Normalize;  ; NORMALIZED - Enum constant in enum class qupath.lib.gui.charts.HistogramCha",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:724123,Deployability,patch,patch-based,724123,"opencv.ml. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV - Class in qupath.opencv.ml. Classifier based on SVMSGD. OpenCVDnn - Class in qupath.opencv.dnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn() - Constructor for class qupath.opencv.dnn.OpenCVDnn;  ; OpenCVDnn.Builder - Class in qupath.opencv.dnn. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType - Enum Class in qupath.opencv.dnn. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder - Class in qupath.opencv.dnn. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVDnnModelBuilder() - Constructor for class qupath.opencv.dnn.OpenCVDnnModelBuilder;  ; OpenCVMLClassifier<T> - Class in qupath.opencv.ml.objects. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. OpenCVModelObjectClassifier(PathObjectFilter, OpenCVDnn, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.OpenCVModelObjectClassifier. Constructor. OpenCVProcessor - Class in qupath.lib.experimental.pixels. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVProcessor() - Constructor for class qupath.lib.experimental.pixels.OpenCVProcessor;  ; OpenCVStatModel() - Constructor for class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel;  ; OpenCVTools - Class in qupath.opencv.tools. Collection of static methods to help with using OpenCV from Java. OpenCVTools() - Constructor for class qupath.opencv.tools.OpenCVTools;  ; OpenCVTools.IndexedPixel - Class in qupath.opencv.tools. Class representing the indices of a pixel and its value. OpenCVTypeAdapter() - Constructor for class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; OpenCVTypeAdapters - Class in qupath.op",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:751311,Deployability,patch,patch,751311,"interface qupath.lib.gui.scripting.ScriptEditorControl. Request paste from the system clipboard. paste() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; PASTE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; PASTE_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathCellObject() - Constructor for class qupath.lib.objects.PathCellObject. Default constructor. PathClass - Class in qupath.lib.objects.classes. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathC",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:751424,Deployability,patch,patchSize,751424,"  ; PASTE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; PASTE_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathCellObject() - Constructor for class qupath.lib.objects.PathCellObject. Default constructor. PathClass - Class in qupath.lib.objects.classes. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses - Class in qupath.lib.objects.classes. Enum representing standard classifications. PathClassFactory - Class in qupath.lib.objects.classes. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:751533,Deployability,patch,patch,751533,"s;  ; PASTE_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathCellObject() - Constructor for class qupath.lib.objects.PathCellObject. Default constructor. PathClass - Class in qupath.lib.objects.classes. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses - Class in qupath.lib.objects.classes. Enum representing standard classifications. PathClassFactory - Class in qupath.lib.objects.classes. Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathC",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:751545,Deployability,patch,patchSize,751545,"path.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathCellObject() - Constructor for class qupath.lib.objects.PathCellObject. Default constructor. PathClass - Class in qupath.lib.objects.classes. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses - Class in qupath.lib.objects.classes. Enum representing standard classifications. PathClassFactory - Class in qupath.lib.objects.classes. Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses - Enum Clas",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:751652,Deployability,patch,patch,751652,"n class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathCellObject() - Constructor for class qupath.lib.objects.PathCellObject. Default constructor. PathClass - Class in qupath.lib.objects.classes. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses - Class in qupath.lib.objects.classes. Enum representing standard classifications. PathClassFactory - Class in qupath.lib.objects.classes. Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses - Enum Class in qupath.lib.objects.classes. Deprecated.; Enum representing standard classif",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:755780,Deployability,update,updated,755780,"tiple PathObjectConnectionGroups. PathObjectConnections() - Constructor for class qupath.lib.objects.PathObjectConnections. Default constructor. PathObjectFilter - Enum Class in qupath.lib.objects. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectGridView - Class in qupath.lib.gui.commands. Grid display of objects. PathObjectGridView.GridDisplaySize - Enum Class in qupath.lib.gui.commands;  ; PathObjectHierarchy - Class in qupath.lib.objects.hierarchy. A basic hierarchy in which to store PathObjects. PathObjectHierarchy() - Constructor for class qupath.lib.objects.hierarchy.PathObjectHierarchy. Default constructor, creates an empty hierarchy. PathObjectHierarchyEvent - Class in qupath.lib.objects.hierarchy.events. An event class for passing on information about modifications to a PathObjectHierarchy. PathObjectHierarchyEvent.HierarchyEventType - Enum Class in qupath.lib.objects.hierarchy.events. Enum representing different ways in which the hierarchy may have been updated. PathObjectHierarchyListener - Interface in qupath.lib.objects.hierarchy.events. A listener for modifications to a PathObjectHierarchy (i.e. PathObjectHierarchyView - Class in qupath.lib.gui.panes. Component for showing a tree-based view of the object hierarchy. PathObjectHierarchyView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.PathObjectHierarchyView. Constructor. PathObjectHierarchyView(QuPathGUI, ObservableValue<ImageData<BufferedImage>>) - Constructor for class qupath.lib.gui.panes.PathObjectHierarchyView. Constructor. PathObjectLabels - Class in qupath.lib.gui.tools. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels() - Constructor for class qupath.lib.gui.tools.PathObjectLabels;  ; PathObjectLabels.PathObjectMiniPane - Class in qupath.lib.gui.tools. Manage a small pane that can be used to display a PathObject. PathObjectMiniPane(Function<PathOb",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:775064,Deployability,patch,patches,775064,"qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:775599,Deployability,patch,patch,775599,".opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Me",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:793896,Deployability,update,update,793896," class qupath.lib.gui.commands.TMACommands. Prompt to export summary TMA data for a specific image to a directory. promptToImportImages(QuPathGUI, String...) - Static method in class qupath.lib.gui.commands.ProjectCommands. Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. promptToImportImages(QuPathGUI, ImageServerBuilder<BufferedImage>, String...) - Static method in class qupath.lib.gui.commands.ProjectCommands. Show prompt for the user to select images to import into the current project in QuPath. promptToImportLegacyProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.ProjectCommands. Prompt the user to select a legacy project file, and then import the images into ; the current project. promptToImportObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. promptToImportObjectsFromFile(ImageData<BufferedImage>, File) - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Prompt to import objects read from a file. promptToImportObjectsProjectEntry(ImageData<BufferedImage>, ProjectImageEntry<?>) - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Prompt to import objects from a project entry. promptToImportTMAData(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to import TMA data for the specified image data. promptToOpenImageFile() - Method in class qupath.lib.gui.QuPathGUI. Show a file chooser to open a new image in the current viewer. promptToOpenImageFileOrUri() - Method in class qupath.lib.gui.QuPathGUI. Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). promptToOpenProject(QuPathGUI) - Static method in class qupath.lib",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:797807,Deployability,update,update,797807,"rties(PathObjectHierarchy) - Static method in class qupath.lib.gui.tools.GuiTools. Prompt the user to set properties for the currently-selected annotation(s). promptToSetFontSize() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Update the font size for the script editor and console. promptToSetGridLineSpacing(OverlayOptions) - Static method in class qupath.lib.gui.commands.Commands. Prompt to input the spacing for the grid lines optionally displayed on viewers. promptToSetImageType(ImageData<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.panes.ImageDetailsPane. Prompt the user to set the ImageData.ImageType for the image. promptToSimplifySelectedAnnotations(ImageData<?>, double) - Static method in class qupath.lib.gui.commands.Commands. Show a prompt to selected annotations in a hierarchy. promptToUpdateUris(Collection<T>, URI, URI, boolean) - Static method in class qupath.lib.gui.commands.UpdateUrisCommand. Show dialog prompting the user to update URIs for missing files. PROP_JAVADOC_PATH - Static variable in class qupath.lib.gui.JavadocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:804855,Deployability,update,updates,804855,"hods of use for scripting, ; along with some extra methods that require access of GUI features. QPEx() - Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). quickShowImage(String, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). QUIT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; qupath - package qupath. Package containing the main QuPath launcher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. q",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:817246,Deployability,install,install,817246,"ocess.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui - package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. QuPathApp - Class in qupath.lib.gui. Launcher application to start QuPath. QuPathApp() - Constructor for class qupath.lib.gui.QuPathApp;  ; QuPathExtension - Interface in qupath.lib.gui.extensions. Simple interface for QuPath extensions. QuPathGUI - Class in qupath.lib.gui. Main GUI for QuPath, written using JavaFX. qupathj - package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. QuPathPenManager - Class in qupath.lib.gui.viewer.tools. Helper class for managing pressure-sensitive input. QuPathPenManager() - Constructor for class qupath.lib.gui.viewer.tools.QuPathPenManager;  ; QuPathPenManager.PenInputManager - Interface in qupath.lib.gui.viewer.tools. Interface defining minimal behavior for a pen input device. QuPathResources - Class in qupath.lib.gui.localization. Load strings from the default resource bundle. QuPathResources() - Constructor for class qupath.lib.gui.localization.QuPathResources;  ; QuPathStyleManager - Class in qupath.lib.gui.prefs. Class to facilitate the use of different styles within QuPath. QuPathStyleManager() - Constructor for class qupath.lib.gui.prefs.QuPathStyleManager;  ; QuPathStyleManager.Fonts - Enum Class in qupath.lib.gui.prefs. Available font families. QuPathStyleManager.StyleOption - Interface in qupath.lib.gui.prefs. Interface defining a style that may be applied to QuPat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:820725,Deployability,release,release,820725,"ols.NumpyTools. Read a all Mats from an .npy or .npz file. readAllMats(String, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz file, optionally squeezing singleton dimensions. readAllMats(Path) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz path. readAllMats(Path, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. readAllTiles() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Read all the tiles. readBufferedImage(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Deprecated.; since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. readClassifier(Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Read the classifier from a file. readClassifier(Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Read a standard pixel classifier from a file. readCSV(File) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). readCSV(String) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). readCSV(Scanner) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). readExternal(ObjectInput) - Method in class qupath.lib.color.ColorDeconvolutionStains;  ; readExternal(ObjectInput) - Method in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:820827,Deployability,update,updated,820827,"ols.NumpyTools. Read a all Mats from an .npy or .npz file. readAllMats(String, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz file, optionally squeezing singleton dimensions. readAllMats(Path) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz path. readAllMats(Path, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. readAllTiles() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Read all the tiles. readBufferedImage(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Deprecated.; since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. readClassifier(Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Read the classifier from a file. readClassifier(Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Read a standard pixel classifier from a file. readCSV(File) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). readCSV(String) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). readCSV(Scanner) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). readExternal(ObjectInput) - Method in class qupath.lib.color.ColorDeconvolutionStains;  ; readExternal(ObjectInput) - Method in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:826217,Deployability,patch,patch,826217,"Read an OpenCV Mat from a Numpy .npy file. readMat(Path, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. readObjects(File) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from a file. readObjects(Path) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from a file. readObjectsFromClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Try to read objects from the system clipboard. readObjectsFromGeoJSON(InputStream) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from an input stream. readOnlyProperty() - Method in class qupath.lib.gui.QuPathGUI. Property indicating whether QuPath is in 'read-only' mode. readPatch(ImageServer<BufferedImage>, ROI, double, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size and using zero-padding if required. readPatch(ImageServer<BufferedImage>, ROI, double, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size. readPathObjects() - Method in class qupath.imagej.images.servers.ImageJServer;  ; readPathObjects() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readPathObjects() - Method in interface qupath.lib.objects.PathObjectReader. Read a collection of objects from the source. readPoints(File) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a file. readPoints(InputStream) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a stream. readPointsObjectList(File) - Static method in class qupath.lib.io.PointIO. Deprecated. readRegion(double, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region from the default ImagePlane (i.e. re",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:826422,Deployability,patch,patch,826422,"singleton dimensions. readObjects(File) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from a file. readObjects(Path) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from a file. readObjectsFromClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Try to read objects from the system clipboard. readObjectsFromGeoJSON(InputStream) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from an input stream. readOnlyProperty() - Method in class qupath.lib.gui.QuPathGUI. Property indicating whether QuPath is in 'read-only' mode. readPatch(ImageServer<BufferedImage>, ROI, double, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size and using zero-padding if required. readPatch(ImageServer<BufferedImage>, ROI, double, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size. readPathObjects() - Method in class qupath.imagej.images.servers.ImageJServer;  ; readPathObjects() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readPathObjects() - Method in interface qupath.lib.objects.PathObjectReader. Read a collection of objects from the source. readPoints(File) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a file. readPoints(InputStream) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a stream. readPointsObjectList(File) - Static method in class qupath.lib.io.PointIO. Deprecated. readRegion(double, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region from the default ImagePlane (i.e. readRegion(double, int, int, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified z-plane and timepoint. readRegion(Reg",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:851886,Deployability,update,update,851886," selection changes. removeProperty(String) - Method in class qupath.lib.images.ImageData. Remove a specified property. removePropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Remove a property change listener. removeRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the row containing the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Bu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:852071,Deployability,update,update,852071,"hod in class qupath.lib.images.ImageData. Remove a property change listener. removeRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the row containing the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageSe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:856453,Deployability,update,update,856453," specified replacement (may be null). replaceLastStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Replace the most recently added step with this one. replaceNaNs(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that replaces NaNs with a specified value. replaceNaNs(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace NaNs in a floating point array. replaceSelection(String) - Method in interface qupath.lib.gui.scripting.EditableText. Insert the specified text, replacing any existing selection. replaceSelection(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; replaceSelection(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; replaceValues(Mat, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace a specific value in an array. requestAutomaticUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request an automated update check in a background thread. requestCancelDirection(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Requests that the viewer cancels either the x- or y-axis direction. requestDecelerate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units. requestFocus() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFocus() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:857557,Deployability,update,update,857557,"thViewer. Requests that the viewer cancels either the x- or y-axis direction. requestDecelerate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units. requestFocus() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFocus() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that any model is loaded lazily on demand. requestNewHandle(double, double) - Method in class qupath.lib.roi.RoiEditor. Request an updated ROI with a new handle inserted - useful e.g. requestParallelization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if multiple readers may be created for different threads, to enable parallel image reading. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Query whether parent clipping should be a",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:857703,Deployability,update,update,857703,".QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units. requestFocus() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFocus() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that any model is loaded lazily on demand. requestNewHandle(double, double) - Method in class qupath.lib.roi.RoiEditor. Request an updated ROI with a new handle inserted - useful e.g. requestParallelization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if multiple readers may be created for different threads, to enable parallel image reading. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Query whether parent clipping should be applied. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Query whether pare",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:858150,Deployability,update,updated,858150,"h.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that any model is loaded lazily on demand. requestNewHandle(double, double) - Method in class qupath.lib.roi.RoiEditor. Request an updated ROI with a new handle inserted - useful e.g. requestParallelization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if multiple readers may be created for different threads, to enable parallel image reading. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Query whether parent clipping should be applied. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Query whether parent clipping should be applied. requestParentClipping(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler. Query whether parent clipping should be applied. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Retur",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:912890,Deployability,update,update,912890,"rver. serverRegion(ImageRegion, double, ImageServer<BufferedImage>) - Method in class qupath.lib.images.servers.SparseImageServer.Builder. Add a region based on an existing ImageServer. ServerSelector - Class in qupath.lib.gui.panes. Helper class for selecting one image server out of a collection. ServerTools - Class in qupath.lib.images.servers. Static methods helpful when dealing with ImageServers. ServerTools() - Constructor for class qupath.lib.images.servers.ServerTools;  ; setAccelerator(String, String) - Method in class qupath.lib.gui.QuPathGUI. Set an accelerator for the specified menu command. setAccelerator(MenuItem, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified menu item. setAccelerator(Action, KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Set the accelerator for the specified action. setActiveHandlePosition(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. If a handle has been grabbed, update its displacement. setActiveTool(PathTool) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the active PathTool for input to this viewer. setActiveViewer(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the activeViewer property. setAll() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ALL. setAlphaComposite(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; setArgs(String[]) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set optional string args to pass to the script. setBatchIndex(int) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image index for batch processing (default is 0). setBatchProjectAndImage(Project<BufferedImage>, ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the Project and ImageData to use for batch processing for the current thread. setBatchSaveResult(b",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:929710,Deployability,install,installation,929710," false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image data for the script. setImageData(ImageData<?>, Collection<? extends PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set the ImageData and a collection of objects to measure. setImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the current image for this viewer. setImageData(ImageData<BufferedImage>, boolean) - Method in class qupath.lib.display.ImageDisplay. Set the ImageData to a new value. setImageJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecate",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:942658,Deployability,update,updates,942658,"ata<?>, Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for an ImageServer to have the required pixel sizes and z-spacing. setPlaceholderText(String) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the placeholder text to show if no image is available. setPredicate(Predicate<? super PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set a predicate used to filter the rows of the table. setPreferredOverlayColor(Color) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a preferred overlay color, which the overlay may or may not make use of. setProject(Project<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current project for the script. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser. Set the project. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Set the active project, triggering any necessary GUI updates. setProperty(String, Object) - Method in class qupath.lib.images.ImageData. Set a property. setRange(double, double) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the upper and lower bounds. setReaderOptions(Map<String, String>) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set additional arguments that should be passed to readers. setReadOnly(boolean) - Method in class qupath.lib.gui.QuPathGUI. Specify whether QuPath should be in 'read-only' mode. setRecording(boolean) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the recording property of this ViewTracker. setRenderer(ImageRenderer) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:966791,Deployability,install,installed,966791,"ic method in class qupath.lib.gui.prefs.PathPrefs. Property specifying if QuPath should show the image title in the main window title. showInfoNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an info notification. showingProperty() - Method in class qupath.lib.gui.panes.SlideLabelView. Property indicating whether the label is showing on screen or not. showInputDialog(String, String, Double) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an input dialog requesting a numeric value. showInputDialog(String, String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an input dialog requesting a String input. showInputDisplayProperty() - Method in class qupath.lib.gui.QuPathGUI. Property to indicate whether the input display is currently showing. showInstalledExtensions(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog displaying the extensions installed for a specified QuPath instance. showLegacyOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that the legacy options should be shown to the user - normally not desirable. showLocationProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the cursor location. showLocationProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the cursor location. showMeasurementTableObjectIDs - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableObjectIDsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail ima",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1029113,Deployability,update,updated,1029113,"Change the width of output tiles. Timeit - Class in qupath.lib.common. Helper class to time code execution. Timeit() - Constructor for class qupath.lib.common.Timeit;  ; Timeit.Checkpoint - Class in qupath.lib.common. Class representing a named checkpoint with a timestamp in nanoseconds. timePoint(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a single timepoint to be written from a time series. timepoints(TimeUnit, double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the time unit and individual time points. timepoints(TimeUnit, double...) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify timepoints and units. timePoints(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a range of timepoints to be written from a time series. timestamp - Variable in class qupath.lib.gui.images.stores.AbstractImageRenderer. Timestamp variable; this should be updated by implementing classes. TINY - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; TINY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; title - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; title - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; title - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; title(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the chart title. title(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the chart title. title(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the chart title. title(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog title. title(String) - Method in class qupath.lib.gui.FileCopier. Title for any dialog. title(String) - Method in class qupath.process.gui.com",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1034322,Deployability,toggle,toggleObjectsLocked,1034322,"ferences;  ; TMAScoreImporter - Class in qupath.lib.io. Helper class for importing data in connection with TMA slides. TMAScoreImporter() - Constructor for class qupath.lib.io.TMAScoreImporter;  ; TMASummaryViewer - Class in qupath.lib.gui.tma. Deprecated.; since v0.4.0. TMASummaryViewer(Stage) - Constructor for class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Constructor. toBlob(Mat...) - Method in interface qupath.opencv.dnn.BlobFunction. Convert one or more mats to a blob. toEncodedURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to an encoded URI. toFriendlyString() - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get a friendlier string representation. TOGGLE_SELECTED_OBJECTS_LOCKED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; TOGGLE_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; toggleObjectsLocked(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of specified objects. toggleSelectedObjectsLocked(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. toggleShowHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Toggle the visibility of the specified channel. toJSON(boolean) - Method in class qupath.lib.display.ImageDisplay. Create a JSON representation of the main components of the current display. toJTS(AffineTransform) - Static method in class qupath.lib.awt.common.AffineTransforms. Create a Java Topology Suite affine transformation from a Java affine transform. TOOLBAR_ICON_SIZE - Static variable in class qupath.lib.gui.QuPathGUI. Icon size to use in the main QuPath toolbar. ToolManager - Class in qupath.lib.gui. M",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1034507,Deployability,toggle,toggleSelectedObjectsLocked,1034507,"oreImporter;  ; TMASummaryViewer - Class in qupath.lib.gui.tma. Deprecated.; since v0.4.0. TMASummaryViewer(Stage) - Constructor for class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Constructor. toBlob(Mat...) - Method in interface qupath.opencv.dnn.BlobFunction. Convert one or more mats to a blob. toEncodedURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to an encoded URI. toFriendlyString() - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get a friendlier string representation. TOGGLE_SELECTED_OBJECTS_LOCKED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; TOGGLE_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; toggleObjectsLocked(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of specified objects. toggleSelectedObjectsLocked(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. toggleShowHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Toggle the visibility of the specified channel. toJSON(boolean) - Method in class qupath.lib.display.ImageDisplay. Create a JSON representation of the main components of the current display. toJTS(AffineTransform) - Static method in class qupath.lib.awt.common.AffineTransforms. Create a Java Topology Suite affine transformation from a Java affine transform. TOOLBAR_ICON_SIZE - Static variable in class qupath.lib.gui.QuPathGUI. Icon size to use in the main QuPath toolbar. ToolManager - Class in qupath.lib.gui. Manage (drawing) tool selection in a QuPath UI. tooltip(ObservableValue<String>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Text to include in any too",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1034675,Deployability,update,update,1034675,"ctor for class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Constructor. toBlob(Mat...) - Method in interface qupath.opencv.dnn.BlobFunction. Convert one or more mats to a blob. toEncodedURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to an encoded URI. toFriendlyString() - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get a friendlier string representation. TOGGLE_SELECTED_OBJECTS_LOCKED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; TOGGLE_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; toggleObjectsLocked(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of specified objects. toggleSelectedObjectsLocked(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. toggleShowHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Toggle the visibility of the specified channel. toJSON(boolean) - Method in class qupath.lib.display.ImageDisplay. Create a JSON representation of the main components of the current display. toJTS(AffineTransform) - Static method in class qupath.lib.awt.common.AffineTransforms. Create a Java Topology Suite affine transformation from a Java affine transform. TOOLBAR_ICON_SIZE - Static variable in class qupath.lib.gui.QuPathGUI. Icon size to use in the main QuPath toolbar. ToolManager - Class in qupath.lib.gui. Manage (drawing) tool selection in a QuPath UI. tooltip(ObservableValue<String>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Text to include in any tooltip. tooltips(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Request tooltips to be shown when the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1034728,Deployability,toggle,toggleShowHideChannel,1034728,".) - Method in interface qupath.opencv.dnn.BlobFunction. Convert one or more mats to a blob. toEncodedURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to an encoded URI. toFriendlyString() - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get a friendlier string representation. TOGGLE_SELECTED_OBJECTS_LOCKED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; TOGGLE_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; toggleObjectsLocked(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of specified objects. toggleSelectedObjectsLocked(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. toggleShowHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Toggle the visibility of the specified channel. toJSON(boolean) - Method in class qupath.lib.display.ImageDisplay. Create a JSON representation of the main components of the current display. toJTS(AffineTransform) - Static method in class qupath.lib.awt.common.AffineTransforms. Create a Java Topology Suite affine transformation from a Java affine transform. TOOLBAR_ICON_SIZE - Static variable in class qupath.lib.gui.QuPathGUI. Icon size to use in the main QuPath toolbar. ToolManager - Class in qupath.lib.gui. Manage (drawing) tool selection in a QuPath UI. tooltip(ObservableValue<String>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Text to include in any tooltip. tooltips(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Request tooltips to be shown when the cursor hovers over the pie chart. TOP_CENTER - Enum constant in enum class qupath.lib.ob",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1053490,Deployability,update,updated,1053490," transformToOp(BioimageIoSpec.Processing) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms, if possible. translate(double, double) - Method in class qupath.lib.roi.AreaROI;  ; translate(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; translate(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; translate(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a translated version of this ROI. translate(double, double) - Method in class qupath.lib.roi.LineROI;  ; translate(double, double) - Method in class qupath.lib.roi.PointsROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.ColorToolsAwt. Black, with 50% opacity. TRANSLUCENT_BLACK_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. Black with opacity at 50%. TRANSLUCENT_WHITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1060071,Deployability,update,update,1060071,"ape. Constant to represent an unknown dimension length. UNKNOWN_SHAPE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown shape. UNKNOWN_SIZE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown size (i.e. unlimitedDatapoints() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzip",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061300,Deployability,update,updateAffineTransform,1061300,"th.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061381,Deployability,update,updateAffineTransform,1061381,"ues, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Sta",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061466,Deployability,update,updateAvailableStyles,1061466,"method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061601,Deployability,update,updated,1061601,"ues, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061610,Deployability,update,updateBounds,1061610,"atic method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061686,Deployability,update,updateChart,1061686,"int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.Den",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061791,Deployability,update,updateChart,1061791,"B(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1061880,Deployability,update,updateChart,1061880,"o red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one w",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062071,Deployability,update,updates,1062071,"edExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different di",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062275,Deployability,release,release,1062275,"HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062292,Deployability,update,updateCooccurrenceMatrices,1062292,"viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImag",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062541,Deployability,update,updateCursor,1062541,"est that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062613,Deployability,update,updateDefaults,1062613,") - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update th",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062780,Deployability,update,updateDownsample,1062780,"ieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062912,Deployability,update,updated,1062912,"terChart<Number, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.h",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1062938,Deployability,update,updateFromDisplay,1062938,"ts.ScatterChartBuilder;  ; UpdateChecker - Class in qupath.lib.gui.extensions. Helper class to query for updates using GitHub's web API. UpdateChecker() - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063080,Deployability,update,updateHistogram,1063080,") - Constructor for class qupath.lib.gui.extensions.UpdateChecker;  ; UpdateChecker.ReleaseVersion - Class in qupath.lib.gui.extensions. Class to represent a release version. updateCooccurrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063274,Deployability,update,updateImage,1063274,"urrenceMatrices(CoocurranceMatrices, SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the up",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063408,Deployability,update,updateImage,1063408,"sis.features.HaralickFeatureComputer. Update existing CoocurranceMatrices with the values in a SimpleImage. updateCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Upd",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063532,Deployability,update,updateMeasurementList,1063532,"- Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateDefaults(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.density.DensityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(Im",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063689,Deployability,update,updateMeasurements,1063689,"sityMapDialog. Update default parameters with a specified ImageData. updateDownsample(double) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) -",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063825,Deployability,update,updateObject,1063825,"t. Create a RegionRequest equivalent to this one with the updated downsample value. updateFromDisplay(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Update the current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlan",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1063983,Deployability,update,updateParameterList,1063983,"e current display based upon a different display. updateHistogram(ImageDisplay, ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.P",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064176,Deployability,update,updatePath,1064176,"tHistogramPane. Update the histogram to show the data for the given channel. updateImage(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; update",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064302,Deployability,update,updated,1064302,"Image(String, BufferedImage) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064316,Deployability,update,updatePlane,1064316,"eViewer. Update the image using a buffered image. updateImage(String, Image) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Update the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant o",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064473,Deployability,update,updatePlane,1064473,"te the image using a JavaFX image. updateMeasurementList() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean)",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064542,Deployability,update,updatePlane,1064542,"thod in class qupath.lib.gui.measure.ObservableMeasurementTableData. Update the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Up",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064614,Deployability,update,updatePlane,1064614,"date the entire measurement list for the current objects. updateMeasurements() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. up",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064687,Deployability,update,updatePlane,1064687,"ts() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064833,Deployability,update,updatePlane,1064833,") - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressM",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064902,Deployability,update,updatePlane,1064902,"archy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1064973,Deployability,update,updatePlane,1064973,"arameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been u",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065045,Deployability,update,updatePlane,1065045," in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - M",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065118,Deployability,update,updatePlane,1065118,"rList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAd",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065192,Deployability,update,updatePlaneRecursive,1065192,"b.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.displ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065435,Deployability,update,updatePlaneRecursive,1065435,"ne(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065629,Deployability,update,updateProgress,1065629,"h.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065760,Deployability,update,updateProgress,1065760,"I defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065990,Deployability,update,updated,1065990,"hod in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1065999,Deployability,update,updateRGBAdditive,1065999,"  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateSe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1066124,Deployability,update,updateRGBAdditive,1066124,"class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriR",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1066351,Deployability,update,updateRGBAdditive,1066351,"noring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. C",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1066484,Deployability,update,updateRGBAdditive,1066484,"lass qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.comm",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1066711,Deployability,update,updateRunningStatistics,1066711,"r;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement wit",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1066911,Deployability,update,updateServerMetadata,1066911," related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuil",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067033,Deployability,update,updateServerURIs,1067033,"thod in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067163,Deployability,update,updateURIs,1067163,"DisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in inter",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067180,Deployability,update,updateStatus,1067180," interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriRes",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067331,Deployability,update,updateT,1067331,". updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067451,Deployability,update,updated,1067451,"class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067468,Deployability,update,updateTable,1067468,"ateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; u",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067595,Deployability,update,updateTranslation,1067595,"g pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067781,Deployability,update,updateUris,1067781,"sis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067859,Deployability,update,updateURIs,1067859,"existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivale",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1067978,Deployability,update,updateURIs,1067978,"mageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<Path",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068128,Deployability,update,updateURIs,1068128,"esource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068230,Deployability,update,updateURIs,1068230,"s.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConst",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068316,Deployability,update,updateURIs,1068316,". updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068392,Deployability,update,updateURIs,1068392,"nRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annota",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068486,Deployability,update,updateURIs,1068486,"ss qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing an",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068781,Deployability,update,updateZ,1068781,", URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1068901,Deployability,update,updated,1068901,"I>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1109455,Deployability,update,updated,1109455,"mmandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an Im",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1109620,Deployability,update,updated,1109620,"tructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1110115,Deployability,update,updated,1110115,"gins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1110337,Deployability,release,released,1110337,"ges.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Re",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:60232,Energy Efficiency,green,green,60232,"mImages(Mat...) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from one or more mats. blobFromImages(Mat, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:60532,Energy Efficiency,green,green,60532,"esizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI boundaries within a specified distance. BoundaryStrategy - Class in qupath.process.gui.commands.ml. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BRIGHTFIELD_H_DAB - Enum constant in enum class qupath.lib.images.ImageData",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:64154,Energy Efficiency,green,green,64154,"mmand. Constructor. BrightnessContrastHistogramPane - Class in qupath.lib.gui.commands.display. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastHistogramPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane;  ; BrightnessContrastSettingsPane - Class in qupath.lib.gui.commands.display. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSettingsPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane;  ; BrightnessContrastSliderPane - Class in qupath.lib.gui.commands.display. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrightnessContrastSliderPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSliderPane;  ; brown(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brown value, (blue - (red + green)*0.3f). Brown - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brown value, (blue - (red + green)*0.3f). browseDirectory(File) - Static method in class qupath.lib.gui.tools.GuiTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in p",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:64288,Energy Efficiency,green,green,64288,"ss/contrast adjustment, allowing the user to select min/max values. BrightnessContrastHistogramPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane;  ; BrightnessContrastSettingsPane - Class in qupath.lib.gui.commands.display. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSettingsPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane;  ; BrightnessContrastSliderPane - Class in qupath.lib.gui.commands.display. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrightnessContrastSliderPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSliderPane;  ; brown(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brown value, (blue - (red + green)*0.3f). Brown - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brown value, (blue - (red + green)*0.3f). browseDirectory(File) - Static method in class qupath.lib.gui.tools.GuiTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in pixels. brushScaleByMag - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushScaleByMagProperty() - Static m",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:65559,Energy Efficiency,adapt,adapting,65559,"- Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in pixels. brushScaleByMag - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushScaleByMagProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). BrushToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BrushToolEventHandler() - Constructor for class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; buffer(ROI, double) - Static method in class qupath.lib.roi.RoiTools. Buffer the specified ROI, dilating (or eroding) by the specified distance. BufferedImageOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions, ImageRegion, BufferedImage) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:97379,Energy Efficiency,adapt,adapting,97379,"elType(ImageServerMetadata.ChannelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the interpretation of channels. Charts - Class in qupath.lib.gui.charts. Helper class for generating interactive charts. Charts() - Constructor for class qupath.lib.gui.charts.Charts;  ; Charts.BarChartBuilder - Class in qupath.lib.gui.charts. Builder for creating scatter charts. Charts.PieChartBuilder - Class in qupath.lib.gui.charts. Builder for creating pie charts. Charts.ScatterChartBuilder - Class in qupath.lib.gui.charts. Builder for creating scatter charts. ChartThresholdPane - Class in qupath.lib.gui.charts. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartThresholdPane(XYChart<Number, Number>) - Constructor for class qupath.lib.gui.charts.ChartThresholdPane. Note: xAxis and yAxis must be instances of NumberAxis. ChartTools - Class in qupath.lib.gui.charts. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.Ima",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:144495,Energy Efficiency,green,green,144495,".imagej.tools.IJTools. Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. convertToImageProcessor(BufferedImage, int) - Static method in class qupath.imagej.tools.IJTools. Extract pixels as an an ImageProcessor from a single band of a BufferedImage. convertToJson(Map<String, ?>) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a Map to a one-line JSON representation, omitting hidden parameters. convertToJson(ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a ParameterList a one-line JSON representation, omitting hidden parameters. convertToObjects(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter. Convert the output of a pixel processor to a list of PathObjects. convertToOpticalDensitySum(ColorProcessor, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Calculate optical density values for the red, green and blue channels, then add these all together. convertToPathObject(Roi, double, double, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi. convertToPathObject(Roi, double, Function<ROI, PathObject>, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToPathObject(Roi, double, double, double, Function, ImagePlane). convertToPercentages(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Request that pie chart values are converted to percentages for tooltips. convertToPoints(Collection<PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Convert a ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:168381,Energy Efficiency,green,green,168381,"r current PathClasses. createClassifier(OpenCVClassifiers.OpenCVStatModel, ImageDataOp, PixelClassifierMetadata, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. createColorModel(PixelType, List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Create a ColorModel for displaying an image with the specified channel colors. createColorModel(PixelType, ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a Color",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:168542,Energy Efficiency,green,green,168542,"ixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. createColorModel(PixelType, List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Create a ColorModel for displaying an image with the specified channel colors. createColorModel(PixelType, ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a ColorMaps.ColorMap. createColorModel(PixelType, ColorMaps.ColorMap, int, double, double, int, DoubleToIntFunction) - Static method in class qupath.lib.color.ColorModelFa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:168693,Energy Efficiency,green,green,168693,"opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String, double[], double[], double[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using floating point values for red, green and blue. createColorMap(String, int[], int[], int[]) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using integer values for red, green and blue. createColorMap(String, int, int, int) - Static method in class qupath.lib.color.ColorMaps. Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. createColorModel(PixelType, int, boolean, int...) - Static method in class qupath.lib.color.ColorModelFactory. Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. createColorModel(PixelType, List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Create a ColorModel for displaying an image with the specified channel colors. createColorModel(PixelType, ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a ColorMaps.ColorMap. createColorModel(PixelType, ColorMaps.ColorMap, int, double, double, int, DoubleToIntFunction) - Static method in class qupath.lib.color.ColorModelFactory. Create a color model from a ColorMaps.ColorMap, scaled within a defined range and with an optional additional alpha channel used to ; determine opacity. createColorModelBuilder(Colo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:197936,Energy Efficiency,monitor,monitor,197936,"atic method in class qupath.opencv.ml.objects.features.FeatureExtractors. Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. createMeasurementManager(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. createMeasurementManager(ImageServer<BufferedImage>) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. createMeasurementMapDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for displaying measurement maps. createMemoryMonitorDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog to monitor memory usage. createMenu(String, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Create a menu, optionally add new menu items with MenuTools.addMenuItems(List, Object...). createMenuItem(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a menu item from an action. createMinimumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the minimum of all channels. createMoreButton(ContextMenu, Side) - Static method in class qupath.lib.gui.tools.GuiTools. Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. createMoveEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createNewAnnotation(MouseEvent, double, double) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Create a new annotation and set it in the current viewer. c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:207304,Energy Efficiency,reduce,reduce,207304,"ge(ImageServer<BufferedImage>, ImagePlus, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Create a PathImage from an ImagePlus and region. createPathObjectIcon(PathObject, int, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a PathObject. createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Deprecated.; use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). createPCAProjectFeatureExtractor(FeatureExtractor<T>, Preprocessing.PCAProjector) - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. createPCAProjector(Mat, double, boolean) - Static method in class qupath.opencv.ml.objects.features.Preprocessing. Create a principle components analysis projection to reduce features. createPersistentPreference(String, boolean) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, double) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, int) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, long) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to/reloaded from the user preferences. createPersistentPreference(String, String) - Static method in class qupath.lib.gui.prefs.PathPrefs. Create a persistent property, which is one that will be saved to",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:287526,Energy Efficiency,power,power,287526,"cified PathClasses. EXCLUDE_MEASUREMENTS - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Optionally exclude measurements from objects. excludeColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be excluded during the export. ExecutableLanguage - Interface in qupath.lib.scripting.languages. Functional interface for scripting languages that are runnable (e.g. execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; execute(ScriptParameters) - Method in interface qupath.lib.scripting.languages.ExecutableLanguage. Execute the given script String. EXISTS - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that is known to exist. exp() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns Euler's number e raise to the power of the Mat values. EXPAND_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; expandableContent(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. expandChartClip(Chart, double) - Static method in class qupath.lib.gui.charts.ChartTools. Expand the clip region for a chart. expandToWindowProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). EXPORT - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; EXPORT_GEOJSON - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; EXPORT_IMAGE_LIST - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; EXPORT_ORIGINAL - Variable in class qupath.lib.gui.actions.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:330197,Energy Efficiency,green,green,330197,"rfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 element array (red, green, blue). getArray(boolean) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:363173,Energy Efficiency,efficient,efficient,363173,"ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart. Get the current counts transform. getCountSum() - Method in class qupath.lib.analysis.stats.Histogram. Sum of all histogram counts. getCreationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was created. getCropRegion() - Method in class qupath.lib.images.servers.CroppedImageServer. Get the region bei",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:398525,Energy Efficiency,green,green,398525,"th.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get al",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:398654,Energy Efficiency,green,green,398654," class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:434495,Energy Efficiency,green,green,434495,"55). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute maximum features from all four rotations. getMaxGreen() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the green channel (default = 255). getMaxHeight() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum height of the density map. getMaxNormalizedCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin, divided by the total counts across the entire histogram. getMaxRed() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the red channel (default = 255). getMaxROIHandleSize() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum size for which ROI handles may be drawn. getMaxThreads() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the maximum number of threads that may be used during live prediction. getMaxThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the maximum threshold value. getMaxTime() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:535180,Energy Efficiency,efficient,efficiently,535180,"ta<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. getTilesToRequest(ImageServer<?>, Shape, double, int, int, List<RegionRequest>) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). getTileWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile at the tile resolution. getTileWidth() - Method in class qupath.lib.objects.utils.Tiler. Get the width",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559001,Energy Efficiency,green,green,559001,"onBuilder. Set the graphic property of the action. GRAY - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Grayscale image. grayscale() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use grayscale LUT, rather than deriving colors from classifications. grayscale(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally use grayscale LUT, rather than deriving colors from classifications. GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, gree",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559085,Energy Efficiency,green,green,559085," in enum class qupath.process.gui.WandToolEventHandler.WandType. Grayscale image. grayscale() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use grayscale LUT, rather than deriving colors from classifications. grayscale(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally use grayscale LUT, rather than deriving colors from classifications. GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559321,Energy Efficiency,green,green,559321,"classifications. grayscale(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally use grayscale LUT, rather than deriving colors from classifications. GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - V",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559409,Energy Efficiency,green,green,559409,"Optionally use grayscale LUT, rather than deriving colors from classifications. GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in cla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559570,Energy Efficiency,green,green,559570,"de. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559591,Energy Efficiency,green,green,559591,"de. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559877,Energy Efficiency,green,greenChromaticity,559877,"sing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.li",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:559968,Energy Efficiency,green,green,559968,"(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:560018,Energy Efficiency,green,green,560018,"(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:560039,Energy Efficiency,green,green,560039,"(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:560054,Energy Efficiency,green,greenOverBlue,560054,"8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to show a (counting) grid on top of an image. GridOverlay(OverlayOptions",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:560141,Energy Efficiency,green,green,560141,"olor.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to show a (counting) grid on top of an image. GridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.GridOverlay. Constructor. gridScale",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:560188,Energy Efficiency,green,green,560188,"olor.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; GRID_SPACING - Variable in class qupath.lib.gui.actions.OverlayActions;  ; GRID_TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; GridLines - Class in qupath.lib.gui.viewer. Simple class used for storing information related to GridLines that may be painted over an image. GridLines() - Constructor for class qupath.lib.gui.viewer.GridLines;  ; gridLinesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; GridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to show a (counting) grid on top of an image. GridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.GridOverlay. Constructor. gridScale",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:563247,Energy Efficiency,adapt,adapters,563247,"ylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in qupath.lib.io. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools() - Constructor for class qupath.lib.io.GsonTools;  ; GsonTools.SubTypeAdapterFactory<T> - Class in qupath.lib.io. A TypeAdapterFactory that is suitable for handling class hierarchies. gt(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold. gt(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold between two arrays. GuiTools - Class in qupath.lib.gui.tools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools() - Constructor for class qupath.lib.gui.tools.GuiTools;  ; GuiTools.SnapshotType - Enum Class in qupath.lib.gui.tools. Kinds of snapshot image that can be created for QuPath. H. H_DAB - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and DAB. H_E - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconv",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:631287,Energy Efficiency,green,green,631287,"recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'redo' can be applied to the control. isRedoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isResidual() - Method in class qupath.lib.color.StainVector. Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. isResizable() - Method in class qupath.lib.gui.ColorMapCanvas;  ; isRGB() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; isRGB() - Method in interface qupath.lib.images.servers.ImageServer. True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. isRGB() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if the pixels are stored in (A)RGB form. isRootObject() - Method in class qupath.lib.objects.PathObject. Returns true if the object is the 'root' of an object hierarchy. isRootObject() - Method in class qupath.lib.objects.PathRootObject;  ; isRotated() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if viewer.getRotation() != 0. isScalebarVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the scalebar is visible, false otherwise. isSelectable(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Specify that an Action has a meaningful 'selected' status. isSelected() - Method in class qupath.lib.gui.SelectableItem. Returns true if the value of the selected property equals SelectableItem.getItem(). isSelected(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelecti",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:667458,Energy Efficiency,monitor,monitor,667458,"olutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 entries, normalizing to the specified background value. makeODLUT(double, int) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table, normalizing to the specified background value. makePathInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file or directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:668244,Energy Efficiency,green,green,668244,"r directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static method in class qupath.lib.color.ColorTransformer. Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. makeSnapshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the current GUI. makeSnapshot(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. makeSnapshot(QuPathGUI, QuPathViewer, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot (image) showing what is currently displayed in a QuPath window; or the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:672314,Energy Efficiency,green,green,672314,"markerOpacity - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:719939,Energy Efficiency,reduce,reduce,719939,"; ObjectsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.AnnotationActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.DeleteActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.LockActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.SelectActions - Class in qupath.lib.gui.actions.menus;  ; ObjectTreeBrowser - Class in qupath.lib.gui.panes. Simple browser for exploring fields (including private fields) within an object by reflection. ObjectTreeBrowser() - Constructor for class qupath.lib.gui.panes.ObjectTreeBrowser;  ; ObservableMeasurementTableData - Class in qupath.lib.gui.measure. A table data model to supply observable measurements of PathObjects. ObservableMeasurementTableData() - Constructor for class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; OD_Normalized - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. RGB values normalized to OD vector (to reduce intensity information). of(long...) - Static method in class qupath.opencv.dnn.DnnShape. Create a new DnnShape with the specified dimension lengths. OFF - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Turn off logging. OMEPixelParser - Class in qupath.lib.images.servers.bioformats. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder - Class in qupath.lib.images.servers.bioformats. Builder for instances of OMEPixelParser. OMEPyramidWriter - Class in qupath.lib.images.writers.ome. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder - Class in qupath.lib.images.writers.ome. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. OMEPyramidWriter.ChannelExportType - Enum Class in qupath.lib.images.writers.ome. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType - Enum Class in qupath.lib.images.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:730818,Energy Efficiency,green,green,730818,"rs.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor for class qupath.lib.images.servers.openslide.OpenslideImageServer. Create an ImageServer using OpenSlide for the specified file. OpenSlideJNA - Interface in qupath.lib.images.servers.openslide.jna. JNA interface for OpenSlide. OpenSlideLoader - Class in qupath.lib.images.servers.openslide.jna. Static helper class to manage loading the OpenSlide library. OpenSlideLoader() - Constructor for class qupath.lib.images.servers.openslide.jna.OpenSlideLoader;  ; openslidePathProperty - Variable in class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideServerBuilder - Class in qupath.lib.images.servers.openslide. Builder for Openslide ImageServer. OpenslideServerBuilder() - Constructor for class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; Optical_density_sum - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Sum of red, green and blue optical densities. opticalDensitySum(int, double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. opticalDensitySum(int, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. options(OverlayOptions) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the overlay options to control display. or(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise OR of two arrays. or(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through OR. orElse(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one, but only call it if this one returns false. Original - Enum const",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:761050,Energy Efficiency,reduce,reduce,761050,"equire post-processing on a specific thread ; (i.e. PathTileObject - Class in qupath.lib.objects. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTileObject() - Constructor for class qupath.lib.objects.PathTileObject. Default constructor. PathTileObject(ROI) - Constructor for class qupath.lib.objects.PathTileObject;  ; PathTool - Interface in qupath.lib.gui.viewer.tools. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers - Class in qupath.lib.gui.viewer.tools.handlers;  ; PathToolEventHandlers() - Constructor for class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; PathTools - Class in qupath.lib.gui.viewer.tools. Default PathTool implementations. PathTools() - Constructor for class qupath.lib.gui.viewer.tools.PathTools;  ; pca(double, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Perform PCA to reduce features. pearsonsCorrelation() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate Pearson's correlation coefficient. PENDING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile waiting to be processed. PERCENT - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Maps contain at least two channels. percentile(double) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate a percentile. percentile(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image, per channel, using low and high percentiles. percentile(double, double, boolean, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image using low and high percentiles. percentiles(Mat, double...) - Static method in class qupath.opencv.tools.OpenCVTools. Get perce",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:769778,Energy Efficiency,monitor,monitor,769778,"erProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/wri",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:774709,Energy Efficiency,power,power,774709,"detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.op",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:774812,Energy Efficiency,power,power,774812,"ng. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input an",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:774819,Energy Efficiency,power,power,774819,"r class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Ma",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:774935,Energy Efficiency,power,power,774935,"ss(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:832228,Energy Efficiency,green,green,832228," qupath.lib.gui.viewer.recording.ViewTracker. Return the recording property of this ViewTracker. RECTANGLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Rectangle drawing tool. RECTANGLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; RECTANGLE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; RectangleROI - Class in qupath.lib.roi. ROI representing a square or rectangle (unrotated). red(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit red value from a packed RGB value. Red - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel only. RED - Static variable in class qupath.lib.common.ColorTools. Packed int representing red. RED - Static variable in class qupath.lib.images.servers.ImageChannel. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; redoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'redo' the last 'undone' hierarchy change for the current active viewer. RefineAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of exis",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:832523,Energy Efficiency,green,green,832523,"Icons;  ; RECTANGLE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; RectangleROI - Class in qupath.lib.roi. ROI representing a square or rectangle (unrotated). red(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit red value from a packed RGB value. Red - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel only. RED - Static variable in class qupath.lib.common.ColorTools. Packed int representing red. RED - Static variable in class qupath.lib.images.servers.ImageChannel. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; redoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'redo' the last 'undone' hierarchy change for the current active viewer. RefineAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. RefineAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; refineAreas(Geometry, double, double) - Static method in class qupath.lib.roi.GeometryTools. Remove small fragments and fill small interior rings within a G",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:868280,Energy Efficiency,green,green,868280,"on). retainHessian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Optionally retain the Hessian matrix per pixel. retrieveMetadataKeys() - Method in class qupath.lib.objects.PathObject. Get the set of metadata keys. retrieveMetadataValue(String) - Method in class qupath.lib.objects.PathObject. Get a metadata value. returnToMove - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; returnToMoveModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the GUI returns to using the PAN tool after a ROI is drawn. rgb(boolean) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify that the image stores pixels in (A)RGB form. RGB - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image (default behavior in v0.1.2 and before). RGB_mean - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Mean of red, green and blue channels. rgbMean(int) - Static method in class qupath.lib.color.ColorTransformer. Extract mean of RGB values from a packed RGB pixel. RichScriptEditor - Class in qupath.lib.gui.scripting.richtextfx. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Constructor. RichScriptEditorExtension - Class in qupath.lib.gui.scripting.richtextfx. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). RichScriptEditorExtension() - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; RIGID_OBJECT_EDITOR - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ROI - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a ROI. ROI - Int",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:976002,Energy Efficiency,adapt,adapted,976002," + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:976855,Energy Efficiency,monitor,monitoring,976855,"mage. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:996042,Energy Efficiency,monitor,monitor,996042,"athObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static methods for computing statistics from images, with or without a corresponding labeled image. StatisticsHelper() - Constructor for class qupath.lib.analysis.stats.StatisticsHelper;  ; statM",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:996061,Energy Efficiency,monitor,monitoring,996061,"athObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static methods for computing statistics from images, with or without a corresponding labeled image. StatisticsHelper() - Constructor for class qupath.lib.analysis.stats.StatisticsHelper;  ; statM",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1060379,Energy Efficiency,green,green,1060379,"lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTran",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1060564,Energy Efficiency,green,green,1060564,"path.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1060724,Energy Efficiency,green,green,1060724,"ocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:1060910,Energy Efficiency,green,green,1060910," unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. unpackRGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. unpackRGB(int, int[]) - Static method in class qupath.lib.common.ColorTools. Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. UNSET - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Image type has not been set. unzippedExtensions(Path, String...) - Static method in class qupath.lib.io.PathIO. Get the extension of a file, or of all entries within a zip file. UPDATE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; updateAffineTransform() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; updateAvailableStyles() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Request that the list of available styles is updated. updateBounds(double, double) - Method in class qupath.lib.roi.PointsROI;  ; updateChart(BarChart<String, Number>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; updateChart(PieChart) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; updateChart(ScatterChart<Number, Numb",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:15724,Integrability,interface,interface,15724,"..) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicate) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Add a filter for computing densities. addDirectoryPropertyPreference(Property<String>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addDoubleParameter(String, String, double) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list. addDoubleParameter(String, String, double, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded double parameter to this list. addDoubleParameter(String, String, double, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list, optionally including a unit and help text. addDuplicate(ProjectImageEntry<T>, boolean) - Method in interface qupath.lib.projects.Project. Add an image by duplicating an existing entry. ADDED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been added. addEmptyParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an 'empty' parameter, that is one that does not take any values. addEvent(double, boolean) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Insert a new event. addEvents(Collection<KaplanMeierData.KaplanMeierEvent>) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Add a collection of events. addFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new File DropHandler. addFullResolutionLevel() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add the full-resolution image as a level of the pyr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:17031,Integrability,interface,interface,17031,"rs.ParameterList. Add an 'empty' parameter, that is one that does not take any values. addEvent(double, boolean) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Insert a new event. addEvents(Collection<KaplanMeierData.KaplanMeierEvent>) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Add a collection of events. addFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new File DropHandler. addFullResolutionLevel() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add the full-resolution image as a level of the pyramid. addGridRow(GridPane, int, int, String, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Add a row of nodes. addGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Add a new connections group. addImage(ImageServerBuilder.ServerBuilder<T>) - Method in interface qupath.lib.projects.Project. Add an image for a particular ImageServer. addIntensityMeasurements(ImageServer<BufferedImage>, PathObject, double, Collection<ObjectMeasurements.Measurements>, Collection<ObjectMeasurements.Compartments>) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Measure all channels of an image for one individual object or cell. addIntParameter(String, String, int) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter. addIntParameter(String, String, int, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded int parameter, with optional unit and help text. addIntParameter(String, String, int, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter, with optional unit and help text. addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropIm",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:20558,Integrability,interface,interface,20558,"tations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificationMeasurementManager, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to specified objects from a PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to selected objects based upon the output of a PixelClassifier. addMenuItems(List<MenuItem>, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Add menu items to the specified list. addMenuItems(Menu, Object...) - Static method in class qupath.lib.gui",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:34998,Integrability,message,messages,34998,bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be writ,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:37027,Integrability,interface,interface,37027," allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedT",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:37519,Integrability,interface,interface,37519,"splay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles that do not overlap with any annotations should be included. ANNOTATION_COPY_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ANNOTATION_DUPLICATE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; annotationActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; AnnotationActions() - Cons",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:37709,Integrability,interface,interface,37709,"upath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles that do not overlap with any annotations should be included. ANNOTATION_COPY_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ANNOTATION_DUPLICATE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; annotationActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; AnnotationActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; AnnotationPane - Class in qupath.lib.gui.panes. Component for displaying annotations within the ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:40786,Integrability,interface,interface,40786,"n enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any annotations. ANY_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Stati",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:40911,Integrability,interface,interface,40911,"nnotations. ANY_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<Buf",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:41036,Integrability,interface,interface,41036,"ept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:41507,Integrability,interface,interface,41507,". AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region of the image. applyClassification(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Apply pixel classifier to a specified region of an image. applyCompletion(EditableText, AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Insert the text from the completion to the editable text. applyDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. A",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:41944,Integrability,interface,interface,41944,"upath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region of the image. applyClassification(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Apply pixel classifier to a specified region of an image. applyCompletion(EditableText, AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Insert the text from the completion to the editable text. applyDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings with the specified name or file path to the current version. applyDisplaySettings(ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the current viewer. applyDisplaySettings(QuPathViewer, ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the specified viewer. applyLastAnnotatio",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:42116,Integrability,interface,interface,42116,"pend the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region of the image. applyClassification(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Apply pixel classifier to a specified region of an image. applyCompletion(EditableText, AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Insert the text from the completion to the editable text. applyDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings with the specified name or file path to the current version. applyDisplaySettings(ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the current viewer. applyDisplaySettings(QuPathViewer, ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the specified viewer. applyLastAnnotationToActiveViewer() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; applyReplacements() - Method in class qupath.lib.io.UriUpdater. Apply all current replace",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:44083,Integrability,interface,interface,44083,"UriUpdater. Apply all current replacements, updating the UriResource objects. applySettingsToDisplay(ImageDisplay, ImageDisplaySettings) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Apply the settings to the display, if they are compatible. applyTiled(Function<Mat, Mat>, Mat, int, int, Padding, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a function to a Mat that strictly requires a specific input size. applyToChannels(Mat, Consumer<Mat>) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.display.ImageDisplay. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; applyTransforms(BufferedImage, BufferedImage) - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean) - Static method in class qupath.lib.display.ImageDisplay. Deprecated.; use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:44999,Integrability,interface,interfaces,44999,"lorModelRenderer;  ; applyTransforms(BufferedImage, BufferedImage) - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean) - Static method in class qupath.lib.display.ImageDisplay. Deprecated.; use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area (possibly with holes). areaContains(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Returns true if pathROI is an area that contains x & y somewhere within it. AreaROI - Class in qupath.lib.roi. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ARGS - Static variable in class qupath.lib.scripting.ScriptAttributes. Optional string args passed to the script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:46211,Integrability,wrap,wrappers,46211,"eaROI - Class in qupath.lib.roi. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ARGS - Static variable in class qupath.lib.scripting.ScriptAttributes. Optional string args passed to the script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Ge",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:46433,Integrability,wrap,wrapper,46433,"he script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(Ima",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:47185,Integrability,interface,interface,47185," qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(ImageProcessor, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. asType(BufferedImage, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. asType(Number, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper function to convert a Number to a Mat or Scalar using Groovy's 'as' syntax. asType(Mat, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert a Mat to a BufferedImage, ImagePlus, ImageProcessor, ; double or float array using Groovy's '",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:49590,Integrability,interface,interface,49590," to the viewer grid, if possible. attemptOperation(Geometry, Function<Geometry, Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Attempt to apply a function to a geometry, returning the input unchanged if there was an exception. AUTO_ESTIMATE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Automatically estimate the image type. autoBrightnessContrastSaturationPercentProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. AutoCompletions - Class in qupath.lib.scripting.languages. Class to deal with script auto-completions. AutoCompletions() - Constructor for class qupath.lib.scripting.languages.AutoCompletions;  ; AutoCompletions.Completion - Interface in qupath.lib.scripting.languages. A single completion. AutoCompletions.CompletionTokenizer - Interface in qupath.lib.scripting.languages. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions - Class in qupath.lib.gui.actions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.AutomateActions;  ; AutomateMenuActions - Class in qupath.lib.gui.actions.menus;  ; AutomateMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; autoSaturationPercent - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; autoSetAnnotationClassProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Classification that should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisp",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:54046,Integrability,interface,interface,54046,"upath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the spe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:54210,Integrability,interface,interface,54210,"NDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. belowEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasuremen",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:56008,Integrability,interface,interface,56008,"ame) for objects for which the specified measurement has a value below or equal to the threshold. belowEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below or equal to the threshold. bigTiff() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that the image is written in BigTIFF format. bigTiff(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify whether the image should be written in BigTIFF format. BILINEAR - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Bilinear interpolation. binaryReconstruction(ByteProcessor, ByteProcessor, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. bindLocale() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; bindObjectClassifierNameInput(TextField, ObjectExpression<Project<BufferedImage>>) - Static method in class qupath.process.gui.commands.ml.ProjectClassifierBindings. Set styling for a text field to use object classifier names for the current project. bindPixelClassifierNameInput(TextField, ObjectExpression<Project<BufferedImage>>) - Static method in class qupath.process.gui.commands.ml.ProjectClassifierBindings. Set styling for a text field to use pixel classifier names for the current project. bindUserStylesheetToStyle(WebEngine) - Static method in class qupath.lib.gui.tools.WebViews. Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. bioformatsEnabled() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if Bio-Formats is enabled and may be used to read images. BioFormatsImageServer - Class in qupath.lib.i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:67803,Integrability,interface,interface,67803," image in the specified viewer. BufferedImageOverlay(QuPathViewer, Map<ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer, OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. bufferedImageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the buffered image. BufferedImageTools - Class in qupath.lib.awt.common. Static methods for working with BufferedImages and QuPath objects. BUGS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; build() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Build the DelaunayTools.Subdivision with the current parameters. build() - Method in interface qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Build the classifier defined by the parameters of this builder. build() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Build a new PixelClassifierMetadata object. build() - Method in interface qupath.lib.color.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Build the parameters. build() - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Build a PixelProcessor from the current state of the builder. build() - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Create an Action with this builder. build() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:68213,Integrability,interface,interface,68213,.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. bufferedImageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the buffered image. BufferedImageTools - Class in qupath.lib.awt.common. Static methods for working with BufferedImages and QuPath objects. BUGS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; build() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Build the DelaunayTools.Subdivision with the current parameters. build() - Method in interface qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Build the classifier defined by the parameters of this builder. build() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Build a new PixelClassifierMetadata object. build() - Method in interface qupath.lib.color.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Build the parameters. build() - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Build a PixelProcessor from the current state of the builder. build() - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Create an Action with this builder. build() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Build the dialog. build() - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Creat,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:69483,Integrability,interface,interface,69483,"r. Build a PixelProcessor from the current state of the builder. build() - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Create an Action with this builder. build() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Build the dialog. build() - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Create the rendered image server. build() - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Creates a new OMEPixelParser instance. build() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; build() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Build a new ImageServer instance. build() - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Build an ImageServerMetadata. build() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. build() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Build the ImageServer with the requested parameters. build() - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Build PixelCalibration object. build() - Method in class qupath.lib.images.servers.SparseImageServer.Builder. Build a new SparseImageServer. build() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Get the ImageServer that applies all the requested transforms. build() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. C",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:78524,Integrability,interface,interface,78524,"hat takes an existing metadata object as a starting point, ; but allows individual properties to be overridden. Builder(PixelCalibration) - Constructor for class qupath.lib.images.servers.PixelCalibration.Builder. Create a new builder, initialized values of an existing PixelCalibration. buildFilePath(String, String...) - Static method in class qupath.lib.scripting.QP. Build a file path from multiple components. buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform>) - Static method in class qupath.opencv.ops.ImageOps. Create an ImageDataOp, optionally using a specified collection of input channels. buildImageDataOp(ColorTransforms.ColorTransform...) - Static method in class qupath.opencv.ops.ImageOps. Create an ImageDataOp, optionally using a specified array of input channels. BuildInfo - Class in qupath.lib.gui. Basic version information about the current QuPath build. buildModel() - Method in class qupath.opencv.dnn.OpenCVDnn. Build a model. buildModel(DnnModelParams) - Method in interface qupath.opencv.dnn.DnnModelBuilder. Build a DnnModel if possible, or return null otherwise. buildModel(DnnModelParams) - Static method in class qupath.opencv.dnn.DnnModels. Build a DnnModel from the given parameters. buildModel(DnnModelParams) - Method in class qupath.opencv.dnn.OpenCVDnnModelBuilder;  ; buildModel(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn. Build a model, specifying the OpenCVDnn.ModelType. buildNet() - Method in class qupath.opencv.dnn.OpenCVDnn. Build the OpenCV Net. buildOriginal() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; buildOriginal() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; buildParameters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build a DensityMaps.DensityMapParameters object containing the main density map parameters. buildPatchClassifierParams(BioimageIoSpec.BioimageIoModel, int",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:81165,Integrability,interface,interface,81165,"assifier using these parameters. buildServer(String, Class<T>, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Attempt to create ImageServer<T> from the specified path and arguments. buildServer(String, Class<T>, String...) - Static method in class qupath.lib.scripting.QP. Deprecated.; In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. buildServer(String, String...) - Static method in class qupath.lib.images.servers.ImageServers. Build a ImageServer for the specified URI path and optional args. buildServer(String, String...) - Static method in class qupath.lib.scripting.QP. Build an ImageServer with the class BufferedImage. buildServer(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; buildServer(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; buildServer(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Attempt to create ImageServer<T> from the specified path. buildServer(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Build a ImageServer for the specified URI and optional args. buildServer(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; buildServer(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; buildServer(URI, String...) - Static method in class qupath.lib.scripting.QP. Build an ImageServer with the class BufferedImage. buildServer(ImageData<BufferedImage>) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build an ImageServer representing this density map. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. buildSer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:82423,Integrability,interface,interface,82423,"and optional args. buildServer(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; buildServer(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; buildServer(URI, String...) - Static method in class qupath.lib.scripting.QP. Build an ImageServer with the class BufferedImage. buildServer(ImageData<BufferedImage>) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build an ImageServer representing this density map. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration, int, int) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. bundle() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; buttons(String...) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the buttons to display in the dialog. buttons(ButtonType...) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the buttons to display in the dialog. byteOrder(ByteOrder) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  . C. cache - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; calculatePadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp. Calculate the required padding. calculatePreferredParallelism() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Make a semi-educated guess as to an appropriate number of threads to use. calibratedLocationString - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; calibrateImagePlus(ImagePlus, RegionRequest, ImageServer<BufferedImage",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:83917,Integrability,interface,interface,83917,"es.stores.DefaultImageRegionStore;  ; calculatePadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp. Calculate the required padding. calculatePreferredParallelism() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Make a semi-educated guess as to an appropriate number of threads to use. calibratedLocationString - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; calibrateImagePlus(ImagePlus, RegionRequest, ImageServer<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. calibrateObject(PathObject, Roi) - Static method in class qupath.imagej.tools.IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coordinates. canBeautify() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.beautify(String) is capable of beautifying the text, false otherwise. CANCEL - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:84482,Integrability,interface,interface,84482,"IJTools. Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. calibrateObject(PathObject, Roi) - Static method in class qupath.imagej.tools.IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coordinates. canBeautify() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.beautify(String) is capable of beautifying the text, false otherwise. CANCEL - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static m",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:84655,Integrability,interface,interface,84655,".IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coordinates. canBeautify() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.beautify(String) is capable of beautifying the text, false otherwise. CANCEL - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floatin",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:85262,Integrability,interface,interface,85262,"viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floating point Mat. CELL - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region. CELL_NUCLEI_BOTH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CELL_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CellCountsCV - Class in qupath.opencv. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellCountsCV() - Constructor for class qupath.opencv.CellCountsCV;  ; cellDisplayActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Ac",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:93509,Integrability,interface,interface,93509,"ate a new stains object, identical to this one but for one StainVector having been changed. changeTimestampProperty() - Method in class qupath.lib.display.ImageDisplay. Timestamp for the most recent change. CHANNEL_ALL_OBJECTS - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Channel name for the channel with all object counts (not always present). CHANNEL_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ChannelColor - Class in qupath.lib.display.settings. A simple class to store the color of an image channel. ChannelColor() - Constructor for class qupath.lib.display.settings.ChannelColor;  ; ChannelDisplayInfo - Interface in qupath.lib.display. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo - Interface in qupath.lib.display. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode - Enum Class in qupath.lib.display. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer - Class in qupath.lib.gui.images.servers. ImageServer that applies a color transform to an image. channelMaximum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the minimum of an image channel, ignoring NaNs. channelMean(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the mean of an image channel, ignoring NaNs. channelMinimum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the minimum of an image channel, ignoring NaNs. channels(int...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. channels(int...) - Method in class qupath.lib.images.writers.TileExporter",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:98320,Integrability,interface,interface,98320,"ic methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(Stri",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:103834,Integrability,interface,interface,103834,"od in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyOb",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:104028,Integrability,interface,interface,104028,"(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:105525,Integrability,interface,interface,105525,"he object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.D",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:105904,Integrability,interface,interface,105904,"alysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the s",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:110670,Integrability,interface,interface,110670,"pting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelecte",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:115194,Integrability,interface,interface,115194,"mages.servers.ImageJServer;  ; close() - Method in class qupath.lib.gui.ExtensionClassLoader;  ; close() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; close() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; close() - Method in class qupath.lib.gui.SharedThreadPoolManager. Shutdown any threadpools created by this manager. close() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; close() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; close() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; close() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Close; this is important for cleanup. close() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager;  ; close() - Method in interface qupath.lib.measurements.MeasurementList. Close the list. close() - Method in interface qupath.opencv.dnn.DnnModel. Close this model if it will not be needed again. close() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; close() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; closeProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Close the current project open in the QuPathGUI. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that this viewer is closed. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; closeViewer(QuPathViewer) - Method in class qupath.lib.gui.QuPathGUI. Close the image within a viewer, prompting to save changes if necessary. closing(int) - Static method in class qupath.open",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:115281,Integrability,interface,interface,115281,"e() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; close() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; close() - Method in class qupath.lib.gui.SharedThreadPoolManager. Shutdown any threadpools created by this manager. close() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; close() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; close() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; close() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Close; this is important for cleanup. close() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager;  ; close() - Method in interface qupath.lib.measurements.MeasurementList. Close the list. close() - Method in interface qupath.opencv.dnn.DnnModel. Close this model if it will not be needed again. close() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; close() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; closeProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Close the current project open in the QuPathGUI. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that this viewer is closed. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; closeViewer(QuPathViewer) - Method in class qupath.lib.gui.QuPathGUI. Close the image within a viewer, prompting to save changes if necessary. closing(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological closing filter. closingByReconstruction(ImageProces",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:125728,Integrability,wrap,wrap,125728,"Commands. Combine the selected annotations for the specified hierarchy. comboPasteEscape - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.g",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:128702,Integrability,interface,interface,128702,"; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePlane) - Method in class qupath.lib.regions.ImagePlane. Compare with another ImagePlane, in the order t, z, c. completionCodeCombination - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; componentContains(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; componentPointToImagePoint(double, double, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert x and y coordinates from the component space to the image space. componentPointToImagePoint(Point2D, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. compress(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Compresses the specified text by removing extra space, according to the syntax. compression(OMEPyramidWriter.CompressionType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the output compression type. compressSourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. computeAngle(StainVector, StainVector) - Static method in class qupath.lib.color.StainVector. Calculat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:130716,Integrability,interface,interface,130716,"culate the angle between two stain vectors, in degrees. computeArgMaxHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeConsoleStyles(String, boolean) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the console. computeCoordinateDistance(Coordinate, Collection<Coordinate>) - Static method in class qupath.lib.analysis.DistanceTools. Compute the shortest distance from a coordinate to one of a collection of target coordinates. computeCoordinateDistance(Coordinate, STRtree) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance to the nearest coordinate stored within an STRtree. computeDistance(Coordinate, Geometry, PointOnGeometryLocator) - Static method in class qupath.lib.analysis.DistanceTools. Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. computeDistance(Coordinate, Geometry, PointOnGeometryLocator, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the shortest distance from a coordinate to",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:132396,Integrability,interface,interface,132396,"nceTools. Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. computeDistance(Coordinate, Geometry, PointOnGeometryLocator, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the shortest distance from a coordinate to a target geometry. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeEditorStyles(String) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the main editor. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; computeFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute features. computeLocalBinaryPatterns16(SimpleImage, double) - Static method in class qupath.lib.analysis.features.LocalBinaryPatterns. Compute local binary pattern descriptor for a SimpleImage. computeLogRankTest(KaplanMeierData, KaplanMeierData) - Static method in class qupath.lib.analysis.stats.survival.LogRankTest. Compare KaplanMeier objects using log-rank test. computeRunningStatistics(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a RunningStatistics object using all the ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:136281,Integrability,interface,interface,136281,"r. Deprecated.; Create an confirmation alert dialog. constrainCellByNucleusDistance(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. constrainCellByScaledNucleus(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contain",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:136674,Integrability,interface,interface,136674,"hod in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:136699,Integrability,interface,interfaces,136699,"rain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. P",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:137294,Integrability,interface,interface,137294,"ace qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the speci",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:138174,Integrability,interface,interface,138174,"hod in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; cont",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:138336,Integrability,interface,interface,138336,"esourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:138672,Integrability,interface,interface,138672,"class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. content(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog. contentText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:138939,Integrability,interface,interface,138939,"ely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. content(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog. contentText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath.lib.gui.commands. Help window providing context-dependent help. ContourTracing - Class in qupath.lib.analysis.images. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing() - Constructor for class qupath.lib.analy",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:139707,Integrability,depend,dependent,139707,"ements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. content(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog. contentText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath.lib.gui.commands. Help window providing context-dependent help. ContourTracing - Class in qupath.lib.analysis.images. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing() - Constructor for class qupath.lib.analysis.images.ContourTracing;  ; ContourTracing.ChannelThreshold - Class in qupath.lib.analysis.images. Helper class defining global thresholds to apply to a single image channel. CONTRAST - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ConvertCommand - Class in qupath.lib.images.writers.ome. Allows command line option to convert an input image to OME-TIFF. ConvertCommand() - Constructor for class qupath.lib.images.writers.ome.ConvertCommand;  ; convertDetectionsToPoints(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Convert detection objects to point annotations based upon their ROI centroids. convertLabelsToCells(ImageProcessor, ImageProcessor, double, double, double, ImagePlane) - Static method in class qupath.image",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:144182,Integrability,interface,interface,144182,"ng on the ImagePlus of an PathImage<ImagePlus>. convertToImagePlus(String, ImageServer<BufferedImage>, BufferedImage, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Convert a BufferedImage into a PathImage<ImagePlus>. convertToImagePlus(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. convertToImageProcessor(BufferedImage, int) - Static method in class qupath.imagej.tools.IJTools. Extract pixels as an an ImageProcessor from a single band of a BufferedImage. convertToJson(Map<String, ?>) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a Map to a one-line JSON representation, omitting hidden parameters. convertToJson(ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a ParameterList a one-line JSON representation, omitting hidden parameters. convertToObjects(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter. Convert the output of a pixel processor to a list of PathObjects. convertToOpticalDensitySum(ColorProcessor, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Calculate optical density values for the red, green and blue channels, then add these all together. convertToPathObject(Roi, double, double, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi. convertToPathObject(Roi, double, Function<ROI, PathObject>, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToPathObject(Roi, d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:147897,Integrability,interface,interface,147897,"ffineTransformation to an AffineTransform. CONVEX_HULL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CONVEX_POINTS - Variable in class qupath.lib.gui.actions.CommonActions;  ; ConvexHull - Class in qupath.lib.roi. Helper method for calculating the convex hull from a list of points. ConvexHull() - Constructor for class qupath.lib.roi.ConvexHull;  ; CoocurranceMatrices - Class in qupath.lib.analysis.features. Data structure to hold cooccurrence matrices for computation of Haralick features. CoocurranceMatrices(int) - Constructor for class qupath.lib.analysis.features.CoocurranceMatrices. Initialize coocurrence matrices. coordinateExtractor(Function<PathObject, Collection<Coordinate>>) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. copy() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; copy() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request copy the current selection. copy() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; COPY_ANNOTATION_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_FULL_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_VIEW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; copyAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; copyActions - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; CopyActions() - Constructor for class qupath.lib.gui.actions",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:163751,Integrability,interface,interface,163751,"lorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.analysis.heatmaps.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.color.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). createButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing only",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:163910,Integrability,interface,interface,163910,"lysis.heatmaps.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.color.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). createButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing only the graphic and not any text. createCellObject(ROI, ROI) - Static method in class qupath.lib.objects.PathObjects. Create a cell object. createCellObject(ROI, ROI, PathClass)",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:182645,Integrability,wrap,wrap,182645," opacity based upon pixel values. createGeometries(Geometry) - Method in class qupath.lib.objects.utils.Tiler. Create a list of Geometry tiles from the input. createGridView(QuPathGUI, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createIconImage(IconFactory.PathIcons, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an image from a default icon glyph. createID() - Method in class qupath.imagej.images.servers.ImageJServer;  ; createID() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Returns a random UUID. createID() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; createID() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns a UUID. createID() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createID() - Method in class qupath.lib.images.servers.AbstractImageServer. Create a unique ID for the server, which can be returned as the default value of AbstractI",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:182827,Integrability,wrap,wrap,182827,"I, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createIconImage(IconFactory.PathIcons, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an image from a default icon glyph. createID() - Method in class qupath.imagej.images.servers.ImageJServer;  ; createID() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Returns a random UUID. createID() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; createID() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns a UUID. createID() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createID() - Method in class qupath.lib.images.servers.AbstractImageServer. Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). createID() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; createID() - Method in class qupath.lib.images.servers.bioformats.BioForma",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:184938,Integrability,depend,depends,184938,"eturns a UUID. createID() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; createID() - Method in class qupath.lib.images.servers.LabeledImageServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; createID() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; createID() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; createID() - Method in class qupath.lib.images.servers.SparseImageServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer. Returns a UUID. createImageChoicePane(QuPathGUI, List<ProjectImageEntry<BufferedImage>>, List<ProjectImageEntry<BufferedImage>>, String) - Static method in class qupath.lib.gui.dialogs.ProjectDialogs. Populates a given ListSelectionView with all the project entries. createImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.li",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:185097,Integrability,depend,depends,185097,"eServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; createID() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; createID() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; createID() - Method in class qupath.lib.images.servers.SparseImageServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer. Returns a UUID. createImageChoicePane(QuPathGUI, List<ProjectImageEntry<BufferedImage>>, List<ProjectImageEntry<BufferedImage>>, String) - Static method in class qupath.lib.gui.dialogs.ProjectDialogs. Populates a given ListSelectionView with all the project entries. createImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore with a specified tile cache size, in bytes. createImageStack(ImageProcessor...) - Stati",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:192378,Integrability,depend,dependencies,192378,"lest region that completely contains a specified ROI. createJavaCompletion(Class<?>) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a class. createJavaCompletion(Class<?>, Field) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a field. createJavaCompletion(Class<?>, Method) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a method. createJavaCompletion(Class<?>, String, String) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion with fixed display and completion text. createJsonTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of fields within a JsonElement. createLicensesWindow(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing license information for QuPath and its third party dependencies. createLike(PathObject, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Create a new object with the same type and classification as the input object, but a new ROI and ID. createLike(PathObject, ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Create a new object with the same type and classification as the input object, but a new ROI and ID. createLinearFunction(double, double) - Static method in class qupath.lib.color.ColorModelFactory. Create a linear function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createLinearFunction(PixelType) - Static method in class qupath.lib.color.ColorModelFactory. Create a linear function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createLineEventHandler() - Static metho",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:194852,Integrability,message,messages,194852,"athObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.Open",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:195568,Integrability,interface,interface,195568,"reate a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the maximum of all channels. createMeanChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the mean of all channels. createMeasurement(String, double) - Static method in class qupath.lib.measurements.MeasurementFactory. Deprecated.; Create a measurement with a doub",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:202907,Integrability,interface,interface,202907,"tConverter to convert Mat binary or labeled images; to path objects. createObjectConverter(Function<ROI, PathObject>, Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. createObjectDescriptionsDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to display object descriptions. createObjectFunction(Function<ROI, PathObject>, BiConsumer<PathObject, Number>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a (bi)function to generate an object from a ROI and a number. createObjectInputStream(InputStream) - Static method in class qupath.lib.io.PathIO. Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask. createObjectRemovedEvent(Object, PathObjectHierarchy, PathObject, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects were removed. createObjects(Raster, int, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from one band of a raster containing integer labels. createObjects(Mat, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.opencv.tools.OpenCVTools. Create objects by tracing contours in a labelled image. createObjects(SimpleImage, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a la",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:212696,Integrability,depend,depends,212696,"of a single point. createPolylineROI(List<Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polyline ROI from a list of points. createPreferencesDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to adjust QuPath preferences. createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S, T>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProcessor(MeasurementProcessor.CustomMeasurement<S, T>...) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:226697,Integrability,interface,interface,226697,") - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to prompt the user to specify an annotation to add. createStainVector(String, double, double, double) - Static method in class qupath.lib.color.StainVector. Create a stain vector. createStatModel(Class<? extends StatModel>) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. createStringMeasurement(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Deprecated. createStructureChangeEvent(Object, PathObjectHierarchy, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating that the hierarchy structure has been changed. createSubProject(String, Collection<ProjectImageEntry<T>>) - Method in interface qupath.lib.projects.Project. Create a sub-project that provides a view on the specified entries. createSubTypeAdapterFactory(Class<T>, String) - Static method in class qupath.lib.io.GsonTools. Create a TypeAdapterFactory that is suitable for handling class hierarchies. createTaskRunner() - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). createTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createTaskRunner(int) - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the specified number of threads. createTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance with the specified number of threads. createThreadFactory(String, boolean) - Static method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:235112,Integrability,interface,interface,235112,"lMap(Collection<ImageData<BufferedImage>>, Map<PathClass, Integer>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get a classifier training map, using a predefined label map (which determines which classifications to use). CreateTrainingImageCommand - Class in qupath.process.gui.commands. Command to generate a SparseImageServer from multiple image regions across a project. CreateTrainingImageCommand() - Constructor for class qupath.process.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object. createViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). createViewerAction(Consumer<QuPathViewer>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an QuPathViewer. createWindow(QuPathGUI) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createWorkflowDisplayDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog to show the workflow history for the current image data. createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries>) - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriter. Create a writer capable of writing an image with a collection of series. createWriter(OMEPyramidWriter.OME",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:235558,Integrability,depend,depends,235558,"cess.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object. createViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). createViewerAction(Consumer<QuPathViewer>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an QuPathViewer. createWindow(QuPathGUI) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createWorkflowDisplayDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog to show the workflow history for the current image data. createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries>) - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriter. Create a writer capable of writing an image with a collection of series. createWriter(OMEPyramidWriter.OMEPyramidSeries...) - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriter. Create a writer capable of writing an image with one or more series. createZoomCommand(QuPathGUI, int) - Static method in class qupath.lib.gui.commands.Commands. Create a zoom in/out command action. crop(BufferedImage, int, int, int, int) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a crop of the image using the specified bounding box. crop(Mat,",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:239022,Integrability,interface,interface,239022,"guage. cuda() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available. cuda16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available, with 16-bit floating point. currentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current selection. cut() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; cutAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; CYAN - Static variable in class qupath.lib.common.ColorTools. Packed int representing cyan. CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:240391,Integrability,message,messages,240391,"num class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:241889,Integrability,interface,interface,241889,"hat deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:241993,Integrability,interface,interface,241993,"i.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:242120,Integrability,interface,interface,242120,"etadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:242226,Integrability,interface,interface,242226,"es.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:247908,Integrability,interface,interface,247908,"PathObjects. DelaunayTriangulation - Class in qupath.opencv.features. Compute Delaunay triangulation using OpenCV. DelaunayTriangulation(List<PathObject>, double, double, double, boolean) - Constructor for class qupath.opencv.features.DelaunayTriangulation. Compute Delaunay triangulation - optionally omitting links above a fixed distance. DELETE_EXISTING - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Delete existing child objects. DELETE_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; deleteActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; DeleteActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; deleteFile(File, boolean) - Static method in class qupath.lib.common.GeneralTools. Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted. deleteText(int, int) - Method in interface qupath.lib.gui.scripting.EditableText. Request deleting the text within the specified range. deleteText(int, int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deleteText(int, int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; DELIMITER - Static variable in class qupath.lib.objects.classes.PathClass. Get the delimiter to use between names of the PathClass when converting to a string. DEMOS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; DENSITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a density value, such as in a density map (e.g. DensityMapCommand - Class in qupath.process.gui.commands. Command for generating density maps from detections on an image. DensityMapCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.DensityMapCommand. Constructor. DensityMapDialog - Class in qupath.process.gui.commands.densit",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:250114,Integrability,interface,interface,250114," - Class in qupath.lib.analysis.heatmaps. Class for constructing and using density maps. DensityMaps() - Constructor for class qupath.lib.analysis.heatmaps.DensityMaps;  ; DensityMaps.DensityMapBuilder - Class in qupath.lib.analysis.heatmaps. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters - Class in qupath.lib.analysis.heatmaps. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType - Enum Class in qupath.lib.analysis.heatmaps. Density map types. DensityMapUI - Class in qupath.process.gui.commands.density. UI elements associated with density maps. DensityMapUI() - Constructor for class qupath.process.gui.commands.density.DensityMapUI;  ; deregister() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Deregister listeners. deregisterTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; deregisterTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Deregister the tool from the viewer. describe(Class<?>) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified class. describe(Object) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified object. deselect() - Method in interface qupath.lib.gui.scripting.EditableText. Deselect any currently-selected text. deselect() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deselect() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; deselectAll() - Static method in class qupath.lib.scripting.QP. Clear the selection for the current hierarchy, so that no objects of any kind are selected. deselectAll(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the selection, so that no objects of any kind are selected. deselectObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.P",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:250459,Integrability,interface,interface,250459,"meters - Class in qupath.lib.analysis.heatmaps. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType - Enum Class in qupath.lib.analysis.heatmaps. Density map types. DensityMapUI - Class in qupath.process.gui.commands.density. UI elements associated with density maps. DensityMapUI() - Constructor for class qupath.process.gui.commands.density.DensityMapUI;  ; deregister() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Deregister listeners. deregisterTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; deregisterTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Deregister the tool from the viewer. describe(Class<?>) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified class. describe(Object) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified object. deselect() - Method in interface qupath.lib.gui.scripting.EditableText. Deselect any currently-selected text. deselect() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deselect() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; deselectAll() - Static method in class qupath.lib.scripting.QP. Clear the selection for the current hierarchy, so that no objects of any kind are selected. deselectAll(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the selection, so that no objects of any kind are selected. deselectObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure that the specified object is removed from the selection. deselectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are deselected. DETACH_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:259691,Integrability,interface,interface,259691,"e matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multicha",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:263803,Integrability,interface,interface,263803,"e of ImageDisplay.useInvertedBackgroundProperty(). displayModeProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how the histogram is displayed, either using areas or bars. DisplaySettingUtils - Class in qupath.lib.display.settings. Utility class for working with image display and image display settings objects. DisplaySettingUtils() - Constructor for class qupath.lib.display.settings.DisplaySettingUtils;  ; displayToSettings(ImageDisplay, String) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Create a new image display settings object from the image display. dispose() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Dispose the OpenSlide object; this is equivalent to OpenSlide.close(). distance(double, double) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and a specified x and y location. distance(Point) - Method in class qupath.lib.geom.Point2;  ; distance(Point) - Method in interface qupath.lib.geom.Point. Calculate the distance to another point, with the same Point.dim(). distance(Point2) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and another point. DISTANCE_CENTROIDS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; distanceSq(double, double) - Method in class qupath.lib.geom.Point2. Calculate the squared distance between this point and a specified x and y location. distanceSq(Point) - Method in class qupath.lib.geom.Point2;  ; distanceSq(Point) - Method in interface qupath.lib.geom.Point. Calculate the squared distance to another point, with the same Point.dim(). distanceSq(OpenCVTools.IndexedPixel) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dime",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:264473,Integrability,interface,interface,264473,"mages.servers.openslide.jna.OpenSlide. Dispose the OpenSlide object; this is equivalent to OpenSlide.close(). distance(double, double) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and a specified x and y location. distance(Point) - Method in class qupath.lib.geom.Point2;  ; distance(Point) - Method in interface qupath.lib.geom.Point. Calculate the distance to another point, with the same Point.dim(). distance(Point2) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and another point. DISTANCE_CENTROIDS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; distanceSq(double, double) - Method in class qupath.lib.geom.Point2. Calculate the squared distance between this point and a specified x and y location. distanceSq(Point) - Method in class qupath.lib.geom.Point2;  ; distanceSq(Point) - Method in interface qupath.lib.geom.Point. Calculate the squared distance to another point, with the same Point.dim(). distanceSq(OpenCVTools.IndexedPixel) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.o",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:265723,Integrability,interface,interface,265723,"d assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to build a DnnModel. DnnModelParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.op",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:267993,Integrability,interface,interface,267993,"he range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:273548,Integrability,interface,interface,273548,"DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.comm",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:274070,Integrability,interface,interface,274070,"h.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a BufferedImage. duplicateAllSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate all the selected objects in a hierarchy. duplicateObjects(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the specified objects, assigning new IDs for each object. duplicateObjects(PathObjectHierarchy, Collection<PathObject>, boolean) - Static method in class qupath.lib.objects.PathOb",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:274095,Integrability,interface,interfaces,274095,"Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a BufferedImage. duplicateAllSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate all the selected objects in a hierarchy. duplicateObjects(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the specified objects, assigning new IDs for each object. duplicateObjects(PathObjectHierarchy, Collection<PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the specified objects",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283231,Integrability,message,message,283231,"ect) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283353,Integrability,message,message,283353,"ion.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283496,Integrability,message,message,283496,"upath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283639,Integrability,message,message,283639,"Classifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:283779,Integrability,message,message,283779,"l to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:286893,Integrability,interface,interface,286893,".algorithms.EstimateStainVectors;  ; estimateUsedMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current used memory. estimateWhiteValues(int[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Estimate white (background) values for a brightfield image. EVERYWHERE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests. exactClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if a PathObject has at least one of the specified PathClasses. EXCLUDE_MEASUREMENTS - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Optionally exclude measurements from objects. excludeColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be excluded during the export. ExecutableLanguage - Interface in qupath.lib.scripting.languages. Functional interface for scripting languages that are runnable (e.g. execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; execute(ScriptParameters) - Method in interface qupath.lib.scripting.languages.ExecutableLanguage. Execute the given script String. EXISTS - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that is known to exist. exp() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns Euler's number e raise to the power of the Mat values. EXPAND_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; expandableContent(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. expandChartClip(Chart, double) - Static method in class qupath.lib.gui",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:287194,Integrability,interface,interface,287194,"(background) values for a brightfield image. EVERYWHERE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests. exactClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if a PathObject has at least one of the specified PathClasses. EXCLUDE_MEASUREMENTS - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Optionally exclude measurements from objects. excludeColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be excluded during the export. ExecutableLanguage - Interface in qupath.lib.scripting.languages. Functional interface for scripting languages that are runnable (e.g. execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; execute(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; execute(ScriptParameters) - Method in interface qupath.lib.scripting.languages.ExecutableLanguage. Execute the given script String. EXISTS - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that is known to exist. exp() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns Euler's number e raise to the power of the Mat values. EXPAND_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; expandableContent(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. expandChartClip(Chart, double) - Static method in class qupath.lib.gui.charts.ChartTools. Expand the clip region for a chart. expandToWindowProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). EXP",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:293862,Integrability,interface,interface,293862," class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the extensions directory. ExtensionsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ExtensionsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; extract(int...) - Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raster as a SimpleImage. extractChannel(ImageServer<BufferedImage>, BufferedImage, float[]) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Extract a (row-wise) array containing the pixels extracted from a BufferedImage. extractChannels(int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractChannels(String...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractDoubles(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:294485,Integrability,interface,interface,294485," Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raster as a SimpleImage. extractChannel(ImageServer<BufferedImage>, BufferedImage, float[]) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Extract a (row-wise) array containing the pixels extracted from a BufferedImage. extractChannels(int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractChannels(String...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractDoubles(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.ope",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:298862,Integrability,wrap,wrap,298862,"tract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. extractZStack(ImageServer<BufferedImage>, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract a list of Mats, where each Mat corresponds to a z-slice. eyeTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the eyeTracking property of this tracker. F. factory(GeometryFactory) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the GeometryFactory, which can define a precision model in JTS. FEATURE - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a feature for a pixel classifier. FEATURE_COLLECTION - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request that objects are export as a FeatureCollection. FeatureCollection - Class in qupath.lib.io. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T> - Interface in qupath.opencv.ml.objects.features. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors - Class in qupath.opencv.ml.objects.features. Helper class for extracting features from objects, used along with ObjectClassifiers. FeatureExtractors() - Constructor for class qupath.opencv.ml.objects.features.FeatureExtractors;  ; FeaturePreprocessor - Class in qupath.opencv.ml. Create a preprocessor for an image or training matrix. FeaturePreprocessor() - Constructor for class qupath.opencv.ml.FeaturePreprocessor;  ; FeaturePreprocessor.Builder - Class in qupath.opencv.ml. Builder to create a custom FeaturePreprocessor. features(Collection<MultiscaleFeatures.MultiscaleFeature>, double, double) - Static method in class qupath.opencv.ops.ImageOps.Filters. Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:314202,Integrability,interface,interface,314202,"pencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass using all the name elements specified in the collection, ; without providing a default color. fromCollection(Collection<String>, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass instance using all the name elements specified in ; the collection, with optional default color if a new instance is created. fromColumns(double...) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. fromFriendlyString(String) - Static method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get the CompressionType corresponding to the given input. fromJTS(AffineTransformation) - Static me",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:320399,Integrability,interface,interface,320399,"L - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. GeneralPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; GeneralTools - Class in qupath.lib.common. Collection of generally useful static methods. generateDistinctName(String, Collection<String>) - Static method in class qupath.lib.common.GeneralTools. Generate a name that is distinct from the names in an existing collection, while being based on a provided name. generateMedianStainVectorFromPixels(String, int[], double, double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. GeneratingImageServer<T> - Interface in qupath.lib.images.servers. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI - Class in qupath.lib.roi. ROI based on Java Topology Suite Geometry objects. GeometryTools - Class in qupath.lib.roi. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools() - Constructor for class qupath.lib.roi.GeometryTools;  ; GeometryTools.GeometryConverter - Class in qupath.lib.roi. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder - Class in qupath.lib.roi. Builder to help define how ROIs and Geometry objects should be converted. geometryToROI(Geometry, ImagePlane) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a QuPath ROI. geometryToShape(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a java.awt.Shape. geq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold. geq(Mat, Mat) - Static method in class qupath.opencv.too",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:322036,Integrability,interface,interface,322036,"ry, ImagePlane) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a QuPath ROI. geometryToShape(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a java.awt.Shape. geq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold. geq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold between two arrays. GESTURES_ALL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_NONE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ROTATE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_SCROLL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ZOOM - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; get(int) - Method in interface qupath.lib.geom.Point. Get the value of the ordinate for the specified dimension. get(int) - Method in class qupath.lib.geom.Point2;  ; get(int) - Method in class qupath.opencv.dnn.DnnShape. Get the length of the specified dimension. get(String) - Method in interface qupath.lib.measurements.MeasurementList. Get value for the measurement with the specified name. get(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Retrieve a resource by name. get2D(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 2D Gaussian scale. get3DAnisotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D anisotropic Gaussian scale. get3DIsotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D isotropic Gaussian scale. getAcceleratorText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:322304,Integrability,interface,interface,322304," qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold. geq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold between two arrays. GESTURES_ALL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_NONE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ROTATE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_SCROLL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ZOOM - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; get(int) - Method in interface qupath.lib.geom.Point. Get the value of the ordinate for the specified dimension. get(int) - Method in class qupath.lib.geom.Point2;  ; get(int) - Method in class qupath.opencv.dnn.DnnShape. Get the length of the specified dimension. get(String) - Method in interface qupath.lib.measurements.MeasurementList. Get value for the measurement with the specified name. get(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Retrieve a resource by name. get2D(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 2D Gaussian scale. get3DAnisotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D anisotropic Gaussian scale. get3DIsotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D isotropic Gaussian scale. getAcceleratorText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of any accelerator for the command. getActionProperty(MenuItem) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a menu item, or null if no action is found. getActionProperty(Node) - Static method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:322434,Integrability,interface,interface,322434,"ols.GroovyCV. Apply a greater than or equal to threshold between two arrays. GESTURES_ALL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_NONE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ROTATE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_SCROLL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ZOOM - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; get(int) - Method in interface qupath.lib.geom.Point. Get the value of the ordinate for the specified dimension. get(int) - Method in class qupath.lib.geom.Point2;  ; get(int) - Method in class qupath.opencv.dnn.DnnShape. Get the length of the specified dimension. get(String) - Method in interface qupath.lib.measurements.MeasurementList. Get value for the measurement with the specified name. get(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Retrieve a resource by name. get2D(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 2D Gaussian scale. get3DAnisotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D anisotropic Gaussian scale. get3DIsotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D isotropic Gaussian scale. getAcceleratorText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of any accelerator for the command. getActionProperty(MenuItem) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a menu item, or null if no action is found. getActionProperty(Node) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a node, or null if no action is foun",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:324118,Integrability,interface,interface,324118,"- Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a menu item, or null if no action is found. getActionProperty(Node) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a node, or null if no action is found. getActions() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getActions() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get all the actions to include in the menu, in order. getActions() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getActiveTool() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the active PathTool for this viewer. getActiveToolIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getActiveViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the value of ViewerManager.activeViewerProperty(). getAlignment() - Method in class qupath.lib.objects.utils.Tiler. Get the tiling alignment. getAllFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the collection of recorded frames. getAllImageSupports(URI, String...) - Static method in class qupath.lib.images.servers.ImageSer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:325336,Integrability,interface,interface,325336,"ons() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getActiveTool() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the active PathTool for this viewer. getActiveToolIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getActiveViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the value of ViewerManager.activeViewerProperty(). getAlignment() - Method in class qupath.lib.objects.utils.Tiler. Get the tiling alignment. getAllFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the collection of recorded frames. getAllImageSupports(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get all ImageServerBuilder.UriImageSupport that claim to be able to open the specified URI with optional args. getAllNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getAllNames() - Method in interface qupath.lib.gui.measure.PathTableData. Return an ordered list of all names, including both numeric measurements and String values. getAllNeighbors() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a list of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't rep",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:326540,Integrability,interface,interface,326540,"ysis.DelaunayTools.Subdivision. Get a list of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:326565,Integrability,interface,interfaces,326565,"of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed or censored). getAllViewers() - Method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:327240,Integrability,interface,interface,327240,"tAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed or censored). getAllViewers() - Method in class qupath.lib.gui.QuPathGUI. Get an unmodifiable observable list of all viewers. getAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Get an observable list of viewers. getAlphaComposite() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getAnalysisTabPane() - Method in class qupath.lib.gui.QuPathGUI. Access the main tab pane shown in the QuPath window. getAncestorList(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(Pa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:329150,Integrability,interface,interface,329150,"hObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.EllipseROI;  ; getArea() - Method in class qupath.lib.roi.RectangleROI;  ; getArea() - Method in class qupath.lib.roi.AreaROI;  ; getArea() - Method in class qupath.lib.roi.GeometryROI;  ; getArea() - Method in interface qupath.lib.roi.interfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.Stai",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:329175,Integrability,interface,interfaces,329175,"t of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.EllipseROI;  ; getArea() - Method in class qupath.lib.roi.RectangleROI;  ; getArea() - Method in class qupath.lib.roi.AreaROI;  ; getArea() - Method in class qupath.lib.roi.GeometryROI;  ; getArea() - Method in interface qupath.lib.roi.interfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 elem",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:330314,Integrability,interface,interface,330314," qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 element array (red, green, blue). getArray(boolean) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.ser",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:330702,Integrability,interface,interface,330702,"om a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 element array (red, green, blue). getArray(boolean) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.servers.ImageServer. Get a list of 'associated images', e.g. getAssociatedImageList() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImages() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a list of all associated image names. getAtRisk(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierDa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:331268,Integrability,interface,interface,331268,"s qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.servers.ImageServer. Get a list of 'associated images', e.g. getAssociatedImageList() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImages() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a list of all associated image names. getAtRisk(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number at risk at a specified time. getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.CssLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.JsonLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PlainLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:334860,Integrability,interface,interface,334860,"od in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. getBaseStyle() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. getBaseStyle() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Optionally return a base style for the code area. getBatchIndex() - Method in class qupath.lib.scripting.ScriptParameters. Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. getBatchSaveResult() - Method in class qupath.lib.scripting.ScriptParameters. Get whether changes to the image data should be saved. getBatchSize() - Method in class qupath.lib.scripting.ScriptParameters. Get the number of images being batch processed, or 1 if just a single image is being processed. getBinIndexForValue(double, double) - Method in class qupath.lib.analysis.stats.Histogram. Get the index of the bin that should contain the specified value. getBinLeftEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the lower edge for a specified bin. getBinRightEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the upper edge for a specified bin.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:339458,Integrability,interface,interface,339458," in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. getBounds(ImageRegion, Rectangle) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. getBounds(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to bounding box of a ROI. getBounds2D(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle2D corresponding to bounding box of a ROI. getBounds2D(ROI, Rectangle2D) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:339483,Integrability,interface,interfaces,339483,"ate a Rectangle corresponding to the x,y,width,height of an ImageRegion. getBounds(ImageRegion, Rectangle) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. getBounds(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to bounding box of a ROI. getBounds2D(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle2D corresponding to bounding box of a ROI. getBounds2D(ROI, Rectangle2D) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseRO",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:340093,Integrability,interface,interface,340093,"wtTools. Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:340118,Integrability,interface,interfaces,340118,"ngle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY(",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:340703,Integrability,interface,interface,340703,Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - ,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:340728,Integrability,interface,interfaces,340728,  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:341321,Integrability,interface,interface,341321,"ndsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:341346,Integrability,interface,interfaces,341346,"i.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupath.lib.images.servers.ImageServerBuilder.Uri",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:342152,Integrability,interface,interface,342152,"n class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get a list of ServerBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:343352,Integrability,interface,interface,343352,"uilder.UriImageSupport. Get a list of ServerBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:343377,Integrability,interface,interfaces,343377,"rverBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:346510,Integrability,interface,interface,346510," class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current ce",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:346842,Integrability,interface,interface,346842,"Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full si",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:348509,Integrability,interface,interface,348509," cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. getCentroidDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the centroids of two ROIs. getCentroidDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. getCentroidX() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidX() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:348534,Integrability,interface,interfaces,348534,"n class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. getCentroidDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the centroids of two ROIs. getCentroidDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. getCentroidX() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidX() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:349247,Integrability,interface,interface,349247,roi.EllipseROI;  ; getCentroidX() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getChangedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The objects that were affected by whichever changes were made. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for ,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:349272,Integrability,interface,interfaces,349272,in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getChangedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The objects that were affected by whichever changes were made. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int),MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:350161,Integrability,interface,interface,350161,"I centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getChangedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The objects that were affected by whichever changes were made. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImag",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:351007,Integrability,interface,interface,351007,"isplay.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsAr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:351160,Integrability,interface,interface,351160,"(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:355007,Integrability,interface,interface,355007,"s, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. getClassProbability() - Method in class qupath.lib.objects.PathObject. Request the classification probability, or Double.NaN if no probability is available. getClassProbability() - Method in class qupath.lib.objects.PathROIObject;  ; getClassProbability() - Method in class qupath.lib.objects.PathRootObject;  ; getClipboardText(boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getClusters(BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get clusters of connected objects, where connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) corresponds to color represented by this stain vector. getColor() - Method in interface qupath.lib.display.ChannelDisplayInfo. Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. getColor() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColor() - Method in class qupath.lib.display.settings.ChannelSettings. Get the color used to display the channel, or null if a color is not relevant. getColor() - Method in class qupath.lib.images.servers.ImageChannel. Color used to display the output channel. getColor() - Method in class qupath.lib.objects.classes.PathClass. Get the color that should be used to display objects with this classification. getColor() - Method in class qupath.lib.objects.PathObject. Return any stored color as a packed RGB value. getColor(double, double, double) - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get a packed ARGB representation of the (interpolated) color at the specified value,. getColorDeconvolutionStains() - Method in class qupath.lib.images.ImageData. Get the stains defined fo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:355769,Integrability,interface,interface,355769,"here connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) corresponds to color represented by this stain vector. getColor() - Method in interface qupath.lib.display.ChannelDisplayInfo. Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. getColor() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColor() - Method in class qupath.lib.display.settings.ChannelSettings. Get the color used to display the channel, or null if a color is not relevant. getColor() - Method in class qupath.lib.images.servers.ImageChannel. Color used to display the output channel. getColor() - Method in class qupath.lib.objects.classes.PathClass. Get the color that should be used to display objects with this classification. getColor() - Method in class qupath.lib.objects.PathObject. Return any stored color as a packed RGB value. getColor(double, double, double) - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get a packed ARGB representation of the (interpolated) color at the specified value,. getColorDeconvolutionStains() - Method in class qupath.lib.images.ImageData. Get the stains defined for this image, or null if this is not a brightfield image suitable for color deconvolution. getColorDeconvolutionStainsAsString(ColorDeconvolutionStains, int) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Get a String representation of the stains and background. getColorForObject(PathObject) - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the display color for a specified object, according to the settings of this mapper. getColorMap() - Method in class qupath.lib.gui.ColorMapCanvas. Return the currently displayed ColorMaps.ColorMap. getColorMapper() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the color mapper, which is effectively a lookup table. getColorMaps() - Static method in class qup",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:359179,Integrability,interface,interface,359179,"sed on the packed RGB values in an Integer. getColorWithOpacity(Color, double) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Derived a Color from an existing one, setting the alpha component to match the desired opacity. getColorWithOpacityFX(Integer, double) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. getCommandPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a string representation of the menu path for this command, including the menu path and the text. getCommonActions() - Method in class qupath.lib.gui.QuPathGUI. Get the common actions associated with this QuPath instance. getComparator() - Static method in class qupath.lib.scripting.languages.AutoCompletions. Get a comparator to order completions. getCompatibleObjects(ImageData<T>) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; getCompatibleObjects(ImageData<T>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. g",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:359821,Integrability,interface,interface,359821,"n class qupath.lib.gui.QuPathGUI. Get the common actions associated with this QuPath instance. getComparator() - Static method in class qupath.lib.scripting.languages.AutoCompletions. Get a comparator to order completions. getCompatibleObjects(ImageData<T>) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; getCompatibleObjects(ImageData<T>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:360018,Integrability,interface,interface,360018,"pletions. getCompatibleObjects(ImageData<T>) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; getCompatibleObjects(ImageData<T>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.Defa",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:361087,Integrability,interface,interface,361087,"ges.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getConnectedObjects(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getConnectionGroups() - Method in class qupath.lib.objects.PathObjectConnections. Get an unmodifiable list containing all connections groups. getConnections(PathObject) - Method in class qupath.lib.objects.PathObjectConnections. Get all the connections to a specified PathObject. getContents(Parent, Collection<Node>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively. getContentsOfType(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in cla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:362143,Integrability,interface,interface,362143,"onnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getConnectionGroups() - Method in class qupath.lib.objects.PathObjectConnections. Get an unmodifiable list containing all connections groups. getConnections(PathObject) - Method in class qupath.lib.objects.PathObjectConnections. Get all the connections to a specified PathObject. getContents(Parent, Collection<Node>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively. getContentsOfType(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getContextMenu() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qup",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:362788,Integrability,interface,interface,362788,"ng other nodes recursively. getContentsOfType(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getContextMenu() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:362813,Integrability,interface,interfaces,362813,"pe(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getContextMenu() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:363582,Integrability,message,message,363582,"on using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart. Get the current counts transform. getCountSum() - Method in class qupath.lib.analysis.stats.Histogram. Sum of all histogram counts. getCreationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was created. getCropRegion() - Method in class qupath.lib.images.servers.CroppedImageServer. Get the region being cropped, in terms of the bounding box within the base ImageServer. getCropToParent() - Method in class qupath.lib.objects.utils.Tiler. Check if the tiler is set to crop the output to the input parent. getCssStylesPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where user directory for storing CSS styles. getCurrentConsoleControl() - Method in class qupath.lib.gui.scriptin",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:363987,Integrability,interface,interface,363987,"upath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart. Get the current counts transform. getCountSum() - Method in class qupath.lib.analysis.stats.Histogram. Sum of all histogram counts. getCreationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was created. getCropRegion() - Method in class qupath.lib.images.servers.CroppedImageServer. Get the region being cropped, in terms of the bounding box within the base ImageServer. getCropToParent() - Method in class qupath.lib.objects.utils.Tiler. Check if the tiler is set to crop the output to the input parent. getCssStylesPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where user directory for storing CSS styles. getCurrentConsoleControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the current preferred data file version. getCurrentEditorControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentHierarchy() - Static method in class qupath.lib.scripting.QP. Get the PathObjectHierarchy of the current ImageData. getCurrentImageData() - Sta",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:369260,Integrability,interface,interface,369260,"lib.color.ColorMaps. Get a default, general-purpose ColorMaps.ColorMap. getDefaultColorModel() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getDefaultColorModel() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get an appropriate colormodel that may be used. getDefaultColorModel() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getDefaultColorModel(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. This does not guarantee a ColorModel will be returned!; If it is not, then a default grayscale LUT should be used. getDefaultCreateFunction() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default function used to create TaskRunner instances. getDefaultDragDropListener() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. getDefaultExtension() - Method in interface qupath.lib.images.writers.ImageWriter. Get the default extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultPara",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:373317,Integrability,interface,interface,373317,"o repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands.ml.ClassificationResolution. Get a list of default resolutions to show, derived from PixelCalibration objects. getDefaultRGBChannels() - Static method in class qupath.lib.images.servers.ImageChannel. Get d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:374882,Integrability,interface,interface,374882,"y() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands.ml.ClassificationResolution. Get a list of default resolutions to show, derived from PixelCalibration objects. getDefaultRGBChannels() - Static method in class qupath.lib.images.servers.ImageChannel. Get default channel list for RGB images. getDefaultScriptName() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; getDefaultShortServerName(URI) - Static method in class qupath.lib.images.servers.ServerTools. Get the default shortened server name given the server's path. getDefaultStaticImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default static imports that should be included with the script, where possible. getDefaultThumbnail(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDefaultThumbnail(int, int) - Method in interface qupath.lib.images.servers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:375976,Integrability,interface,interface,375976,r a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation bound,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:379388,Integrability,interface,interface,379388," getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; get",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:379539,Integrability,interface,interface,379539," getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnota",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:379981,Integrability,interface,interface,379981,"iption() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnota",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:380165,Integrability,interface,interface,380165,"upath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescri",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:381373,Integrability,interface,interface,381373,"sonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:381504,Integrability,interface,interface,381504," class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWrit",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:382165,Integrability,interface,interface,382165,"Description() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWriter;  ; getDetectionDisplayMode() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the current OverlayOptions.DetectionDisplayMode. getDetectionObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all detection objects in the hierarchy (including sub-classes of detections). getDetectionObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current detection objects. getDeterminant() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the determinant for each pixel. getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getDeterminan",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:382958,Integrability,interface,interface,382958,"process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWriter;  ; getDetectionDisplayMode() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the current OverlayOptions.DetectionDisplayMode. getDetectionObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all detection objects in the hierarchy (including sub-classes of detections). getDetectionObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current detection objects. getDeterminant() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the determinant for each pixel. getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getDisplayableImageName(ImageServer<?>) - Static method in class qupath.lib.images.servers.ServerTools. Get an ImageServer name suitable for displaying. getDisplayedClipShape(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer. Transform a clip shape into image coordinates for this viewer. getDisplayedColor(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying an object. getDisplayedColorARGB(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get the color with which an object should be displayed, as a packaged ARGB integer. getDisplayedImageName(ImageData<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Get the image n",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:384726,Integrability,interface,interface,384726," class qupath.lib.gui.tools.ColorToolsFX. Get the color with which an object should be displayed, as a packaged ARGB integer. getDisplayedImageName(ImageData<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Get the image name to display for a specified image. getDisplayedName() - Method in class qupath.lib.objects.PathObject. Request an object name in a form suitable for displaying. getDisplayedRegionShape() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a shape corresponding to the region of the image currently visible in this viewer. getDisplayMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the last color in the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:385012,Integrability,interface,interface,385012,"() - Method in class qupath.lib.objects.PathObject. Request an object name in a form suitable for displaying. getDisplayedRegionShape() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a shape corresponding to the region of the image currently visible in this viewer. getDisplayMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the last color in the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the reques",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:385445,Integrability,interface,interface,385445," the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsample",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386235,Integrability,interface,interface,386235,"arameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() -",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:386881,Integrability,interface,interface,386881,"b.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:387610,Integrability,interface,interface,387610,"orLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.g",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:387947,Integrability,interface,interface,387947,"Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this ima",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:388722,Integrability,interface,interface,388722,"lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. getErrorWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the error writer for script output. getEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get an unmodifiable list of all events. getEventsAtTime(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events at a specified time (exactly). getEventType() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the hierarchy event type. getExcludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.Me",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:388846,Integrability,interface,interface,388846," Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. getErrorWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the error writer for script output. getEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get an unmodifiable list of all events. getEventsAtTime(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events at a specified time (exactly). getEventType() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the hierarchy event type. getExcludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.MeasurementMapper. Returns true if objects with values outside the specified min/max range have the min/max colors returned, false",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:390586,Integrability,interface,interface,390586,"s.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.MeasurementMapper. Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. getExpandToWindow() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Query whether the image is allowed to expand beyond its preferred width and height to fill the window. getExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get filename extension. getExtension(String) - Static method in class qupath.lib.common.GeneralTools. Get extension from a filename. getExtensionManager() - Method in class qupath.lib.gui.QuPathGUI. Get an ExtensionManager to facilitating working with extensions. getExtensions() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getExtensions() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getExtensions() - Method in interface qupath.lib.images.writers.ImageWriter. Get the file extensions used by the image writer. getExtensions() - Method in class qupath.lib.images.writers.JpegWriter;  ; getExtensions() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getExtensions() - Method in class qupath.lib.images.writers.PngWriter;  ; getExtensions() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get an unmodifiable set containing the possible extensions for this language. getExtensionsDirectory() - Method in class qupath.lib.gui.ExtensionClassLoader. Directory containing extensions. getExtensionsPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where extensions should be stored. getEyeFixatedIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getEyePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; g",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:392035,Integrability,interface,interface,392035,"ing the possible extensions for this language. getExtensionsDirectory() - Method in class qupath.lib.gui.ExtensionClassLoader. Directory containing extensions. getExtensionsPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where extensions should be stored. getEyeFixatedIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getEyePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getFeature(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the value of the specified feature. getFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Request the variable importance values from the last trained RTrees classifier, if available. getFeatureName(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the name of the specified feature. getFeatureNames() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; getFeatureOp() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get an ImageDataOp used for feature calculation. getFile() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the file associated with this ViewTracker. getFile() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the underlying file. getFile() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get a File object representing the local image file - or null if no file could be found. getFile() - Method in class qupath.lib.scripting.ScriptParameters. Get the file where the script is located. getFilesOnly() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if Bio-Formats is restricted to support only local files, not other URLs. getFill() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get t",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:392496,Integrability,interface,interface,392496," ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getFeature(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the value of the specified feature. getFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Request the variable importance values from the last trained RTrees classifier, if available. getFeatureName(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the name of the specified feature. getFeatureNames() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; getFeatureOp() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get an ImageDataOp used for feature calculation. getFile() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the file associated with this ViewTracker. getFile() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the underlying file. getFile() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get a File object representing the local image file - or null if no file could be found. getFile() - Method in class qupath.lib.scripting.ScriptParameters. Get the file where the script is located. getFilesOnly() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if Bio-Formats is restricted to support only local files, not other URLs. getFill() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram fill color. getFillAnnotations() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getFillDetections() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getFilledPolygonROIs(ImageProcessor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Get filled PolygonRois for connected pixels with the same value in an image. getFilledPolygonROIsExperimental(ImageProcessor) - Static method in class qupath.imagej.processing.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:397966,Integrability,interface,interface,397966,"pOp that can perform any requested gamma correction in this viewer. getGaussianDeriv(double, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGaussianDerivKernel(double, int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGeoJsonDataFormat() - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Get a DataFormat suitable for storing GeoJSON data on a clipboard. getGeometry() - Method in class qupath.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.Default",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:397991,Integrability,interface,interfaces,397991,"rrection in this viewer. getGaussianDeriv(double, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGaussianDerivKernel(double, int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGeoJsonDataFormat() - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Get a DataFormat suitable for storing GeoJSON data on a clipboard. getGeometry() - Method in class qupath.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in int",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:398994,Integrability,interface,interface,398994,"ath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:399277,Integrability,interface,interface,399277,"n class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:400206,Integrability,interface,interface,400206,"n class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:400483,Integrability,interface,interface,400483,"nd the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.pl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:401531,Integrability,interface,interface,401531,"rs.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayI",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:403068,Integrability,interface,interface,403068,"r. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClas",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:403247,Integrability,interface,interface,403247,"y. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.li",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:403622,Integrability,interface,interface,403622,"e if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassif",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:403728,Integrability,interface,interface,403728,"stogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:404081,Integrability,interface,interface,404081,"d in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProper",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:404379,Integrability,interface,interface,404379,"ath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProperty(). getImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the image data currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in i",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:405366,Integrability,interface,interface,405366,"lass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProperty(). getImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the image data currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.proj",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:405429,Integrability,wrap,wrapped,405429," class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProperty(). getImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the image data currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:406336,Integrability,interface,interface,406336," script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a name that may be used for this entry. getImageObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getImagePlane() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.li",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:406447,Integrability,interface,interface,406447,"he ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a name that may be used for this entry. getImageObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getImagePlane() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in c",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:407825,Integrability,interface,interface,407825,"ss qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in class qupath.lib.roi.GeometryROI;  ; getImagePlane() - Method in class qupath.lib.roi.LineROI;  ; getImagePlane() - Method in class qupath.lib.roi.PointsROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolygonROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:407850,Integrability,interface,interfaces,407850,"sion. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in class qupath.lib.roi.GeometryROI;  ; getImagePlane() - Method in class qupath.lib.roi.LineROI;  ; getImagePlane() - Method in class qupath.lib.roi.PointsROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolygonROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by t",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:408130,Integrability,interface,interface,408130," the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in class qupath.lib.roi.GeometryROI;  ; getImagePlane() - Method in class qupath.lib.roi.LineROI;  ; getImagePlane() - Method in class qupath.lib.roi.PointsROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolygonROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by this viewer for tile caching and painting. getImages() - Method in interface qupath.lib.projects.ProjectImageEntry. Access additional images associated with the project entry, e.g. getImageServer() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getIma",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:408922,Integrability,interface,interface,408922," z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by this viewer for tile caching and painting. getImages() - Method in interface qupath.lib.projects.ProjectImageEntry. Access additional images associated with the project entry, e.g. getImageServer() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageServerTypeAdapterFactory(boolean) - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. getImageSupport(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. getImageSupport(ImageServerBuilder<BufferedImage>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. getImageType() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getImageType() - Method",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:410102,Integrability,interface,interface,410102,"isplay.DirectServerChannelInfo;  ; getImageServerTypeAdapterFactory(boolean) - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. getImageSupport(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. getImageSupport(ImageServerBuilder<BufferedImage>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. getImageType() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getImageType() - Method in class qupath.lib.images.ImageData. Get the image type. getImageType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getImageType() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Returns the base class for the images supported by this server. getImageType() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getImageType() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getImageWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile in the full resolution image. getImageX() - Method in class qupath.lib.images.servers.TileRequest. Get the x-coordinate of the bounding box for this tile in the full resolution image. getImageY() - Method in class qupath.lib.images.servers.TileRequest. Get the y-coordinate of the bounding box for this tile in the full resolution image. getImportStatementGenerator() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get an DefaultScriptLanguage.ImportStatementGenerator. getImportStatementGenerator() - Method in class qupath.lib.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:411384,Integrability,interface,interface,411384,"s.openslide.OpenslideServerBuilder;  ; getImageWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile in the full resolution image. getImageX() - Method in class qupath.lib.images.servers.TileRequest. Get the x-coordinate of the bounding box for this tile in the full resolution image. getImageY() - Method in class qupath.lib.images.servers.TileRequest. Get the y-coordinate of the bounding box for this tile in the full resolution image. getImportStatementGenerator() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get an DefaultScriptLanguage.ImportStatementGenerator. getImportStatementGenerator() - Method in class qupath.lib.gui.scripting.languages.GroovyLanguage;  ; getImportStatements(Collection<Class<?>>) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get the import statements as a String, to add at the beginning of the executed script. getImportStatments(Collection<Class<?>>) - Method in interface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getIncludeChildren() - Method in class qupath.lib.io.FeatureCollection. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.to",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:412501,Integrability,message,message,412501,"ion. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:412576,Integrability,message,messages,412576,"ion. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.cl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:412729,Integrability,message,messages,412729,"f columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the r",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:413880,Integrability,interface,interface,413880,"odel. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested input resolution for the image. getInputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the requested inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstan",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:414248,Integrability,interface,interface,414248,".PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested input resolution for the image. getInputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the requested inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstance() - Static method in class qupath.lib.gui.BuildInfo. Get the shared BuildInfo instance. getInstance() - Static method in class qupath.lib.gui.ExtensionClassLoader. Get a singleton instance of the ExtensionClassLoader. getInstance() - Static method in class qupath.lib.gui.JavadocViewer. Get the main (singleton) instance of JavadocViewer. getInstance() -",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:419320,Integrability,interface,interface,419320," in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Get an object containing the parameters necessary for normalization. getInstance(LocalNormalization.SmoothingScale, LocalNormalization.SmoothingScale) - Static method in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Get an object containing the parameters necessary for normalization. getInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get a mapping between objects and instance labels. getInterpolation() - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Get the preferred method of interpolation to use for display. getIntParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a integer parameter value (or its default) for the specified key. getItem() - Method in class qupath.lib.gui.SelectableItem. Get the current item. getItems() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getItems() - Method in interface qupath.lib.gui.measure.PathTableData. Get internal list of the items used to provide measurements. getItems(UriUpdater.UriStatus) - Method in class qupath.lib.io.UriUpdater. Get all items with the specified status, or all items is status is null. getKeyValueParameters(boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameter values. getLabelMap() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get the map of classifications to labels. getLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their corresponding labels. getLanguageFromExtension(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). getLanguageFromName(String) - Static method in",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:421101,Integrability,interface,interface,421101,"od in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). getLanguageFromName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Given a file name, determine the associated language - or null if no suitable (supported) language can be found. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:421454,Integrability,interface,interface,421454,"able (supported) language can be found. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRendere",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:421600,Integrability,interface,interface,421600,") - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:421955,Integrability,interface,interface,421955,"xtfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:422104,Integrability,interface,interface,422104,"hod in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:422578,Integrability,interface,interface,422578," by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICS",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:424086,Integrability,interface,interface,424086,"ray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Me",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:425075,Integrability,interface,interface,425075,"  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:425215,Integrability,interface,interface,425215," logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:426621,Integrability,interface,interface,426621,"scription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not be preserved. getLayout() - Method in class qupath.opencv.dnn.DnnModelParams. Get a string representing the axes layout that the model expects as input. getLength() - Method in class qupath.lib.roi.EllipseROI;  ; getLength() - Method in class qupath.lib.roi.RectangleROI;  ; getLength() - Method in class qupath.lib.roi.AreaROI;  ; getLength() - Method in class qupath.lib.roi.GeometryROI;  ; getLength() - Method in interface qupath.lib.roi.interfaces.ROI. Get ROI length. getLength() - Method in class qupath.lib.roi.LineROI;  ; getLength() - Method in class qupath.lib.roi.PointsROI;  ; getLength() - Method in class qupath.lib.roi.PolygonROI;  ; getLength() - Method in class qupath.lib.roi.PolylineROI;  ; getLevel() - Method in class qupath.lib.images.servers.TileRequest. Get the resolution level. getLevel() - Method in class qupath.lib.objects.PathObject. The level of the object in a hierarchy. getLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get resolution information for a specified pyramidal level. getLevel0Height() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the height of the full-resolution image (level 0). getLevel0Width() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the width of the full-resolution image (level 0). getLevelCount() - Method in class qupath.lib.images.servers.openslide.jna.OpenSl",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:426646,Integrability,interface,interfaces,426646,"v.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not be preserved. getLayout() - Method in class qupath.opencv.dnn.DnnModelParams. Get a string representing the axes layout that the model expects as input. getLength() - Method in class qupath.lib.roi.EllipseROI;  ; getLength() - Method in class qupath.lib.roi.RectangleROI;  ; getLength() - Method in class qupath.lib.roi.AreaROI;  ; getLength() - Method in class qupath.lib.roi.GeometryROI;  ; getLength() - Method in interface qupath.lib.roi.interfaces.ROI. Get ROI length. getLength() - Method in class qupath.lib.roi.LineROI;  ; getLength() - Method in class qupath.lib.roi.PointsROI;  ; getLength() - Method in class qupath.lib.roi.PolygonROI;  ; getLength() - Method in class qupath.lib.roi.PolylineROI;  ; getLevel() - Method in class qupath.lib.images.servers.TileRequest. Get the resolution level. getLevel() - Method in class qupath.lib.objects.PathObject. The level of the object in a hierarchy. getLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get resolution information for a specified pyramidal level. getLevel0Height() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the height of the full-resolution image (level 0). getLevel0Width() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the width of the full-resolution image (level 0). getLevelCount() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the total number of pyramid level",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:428236,Integrability,interface,interface,428236,"fied pyramidal level. getLevel0Height() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the height of the full-resolution image (level 0). getLevel0Width() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the width of the full-resolution image (level 0). getLevelCount() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the total number of pyramid levels. getLevelHeight(int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the image height at the specified level. getLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list containing the resolution levels. getLevelWidth(int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the image width at the specified level. getLibraryVersion() - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Get the version of the OpenSlide library. getLineCommentString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get the String that represents the start of a comment line. getLineObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:429452,Integrability,interface,interface,429452,"path.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in cla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:429687,Integrability,interface,interface,429687,"upath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:430585,Integrability,message,messages,430585,"le, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, o",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432397,Integrability,interface,interface,432397,"Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Meth",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:432826,Integrability,interface,interface,432826,"tMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:433281,Integrability,interface,interface,433281,"the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxF",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:433849,Integrability,interface,interface,433849,"erface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute maximum features from all four rotations. getMaxGreen() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the green channel (default = 255). getMaxHeight() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum height of the density map. getMaxNormalizedCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin, divided by the total counts across the entire",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:436931,Integrability,interface,interface,436931,th of the density map. getMaxX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the bottom right of the region bounding box. getMaxY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the bottom right of the region bounding box. getMean() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the mean of all non-NaN values that were added. getMean() - Method in class qupath.opencv.dnn.OpenCVDnn. Get means which should be subtracted for preprocessing. getMeanFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute averaged features over all four rotations. getMeanValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the mean of all the values being histogrammed. getMeasurementList() - Method in class qupath.lib.objects.PathObject. Retrieve the list stored measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is pref,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:437241,Integrability,interface,interface,437241,"class qupath.lib.analysis.stats.RunningStatistics. Get the mean of all non-NaN values that were added. getMean() - Method in class qupath.opencv.dnn.OpenCVDnn. Get means which should be subtracted for preprocessing. getMeanFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute averaged features over all four rotations. getMeanValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the mean of all the values being histogrammed. getMeasurementList() - Method in class qupath.lib.objects.PathObject. Retrieve the list stored measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManage",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:437366,Integrability,interface,interface,437366,"cv.dnn.OpenCVDnn. Get means which should be subtracted for preprocessing. getMeanFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute averaged features over all four rotations. getMeanValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the mean of all the values being histogrammed. getMeasurementList() - Method in class qupath.lib.objects.PathObject. Retrieve the list stored measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. getMeasurementValue(PathObject, String",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:437793,Integrability,interface,interface,437793,"d measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. getMeasurementValue(PathObject, String, boolean) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Deprecated.; use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. getMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:437979,Integrability,interface,interface,437979,"asurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. getMeasurementValue(PathObject, String, boolean) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Deprecated.; use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. getMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI, computing it if it is unavailable. getMeasurementValue(ROI, String, boolean) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:440548,Integrability,message,message,440548,"rvers.bioformats.BioFormatsServerOptions. Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. getMenu(String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. getMenu(List<Menu>, String, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a reference to an existing menu, optionally creating a new menu if it is not present. getMenuBar() - Method in class qupath.lib.gui.QuPathGUI. Get the menubar for the main QuPath application. getMenuItem() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the menu item corresponding to this command. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an un",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:440583,Integrability,interface,interface,440583,"Options. Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. getMenu(String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. getMenu(List<Menu>, String, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a reference to an existing menu, optionally creating a new menu if it is not present. getMenuBar() - Method in class qupath.lib.gui.QuPathGUI. Get the menubar for the main QuPath application. getMenuItem() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the menu item corresponding to this command. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the met",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:440848,Integrability,interface,interface,440848,"bar, optionally creating a new menu if it is not present. getMenu(List<Menu>, String, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a reference to an existing menu, optionally creating a new menu if it is not present. getMenuBar() - Method in class qupath.lib.gui.QuPathGUI. Get the menubar for the main QuPath application. getMenuItem() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the menu item corresponding to this command. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:441318,Integrability,interface,interface,441318,"d. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.Metadat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:441488,Integrability,interface,interface,441488,"ageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryStr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:441625,Integrability,interface,interface,441625,"xel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetada",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:441823,Integrability,interface,interface,441823,"ageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; get",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:442275,Integrability,interface,interface,442275,"ap for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.D",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:442491,Integrability,interface,interface,442491,"ys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerCha",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:442647,Integrability,interface,interface,442647,"upath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.disp",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:442842,Integrability,interface,interface,442842,"interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:442941,Integrability,interface,interface,442941,"ataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatric",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:443319,Integrability,interface,interface,443319,"ects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:443512,Integrability,interface,interface,443512,"nterface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being h",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:445247,Integrability,interface,interface,445247,"ault minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:445603,Integrability,interface,interface,445603,"rverMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.Col",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:446392,Integrability,interface,interface,446392," missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADear",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:446482,Integrability,synchroniz,synchronized,446482,"ends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.Positive",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:448709,Integrability,interface,interface,448709," Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:448994,Integrability,interface,interface,448994,"Plugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:449372,Integrability,interface,interface,449372,"BinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:450184,Integrability,interface,interface,450184,path.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.g,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:450611,Integrability,interface,interface,450611,tName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTran,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:450933,Integrability,interface,interface,450933,tName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupa,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:451262,Integrability,interface,interface,451262,u. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the ima,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:451547,Integrability,interface,interface,451547,lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measu,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:451775,Integrability,interface,interface,451775,seVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:452187,Integrability,interface,interface,452187,i.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objec,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:452505,Integrability,interface,interface,452505,s.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath,MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:453480,Integrability,interface,interface,453480,"ages.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is sp",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:453849,Integrability,interface,interface,453849,"s.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:453958,Integrability,interface,interface,453958," - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.Norma",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:455660,Integrability,interface,interface,455660," - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. I",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:455764,Integrability,interface,interface,455764,"nCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. getNearestNeighbo",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:459374,Integrability,interface,interface,459374,"i.e. getNormalizedCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the normalized histogram count for the specified bin. getNucleusOrMainROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. getNucleusROI() - Method in class qupath.lib.objects.PathCellObject. Get the nucleus ROI for this cell. getNucleusROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. getNullClass() - Static method in class qupath.lib.objects.classes.PathClass. Get the value of PathClass.NULL_CLASS, used to represent no classification. getNumBins() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the requested number of bins used for the histogram. getNumericValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:460306,Integrability,interface,interface,460306,"ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for object classifiers saved within this project. getObjectFileExtensions() - Static method in class qupath.lib.io.PathIO. Deprec",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:460331,Integrability,interface,interfaces,460331,"etNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for object classifiers saved within this project. getObjectFileExtensions() - Static method in class qupath.lib.io.PathIO. Deprecated.; use PathIO.getObjectFileExten",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:461119,Integrability,interface,interface,461119," ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for object classifiers saved within this project. getObjectFileExtensions() - Static method in class qupath.lib.io.PathIO. Deprecated.; use PathIO.getObjectFileExtensions(boolean) instead. getObjectFileExtensions(boolean) - Static method in class qupath.lib.io.PathIO. Get a list of known file extensions that may contain objects, optionally including compressed files. getObjects(Collection<PathObject>, Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. getObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the current hierarchy according to a specified predicate. getObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the specified",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:464578,Integrability,interface,interface,464578,"t the String representation understood by OMETiffWriter. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived 1+ classification, indicating weak positivity. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getOnePlus(PathClass). getOpacity() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the global opacity for overlay drawing. getOpacity() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get opacity, between 0 (completely transparent) and 1 (completely opaque). getOpenCVPixelType(PixelType) - Static method in class qupath.opencv.tools.OpenCVTools. Get the OpenCV type code corresponding to a PixelType. getOpenCVTypeAdaptorFactory() - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. getOrDefault(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Get the specified measurement, or the provided default value if it is not contained in the list. getOriginalImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get the original image name, without any randomization. getOriginalMetadata() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getOriginalMetadata() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getOriginalMe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:464761,Integrability,interface,interface,464761,"n, indicating weak positivity. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getOnePlus(PathClass). getOpacity() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the global opacity for overlay drawing. getOpacity() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get opacity, between 0 (completely transparent) and 1 (completely opaque). getOpenCVPixelType(PixelType) - Static method in class qupath.opencv.tools.OpenCVTools. Get the OpenCV type code corresponding to a PixelType. getOpenCVTypeAdaptorFactory() - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. getOrDefault(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Get the specified measurement, or the provided default value if it is not contained in the list. getOriginalImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get the original image name, without any randomization. getOriginalMetadata() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getOriginalMetadata() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getOrigina",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:465776,Integrability,interface,interface,465776,"d in interface qupath.lib.projects.ProjectImageEntry. Get the original image name, without any randomization. getOriginalMetadata() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getOriginalMetadata() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getOriginalMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get the original metadata read during creation of the server. getOriginalMetadata() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getOutputChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. getOutputChannelType() - Method in class qupath.opencv.ml.PatchClassif",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:467622,Integrability,interface,interface,467622,"ut classifications if outputType == OutputType.Classification. getOutputChannelType() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested output channel type. getOutputClasses() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the classifications for the output. getOutputLayerNames(Net) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLayers(Net, DnnShape...) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qup",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:468021,Integrability,interface,interface,468021,"ames of all unconnected output layers. getOutputLayers(Net, DnnShape...) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qupath.lib.gui.QuPathGUI. Return the global OverlayOptions instance, used to control display within viewers by default. getOverlayOptions() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get the overlay options, which may influence the display of this overlay. getOverlayOptions() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the overlay options that control",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:468126,Integrability,interface,interface,468126,"opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qupath.lib.gui.QuPathGUI. Return the global OverlayOptions instance, used to control display within viewers by default. getOverlayOptions() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get the overlay options, which may influence the display of this overlay. getOverlayOptions() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the overlay options that control the viewer display. getOverlayOptions() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the o",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:469950,Integrability,interface,interface,469950,".lib.gui.viewer.QuPathViewer. Get the overlay options that control the viewer display. getOverlayOptions() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the overlay options shared by all viewers created by this manager. getOverrideSystemMenuBar() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Get the current value of the override property, which specifies whether the system menubar should not be used; by any window - no matter what the value of SystemMenuBar.systemMenubarProperty(). getOwner() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the owner. getPackageVersion(Class<?>) - Static method in class qupath.lib.common.GeneralTools. Try to determine the version of a jar containing a specified class. getPaddedRequest(ImageServer<BufferedImage>, RegionRequest, Padding) - Static method in class qupath.lib.images.servers.ServerTools. Get a raster, padded by the specified amount, to the left, right, above and below. getPadding() - Method in interface qupath.opencv.ops.ImageOp. Get the padding requested for this operation. getPadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; getPadding(int, int) - Static method in class qupath.lib.regions.Padding. Get an padding object 'x' pixels to the left and right, and 'y' pixels above and below. getPadding(int, int, int, int) - Static method in class qupath.lib.regions.Padding. Get a padding object that may have different padding on each side. getPane() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the pane containing the histogram and associated UI components, for addition to a scene. getPane() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the pane containing all mini viewers, which can be added to a scene for display. getPane() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the Pane that can be displayed. getPane() - Method in class qupath.lib.gui.panes.AnnotationPane. Get the pane for display. getP",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:472079,Integrability,interface,interface,472079,"thod in class qupath.lib.gui.panes.MeasurementMapPane. Get the pane, which can be added to a scene for display. getPane() - Method in class qupath.lib.gui.panes.PathObjectHierarchyView. Get the pane for display. getPane() - Method in class qupath.lib.gui.panes.PreferencePane. Get a pane to display. getPane() - Method in class qupath.lib.gui.panes.ProjectBrowser. Get the Pane component for addition to a scene. getPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView. Get the pane to add to a scene. getParallelism() - Static method in class qupath.lib.common.ThreadTools. Get the requested level of parallelism. getParameterEnabled(String) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter exists with the given key and is enabled (and is therefore editable). getParameterEnabled(Parameter<?>) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter is enabled (and is therefore editable). getParameterList() - Method in interface qupath.lib.plugins.parameters.Parameterizable. Get the parameter list associated with the class. getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:473982,Integrability,interface,interface,473982,") - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in cla",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:477697,Integrability,interface,interface,477697,".lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.PathObject. Get the classification of the object. getPathClass() - Method in class qupath.lib.objects.PathROIObject;  ; getPathClass() - Method in class qupath.lib.objects.PathRootObject;  ; getPathClass(String) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; Get a PathClass, without specifying any color. getPathClass(String) - Static method in class qupath.lib.scripting.QP. Get a Pat",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:477977,Integrability,interface,interface,477977,"ects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.PathObject. Get the classification of the object. getPathClass() - Method in class qupath.lib.objects.PathROIObject;  ; getPathClass() - Method in class qupath.lib.objects.PathRootObject;  ; getPathClass(String) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; Get a PathClass, without specifying any color. getPathClass(String) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name. getPathClass(String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). getPathClass(String, Intege",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:479786,Integrability,interface,interface,479786,"s qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). getPathClass(String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name and color. getPathClass(String, String...) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). getPathClass(List<String>) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). getPathClass(PathClassFactory.StandardPathClasses) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. getPathClassColor(PathClass) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying a PathClass. getPathClasses() - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the classifications set by this classifier. getPathClasses() - Method in interface qupath.lib.projects.Project. Get an unmodifiable list representing the PathClasses associated with this project. getPathClasses() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:479921,Integrability,interface,interface,479921,"ass.fromString(String, Integer). getPathClass(String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name and color. getPathClass(String, String...) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). getPathClass(List<String>) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). getPathClass(PathClassFactory.StandardPathClasses) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. getPathClassColor(PathClass) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying a PathClass. getPathClasses() - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the classifications set by this classifier. getPathClasses() - Method in interface qupath.lib.projects.Project. Get an unmodifiable list representing the PathClasses associated with this project. getPathClasses() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivi",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:481011,Integrability,wrap,wrapped,481011,"athClasses associated with this project. getPathClasses() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:481140,Integrability,interface,interface,481140,"r;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getP",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:481531,Integrability,interface,interface,481531,".images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:481819,Integrability,interface,interface,481819," in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:482004,Integrability,interface,interface,482004,"e objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric valu",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:482794,Integrability,interface,interface,482794,"getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel height, in the stored units. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel height in microns, if available - or Double.NaN otherwise. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel height in microns, or Double.NaN if this is unknown. getPixelHeightUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel height unit. getPixelLayer(ImageData<?>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Request the pixel layer from an ImageData. getPixels(SimpleImage, boolean) - Static method in class qupath.lib.analysis.images.SimpleImages. Get the pixel values for ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:484052,Integrability,interface,interface,484052,"stored units. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel height in microns, if available - or Double.NaN otherwise. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel height in microns, or Double.NaN if this is unknown. getPixelHeightUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel height unit. getPixelLayer(ImageData<?>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Request the pixel layer from an ImageData. getPixels(SimpleImage, boolean) - Static method in class qupath.lib.analysis.images.SimpleImages. Get the pixel values for the image. getPixelSize() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the requested pixel size for the density map. getPixelType() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getPixelType() - Method in interface qupath.lib.images.servers.ImageServer. The bit-depth and type of the image. getPixelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns the bit-depth for individual pixels in the image. getPixelValue(int, ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method. getPixelValue(int, ColorTransformer.ColorTransformMethod, ColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. getPixelWidth() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel width, in the stored units. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel width in micro",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:488702,Integrability,interface,interface,488702,"rocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:491086,Integrability,interface,interface,491086,"sed for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getPreviousURI() - Method in interface qupath.lib.projects.Project. Sometimes projects move (unfortunately). getProbabilityColorModel32Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. getProbabilityColorModel8Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. getProbabilityThreshold(WritableRaster) - Static method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get a suitable threshold assuming a raster contains probability values. getProject() - Method in class qupath.lib.gui.Q",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:491355,Integrability,interface,interface,491355,"level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getPreviousURI() - Method in interface qupath.lib.projects.Project. Sometimes projects move (unfortunately). getProbabilityColorModel32Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. getProbabilityColorModel8Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. getProbabilityThreshold(WritableRaster) - Static method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get a suitable threshold assuming a raster contains probability values. getProject() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.projectProperty(). getProject() - Static method in class qupath.lib.scripting.QP. Get the current project. getProject() - Method in class qupath.lib.scripting.ScriptParameters. Get the current project that should be used with the s",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:493650,Integrability,interface,interface,493650," metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:495265,Integrability,interface,interface,495265,"derClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into quartiles. getQuPath() - Method in class qupath.lib.gui.actions.CommonActions. Get the QuPath instance associated with these actions. getQuPath() - Static method in class qupath.lib.gui.scripting.QPEx. Get the current QuPath instance. getQuPathVersion() - Method in class qupath.imagej.gui.IJExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.lib.extension.svg.SvgExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get a QuPath version for which this extension was written. getQuPathVersion() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.process.gui.ProcessingExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getRadius() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the radius for the density map, in calibrated units. getRange() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the range, i.e. getReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerO",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:497143,Integrability,interface,interface,497143,"unningStatistics. Get the range, i.e. getReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get a map representing additional arguments that should be passed to readers. getRecentProjectList() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a list of the most recent projects that were opened. getRecentScriptsList() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a list of the most recent scripts that were opened. getRed() - Method in class qupath.lib.color.StainVector. Get the red component of the (normalized) stain vector. getRed() - Method in class qupath.lib.display.settings.ChannelColor. Get the red value. getRedOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getRegion() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getRegion() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the region representing this control, so it may be added to a scene. getRegion() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getRegion() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the region node that can be added to a scene graph to display the viewers. getRegionMap() - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Get an unmodifiable Map containing image regions to paint on this overlay. getRegionRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the region request. getRegionRequest() - Method in class qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:498631,Integrability,interface,interface,498631,"ns to paint on this overlay. getRegionRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the region request. getRegionRequest() - Method in class qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; getRenderer() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer used with this overlay, which may be null. getRenderer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:499342,Integrability,interface,interface,499342,".lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedI",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:500183,Integrability,interface,interface,500183,"etResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; ge",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:500490,Integrability,interface,interface,500490,"ResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:501735,Integrability,interface,interface,501735,"a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:501760,Integrability,interface,interfaces,501760,"nt. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; ge",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:502349,Integrability,interface,interface,502349,"ols. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:502374,Integrability,interface,interfaces,502374,"preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:504143,Integrability,interface,interface,504143,".lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale factor for the specified feature. getScaledArea(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, d",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:504168,Integrability,interface,interfaces,504168,"rBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale factor for the specified feature. getScaledArea(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:504920,Integrability,interface,interface,504920," - Method in class qupath.lib.roi.AreaROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scale",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:504945,Integrability,interface,interfaces,504945,"ledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:506161,Integrability,interface,interface,506161,"n class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project. getScriptsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where shared script files should be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-selected object from t",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:506649,Integrability,interface,interface,506649," in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project. getScriptsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where shared script files should be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-selected object from the hierarchy. getSelectedObject() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the current primary selected object. getSelectedObject() - Static method in class qupath.lib.scripting.QP. Get the primary selected object within the current PathObjectHierarchy. getSelectedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get an unmodifiable set containing all the currently-selected objects. getSelectedObjects() - Static method",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:508167,Integrability,interface,interface,508167,"rchy. getSelectedObject() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the current primary selected object. getSelectedObject() - Static method in class qupath.lib.scripting.QP. Get the primary selected object within the current PathObjectHierarchy. getSelectedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get an unmodifiable set containing all the currently-selected objects. getSelectedObjects() - Static method in class qupath.lib.scripting.QP. Get the selected objects within the current PathObjectHierarchy. getSelectedROI() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the ROI of the selected object, if available, or null. getSelectedROI() - Static method in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:508741,Integrability,interface,interface,508741,"thObjectHierarchy. getSelectedROI() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the ROI of the selected object, if available, or null. getSelectedROI() - Static method in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:508951,Integrability,interface,interface,508951,"in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl; ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:509085,Integrability,interface,interface,509085," in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:509177,Integrability,interface,interface,509177,"Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:509741,Integrability,interface,interface,509741,"thod in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the separator used in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:509879,Integrability,interface,interface,509879,"lass qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the separator used in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. getServer() - Method in class qupath.lib.images.ImageData. Get the ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:511232,Integrability,interface,interface,511232,"d in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. getServer() - Method in class qupath.lib.images.ImageData. Get the ImageServer. getServer(ImageRegion, double) - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Request the server for a specific downsample. getServerBounds() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an ImageRegion representing the full width and height of the current image. getServerBuilder() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a ImageServerBuilder.ServerBuilder that can be used to open this image. getServerBuilderFactory() - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory to handle ServerBuilders. getServerHeight() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. getServerPath() - Method in class qupath.lib.images.ImageData. Get the path of the ImageServer. getServerType() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getServerType() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.RenderedImageServer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:512623,Integrability,interface,interface,512623,"l resolution of the current image, or 0 if no image is currently open. getServerPath() - Method in class qupath.lib.images.ImageData. Get the path of the ImageServer. getServerType() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getServerType() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getServerType() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getServerType() - Method in interface qupath.lib.images.servers.ImageServer. A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). getServerType() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. ge",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:513331,Integrability,interface,interface,513331,"Server;  ; getServerType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getServerType() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getServerType() - Method in interface qupath.lib.images.servers.ImageServer. A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). getServerType() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnSha",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:513802,Integrability,interface,interface,513802,"ype() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnShape. Get a copy of the internal dimensions array. getShape(ROI) - Static method in class qupath.lib.roi.RoiTools. Get a Shape object representing a ROI. getShapeROI(Area, ImagePlane) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape. getShapeROI(Shape, ImagePlane, double) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape with a specified 'flatness'. getShowAllRGBTransforms() - Static method in class qupath.lib.gui.prefs.Path",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:513827,Integrability,interface,interfaces,513827,".servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnShape. Get a copy of the internal dimensions array. getShape(ROI) - Static method in class qupath.lib.roi.RoiTools. Get a Shape object representing a ROI. getShapeROI(Area, ImagePlane) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape. getShapeROI(Shape, ImagePlane, double) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape with a specified 'flatness'. getShowAllRGBTransforms() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that all available color tr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:518752,Integrability,interface,interface,518752,".servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should not be used. getSkipBoundaryStrategy() - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that ignores boundaries, not using them for classifier training. getSkipMissingCoresProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. getSolidity() - Method in class qupath.lib.roi.AreaROI;  ; getSolidity() - Method in class qupath.lib.roi.EllipseROI;  ; getSolidity() - Method in class qupath.lib.roi.GeometryROI;  ; getSolidity() - Method in class qupath.lib.roi.LineROI;  ; getSolidity() - Method in class qupath.lib.roi.PointsROI;  ; getSolidity() - Method in class qupath.lib.roi.PolygonROI;  ; getSolidity() - Method in class qupath.lib.roi.PolylineROI;  ; getSolidity() - Method in class qupath.lib.roi.RectangleROI;  ; getSolidity() - Method in interface qupath.lib.roi.interfaces.ROI. Calculate the solidity, defined as ROI area / convex hull area. getSource() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the source that triggered the event. getSpaceX() - Method in class qupath.lib.gui.viewer.GridLines. Horizontal spacing between lines for any counting grid. getSpaceY() - Method in class qupath.lib.gui.viewer.GridLines. Vertical spacing between lines for any counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStag",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:518777,Integrability,interface,interfaces,518777,". Query the set of file extensions for which Bio-Formats should not be used. getSkipBoundaryStrategy() - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that ignores boundaries, not using them for classifier training. getSkipMissingCoresProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. getSolidity() - Method in class qupath.lib.roi.AreaROI;  ; getSolidity() - Method in class qupath.lib.roi.EllipseROI;  ; getSolidity() - Method in class qupath.lib.roi.GeometryROI;  ; getSolidity() - Method in class qupath.lib.roi.LineROI;  ; getSolidity() - Method in class qupath.lib.roi.PointsROI;  ; getSolidity() - Method in class qupath.lib.roi.PolygonROI;  ; getSolidity() - Method in class qupath.lib.roi.PolylineROI;  ; getSolidity() - Method in class qupath.lib.roi.RectangleROI;  ; getSolidity() - Method in interface qupath.lib.roi.interfaces.ROI. Calculate the solidity, defined as ROI area / convex hull area. getSource() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the source that triggered the event. getSpaceX() - Method in class qupath.lib.gui.viewer.GridLines. Horizontal spacing between lines for any counting grid. getSpaceY() - Method in class qupath.lib.gui.viewer.GridLines. Vertical spacing between lines for any counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStage() - Method in class qupath.lib.gui.scripti",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:521603,Integrability,interface,interface,521603,"late magnitude of projection of pixel OD onto stain OD. getStainRejection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of rejection of pixel OD onto stain OD. getStains(boolean) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a collection of all the stains. getStartTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the first recorded frame. getStartX() - Method in class qupath.lib.gui.viewer.GridLines. Starting x coordinate for any counting grid (usually 0). getStartY() - Method in class qupath.lib.gui.viewer.GridLines. Starting y coordinate for any counting grid (usually 0). getStaticImportStatements(Collection<Class<?>>) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get the static import statements as a String, to add at the beginning of the executed script. getStaticImportStatments(Collection<Class<?>>) - Method in interface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getStatistic() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:522636,Integrability,interface,interface,522636,"rface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getStatistic() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class q",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:523175,Integrability,interface,interface,523175,"ysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end ",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:523308,Integrability,interface,interface,523308,"ingStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.l",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:524670,Integrability,interface,interface,524670,"t. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjec",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
https://qupath.github.io/javadoc/docs/index-all.html:526955,Integrability,interface,interface,526955,"hms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
